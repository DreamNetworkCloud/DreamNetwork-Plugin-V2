be.alexandre01.dnplugin.plugins.velocity.DNVelocity -> be.alexandre01.dnplugin.plugins.velocity.DNVelocity:
    be.alexandre01.dnplugin.plugins.velocity.DNVelocity instance -> b
    be.alexandre01.dnplugin.plugins.velocity.ImplAPI api -> c
    be.alexandre01.dnplugin.api.connection.IClientHandler clientHandler -> d
    be.alexandre01.dnplugin.api.request.channels.DNChannelManager dnChannelManager -> e
    be.alexandre01.dnplugin.api.connection.IBasicClient basicClient -> f
    java.lang.String version -> g
    com.velocitypowered.api.proxy.server.ServerInfo coreTemp -> h
    java.lang.String type -> i
    int port -> j
    be.alexandre01.dnplugin.api.request.RequestManager requestManager -> k
    java.io.File file -> a
    be.alexandre01.dnplugin.utils.files.YAMLManager yamlManager -> l
    be.alexandre01.dnplugin.utils.files.network.NetworkYAML configuration -> m
    com.velocitypowered.api.proxy.ProxyServer server -> n
    java.util.logging.Logger logger -> o
    org.bstats.velocity.Metrics$Factory metricsFactory -> p
    69:122:void <init>(com.velocitypowered.api.proxy.ProxyServer,java.util.logging.Logger,java.nio.file.Path,org.bstats.velocity.Metrics$Factory) -> <init>
    128:134:void onProxyInitialization(com.velocitypowered.api.event.proxy.ProxyInitializeEvent) -> onProxyInitialization
    139:140:void onProxyShutDown(com.velocitypowered.api.event.proxy.ProxyShutdownEvent) -> onProxyShutDown
    143:149:void loadConfig(java.nio.file.Path) -> loadConfig
    152:153:void saveConfiguration() -> saveConfiguration
    39:39:be.alexandre01.dnplugin.api.connection.IClientHandler getClientHandler() -> getClientHandler
    40:40:be.alexandre01.dnplugin.api.request.channels.DNChannelManager getDnChannelManager() -> getDnChannelManager
    41:41:be.alexandre01.dnplugin.api.connection.IBasicClient getBasicClient() -> getBasicClient
    42:42:java.lang.String getVersion() -> getVersion
    43:43:com.velocitypowered.api.proxy.server.ServerInfo getCoreTemp() -> getCoreTemp
    44:44:java.lang.String getType() -> getType
    45:45:int getPort() -> getPort
    46:46:be.alexandre01.dnplugin.api.request.RequestManager getRequestManager() -> getRequestManager
    47:47:java.io.File getFile() -> getFile
    64:64:org.bstats.velocity.Metrics$Factory getMetricsFactory() -> getMetricsFactory
    34:34:void setClientHandler(be.alexandre01.dnplugin.api.connection.IClientHandler) -> setClientHandler
    34:34:void setDnChannelManager(be.alexandre01.dnplugin.api.request.channels.DNChannelManager) -> setDnChannelManager
    34:34:void setBasicClient(be.alexandre01.dnplugin.api.connection.IBasicClient) -> setBasicClient
    34:34:void setVersion(java.lang.String) -> setVersion
    34:34:void setCoreTemp(com.velocitypowered.api.proxy.server.ServerInfo) -> setCoreTemp
    34:34:void setType(java.lang.String) -> setType
    34:34:void setPort(int) -> setPort
    34:34:void setRequestManager(be.alexandre01.dnplugin.api.request.RequestManager) -> setRequestManager
    34:34:void setFile(java.io.File) -> setFile
    34:34:void setYamlManager(be.alexandre01.dnplugin.utils.files.YAMLManager) -> setYamlManager
    34:34:void setConfiguration(be.alexandre01.dnplugin.utils.files.network.NetworkYAML) -> setConfiguration
    37:37:be.alexandre01.dnplugin.plugins.velocity.DNVelocity getInstance() -> getInstance
    38:38:be.alexandre01.dnplugin.plugins.velocity.ImplAPI getApi() -> getApi
    48:48:be.alexandre01.dnplugin.utils.files.YAMLManager getYamlManager() -> getYamlManager
    49:49:be.alexandre01.dnplugin.utils.files.network.NetworkYAML getConfiguration() -> getConfiguration
    62:62:com.velocitypowered.api.proxy.ProxyServer getServer() -> getServer
    63:63:java.util.logging.Logger getLogger() -> getLogger
    129:130:void lambda$onProxyInitialization$0(com.velocitypowered.api.proxy.server.RegisteredServer) -> lambda$onProxyInitialization$0
be.alexandre01.dnplugin.plugins.velocity.ImplAPI -> be.alexandre01.dnplugin.plugins.velocity.ImplAPI:
    be.alexandre01.dnplugin.api.connection.IClientHandler basicClientHandler -> a
    be.alexandre01.dnplugin.plugins.velocity.DNVelocity dnVelocity -> b
    be.alexandre01.dnplugin.plugins.velocity.api.DNVelocityServersManager dnVelocityServersManager -> c
    java.lang.String serverName -> d
    int id -> e
    java.lang.String processName -> f
    25:29:void <init>(be.alexandre01.dnplugin.plugins.velocity.DNVelocity) -> <init>
    32:32:be.alexandre01.dnplugin.api.connection.IClientHandler getClientHandler() -> getClientHandler
    37:37:java.lang.String getInfo() -> getInfo
    42:42:java.lang.String getProcessName() -> getProcessName
    47:48:void setProcessName(java.lang.String) -> setProcessName
    52:52:java.lang.String getServerName() -> getServerName
    57:58:void setServerName(java.lang.String) -> setServerName
    62:62:int getID() -> getID
    67:68:void setID(int) -> setID
    72:72:int getPort() -> getPort
    77:77:java.util.logging.Logger getLogger() -> getLogger
    82:82:be.alexandre01.dnplugin.api.request.RequestManager getRequestManager() -> getRequestManager
    87:87:be.alexandre01.dnplugin.api.request.channels.DNChannelManager getChannelManager() -> getChannelManager
    92:93:void setRequestManager(be.alexandre01.dnplugin.api.request.RequestManager) -> setRequestManager
    100:100:void callServerAttachedEvent() -> callServerAttachedEvent
    104:108:void setClientHandler(be.alexandre01.dnplugin.api.connection.IClientHandler) -> setClientHandler
    112:113:void shutdownProcess() -> shutdownProcess
    20:20:be.alexandre01.dnplugin.plugins.velocity.api.DNVelocityServersManager getDnVelocityServersManager() -> getDnVelocityServersManager
be.alexandre01.dnplugin.plugins.velocity.communication.VelocityRequestResponse -> be.alexandre01.dnplugin.plugins.velocity.communication.VelocityRequestResponse:
    be.alexandre01.dnplugin.plugins.velocity.api.DNVelocityAPI dnVelocityAPI -> a
    16:56:void <init>() -> <init>
    60:61:boolean preReader(be.alexandre01.dnplugin.utils.messages.Message,io.netty.channel.ChannelHandlerContext) -> preReader
    48:54:void lambda$new$7(be.alexandre01.dnplugin.utils.messages.Message,io.netty.channel.ChannelHandlerContext) -> a
    44:45:void lambda$new$6(be.alexandre01.dnplugin.utils.messages.Message,io.netty.channel.ChannelHandlerContext) -> b
    40:41:void lambda$new$5(be.alexandre01.dnplugin.utils.messages.Message,io.netty.channel.ChannelHandlerContext) -> c
    37:38:void lambda$new$4(be.alexandre01.dnplugin.utils.messages.Message,io.netty.channel.ChannelHandlerContext) -> d
    34:35:void lambda$new$3(be.alexandre01.dnplugin.utils.messages.Message,io.netty.channel.ChannelHandlerContext) -> e
    30:31:void lambda$new$2(be.alexandre01.dnplugin.utils.messages.Message,io.netty.channel.ChannelHandlerContext) -> f
    25:27:void lambda$new$1(be.alexandre01.dnplugin.utils.messages.Message,io.netty.channel.ChannelHandlerContext) -> g
    20:22:void lambda$new$0(be.alexandre01.dnplugin.utils.messages.Message,io.netty.channel.ChannelHandlerContext) -> h
be.alexandre01.dnplugin.plugins.velocity.communication.generated.VelocityGeneratedRequest -> be.alexandre01.dnplugin.plugins.velocity.communication.generated.VelocityGeneratedRequest:
    7:23:void <init>() -> <init>
    20:21:be.alexandre01.dnplugin.utils.messages.Message lambda$new$1(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> a
    9:17:be.alexandre01.dnplugin.utils.messages.Message lambda$new$0(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> b
be.alexandre01.dnplugin.plugins.velocity.communication.objects.ProxyService -> be.alexandre01.dnplugin.plugins.velocity.communication.objects.ProxyService:
    12:13:void <init>(java.lang.String,be.alexandre01.dnplugin.utils.Mods,boolean,be.alexandre01.dnplugin.api.objects.RemoteBundle) -> <init>
    17:18:void start() -> start
    22:34:void createServer(java.lang.String) -> a
    36:42:void createServer(java.lang.String,int) -> a
    45:49:void removeServer(java.lang.String) -> b
    52:57:void removeServer(int) -> a
be.alexandre01.dnplugin.plugins.velocity.listeners.PlayerListener -> be.alexandre01.dnplugin.plugins.velocity.listeners.PlayerListener:
    be.alexandre01.dnplugin.plugins.velocity.DNVelocity dnVelocity -> a
    25:27:void <init>() -> <init>
    32:32:void onHandshake(com.velocitypowered.api.event.connection.ConnectionHandshakeEvent) -> a
    36:37:void onLog(com.velocitypowered.api.event.connection.LoginEvent) -> a
    40:41:void onLogin(com.velocitypowered.api.event.player.PlayerChooseInitialServerEvent) -> a
be.alexandre01.dnplugin.plugins.velocity.listeners.RedirectConnection -> be.alexandre01.dnplugin.plugins.velocity.listeners.RedirectConnection:
    boolean connexionOnLobby -> a
    java.util.Set pending -> b
    be.alexandre01.dnplugin.plugins.velocity.DNVelocity dnVelocity -> c
    be.alexandre01.dnplugin.plugins.velocity.api.DNVelocityAPI dnBungeeAPI -> d
    int max -> e
    15:25:void <init>() -> <init>
    29:30:void onPJoin(com.velocitypowered.api.event.connection.LoginEvent) -> a
be.alexandre01.dnplugin.plugins.velocity.listeners.ServerPingListener -> be.alexandre01.dnplugin.plugins.velocity.listeners.ServerPingListener:
    be.alexandre01.dnplugin.plugins.velocity.DNVelocity dnVelocity -> a
    be.alexandre01.dnplugin.utils.files.network.NetworkYAML config -> b
    int maxPlayers -> c
    int onlinePlayers -> d
    18:21:void <init>() -> <init>
    24:63:void onPing(com.velocitypowered.api.event.proxy.ProxyPingEvent) -> a
    66:68:java.lang.String formatString(java.lang.String) -> a
be.alexandre01.dnplugin.plugins.velocity.objects.PlayerManagement -> be.alexandre01.dnplugin.plugins.velocity.objects.PlayerManagement:
    java.util.HashMap proxiedPlayers -> a
    java.util.ArrayList removedIds -> b
    int currentID -> c
    11:14:void <init>() -> <init>
    18:26:void updatePlayer(com.velocitypowered.api.proxy.Player) -> a
    29:36:int createId() -> a
    40:48:void removePlayer(com.velocitypowered.api.proxy.Player) -> b
    45:46:void lambda$removePlayer$0(int,io.netty.util.concurrent.Future) -> a
be.alexandre01.dnplugin.plugins.velocity.utils.VelocityServersManager -> be.alexandre01.dnplugin.plugins.velocity.utils.VelocityServersManager:
    java.util.ArrayList servers -> a
    be.alexandre01.dnplugin.api.NetworkBaseAPI networkBaseAPI -> b
    19:24:void <init>(be.alexandre01.dnplugin.api.NetworkBaseAPI) -> <init>
    29:55:void registerServer(java.lang.String,java.lang.String,int,be.alexandre01.dnplugin.utils.Mods) -> registerServer
    59:67:void unregisterServer(java.lang.String) -> unregisterServer
    19:19:java.util.ArrayList getServers() -> getServers
