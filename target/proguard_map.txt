be.alexandre01.dnplugin.api.NetworkBaseAPI -> be.alexandre01.dnplugin.api.NetworkBaseAPI:
    java.util.HashMap services -> a
    java.util.HashMap bundles -> b
    boolean isInit -> c
    java.util.ArrayList requestTypes -> d
    be.alexandre01.dnplugin.api.NetworkBaseAPI instance -> e
    be.alexandre01.dnplugin.api.request.communication.ResponseManager responseManager -> f
    32:32:be.alexandre01.dnplugin.api.NetworkBaseAPI getInstance() -> getInstance
    24:38:void <init>() -> <init>
    41:58:void registerRequestType(java.lang.String,be.alexandre01.dnplugin.api.request.RequestType) -> registerRequestType
    60:60:be.alexandre01.dnplugin.api.objects.RemoteService getByName(java.lang.String) -> getByName
    64:64:be.alexandre01.dnplugin.api.objects.RemoteBundle getBundleByName(java.lang.String) -> getBundleByName
    java.lang.String getInfo() -> getInfo
    java.lang.String getProcessName() -> getProcessName
    be.alexandre01.dnplugin.api.universal.player.UniversalPlayer getUniversalPlayer(java.lang.String) -> getUniversalPlayer
    void setProcessName(java.lang.String) -> setProcessName
    java.lang.String getServerName() -> getServerName
    void setServerName(java.lang.String) -> setServerName
    int getID() -> getID
    void setID(int) -> setID
    int getPort() -> getPort
    java.util.logging.Logger getLogger() -> getLogger
    be.alexandre01.dnplugin.api.request.RequestManager getRequestManager() -> getRequestManager
    be.alexandre01.dnplugin.api.request.channels.DNChannelManager getChannelManager() -> getChannelManager
    void setRequestManager(be.alexandre01.dnplugin.api.request.RequestManager) -> setRequestManager
    be.alexandre01.dnplugin.api.connection.IClientHandler getClientHandler() -> getClientHandler
    97:97:be.alexandre01.dnplugin.api.request.communication.ResponseManager getResponseManager() -> getResponseManager
    void setClientHandler(be.alexandre01.dnplugin.api.connection.IClientHandler) -> setClientHandler
    void callServerAttachedEvent() -> callServerAttachedEvent
    void shutdownProcess() -> shutdownProcess
    110:135:boolean initConnection() -> initConnection
    139:142:boolean isSpigot() -> isSpigot
    146:149:boolean isBungee() -> isBungee
    153:156:boolean isVelocity() -> isVelocity
    24:24:java.util.HashMap getServices() -> getServices
    24:24:void setServices(java.util.HashMap) -> setServices
    25:25:java.util.HashMap getBundles() -> getBundles
    25:25:void setBundles(java.util.HashMap) -> setBundles
be.alexandre01.dnplugin.api.connection.IBasicClient -> be.alexandre01.dnplugin.api.connection.IBasicClient:
    void run() -> run
    void connect() -> connect
be.alexandre01.dnplugin.api.connection.IClientHandler -> be.alexandre01.dnplugin.api.connection.IClientHandler:
    void channelActive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelActive
    void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    void channelUnregistered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelUnregistered
    void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    void writeAndFlush(be.alexandre01.dnplugin.utils.messages.Message) -> writeAndFlush
    void writeAndFlush(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> writeAndFlush
    java.util.ArrayList getResponses() -> getResponses
    be.alexandre01.dnplugin.shaded.netty.channel.Channel getChannel() -> getChannel
    void setChannel(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> setChannel
be.alexandre01.dnplugin.api.objects.RemoteBundle -> be.alexandre01.dnplugin.api.objects.RemoteBundle:
    java.util.HashMap remoteServices -> c
    boolean isProxy -> a
    java.lang.String name -> b
    11:17:void <init>(java.lang.String,boolean) -> <init>
    20:20:java.lang.Object getRemoteService(java.lang.String,java.lang.Class) -> getRemoteService
    24:24:be.alexandre01.dnplugin.api.objects.RemoteService getRemoteService(java.lang.String) -> getRemoteService
    12:12:boolean isProxy() -> isProxy
    13:13:java.lang.String getName() -> getName
    11:11:java.util.HashMap getRemoteServices() -> getRemoteServices
be.alexandre01.dnplugin.api.objects.RemoteService -> be.alexandre01.dnplugin.api.objects.RemoteService:
    java.util.List players -> a
    java.util.HashMap servers -> b
    java.lang.String name -> e
    be.alexandre01.dnplugin.utils.Mods mods -> f
    boolean isStarted -> c
    be.alexandre01.dnplugin.api.objects.RemoteBundle remoteBundle -> d
    15:28:void <init>(java.lang.String,be.alexandre01.dnplugin.utils.Mods,boolean,be.alexandre01.dnplugin.api.objects.RemoteBundle) -> <init>
    void start() -> start
    33:33:be.alexandre01.dnplugin.api.objects.RemoteBundle getRemoteBundle() -> getRemoteBundle
    15:15:java.util.List getPlayers() -> getPlayers
    16:16:java.util.HashMap getServers() -> getServers
    17:17:java.lang.String getName() -> getName
    18:18:be.alexandre01.dnplugin.utils.Mods getMods() -> getMods
    20:20:boolean isStarted() -> isStarted
    13:13:void setPlayers(java.util.List) -> setPlayers
    13:13:void setServers(java.util.HashMap) -> setServers
    13:13:void setName(java.lang.String) -> setName
    13:13:void setMods(be.alexandre01.dnplugin.utils.Mods) -> setMods
    13:13:void setStarted(boolean) -> setStarted
    13:13:void setRemoteBundle(be.alexandre01.dnplugin.api.objects.RemoteBundle) -> setRemoteBundle
be.alexandre01.dnplugin.api.objects.player.DNPlayer -> be.alexandre01.dnplugin.api.objects.player.DNPlayer:
    java.lang.String name -> a
    java.util.UUID uuid -> b
    int id -> c
    be.alexandre01.dnplugin.api.universal.player.UniversalPlayer universalPlayer -> d
    20:26:void <init>(java.lang.String,be.alexandre01.dnplugin.api.objects.server.DNServer,int,be.alexandre01.dnplugin.api.universal.player.UniversalPlayer) -> <init>
    29:34:void <init>(java.lang.String,java.util.UUID,be.alexandre01.dnplugin.api.objects.server.DNServer,int,be.alexandre01.dnplugin.api.universal.player.UniversalPlayer) -> <init>
    37:37:java.lang.String getName() -> getName
    42:42:java.util.UUID getUniqueId() -> getUniqueId
    13:13:java.util.UUID getUuid() -> getUuid
    15:15:int getId() -> getId
    16:16:be.alexandre01.dnplugin.api.universal.player.UniversalPlayer getUniversalPlayer() -> getUniversalPlayer
be.alexandre01.dnplugin.api.objects.player.DNPlayerManager -> be.alexandre01.dnplugin.api.objects.player.DNPlayerManager:
    java.util.HashMap dnPlayers -> a
    java.util.HashMap dnPlayersByName -> b
    9:11:void <init>() -> <init>
    15:19:void addPlayer(be.alexandre01.dnplugin.api.objects.player.DNPlayer) -> addPlayer
    22:25:void removePlayer(be.alexandre01.dnplugin.api.objects.player.DNPlayer) -> removePlayer
    28:30:void removePlayerFromServer(be.alexandre01.dnplugin.api.objects.player.DNPlayer) -> removePlayerFromServer
    33:35:void addPlayerFromServer(be.alexandre01.dnplugin.api.objects.player.DNPlayer) -> addPlayerFromServer
    38:41:void updatePlayer(be.alexandre01.dnplugin.api.objects.player.DNPlayer,be.alexandre01.dnplugin.api.objects.server.DNServer) -> updatePlayer
    10:10:java.util.HashMap getDnPlayers() -> getDnPlayers
    11:11:java.util.HashMap getDnPlayersByName() -> getDnPlayersByName
be.alexandre01.dnplugin.api.objects.player.RemoteHuman -> be.alexandre01.dnplugin.api.objects.player.RemoteHuman:
    be.alexandre01.dnplugin.api.objects.server.DNServer server -> a
    10:12:void <init>(be.alexandre01.dnplugin.api.objects.server.DNServer) -> <init>
    15:16:void updateServer(be.alexandre01.dnplugin.api.objects.server.DNServer) -> updateServer
    8:8:be.alexandre01.dnplugin.api.objects.server.DNServer getServer() -> getServer
be.alexandre01.dnplugin.api.objects.player.exceptions.OnlineModeException -> be.alexandre01.dnplugin.api.objects.player.exceptions.OnlineModeException:
    5:6:void <init>(boolean) -> <init>
be.alexandre01.dnplugin.api.objects.server.DNServer -> be.alexandre01.dnplugin.api.objects.server.DNServer:
    java.util.Collection players -> a
    be.alexandre01.dnplugin.api.objects.RemoteService remoteService -> b
    java.lang.String name -> c
    int id -> d
    be.alexandre01.dnplugin.api.NetworkBaseAPI networkBaseAPI -> e
    17:27:void <init>(java.lang.String,int,be.alexandre01.dnplugin.api.objects.RemoteService) -> <init>
    30:30:java.lang.String getFullName() -> getFullName
    34:35:void sendMessage(be.alexandre01.dnplugin.utils.messages.Message) -> sendMessage
    37:39:void sendRequest(be.alexandre01.dnplugin.api.request.RequestInfo,java.lang.Object[]) -> sendRequest
    41:42:void stop() -> stop
    17:17:java.util.Collection getPlayers() -> getPlayers
    18:18:be.alexandre01.dnplugin.api.objects.RemoteService getRemoteService() -> getRemoteService
    19:19:java.lang.String getName() -> getName
    20:20:int getId() -> getId
    21:21:be.alexandre01.dnplugin.api.NetworkBaseAPI getNetworkBaseAPI() -> getNetworkBaseAPI
be.alexandre01.dnplugin.api.request.CustomRequestInfo -> be.alexandre01.dnplugin.api.request.CustomRequestInfo:
    java.lang.String addonName -> c
    11:13:void <init>(int,java.lang.String) -> <init>
    16:18:void <init>(java.lang.String) -> <init>
    8:8:java.lang.String getAddonName() -> getAddonName
    8:8:void setAddonName(java.lang.String) -> setAddonName
be.alexandre01.dnplugin.api.request.RequestBuilder -> be.alexandre01.dnplugin.api.request.RequestBuilder:
    java.util.HashMap requestData -> a
    12:14:void <init>() -> <init>
    17:20:void addRequestBuilder(be.alexandre01.dnplugin.api.request.RequestBuilder[]) -> addRequestBuilder
    10:10:java.util.HashMap getRequestData() -> getRequestData
    8:8:void setRequestData(java.util.HashMap) -> setRequestData
    8:8:boolean equals(java.lang.Object) -> equals
    8:8:boolean canEqual(java.lang.Object) -> canEqual
    8:8:int hashCode() -> hashCode
    8:8:java.lang.String toString() -> toString
be.alexandre01.dnplugin.api.request.RequestBuilder$RequestData -> be.alexandre01.dnplugin.api.request.RequestBuilder$RequestData:
    be.alexandre01.dnplugin.utils.messages.Message write(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> write
be.alexandre01.dnplugin.api.request.RequestFile -> be.alexandre01.dnplugin.api.request.RequestFile:
    java.lang.String s -> a
    java.lang.String encoded -> b
    7:8:void <init>() -> <init>
    13:46:void loadFile(java.lang.String) -> loadFile
    50:51:void put(be.alexandre01.dnplugin.api.request.RequestInfo) -> put
    54:55:void encode() -> encode
    57:68:void write(java.lang.String) -> write
be.alexandre01.dnplugin.api.request.RequestFutureResponse -> be.alexandre01.dnplugin.api.request.RequestFutureResponse:
    void onReceived(be.alexandre01.dnplugin.api.request.channels.ChannelPacket) -> onReceived
be.alexandre01.dnplugin.api.request.RequestInfo -> be.alexandre01.dnplugin.api.request.RequestInfo:
    int id -> a
    java.lang.String name -> b
    11:14:void <init>(int,java.lang.String) -> <init>
    15:16:void <init>() -> <init>
    7:7:void setId(int) -> setId
    7:7:int getId() -> getId
be.alexandre01.dnplugin.api.request.RequestManager -> be.alexandre01.dnplugin.api.request.RequestManager:
    be.alexandre01.dnplugin.api.request.RequestBuilder requestBuilder -> a
    be.alexandre01.dnplugin.api.connection.IClientHandler clientHandler -> b
    java.util.HashMap requests -> c
    21:27:void <init>() -> <init>
    29:33:be.alexandre01.dnplugin.api.request.RequestPacket sendRequest(be.alexandre01.dnplugin.api.request.RequestPacket,java.lang.Object[]) -> sendRequest
    37:41:be.alexandre01.dnplugin.api.request.RequestPacket sendRequest(be.alexandre01.dnplugin.api.request.RequestInfo,be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener,java.lang.Object[]) -> sendRequest
    45:59:be.alexandre01.dnplugin.api.request.RequestPacket getRequestPacket(be.alexandre01.dnplugin.api.request.RequestInfo,be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener,java.lang.Object[]) -> getRequestPacket
    63:63:be.alexandre01.dnplugin.api.request.RequestPacket sendRequest(be.alexandre01.dnplugin.api.request.RequestInfo,java.lang.Object[]) -> sendRequest
    66:66:be.alexandre01.dnplugin.api.request.RequestPacket sendRequest(be.alexandre01.dnplugin.api.request.RequestInfo,be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> sendRequest
    69:74:be.alexandre01.dnplugin.api.request.RequestPacket sendRequest(be.alexandre01.dnplugin.api.request.RequestInfo,boolean,java.lang.Object[]) -> sendRequest
    78:84:be.alexandre01.dnplugin.api.request.RequestPacket sendRequest(be.alexandre01.dnplugin.api.request.RequestInfo,be.alexandre01.dnplugin.utils.messages.Message,boolean,java.lang.Object[]) -> sendRequest
    88:88:be.alexandre01.dnplugin.api.request.RequestPacket getRequest(int) -> getRequest
    16:16:be.alexandre01.dnplugin.api.request.RequestBuilder getRequestBuilder() -> getRequestBuilder
    18:18:be.alexandre01.dnplugin.api.connection.IClientHandler getClientHandler() -> getClientHandler
    18:18:void setClientHandler(be.alexandre01.dnplugin.api.connection.IClientHandler) -> setClientHandler
    80:81:void lambda$sendRequest$1(be.alexandre01.dnplugin.api.request.RequestInfo,be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> lambda$sendRequest$1
    71:72:void lambda$sendRequest$0(be.alexandre01.dnplugin.api.request.RequestInfo,be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> lambda$sendRequest$0
be.alexandre01.dnplugin.api.request.RequestPacket -> be.alexandre01.dnplugin.api.request.RequestPacket:
    int currentId -> a
    be.alexandre01.dnplugin.api.request.RequestInfo requestInfo -> b
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener listener -> c
    int RequestID -> d
    be.alexandre01.dnplugin.utils.messages.Message message -> e
    java.lang.String provider -> f
    be.alexandre01.dnplugin.api.request.RequestFutureResponse requestFutureResponse -> g
    be.alexandre01.dnplugin.api.connection.IClientHandler clientHandler -> h
    23:32:void <init>(be.alexandre01.dnplugin.api.request.RequestInfo,be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> <init>
    33:42:void <init>(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> <init>
    43:52:void <init>(be.alexandre01.dnplugin.utils.messages.Message) -> <init>
    55:55:be.alexandre01.dnplugin.api.request.RequestPacket send() -> send
    14:14:be.alexandre01.dnplugin.api.request.RequestInfo getRequestInfo() -> getRequestInfo
    15:15:be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener getListener() -> getListener
    16:16:int getRequestID() -> getRequestID
    17:17:be.alexandre01.dnplugin.utils.messages.Message getMessage() -> getMessage
    18:18:java.lang.String getProvider() -> getProvider
    19:19:be.alexandre01.dnplugin.api.request.RequestFutureResponse getRequestFutureResponse() -> getRequestFutureResponse
    21:21:be.alexandre01.dnplugin.api.connection.IClientHandler getClientHandler() -> getClientHandler
    10:10:void setMessage(be.alexandre01.dnplugin.utils.messages.Message) -> setMessage
    10:10:void setProvider(java.lang.String) -> setProvider
    10:10:void setRequestFutureResponse(be.alexandre01.dnplugin.api.request.RequestFutureResponse) -> setRequestFutureResponse
    10:10:void setClientHandler(be.alexandre01.dnplugin.api.connection.IClientHandler) -> setClientHandler
    10:10:boolean equals(java.lang.Object) -> equals
    10:10:boolean canEqual(java.lang.Object) -> canEqual
    10:10:int hashCode() -> hashCode
    10:10:java.lang.String toString() -> toString
be.alexandre01.dnplugin.api.request.RequestType -> be.alexandre01.dnplugin.api.request.RequestType:
    be.alexandre01.dnplugin.api.request.RequestInfo CUSTOM -> CUSTOM
    be.alexandre01.dnplugin.api.request.RequestInfo CORE_HANDSHAKE -> CORE_HANDSHAKE
    be.alexandre01.dnplugin.api.request.RequestInfo CORE_HANDSHAKE_SUCCESS -> CORE_HANDSHAKE_SUCCESS
    be.alexandre01.dnplugin.api.request.RequestInfo CORE_LOG_MESSAGE -> CORE_LOG_MESSAGE
    be.alexandre01.dnplugin.api.request.RequestInfo CORE_WARNING_MESSAGE -> CORE_WARNING_MESSAGE
    be.alexandre01.dnplugin.api.request.RequestInfo CORE_ERROR_MESSAGE -> CORE_ERROR_MESSAGE
    be.alexandre01.dnplugin.api.request.RequestInfo CORE_RETRANSMISSION -> CORE_RETRANSMISSION
    be.alexandre01.dnplugin.api.request.RequestInfo CORE_START_SERVER -> CORE_START_SERVER
    be.alexandre01.dnplugin.api.request.RequestInfo CORE_STOP_SERVER -> CORE_STOP_SERVER
    be.alexandre01.dnplugin.api.request.RequestInfo CORE_REMOVE_SERVER -> CORE_REMOVE_SERVER
    be.alexandre01.dnplugin.api.request.RequestInfo CORE_SPIGET_DOWNLOAD -> CORE_SPIGET_DOWNLOAD
    be.alexandre01.dnplugin.api.request.RequestInfo CORE_CREATE_SERVER -> CORE_CREATE_SERVER
    be.alexandre01.dnplugin.api.request.RequestInfo CORE_INSTALL_SERVER -> CORE_INSTALL_SERVER
    be.alexandre01.dnplugin.api.request.RequestInfo CORE_UPDATE_PLAYER -> CORE_UPDATE_PLAYER
    be.alexandre01.dnplugin.api.request.RequestInfo CORE_REMOVE_PLAYER -> CORE_REMOVE_PLAYER
    be.alexandre01.dnplugin.api.request.RequestInfo CORE_REGISTER_CHANNEL -> CORE_REGISTER_CHANNEL
    be.alexandre01.dnplugin.api.request.RequestInfo CORE_UNREGISTER_CHANNEL -> CORE_UNREGISTER_CHANNEL
    be.alexandre01.dnplugin.api.request.RequestInfo CORE_ASK_DATA -> CORE_ASK_DATA
    be.alexandre01.dnplugin.api.request.RequestInfo CORE_STOP_PROXY -> CORE_STOP_PROXY
    be.alexandre01.dnplugin.api.request.RequestInfo SERVER_AUTH -> SERVER_AUTH
    be.alexandre01.dnplugin.api.request.RequestInfo SERVER_HANDSHAKE -> SERVER_HANDSHAKE
    be.alexandre01.dnplugin.api.request.RequestInfo SERVER_HANDSHAKE_SUCCESS -> SERVER_HANDSHAKE_SUCCESS
    be.alexandre01.dnplugin.api.request.RequestInfo SERVER_NEW_SERVERS -> SERVER_NEW_SERVERS
    be.alexandre01.dnplugin.api.request.RequestInfo SERVER_REMOVE_SERVERS -> SERVER_REMOVE_SERVERS
    be.alexandre01.dnplugin.api.request.RequestInfo SERVER_EXECUTE_COMMAND -> SERVER_EXECUTE_COMMAND
    be.alexandre01.dnplugin.api.request.RequestInfo SERVER_LOG_MESSAGE -> SERVER_LOG_MESSAGE
    be.alexandre01.dnplugin.api.request.RequestInfo SERVER_WARNING_MESSAGE -> SERVER_WARNING_MESSAGE
    be.alexandre01.dnplugin.api.request.RequestInfo SERVER_ERROR_MESSAGE -> SERVER_ERROR_MESSAGE
    be.alexandre01.dnplugin.api.request.RequestInfo SERVER_UPDATE_PLAYERS -> SERVER_UPDATE_PLAYERS
    be.alexandre01.dnplugin.api.request.RequestInfo SERVER_UNREGISTER_PLAYERS -> SERVER_UNREGISTER_PLAYERS
    be.alexandre01.dnplugin.api.request.RequestInfo SERVER_UPDATE_PLAYERS_COUNT -> SERVER_UPDATE_PLAYERS_COUNT
    be.alexandre01.dnplugin.api.request.RequestInfo SERVER_UNREGISTER_PLAYERS_COUNT -> SERVER_UNREGISTER_PLAYERS_COUNT
    be.alexandre01.dnplugin.api.request.RequestInfo PROXY_AUTH -> PROXY_AUTH
    be.alexandre01.dnplugin.api.request.RequestInfo PROXY_HANDSHAKE -> PROXY_HANDSHAKE
    be.alexandre01.dnplugin.api.request.RequestInfo PROXY_HANDSHAKE_SUCCESS -> PROXY_HANDSHAKE_SUCCESS
    be.alexandre01.dnplugin.api.request.RequestInfo PROXY_REGISTER_SERVER -> PROXY_REGISTER_SERVER
    be.alexandre01.dnplugin.api.request.RequestInfo PROXY_UNREGISTER_SERVER -> PROXY_UNREGISTER_SERVER
    be.alexandre01.dnplugin.api.request.RequestInfo PROXY_GET_SERVERS -> PROXY_GET_SERVERS
    be.alexandre01.dnplugin.api.request.RequestInfo PROXY_EXECUTE_COMMAND -> PROXY_EXECUTE_COMMAND
    be.alexandre01.dnplugin.api.request.RequestInfo PROXY_LOG_MESSAGE -> PROXY_LOG_MESSAGE
    be.alexandre01.dnplugin.api.request.RequestInfo PROXY_WARNING_MESSAGE -> PROXY_WARNING_MESSAGE
    be.alexandre01.dnplugin.api.request.RequestInfo PROXY_ERROR_MESSAGE -> PROXY_ERROR_MESSAGE
    be.alexandre01.dnplugin.api.request.RequestInfo PROXY_PLAYER_INSTRUCTION -> PROXY_PLAYER_INSTRUCTION
    be.alexandre01.dnplugin.api.request.RequestInfo DEV_TOOLS_HANDSHAKE -> DEV_TOOLS_HANDSHAKE
    be.alexandre01.dnplugin.api.request.RequestInfo DEV_TOOLS_HANDHSAKE_SUCCESS -> DEV_TOOLS_HANDHSAKE_SUCCESS
    be.alexandre01.dnplugin.api.request.RequestInfo DEV_TOOLS_VIEW_CONSOLE_MESSAGE -> DEV_TOOLS_VIEW_CONSOLE_MESSAGE
    be.alexandre01.dnplugin.api.request.RequestInfo DEV_TOOLS_SEND_COMMAND -> DEV_TOOLS_SEND_COMMAND
    be.alexandre01.dnplugin.api.request.RequestInfo DEV_TOOLS_NEW_SERVERS -> DEV_TOOLS_NEW_SERVERS
    be.alexandre01.dnplugin.api.request.RequestInfo DEV_TOOLS_REMOVE_SERVERS -> DEV_TOOLS_REMOVE_SERVERS
    int id -> id
    java.util.Map byId -> byId
    java.util.List allIds -> allIds
    java.util.Map byName -> byName
    14:14:void <init>() -> <init>
    112:112:be.alexandre01.dnplugin.api.request.RequestInfo getByID(int) -> getByID
    116:124:java.lang.Integer getIdByName(java.lang.String) -> getIdByName
    128:130:void addRequestInfo(be.alexandre01.dnplugin.api.request.CustomRequestInfo) -> addRequestInfo
    133:134:void addCacheRequestInfo(java.lang.String,int) -> addCacheRequestInfo
    87:87:int getId() -> getId
    15:109:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.api.request.channels.AskedData -> be.alexandre01.dnplugin.api.request.channels.AskedData:
    java.lang.String key -> a
    be.alexandre01.dnplugin.api.request.channels.DNChannel dnChannel -> b
    11:11:void <init>() -> <init>
    18:44:void get(be.alexandre01.dnplugin.api.request.channels.GetDataThread) -> get
    12:12:void setKey(java.lang.String) -> setKey
    14:14:void setDnChannel(be.alexandre01.dnplugin.api.request.channels.DNChannel) -> setDnChannel
    11:11:java.lang.String access$000(be.alexandre01.dnplugin.api.request.channels.AskedData) -> access$000
    11:11:be.alexandre01.dnplugin.api.request.channels.DNChannel access$100(be.alexandre01.dnplugin.api.request.channels.AskedData) -> access$100
be.alexandre01.dnplugin.api.request.channels.AskedData$1 -> be.alexandre01.dnplugin.api.request.channels.AskedData$1:
    be.alexandre01.dnplugin.api.request.channels.GetDataThread val$getDataThread -> a
    java.util.concurrent.ExecutorService val$pool -> b
    be.alexandre01.dnplugin.api.request.channels.AskedData this$0 -> c
    19:19:void <init>(be.alexandre01.dnplugin.api.request.channels.AskedData,be.alexandre01.dnplugin.api.request.channels.GetDataThread,java.util.concurrent.ExecutorService) -> <init>
    23:42:void run() -> run
be.alexandre01.dnplugin.api.request.channels.ChannelPacket -> be.alexandre01.dnplugin.api.request.channels.ChannelPacket:
    int currentId -> a
    be.alexandre01.dnplugin.api.request.RequestInfo requestInfo -> b
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener listener -> c
    java.lang.Integer MID -> d
    be.alexandre01.dnplugin.utils.messages.Message message -> e
    java.lang.String channel -> f
    java.lang.String provider -> g
    be.alexandre01.dnplugin.api.request.RequestFutureResponse requestFutureResponse -> h
    be.alexandre01.dnplugin.api.connection.IClientHandler basicClientHandler -> i
    27:38:void <init>(be.alexandre01.dnplugin.utils.messages.Message) -> <init>
    39:45:void <init>(java.lang.String,java.lang.String) -> <init>
    48:49:void createResponse(be.alexandre01.dnplugin.utils.messages.Message) -> createResponse
    51:52:void createResponse(be.alexandre01.dnplugin.utils.messages.Message,java.lang.String) -> createResponse
    55:56:void createResponse(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> createResponse
    59:74:void createResponse(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener,java.lang.String) -> createResponse
    17:17:be.alexandre01.dnplugin.api.request.RequestInfo getRequestInfo() -> getRequestInfo
    18:18:be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener getListener() -> getListener
    19:19:java.lang.Integer getMID() -> getMID
    20:20:be.alexandre01.dnplugin.utils.messages.Message getMessage() -> getMessage
    21:21:java.lang.String getChannel() -> getChannel
    22:22:java.lang.String getProvider() -> getProvider
    23:23:be.alexandre01.dnplugin.api.request.RequestFutureResponse getRequestFutureResponse() -> getRequestFutureResponse
    25:25:be.alexandre01.dnplugin.api.connection.IClientHandler getBasicClientHandler() -> getBasicClientHandler
be.alexandre01.dnplugin.api.request.channels.DNChannel -> be.alexandre01.dnplugin.api.request.channels.DNChannel:
    java.util.HashMap dataListener -> a
    be.alexandre01.dnplugin.api.request.channels.RegisterListener registerListener -> b
    boolean hasBeenRegistered -> c
    boolean hasCalledNewData -> d
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap newData -> e
    java.lang.String name -> f
    be.alexandre01.dnplugin.api.NetworkBaseAPI networkBaseAPI -> g
    java.util.HashMap objects -> h
    java.util.HashMap autoSendObjects -> i
    java.util.ArrayList dnChannelInterceptors -> j
    java.util.HashMap completables -> k
    16:33:void <init>(java.lang.String) -> <init>
    35:39:void setDataListener(java.lang.String,java.lang.Class,be.alexandre01.dnplugin.api.request.channels.DataListener) -> setDataListener
    41:41:java.lang.Object askData(java.lang.String) -> askData
    45:46:void initDataIfNotExist(java.lang.String,java.lang.Object) -> initDataIfNotExist
    49:58:void setRegisterListener(be.alexandre01.dnplugin.api.request.channels.RegisterListener) -> setRegisterListener
    61:61:java.lang.Object getLocalData(java.lang.String) -> getLocalData
    64:64:java.lang.Object getLocalData(java.lang.String,java.lang.Class) -> getLocalData
    68:72:be.alexandre01.dnplugin.api.request.channels.AskedData askData(java.lang.String,java.lang.Class) -> askData
    77:86:be.alexandre01.dnplugin.api.request.channels.DNChannel setData(java.lang.String,java.lang.Object) -> setData
    90:105:void setData(java.lang.String,java.lang.Object,boolean) -> setData
    108:108:boolean hasBeenCalled() -> hasBeenCalled
    112:113:void callRegisterEvent(be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap) -> callRegisterEvent
    115:136:void callRegisterEvent(be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap,boolean) -> callRegisterEvent
    138:152:void callRegisterEvent(boolean) -> callRegisterEvent
    154:155:be.alexandre01.dnplugin.api.request.channels.DNChannel addInterceptor(be.alexandre01.dnplugin.api.request.channels.DNChannelInterceptor) -> addInterceptor
    158:160:be.alexandre01.dnplugin.api.request.channels.DNChannel sendMessage(be.alexandre01.dnplugin.utils.messages.Message) -> sendMessage
    16:16:java.util.HashMap getDataListener() -> getDataListener
    17:17:be.alexandre01.dnplugin.api.request.channels.RegisterListener getRegisterListener() -> getRegisterListener
    23:23:be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap getNewData() -> getNewData
    24:24:java.lang.String getName() -> getName
    25:25:be.alexandre01.dnplugin.api.NetworkBaseAPI getNetworkBaseAPI() -> getNetworkBaseAPI
    26:26:java.util.HashMap getObjects() -> getObjects
    27:27:java.util.HashMap getAutoSendObjects() -> getAutoSendObjects
    28:28:java.util.ArrayList getDnChannelInterceptors() -> getDnChannelInterceptors
    29:29:java.util.HashMap getCompletables() -> getCompletables
be.alexandre01.dnplugin.api.request.channels.DNChannelInterceptor -> be.alexandre01.dnplugin.api.request.channels.DNChannelInterceptor:
    void received(be.alexandre01.dnplugin.api.request.channels.ChannelPacket) -> received
be.alexandre01.dnplugin.api.request.channels.DNChannelManager -> be.alexandre01.dnplugin.api.request.channels.DNChannelManager:
    java.util.HashMap channels -> a
    12:14:void <init>() -> <init>
    17:17:boolean hasChannel(java.lang.String) -> hasChannel
    20:20:be.alexandre01.dnplugin.api.request.channels.DNChannel getChannel(java.lang.String) -> getChannel
    25:25:be.alexandre01.dnplugin.api.request.channels.DNChannel registerChannel(be.alexandre01.dnplugin.api.request.channels.DNChannel) -> registerChannel
    29:29:be.alexandre01.dnplugin.api.request.channels.DNChannel registerChannel(be.alexandre01.dnplugin.api.request.channels.DNChannel,boolean) -> registerChannel
    33:45:be.alexandre01.dnplugin.api.request.channels.DNChannel registerChannel(be.alexandre01.dnplugin.api.request.channels.DNChannel,boolean,be.alexandre01.dnplugin.api.request.channels.RegisterListener) -> registerChannel
    49:49:be.alexandre01.dnplugin.api.request.channels.DNChannel registerChannel(java.lang.String,boolean) -> registerChannel
    52:64:be.alexandre01.dnplugin.api.request.channels.DNChannel registerChannel(java.lang.String,boolean,be.alexandre01.dnplugin.api.request.channels.RegisterListener) -> registerChannel
    68:68:be.alexandre01.dnplugin.api.request.channels.DNChannel registerChannel(java.lang.String) -> registerChannel
    71:73:void unRegisterChannel(be.alexandre01.dnplugin.api.request.channels.DNChannel) -> unRegisterChannel
    10:10:java.util.HashMap getChannels() -> getChannels
be.alexandre01.dnplugin.api.request.channels.DataListener -> be.alexandre01.dnplugin.api.request.channels.DataListener:
    be.alexandre01.dnplugin.api.request.channels.DNChannel dnChannel -> a
    java.lang.String key -> b
    java.lang.Class aClass -> c
    7:7:void <init>() -> <init>
    16:17:void set(java.lang.Object) -> set
    void onUpdateData(java.lang.Object) -> onUpdateData
    8:8:be.alexandre01.dnplugin.api.request.channels.DNChannel getDnChannel() -> getDnChannel
    9:9:void setDnChannel(be.alexandre01.dnplugin.api.request.channels.DNChannel) -> setDnChannel
    11:11:void setKey(java.lang.String) -> setKey
    12:12:void setAClass(java.lang.Class) -> setAClass
    12:12:java.lang.Class getAClass() -> getAClass
be.alexandre01.dnplugin.api.request.channels.GetDataThread -> be.alexandre01.dnplugin.api.request.channels.GetDataThread:
    3:3:void <init>() -> <init>
    void onComplete(java.lang.Object) -> onComplete
be.alexandre01.dnplugin.api.request.channels.RegisterListener -> be.alexandre01.dnplugin.api.request.channels.RegisterListener:
    be.alexandre01.dnplugin.api.request.channels.DNChannel channel -> a
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap newData -> b
    6:6:void <init>() -> <init>
    12:16:void createInitialData(java.lang.String,java.lang.Object) -> createInitialData
    19:20:void setChannel(be.alexandre01.dnplugin.api.request.channels.DNChannel) -> setChannel
    23:23:boolean contains(java.lang.String) -> contains
    27:27:java.lang.Object get(java.lang.String) -> get
    31:31:java.lang.Object get(java.lang.String,java.lang.Class) -> get
    40:43:void executeNewData(be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap) -> executeNewData
    void onNewDataReceived(be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap) -> onNewDataReceived
    7:7:be.alexandre01.dnplugin.api.request.channels.DNChannel getChannel() -> getChannel
be.alexandre01.dnplugin.api.request.clients.Client -> be.alexandre01.dnplugin.api.request.clients.Client:
    3:3:void <init>() -> <init>
be.alexandre01.dnplugin.api.request.clients.ClientManager -> be.alexandre01.dnplugin.api.request.clients.ClientManager:
    3:3:void <init>() -> <init>
be.alexandre01.dnplugin.api.request.communication.ClientResponse -> be.alexandre01.dnplugin.api.request.communication.ClientResponse:
    java.util.LinkedHashMap map -> a
    9:10:void <init>() -> <init>
    13:27:void onAutoResponse(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> onAutoResponse
    31:31:void onResponse(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> onResponse
    34:35:void addRequestInterceptor(be.alexandre01.dnplugin.api.request.RequestInfo,be.alexandre01.dnplugin.api.request.communication.ClientResponse$RequestInterceptor) -> addRequestInterceptor
    38:38:be.alexandre01.dnplugin.api.request.communication.ClientResponse$RequestInterceptor getRequestInterceptor(be.alexandre01.dnplugin.utils.messages.Message) -> getRequestInterceptor
    46:46:boolean preReader(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> preReader
be.alexandre01.dnplugin.api.request.communication.ClientResponse$RequestInterceptor -> be.alexandre01.dnplugin.api.request.communication.ClientResponse$RequestInterceptor:
    void onRequest(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> onRequest
be.alexandre01.dnplugin.api.request.communication.ResponseManager -> be.alexandre01.dnplugin.api.request.communication.ResponseManager:
    be.alexandre01.dnplugin.api.NetworkBaseAPI baseAPI -> a
    8:10:void <init>(be.alexandre01.dnplugin.api.NetworkBaseAPI) -> <init>
    13:14:void addResponse(be.alexandre01.dnplugin.api.request.communication.ClientResponse) -> addResponse
    17:18:void removeResponse(be.alexandre01.dnplugin.api.request.communication.ClientResponse) -> removeResponse
be.alexandre01.dnplugin.api.request.events.MessageHandler -> be.alexandre01.dnplugin.api.request.events.MessageHandler:
    3:3:void <init>() -> <init>
be.alexandre01.dnplugin.api.request.exception.IDNotFoundException -> be.alexandre01.dnplugin.api.request.exception.IDNotFoundException:
    8:15:void <init>(java.lang.String) -> <init>
be.alexandre01.dnplugin.api.request.exception.RequestNotFoundException -> be.alexandre01.dnplugin.api.request.exception.RequestNotFoundException:
    8:15:void <init>() -> <init>
be.alexandre01.dnplugin.api.request.generated.DefaultGeneratedRequest -> be.alexandre01.dnplugin.api.request.generated.DefaultGeneratedRequest:
    8:69:void <init>() -> <init>
    66:67:be.alexandre01.dnplugin.utils.messages.Message lambda$new$10(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> lambda$new$10
    57:63:be.alexandre01.dnplugin.utils.messages.Message lambda$new$9(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> lambda$new$9
    52:54:be.alexandre01.dnplugin.utils.messages.Message lambda$new$8(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> lambda$new$8
    48:49:be.alexandre01.dnplugin.utils.messages.Message lambda$new$7(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> lambda$new$7
    44:45:be.alexandre01.dnplugin.utils.messages.Message lambda$new$6(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> lambda$new$6
    38:40:be.alexandre01.dnplugin.utils.messages.Message lambda$new$5(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> lambda$new$5
    33:35:be.alexandre01.dnplugin.utils.messages.Message lambda$new$4(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> lambda$new$4
    28:30:be.alexandre01.dnplugin.utils.messages.Message lambda$new$3(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> lambda$new$3
    23:24:be.alexandre01.dnplugin.utils.messages.Message lambda$new$2(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> lambda$new$2
    17:19:be.alexandre01.dnplugin.utils.messages.Message lambda$new$1(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> lambda$new$1
    10:13:be.alexandre01.dnplugin.utils.messages.Message lambda$new$0(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> lambda$new$0
be.alexandre01.dnplugin.api.universal.player.UniversalPlayer -> be.alexandre01.dnplugin.api.universal.player.UniversalPlayer:
    java.util.Map idToOperation -> a
    java.util.ArrayList playerJoin -> b
    java.util.ArrayList playerQuit -> c
    java.util.ArrayList playerUpdates -> d
    be.alexandre01.dnplugin.api.objects.server.DNServer dnServer -> e
    be.alexandre01.dnplugin.api.objects.player.DNPlayer dnPlayer -> f
    15:25:void <init>() -> <init>
    28:30:void setup(be.alexandre01.dnplugin.api.objects.server.DNServer,be.alexandre01.dnplugin.api.objects.player.DNPlayer) -> setup
    void sendMessage(java.lang.String) -> sendMessage
    java.lang.String getName() -> getName
    java.util.UUID getUniqueId() -> getUniqueId
    void kickPlayer(java.lang.String) -> kickPlayer
    void sendTitle(java.lang.String,java.lang.String,int,int,int) -> sendTitle
    void sendTo(java.lang.String) -> sendTo
    void sendTo(be.alexandre01.dnplugin.api.objects.server.DNServer) -> sendTo
    java.lang.Object castTo(java.lang.Class) -> castTo
    15:15:java.util.Map getIdToOperation() -> getIdToOperation
    16:16:java.util.ArrayList getPlayerJoin() -> getPlayerJoin
    17:17:java.util.ArrayList getPlayerQuit() -> getPlayerQuit
    18:18:java.util.ArrayList getPlayerUpdates() -> getPlayerUpdates
    19:19:be.alexandre01.dnplugin.api.objects.server.DNServer getDnServer() -> getDnServer
    20:20:be.alexandre01.dnplugin.api.objects.player.DNPlayer getDnPlayer() -> getDnPlayer
be.alexandre01.dnplugin.api.universal.player.UniversalPlayer$PlayerJoinListener -> be.alexandre01.dnplugin.api.universal.player.UniversalPlayer$PlayerJoinListener:
    void onPlayerJoin(be.alexandre01.dnplugin.api.universal.player.UniversalPlayer) -> onPlayerJoin
be.alexandre01.dnplugin.api.universal.player.UniversalPlayer$PlayerQuitListener -> be.alexandre01.dnplugin.api.universal.player.UniversalPlayer$PlayerQuitListener:
    void onPlayerQuit(be.alexandre01.dnplugin.api.universal.player.UniversalPlayer) -> onPlayerQuit
be.alexandre01.dnplugin.api.universal.player.UniversalPlayer$PlayerUpdateServer -> be.alexandre01.dnplugin.api.universal.player.UniversalPlayer$PlayerUpdateServer:
    void onPlayerUpdateServer(be.alexandre01.dnplugin.api.universal.player.UniversalPlayer) -> onPlayerUpdateServer
be.alexandre01.dnplugin.api.universal.player.proxy.DNProxyPlayer -> be.alexandre01.dnplugin.api.universal.player.proxy.DNProxyPlayer:
    8:9:void <init>() -> <init>
    int getPing() -> getPing
    void sendData(java.lang.String,byte[]) -> sendData
be.alexandre01.dnplugin.api.universal.player.server.DNServerPlayer -> be.alexandre01.dnplugin.api.universal.player.server.DNServerPlayer:
    11:12:void <init>() -> <init>
be.alexandre01.dnplugin.connection.client.BasicClient -> be.alexandre01.dnplugin.a.a.a:
    java.util.concurrent.ScheduledExecutorService executorService -> a
    int trying -> b
    boolean isRunning -> c
    18:22:void <init>() -> <init>
    27:28:void run() -> run
    32:82:void connect() -> connect
    22:22:void setRunning(boolean) -> a
    70:73:void lambda$connect$0() -> a
be.alexandre01.dnplugin.connection.client.communication.BasicDecoder -> be.alexandre01.dnplugin.a.a.a.a:
    9:9:void <init>() -> <init>
    12:24:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
be.alexandre01.dnplugin.connection.client.communication.BasicEncoder -> be.alexandre01.dnplugin.a.a.a.b:
    7:7:void <init>() -> <init>
    10:17:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
be.alexandre01.dnplugin.connection.client.communication.BasicTransmission -> be.alexandre01.dnplugin.a.a.a.c:
    15:15:void <init>() -> <init>
    19:109:void onResponse(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> onResponse
    62:62:java.lang.Object lambda$onResponse$0(java.lang.Object) -> a
be.alexandre01.dnplugin.connection.client.handler.BasicClientHandler -> be.alexandre01.dnplugin.a.a.b.a:
    java.util.ArrayList responses -> a
    java.util.HashMap queue -> b
    be.alexandre01.dnplugin.connection.client.BasicClient basicClient -> c
    be.alexandre01.dnplugin.shaded.netty.channel.Channel channel -> d
    25:36:void <init>(be.alexandre01.dnplugin.connection.client.BasicClient) -> <init>
    40:49:void channelActive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelActive
    52:68:void taskQueue() -> a
    72:100:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    104:107:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    111:113:void channelUnregistered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelUnregistered
    119:121:void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    125:126:void writeAndFlush(be.alexandre01.dnplugin.utils.messages.Message) -> writeAndFlush
    130:142:void writeAndFlush(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> writeAndFlush
    25:25:java.util.ArrayList getResponses() -> getResponses
    28:28:be.alexandre01.dnplugin.shaded.netty.channel.Channel getChannel() -> getChannel
    28:28:void setChannel(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> setChannel
    59:63:void lambda$taskQueue$0(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> a
be.alexandre01.dnplugin.connection.client.handler.BasicClientPipeline -> be.alexandre01.dnplugin.a.a.b.b:
    be.alexandre01.dnplugin.connection.client.BasicClient basicClient -> a
    12:15:void <init>(be.alexandre01.dnplugin.connection.client.BasicClient) -> <init>
    18:21:void initChannel(be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannel) -> a
    9:9:void initChannel(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> initChannel
be.alexandre01.dnplugin.connection.test.TimeClient -> be.alexandre01.dnplugin.a.b.a:
    java.util.concurrent.ScheduledExecutorService executorService -> a
    int trying -> b
    16:18:void <init>() -> <init>
    20:21:void main(java.lang.String[]) -> a
    25:66:void init() -> a
    54:56:void lambda$init$0() -> b
be.alexandre01.dnplugin.connection.test.TimeClient$1 -> be.alexandre01.dnplugin.a.b.b:
    be.alexandre01.dnplugin.connection.test.TimeClient this$0 -> a
    35:35:void <init>(be.alexandre01.dnplugin.connection.test.TimeClient) -> <init>
    38:39:void initChannel(be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannel) -> a
    35:35:void initChannel(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> initChannel
be.alexandre01.dnplugin.connection.test.TimeClientHandler -> be.alexandre01.dnplugin.a.b.c:
    be.alexandre01.dnplugin.connection.test.TimeClient timeClient -> a
    13:16:void <init>(be.alexandre01.dnplugin.connection.test.TimeClient) -> <init>
    20:22:void channelActive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelActive
    26:34:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    38:41:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    45:46:void channelUnregistered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelUnregistered
    50:52:void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
be.alexandre01.dnplugin.connection.test.TimeDecoder -> be.alexandre01.dnplugin.a.b.d:
    9:9:void <init>() -> <init>
    12:17:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
be.alexandre01.dnplugin.plugins.bungeecord.DNBungee -> be.alexandre01.dnplugin.plugins.bungeecord.DNBungee:
    be.alexandre01.dnplugin.plugins.bungeecord.DNBungee instance -> h
    be.alexandre01.dnplugin.plugins.bungeecord.ImplAPI api -> i
    be.alexandre01.dnplugin.api.connection.IClientHandler clientHandler -> j
    be.alexandre01.dnplugin.api.request.channels.DNChannelManager dnChannelManager -> k
    be.alexandre01.dnplugin.api.connection.IBasicClient basicClient -> l
    java.lang.String version -> m
    java.lang.String type -> n
    int port -> o
    be.alexandre01.dnplugin.api.request.RequestManager requestManager -> p
    java.io.File file -> a
    be.alexandre01.dnplugin.utils.files.YAMLManager yamlManager -> b
    be.alexandre01.dnplugin.utils.files.network.NetworkYAML configuration -> c
    be.alexandre01.dnplugin.utils.files.messages.MessagesManager messagesManager -> d
    be.alexandre01.dnplugin.plugins.bungeecord.PlayerTabList playerTabList -> e
    boolean cancelKick -> f
    be.alexandre01.dnplugin.plugins.bungeecord.components.TablistCustomizer tablistCustomizer -> g
    be.alexandre01.dnplugin.plugins.bungeecord.objects.PlayerManagement playerManagement -> q
    37:65:void <init>() -> <init>
    70:208:void onEnable() -> onEnable
    212:213:void onDisable() -> onDisable
    216:244:void loadConfig() -> loadConfig
    252:253:void saveConfig() -> saveConfig
    257:274:java.lang.String getMessage(java.lang.String,net.md_5.bungee.api.connection.ProxiedPlayer) -> getMessage
    279:285:java.lang.String completeMessagePart(java.lang.String,net.md_5.bungee.api.connection.ProxiedPlayer) -> completeMessagePart
    40:40:be.alexandre01.dnplugin.api.connection.IClientHandler getClientHandler() -> getClientHandler
    41:41:be.alexandre01.dnplugin.api.request.channels.DNChannelManager getDnChannelManager() -> getDnChannelManager
    42:42:be.alexandre01.dnplugin.api.connection.IBasicClient getBasicClient() -> getBasicClient
    43:43:java.lang.String getVersion() -> getVersion
    44:44:java.lang.String getType() -> getType
    45:45:int getPort() -> getPort
    46:46:be.alexandre01.dnplugin.api.request.RequestManager getRequestManager() -> getRequestManager
    47:47:java.io.File getFile() -> getFile
    49:49:be.alexandre01.dnplugin.utils.files.YAMLManager getYamlManager() -> getYamlManager
    50:50:be.alexandre01.dnplugin.utils.files.network.NetworkYAML getConfiguration() -> getConfiguration
    51:51:be.alexandre01.dnplugin.utils.files.messages.MessagesManager getMessagesManager() -> getMessagesManager
    52:52:be.alexandre01.dnplugin.plugins.bungeecord.PlayerTabList getPlayerTabList() -> getPlayerTabList
    55:55:boolean isCancelKick() -> isCancelKick
    64:64:be.alexandre01.dnplugin.plugins.bungeecord.components.TablistCustomizer getTablistCustomizer() -> getTablistCustomizer
    36:36:void setClientHandler(be.alexandre01.dnplugin.api.connection.IClientHandler) -> setClientHandler
    36:36:void setDnChannelManager(be.alexandre01.dnplugin.api.request.channels.DNChannelManager) -> setDnChannelManager
    36:36:void setBasicClient(be.alexandre01.dnplugin.api.connection.IBasicClient) -> setBasicClient
    36:36:void setVersion(java.lang.String) -> setVersion
    36:36:void setType(java.lang.String) -> setType
    36:36:void setPort(int) -> setPort
    36:36:void setRequestManager(be.alexandre01.dnplugin.api.request.RequestManager) -> setRequestManager
    36:36:void setFile(java.io.File) -> setFile
    36:36:void setYamlManager(be.alexandre01.dnplugin.utils.files.YAMLManager) -> setYamlManager
    36:36:void setConfiguration(be.alexandre01.dnplugin.utils.files.network.NetworkYAML) -> setConfiguration
    36:36:void setMessagesManager(be.alexandre01.dnplugin.utils.files.messages.MessagesManager) -> setMessagesManager
    36:36:void setPlayerTabList(be.alexandre01.dnplugin.plugins.bungeecord.PlayerTabList) -> setPlayerTabList
    36:36:void setCancelKick(boolean) -> setCancelKick
    36:36:void setTablistCustomizer(be.alexandre01.dnplugin.plugins.bungeecord.components.TablistCustomizer) -> setTablistCustomizer
    38:38:be.alexandre01.dnplugin.plugins.bungeecord.DNBungee getInstance() -> getInstance
    39:39:be.alexandre01.dnplugin.plugins.bungeecord.ImplAPI getApi() -> getApi
    65:65:be.alexandre01.dnplugin.plugins.bungeecord.objects.PlayerManagement getPlayerManagement() -> getPlayerManagement
be.alexandre01.dnplugin.plugins.bungeecord.ImplAPI -> be.alexandre01.dnplugin.plugins.bungeecord.a:
    be.alexandre01.dnplugin.api.connection.IClientHandler basicClientHandler -> a
    be.alexandre01.dnplugin.plugins.bungeecord.DNBungee dnBungee -> b
    be.alexandre01.dnplugin.plugins.bungeecord.api.DNBungeeServersManager dnBungeeServersManager -> c
    java.lang.String serverName -> d
    int id -> e
    java.lang.String processName -> f
    25:29:void <init>(be.alexandre01.dnplugin.plugins.bungeecord.DNBungee) -> <init>
    32:32:be.alexandre01.dnplugin.api.connection.IClientHandler getClientHandler() -> getClientHandler
    37:37:java.lang.String getInfo() -> getInfo
    42:42:java.lang.String getProcessName() -> getProcessName
    47:47:be.alexandre01.dnplugin.api.universal.player.UniversalPlayer getUniversalPlayer(java.lang.String) -> getUniversalPlayer
    52:53:void setProcessName(java.lang.String) -> setProcessName
    57:57:java.lang.String getServerName() -> getServerName
    62:63:void setServerName(java.lang.String) -> setServerName
    67:67:int getID() -> getID
    72:73:void setID(int) -> setID
    77:77:int getPort() -> getPort
    82:82:java.util.logging.Logger getLogger() -> getLogger
    87:87:be.alexandre01.dnplugin.api.request.RequestManager getRequestManager() -> getRequestManager
    92:92:be.alexandre01.dnplugin.api.request.channels.DNChannelManager getChannelManager() -> getChannelManager
    97:98:void setRequestManager(be.alexandre01.dnplugin.api.request.RequestManager) -> setRequestManager
    102:102:void callServerAttachedEvent() -> callServerAttachedEvent
    106:110:void setClientHandler(be.alexandre01.dnplugin.api.connection.IClientHandler) -> setClientHandler
    114:115:void shutdownProcess() -> shutdownProcess
    20:20:be.alexandre01.dnplugin.plugins.bungeecord.api.DNBungeeServersManager getDnBungeeServersManager() -> getDnBungeeServersManager
be.alexandre01.dnplugin.plugins.bungeecord.PlayerTabList -> be.alexandre01.dnplugin.plugins.bungeecord.b:
    be.alexandre01.dnplugin.plugins.bungeecord.DNBungee dnBungee -> a
    boolean end -> b
    java.util.HashMap actualHeader -> c
    java.util.HashMap actualFooter -> d
    int hIterationLeft -> e
    int fIterationLeft -> f
    int hNumber -> g
    int fNumber -> h
    13:17:void <init>() -> <init>
    27:84:void start() -> a
    87:90:java.lang.String stringFormat(java.lang.String,net.md_5.bungee.api.connection.ProxiedPlayer) -> a
    94:98:void stop() -> b
    101:103:void restart() -> c
    38:83:void lambda$start$2(be.alexandre01.dnplugin.utils.files.tablist.TabListYAML,be.alexandre01.dnplugin.utils.files.tablist.TabList,be.alexandre01.dnplugin.utils.files.tablist.TabList) -> a
    72:73:void lambda$null$1(java.lang.StringBuilder,java.lang.Integer,java.lang.String) -> a
    67:68:void lambda$null$0(java.lang.StringBuilder,java.lang.Integer,java.lang.String) -> b
be.alexandre01.dnplugin.plugins.bungeecord.api.DNBungeeAPI -> be.alexandre01.dnplugin.plugins.bungeecord.api.DNBungeeAPI:
    12:12:be.alexandre01.dnplugin.plugins.bungeecord.api.DNBungeeAPI getInstance() -> getInstance
    be.alexandre01.dnplugin.api.connection.IClientHandler getClientHandler() -> getClientHandler
    java.lang.String getInfo() -> getInfo
    java.lang.String getProcessName() -> getProcessName
    void setProcessName(java.lang.String) -> setProcessName
    java.lang.String getServerName() -> getServerName
    void setServerName(java.lang.String) -> setServerName
    int getID() -> getID
    void setID(int) -> setID
    int getPort() -> getPort
    java.util.logging.Logger getLogger() -> getLogger
    be.alexandre01.dnplugin.api.request.RequestManager getRequestManager() -> getRequestManager
    be.alexandre01.dnplugin.api.request.channels.DNChannelManager getChannelManager() -> getChannelManager
    void setRequestManager(be.alexandre01.dnplugin.api.request.RequestManager) -> setRequestManager
    void setClientHandler(be.alexandre01.dnplugin.api.connection.IClientHandler) -> setClientHandler
    void shutdownProcess() -> shutdownProcess
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    be.alexandre01.dnplugin.plugins.bungeecord.api.DNBungeeServersManager getDnBungeeServersManager() -> getDnBungeeServersManager
be.alexandre01.dnplugin.plugins.bungeecord.api.DNBungeeServersManager -> be.alexandre01.dnplugin.plugins.bungeecord.api.DNBungeeServersManager:
    void registerServer(java.lang.String,java.lang.String,int,be.alexandre01.dnplugin.utils.Mods) -> registerServer
    void unregisterServer(java.lang.String) -> unregisterServer
    java.util.ArrayList getServers() -> getServers
be.alexandre01.dnplugin.plugins.bungeecord.communication.BungeeRequestResponse -> be.alexandre01.dnplugin.plugins.bungeecord.a.a:
    be.alexandre01.dnplugin.plugins.bungeecord.api.DNBungeeAPI dnBungeeAPI -> a
    16:56:void <init>() -> <init>
    60:61:boolean preReader(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> preReader
    48:54:void lambda$new$7(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> a
    44:45:void lambda$new$6(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> b
    40:41:void lambda$new$5(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> c
    37:38:void lambda$new$4(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> d
    34:35:void lambda$new$3(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> e
    30:31:void lambda$new$2(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> f
    25:27:void lambda$new$1(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> g
    20:22:void lambda$new$0(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> h
be.alexandre01.dnplugin.plugins.bungeecord.communication.generated.BungeeGeneratedRequest -> be.alexandre01.dnplugin.plugins.bungeecord.a.a.a:
    7:23:void <init>() -> <init>
    20:21:be.alexandre01.dnplugin.utils.messages.Message lambda$new$1(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> a
    9:17:be.alexandre01.dnplugin.utils.messages.Message lambda$new$0(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> b
be.alexandre01.dnplugin.plugins.bungeecord.communication.objects.ProxyService -> be.alexandre01.dnplugin.plugins.bungeecord.a.b.a:
    12:13:void <init>(java.lang.String,be.alexandre01.dnplugin.utils.Mods,boolean,be.alexandre01.dnplugin.api.objects.RemoteBundle) -> <init>
    17:18:void start() -> start
    22:34:void createServer(java.lang.String) -> a
    36:42:void createServer(java.lang.String,int) -> a
    45:49:void removeServer(java.lang.String) -> b
    52:57:void removeServer(int) -> a
be.alexandre01.dnplugin.plugins.bungeecord.components.TablistCustomizer -> be.alexandre01.dnplugin.plugins.bungeecord.b.a:
    java.io.File file -> a
    net.md_5.bungee.config.Configuration configuration -> b
    be.alexandre01.dnplugin.plugins.bungeecord.DNBungee dnBungee -> c
    java.util.concurrent.atomic.AtomicInteger header_lineToOverride -> d
    java.util.concurrent.atomic.AtomicInteger footer_lineToOverride -> e
    java.util.HashMap header_default -> f
    java.util.HashMap footer_default -> g
    java.util.HashMap header_lines_by_tick -> h
    java.util.HashMap footer_lines_by_tick -> i
    java.util.HashMap header_repeat_by_tick -> j
    java.util.HashMap footer_repeat_by_tick -> k
    java.util.HashMap header_final -> l
    java.util.HashMap footer_final -> m
    25:85:void <init>() -> <init>
    88:105:void updateTab(net.md_5.bungee.api.connection.ProxiedPlayer,int,int) -> a
    110:115:boolean readTablist() -> a
    122:195:boolean animationLoader(java.lang.String,java.util.HashMap,java.util.HashMap,java.util.HashMap,java.util.HashMap,java.util.concurrent.atomic.AtomicInteger) -> a
    200:205:boolean distributeText(java.util.HashMap,java.lang.String[],java.lang.String) -> a
    208:239:void loadConfig() -> b
    243:247:void saveConfig() -> c
    180:184:void lambda$animationLoader$1(java.util.HashMap,java.lang.Integer,java.util.HashMap) -> a
    170:175:void lambda$animationLoader$0(java.util.HashMap,java.util.HashMap,java.lang.Integer,java.lang.String) -> a
    21:21:be.alexandre01.dnplugin.plugins.bungeecord.DNBungee access$000(be.alexandre01.dnplugin.plugins.bungeecord.components.TablistCustomizer) -> a
    21:21:java.util.HashMap access$100(be.alexandre01.dnplugin.plugins.bungeecord.components.TablistCustomizer) -> b
    21:21:java.util.HashMap access$200(be.alexandre01.dnplugin.plugins.bungeecord.components.TablistCustomizer) -> c
be.alexandre01.dnplugin.plugins.bungeecord.components.TablistCustomizer$1 -> be.alexandre01.dnplugin.plugins.bungeecord.b.b:
    int i_header -> a
    int i_footer -> b
    int ticks_header -> c
    int ticks_footer -> d
    int val$maxSize_header -> e
    int val$maxSize_footer -> f
    be.alexandre01.dnplugin.plugins.bungeecord.components.TablistCustomizer this$0 -> g
    52:56:void <init>(be.alexandre01.dnplugin.plugins.bungeecord.components.TablistCustomizer,int,int) -> <init>
    59:83:void run() -> run
be.alexandre01.dnplugin.plugins.bungeecord.components.commands.Maintenance -> be.alexandre01.dnplugin.plugins.bungeecord.b.a.a:
    16:17:void <init>(java.lang.String) -> <init>
    28:86:void execute(net.md_5.bungee.api.CommandSender,java.lang.String[]) -> a
    89:96:void sendHelp(net.md_5.bungee.api.CommandSender) -> a
be.alexandre01.dnplugin.plugins.bungeecord.components.commands.Maintenance$1 -> be.alexandre01.dnplugin.plugins.bungeecord.b.a.b:
    int[] $SwitchMap$be$alexandre01$dnplugin$plugins$bungeecord$components$commands$Maintenance$SubCommand -> a
    41:41:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.bungeecord.components.commands.Maintenance$SubCommand -> be.alexandre01.dnplugin.plugins.bungeecord.b.a.a$a:
    be.alexandre01.dnplugin.plugins.bungeecord.components.commands.Maintenance$SubCommand ON -> ON
    be.alexandre01.dnplugin.plugins.bungeecord.components.commands.Maintenance$SubCommand OFF -> OFF
    be.alexandre01.dnplugin.plugins.bungeecord.components.commands.Maintenance$SubCommand ADD -> ADD
    be.alexandre01.dnplugin.plugins.bungeecord.components.commands.Maintenance$SubCommand REMOVE -> REMOVE
    be.alexandre01.dnplugin.plugins.bungeecord.components.commands.Maintenance$SubCommand LIST -> LIST
    be.alexandre01.dnplugin.plugins.bungeecord.components.commands.Maintenance$SubCommand[] $VALUES -> $VALUES
    19:19:be.alexandre01.dnplugin.plugins.bungeecord.components.commands.Maintenance$SubCommand[] values() -> values
    19:19:be.alexandre01.dnplugin.plugins.bungeecord.components.commands.Maintenance$SubCommand valueOf(java.lang.String) -> valueOf
    19:19:void <init>(java.lang.String,int) -> <init>
    19:20:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.bungeecord.components.commands.Slot -> be.alexandre01.dnplugin.plugins.bungeecord.b.a.c:
    10:11:void <init>(java.lang.String) -> <init>
    15:32:void execute(net.md_5.bungee.api.CommandSender,java.lang.String[]) -> a
    35:39:void sendHelp(net.md_5.bungee.api.CommandSender) -> a
be.alexandre01.dnplugin.plugins.bungeecord.components.commands.TabList -> be.alexandre01.dnplugin.plugins.bungeecord.b.a.d:
    10:10:void <init>(java.lang.String) -> <init>
    30:70:void execute(net.md_5.bungee.api.CommandSender,java.lang.String[]) -> a
    73:79:void sendHelp(net.md_5.bungee.api.CommandSender) -> a
be.alexandre01.dnplugin.plugins.bungeecord.components.commands.TabList$1 -> be.alexandre01.dnplugin.plugins.bungeecord.b.a.e:
    int[] $SwitchMap$be$alexandre01$dnplugin$plugins$bungeecord$components$commands$TabList$Options -> a
    37:37:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.bungeecord.components.commands.TabList$Options -> be.alexandre01.dnplugin.plugins.bungeecord.b.a.d$a:
    be.alexandre01.dnplugin.plugins.bungeecord.components.commands.TabList$Options ENABLE -> ENABLE
    be.alexandre01.dnplugin.plugins.bungeecord.components.commands.TabList$Options DISABLE -> DISABLE
    be.alexandre01.dnplugin.plugins.bungeecord.components.commands.TabList$Options RELOAD -> RELOAD
    be.alexandre01.dnplugin.plugins.bungeecord.components.commands.TabList$Options DELAY -> DELAY
    be.alexandre01.dnplugin.plugins.bungeecord.components.commands.TabList$Options[] $VALUES -> $VALUES
    12:12:be.alexandre01.dnplugin.plugins.bungeecord.components.commands.TabList$Options[] values() -> values
    12:12:be.alexandre01.dnplugin.plugins.bungeecord.components.commands.TabList$Options valueOf(java.lang.String) -> valueOf
    12:12:void <init>(java.lang.String,int) -> <init>
    19:24:be.alexandre01.dnplugin.plugins.bungeecord.components.commands.TabList$Options get(java.lang.String) -> a
    12:16:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.bungeecord.components.listeners.MOTD -> be.alexandre01.dnplugin.plugins.bungeecord.b.b.a:
    25:25:void <init>() -> <init>
be.alexandre01.dnplugin.plugins.bungeecord.components.listeners.ServerPingListener -> be.alexandre01.dnplugin.plugins.bungeecord.b.b.b:
    be.alexandre01.dnplugin.plugins.bungeecord.DNBungee dnBungee -> a
    be.alexandre01.dnplugin.utils.files.network.NetworkYAML config -> b
    int maxPlayers -> c
    int onlinePlayers -> d
    24:27:void <init>() -> <init>
    31:57:void onPing(net.md_5.bungee.api.event.ProxyPingEvent) -> a
    60:62:java.lang.String formatString(java.lang.String) -> a
be.alexandre01.dnplugin.plugins.bungeecord.listeners.PlayerServerListener -> be.alexandre01.dnplugin.plugins.bungeecord.c.a:
    be.alexandre01.dnplugin.plugins.bungeecord.DNBungee dnBungee -> a
    11:13:void <init>() -> <init>
    17:18:void onSwitch(net.md_5.bungee.api.event.ServerSwitchEvent) -> a
    22:23:void onLeave(net.md_5.bungee.api.event.PlayerDisconnectEvent) -> a
be.alexandre01.dnplugin.plugins.bungeecord.listeners.RedirectConnection -> be.alexandre01.dnplugin.plugins.bungeecord.c.b:
    java.util.Set pending -> a
    be.alexandre01.dnplugin.plugins.bungeecord.DNBungee dnBungee -> b
    be.alexandre01.dnplugin.plugins.bungeecord.api.DNBungeeAPI dnBungeeAPI -> c
    18:25:void <init>() -> <init>
    29:69:void onJoin(net.md_5.bungee.api.event.ServerConnectEvent) -> a
    73:77:void onPlayerConnect(net.md_5.bungee.api.event.PostLoginEvent) -> a
    81:105:void onServerConnect(net.md_5.bungee.api.event.ServerConnectEvent) -> b
    107:107:boolean isPending(java.util.UUID) -> a
    111:115:net.md_5.bungee.api.config.ServerInfo getDefaultServer() -> a
    121:130:void onServerKick(net.md_5.bungee.api.event.ServerKickEvent) -> a
    132:156:net.md_5.bungee.api.config.ServerInfo getServer(java.lang.String) -> a
be.alexandre01.dnplugin.plugins.bungeecord.objects.PlayerManagement -> be.alexandre01.dnplugin.plugins.bungeecord.d.a:
    java.util.HashMap proxiedPlayers -> a
    java.util.ArrayList removedIds -> b
    int currentID -> c
    11:14:void <init>() -> <init>
    18:26:void updatePlayer(net.md_5.bungee.api.connection.ProxiedPlayer) -> a
    29:36:int createId() -> a
    40:48:void removePlayer(net.md_5.bungee.api.connection.ProxiedPlayer) -> b
    45:46:void lambda$removePlayer$0(int,be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> a
be.alexandre01.dnplugin.plugins.bungeecord.utils.BaseComponentBuilder -> be.alexandre01.dnplugin.plugins.bungeecord.e.a:
    java.util.ArrayList index -> a
    java.util.HashMap lines -> b
    9:11:void <init>() -> <init>
    14:16:void setLine(java.lang.Integer,java.lang.String) -> a
    20:20:void setLineToOverrides(int) -> a
    22:36:net.md_5.bungee.api.chat.TextComponent toTextComponent() -> a
be.alexandre01.dnplugin.plugins.bungeecord.utils.BungeeServersManager -> be.alexandre01.dnplugin.plugins.bungeecord.e.b:
    java.util.ArrayList servers -> a
    be.alexandre01.dnplugin.api.NetworkBaseAPI networkBaseAPI -> b
    17:22:void <init>(be.alexandre01.dnplugin.api.NetworkBaseAPI) -> <init>
    27:47:void registerServer(java.lang.String,java.lang.String,int,be.alexandre01.dnplugin.utils.Mods) -> registerServer
    51:53:void unregisterServer(java.lang.String) -> unregisterServer
    17:17:java.util.ArrayList getServers() -> getServers
be.alexandre01.dnplugin.plugins.bungeecord.utils.BungeeText -> be.alexandre01.dnplugin.plugins.bungeecord.e.c:
    java.io.File file -> a
    net.md_5.bungee.config.Configuration configuration -> b
    boolean backup -> d
    19:29:void <init>(boolean) -> <init>
    33:34:void init() -> a
    38:38:java.util.Set getKeys(java.lang.String,boolean) -> a
    44:48:boolean hasSubSection(java.lang.String) -> a
    53:53:java.lang.String getString(java.lang.String) -> b
    59:85:void reloadConfig() -> b
    89:90:void saveFile() -> c
    94:95:void setString(java.lang.String,java.lang.String) -> a
    99:99:java.io.File getFile() -> d
    104:108:void saveConfig() -> e
    23:28:void lambda$new$0(java.lang.String,java.lang.Object[]) -> c
be.alexandre01.dnplugin.plugins.spigot.DNSpigot -> be.alexandre01.dnplugin.plugins.spigot.DNSpigot:
    be.alexandre01.dnplugin.plugins.spigot.DNSpigot instance -> b
    be.alexandre01.dnplugin.api.connection.IClientHandler basicClientHandler -> c
    be.alexandre01.dnplugin.api.connection.IBasicClient basicClient -> d
    java.lang.String version -> e
    java.lang.String type -> f
    int port -> g
    be.alexandre01.dnplugin.api.request.RequestManager requestManager -> h
    be.alexandre01.dnplugin.api.request.channels.DNChannelManager dnChannelManager -> i
    be.alexandre01.dnplugin.api.objects.server.DNServer currentServer -> j
    be.alexandre01.dnplugin.plugins.spigot.ImplAPI api -> k
    be.alexandre01.dnplugin.plugins.spigot.utils.SpigotText spigotText -> l
    boolean isReloading -> a
    26:39:void <init>() -> <init>
    42:88:void onEnable() -> onEnable
    92:102:void onDisable() -> onDisable
    111:120:void registerCommand(java.lang.String,org.bukkit.command.Command) -> registerCommand
    123:123:java.lang.String getMessage(java.lang.String,java.lang.Object[]) -> getMessage
    127:127:be.alexandre01.dnplugin.plugins.spigot.ImplAPI getAPI() -> getAPI
    28:28:be.alexandre01.dnplugin.plugins.spigot.DNSpigot getInstance() -> getInstance
    29:29:be.alexandre01.dnplugin.api.connection.IClientHandler getBasicClientHandler() -> getBasicClientHandler
    29:29:void setBasicClientHandler(be.alexandre01.dnplugin.api.connection.IClientHandler) -> setBasicClientHandler
    30:30:be.alexandre01.dnplugin.api.connection.IBasicClient getBasicClient() -> getBasicClient
    31:31:java.lang.String getVersion() -> getVersion
    32:32:java.lang.String getType() -> getType
    33:33:int getPort() -> getPort
    34:34:be.alexandre01.dnplugin.api.request.RequestManager getRequestManager() -> getRequestManager
    35:35:be.alexandre01.dnplugin.api.request.channels.DNChannelManager getDnChannelManager() -> getDnChannelManager
    36:36:be.alexandre01.dnplugin.api.objects.server.DNServer getCurrentServer() -> getCurrentServer
    36:36:void setCurrentServer(be.alexandre01.dnplugin.api.objects.server.DNServer) -> setCurrentServer
be.alexandre01.dnplugin.plugins.spigot.ImplAPI -> be.alexandre01.dnplugin.plugins.spigot.a:
    be.alexandre01.dnplugin.api.connection.IClientHandler iClientHandler -> a
    be.alexandre01.dnplugin.plugins.spigot.DNSpigot dnSpigot -> b
    boolean refreshedPlayers -> c
    java.lang.String processName -> d
    java.lang.String serverName -> e
    int id -> f
    be.alexandre01.dnplugin.api.objects.player.DNPlayerManager dnPlayerManager -> g
    28:40:void <init>(be.alexandre01.dnplugin.plugins.spigot.DNSpigot) -> <init>
    43:43:be.alexandre01.dnplugin.api.connection.IClientHandler getClientHandler() -> getClientHandler
    48:48:java.lang.String getInfo() -> getInfo
    53:53:java.lang.String getProcessName() -> getProcessName
    58:61:be.alexandre01.dnplugin.plugins.spigot.communication.objects.SpigotPlayer getUniversalPlayer(java.lang.String) -> a
    66:66:java.lang.String getServerName() -> getServerName
    71:72:void setServerName(java.lang.String) -> setServerName
    76:76:int getID() -> getID
    81:82:void setID(int) -> setID
    86:87:void setProcessName(java.lang.String) -> setProcessName
    91:91:int getPort() -> getPort
    96:96:java.util.logging.Logger getLogger() -> getLogger
    101:101:be.alexandre01.dnplugin.api.request.RequestManager getRequestManager() -> getRequestManager
    106:106:be.alexandre01.dnplugin.api.request.channels.DNChannelManager getChannelManager() -> getChannelManager
    112:112:void setRequestManager(be.alexandre01.dnplugin.api.request.RequestManager) -> setRequestManager
    116:120:void setClientHandler(be.alexandre01.dnplugin.api.connection.IClientHandler) -> setClientHandler
    124:129:void callServerAttachedEvent() -> callServerAttachedEvent
    134:140:void autoRefreshPlayers() -> autoRefreshPlayers
    143:149:void autoRefreshPlayers(boolean) -> autoRefreshPlayers
    153:159:void autoRefreshPlayers(boolean,long) -> autoRefreshPlayers
    163:167:void sendPlayerTo(org.bukkit.entity.Player,java.lang.String) -> sendPlayerTo
    171:172:void sendPlayerTo(org.bukkit.entity.Player,be.alexandre01.dnplugin.api.objects.server.DNServer) -> sendPlayerTo
    177:177:boolean hasAlreadyPlayerRefreshed() -> hasAlreadyPlayerRefreshed
    182:182:be.alexandre01.dnplugin.api.objects.server.DNServer getCurrentServer() -> getCurrentServer
    187:188:void shutdownProcess() -> shutdownProcess
    35:35:be.alexandre01.dnplugin.api.objects.player.DNPlayerManager getDnPlayerManager() -> getDnPlayerManager
    25:25:be.alexandre01.dnplugin.api.universal.player.UniversalPlayer getUniversalPlayer(java.lang.String) -> getUniversalPlayer
    127:128:void lambda$callServerAttachedEvent$0(be.alexandre01.dnplugin.plugins.spigot.api.events.server.ServerAttachedEvent) -> a
be.alexandre01.dnplugin.plugins.spigot.api.DNSpigotAPI -> be.alexandre01.dnplugin.plugins.spigot.api.DNSpigotAPI:
    15:15:be.alexandre01.dnplugin.plugins.spigot.api.DNSpigotAPI getInstance() -> getInstance
    19:19:be.alexandre01.dnplugin.api.NetworkBaseAPI getCommon() -> getCommon
    be.alexandre01.dnplugin.api.connection.IClientHandler getClientHandler() -> getClientHandler
    java.lang.String getInfo() -> getInfo
    java.lang.String getProcessName() -> getProcessName
    java.lang.String getServerName() -> getServerName
    void setServerName(java.lang.String) -> setServerName
    int getID() -> getID
    void setID(int) -> setID
    void setProcessName(java.lang.String) -> setProcessName
    int getPort() -> getPort
    java.util.logging.Logger getLogger() -> getLogger
    be.alexandre01.dnplugin.api.request.RequestManager getRequestManager() -> getRequestManager
    be.alexandre01.dnplugin.api.request.channels.DNChannelManager getChannelManager() -> getChannelManager
    void setRequestManager(be.alexandre01.dnplugin.api.request.RequestManager) -> setRequestManager
    void setClientHandler(be.alexandre01.dnplugin.api.connection.IClientHandler) -> setClientHandler
    void callServerAttachedEvent() -> callServerAttachedEvent
    void autoRefreshPlayers() -> autoRefreshPlayers
    void autoRefreshPlayers(boolean) -> autoRefreshPlayers
    void autoRefreshPlayers(boolean,long) -> autoRefreshPlayers
    void sendPlayerTo(org.bukkit.entity.Player,java.lang.String) -> sendPlayerTo
    void sendPlayerTo(org.bukkit.entity.Player,be.alexandre01.dnplugin.api.objects.server.DNServer) -> sendPlayerTo
    boolean hasAlreadyPlayerRefreshed() -> hasAlreadyPlayerRefreshed
    be.alexandre01.dnplugin.api.objects.server.DNServer getCurrentServer() -> getCurrentServer
    void shutdownProcess() -> shutdownProcess
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    be.alexandre01.dnplugin.api.objects.player.DNPlayerManager getDnPlayerManager() -> getDnPlayerManager
be.alexandre01.dnplugin.plugins.spigot.api.events.player.NetworkDisconnectEvent -> be.alexandre01.dnplugin.plugins.spigot.api.events.player.NetworkDisconnectEvent:
    org.bukkit.event.HandlerList HANDLERS -> a
    be.alexandre01.dnplugin.api.objects.server.DNServer server -> b
    be.alexandre01.dnplugin.api.objects.player.DNPlayer player -> c
    16:16:org.bukkit.event.HandlerList getHandlers() -> getHandlers
    20:20:org.bukkit.event.HandlerList getHandlerList() -> getHandlerList
    23:26:void <init>(be.alexandre01.dnplugin.api.objects.server.DNServer,be.alexandre01.dnplugin.api.objects.player.DNPlayer) -> <init>
    11:11:be.alexandre01.dnplugin.api.objects.server.DNServer getServer() -> getServer
    12:12:be.alexandre01.dnplugin.api.objects.player.DNPlayer getPlayer() -> getPlayer
    10:10:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.spigot.api.events.player.NetworkJoinEvent -> be.alexandre01.dnplugin.plugins.spigot.api.events.player.NetworkJoinEvent:
    org.bukkit.event.HandlerList HANDLERS -> a
    be.alexandre01.dnplugin.api.objects.server.DNServer server -> b
    be.alexandre01.dnplugin.api.objects.player.DNPlayer player -> c
    16:16:org.bukkit.event.HandlerList getHandlers() -> getHandlers
    20:20:org.bukkit.event.HandlerList getHandlerList() -> getHandlerList
    23:26:void <init>(be.alexandre01.dnplugin.api.objects.server.DNServer,be.alexandre01.dnplugin.api.objects.player.DNPlayer) -> <init>
    11:11:be.alexandre01.dnplugin.api.objects.server.DNServer getServer() -> getServer
    12:12:be.alexandre01.dnplugin.api.objects.player.DNPlayer getPlayer() -> getPlayer
    10:10:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.spigot.api.events.player.NetworkSwitchServerEvent -> be.alexandre01.dnplugin.plugins.spigot.api.events.player.NetworkSwitchServerEvent:
    org.bukkit.event.HandlerList HANDLERS -> a
    be.alexandre01.dnplugin.api.objects.server.DNServer server -> b
    be.alexandre01.dnplugin.api.objects.player.DNPlayer player -> c
    16:16:org.bukkit.event.HandlerList getHandlers() -> getHandlers
    20:20:org.bukkit.event.HandlerList getHandlerList() -> getHandlerList
    23:26:void <init>(be.alexandre01.dnplugin.api.objects.server.DNServer,be.alexandre01.dnplugin.api.objects.player.DNPlayer) -> <init>
    11:11:be.alexandre01.dnplugin.api.objects.server.DNServer getServer() -> getServer
    12:12:be.alexandre01.dnplugin.api.objects.player.DNPlayer getPlayer() -> getPlayer
    10:10:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.spigot.api.events.server.ServerAttachedEvent -> be.alexandre01.dnplugin.plugins.spigot.api.events.server.ServerAttachedEvent:
    org.bukkit.event.HandlerList HANDLERS -> a
    6:6:void <init>() -> <init>
    10:10:org.bukkit.event.HandlerList getHandlers() -> getHandlers
    14:14:org.bukkit.event.HandlerList getHandlerList() -> getHandlerList
    7:7:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.spigot.api.events.server.ServerStartedEvent -> be.alexandre01.dnplugin.plugins.spigot.api.events.server.ServerStartedEvent:
    org.bukkit.event.HandlerList HANDLERS -> a
    be.alexandre01.dnplugin.api.objects.server.DNServer server -> b
    14:14:org.bukkit.event.HandlerList getHandlers() -> getHandlers
    18:18:org.bukkit.event.HandlerList getHandlerList() -> getHandlerList
    21:23:void <init>(be.alexandre01.dnplugin.api.objects.server.DNServer) -> <init>
    10:10:be.alexandre01.dnplugin.api.objects.server.DNServer getServer() -> getServer
    9:9:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.spigot.api.events.server.ServerStoppedEvent -> be.alexandre01.dnplugin.plugins.spigot.api.events.server.ServerStoppedEvent:
    org.bukkit.event.HandlerList HANDLERS -> a
    be.alexandre01.dnplugin.api.objects.server.DNServer server -> b
    14:14:org.bukkit.event.HandlerList getHandlers() -> getHandlers
    18:18:org.bukkit.event.HandlerList getHandlerList() -> getHandlerList
    21:23:void <init>(be.alexandre01.dnplugin.api.objects.server.DNServer) -> <init>
    10:10:be.alexandre01.dnplugin.api.objects.server.DNServer getServer() -> getServer
    9:9:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.spigot.command.NetworkCommand -> be.alexandre01.dnplugin.plugins.spigot.a.a:
    28:29:void <init>(java.lang.String) -> <init>
    32:215:boolean execute(org.bukkit.command.CommandSender,java.lang.String,java.lang.String[]) -> a
    220:238:java.util.List tabComplete(org.bukkit.command.CommandSender,java.lang.String,java.lang.String[]) -> b
    242:251:void sendHelp(org.bukkit.command.CommandSender) -> a
    124:125:void lambda$execute$2(be.alexandre01.dnplugin.api.request.channels.ChannelPacket) -> a
    105:106:void lambda$execute$1(be.alexandre01.dnplugin.api.request.channels.ChannelPacket) -> b
    76:77:void lambda$execute$0(be.alexandre01.dnplugin.api.request.channels.ChannelPacket) -> c
be.alexandre01.dnplugin.plugins.spigot.command.NetworkCommand$1 -> be.alexandre01.dnplugin.plugins.spigot.a.b:
    int[] $SwitchMap$be$alexandre01$dnplugin$plugins$spigot$command$NetworkCommand$SubCommand -> a
    45:45:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.spigot.command.NetworkCommand$SubCommand -> be.alexandre01.dnplugin.plugins.spigot.a.a$a:
    be.alexandre01.dnplugin.plugins.spigot.command.NetworkCommand$SubCommand GUI -> GUI
    be.alexandre01.dnplugin.plugins.spigot.command.NetworkCommand$SubCommand GETSERVER -> GETSERVER
    be.alexandre01.dnplugin.plugins.spigot.command.NetworkCommand$SubCommand GETSERVERS -> GETSERVERS
    be.alexandre01.dnplugin.plugins.spigot.command.NetworkCommand$SubCommand START -> START
    be.alexandre01.dnplugin.plugins.spigot.command.NetworkCommand$SubCommand STOP -> STOP
    be.alexandre01.dnplugin.plugins.spigot.command.NetworkCommand$SubCommand CMD -> CMD
    be.alexandre01.dnplugin.plugins.spigot.command.NetworkCommand$SubCommand SEND -> SEND
    be.alexandre01.dnplugin.plugins.spigot.command.NetworkCommand$SubCommand DATA -> DATA
    be.alexandre01.dnplugin.plugins.spigot.command.NetworkCommand$SubCommand[] $VALUES -> $VALUES
    24:24:be.alexandre01.dnplugin.plugins.spigot.command.NetworkCommand$SubCommand[] values() -> values
    24:24:be.alexandre01.dnplugin.plugins.spigot.command.NetworkCommand$SubCommand valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:25:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.spigot.command.StatsCommand -> be.alexandre01.dnplugin.plugins.spigot.a.c:
    10:11:void <init>(java.lang.String) -> <init>
    15:41:boolean execute(org.bukkit.command.CommandSender,java.lang.String,java.lang.String[]) -> a
be.alexandre01.dnplugin.plugins.spigot.communication.SpigotRequestResponse -> be.alexandre01.dnplugin.plugins.spigot.b.a:
    be.alexandre01.dnplugin.api.NetworkBaseAPI networkBaseAPI -> a
    be.alexandre01.dnplugin.api.objects.player.DNPlayerManager dnPlayerManager -> b
    org.bukkit.plugin.PluginManager pluginManager -> c
    java.util.HashMap remoteServices -> d
    31:207:void <init>() -> <init>
    200:205:void lambda$new$10(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> a
    187:197:void lambda$new$9(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> b
    193:195:void lambda$null$8(be.alexandre01.dnplugin.api.objects.player.DNPlayer) -> a
    113:185:void lambda$new$7(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> c
    179:180:void lambda$null$6(be.alexandre01.dnplugin.plugins.spigot.api.events.player.NetworkSwitchServerEvent) -> a
    170:171:void lambda$null$5(be.alexandre01.dnplugin.plugins.spigot.api.events.player.NetworkJoinEvent) -> a
    99:110:void lambda$new$4(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> d
    48:96:void lambda$new$3(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> e
    44:46:void lambda$new$2(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> f
    38:41:void lambda$new$1(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> g
    39:40:void lambda$null$0(be.alexandre01.dnplugin.utils.messages.Message) -> a
be.alexandre01.dnplugin.plugins.spigot.communication.generated.SpigotGeneratedRequest -> be.alexandre01.dnplugin.plugins.spigot.b.a.a:
    7:17:void <init>() -> <init>
    9:15:be.alexandre01.dnplugin.utils.messages.Message lambda$new$0(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> a
be.alexandre01.dnplugin.plugins.spigot.communication.objects.BaseService -> be.alexandre01.dnplugin.plugins.spigot.b.b.a:
    16:17:void <init>(java.lang.String,be.alexandre01.dnplugin.utils.Mods,boolean,be.alexandre01.dnplugin.api.objects.RemoteBundle) -> <init>
    21:22:void start() -> start
    26:38:void createServer(java.lang.String) -> a
    40:54:void createServer(java.lang.String,int) -> a
    57:61:void removeServer(java.lang.String) -> b
    64:75:void removeServer(int) -> a
    72:73:void lambda$removeServer$2(be.alexandre01.dnplugin.plugins.spigot.api.events.server.ServerStoppedEvent) -> a
    47:52:void lambda$createServer$1(be.alexandre01.dnplugin.api.objects.server.DNServer) -> a
    49:50:void lambda$null$0(be.alexandre01.dnplugin.plugins.spigot.api.events.server.ServerStartedEvent) -> a
be.alexandre01.dnplugin.plugins.spigot.communication.objects.SpigotPlayer -> be.alexandre01.dnplugin.plugins.spigot.b.b.b:
    org.bukkit.entity.Player player -> g
    21:23:void setup(be.alexandre01.dnplugin.api.objects.server.DNServer,be.alexandre01.dnplugin.api.objects.player.DNPlayer) -> setup
    25:32:void <init>() -> <init>
    36:44:void updateServer(be.alexandre01.dnplugin.api.objects.server.DNServer) -> a
    48:53:void sendMessage(java.lang.String) -> sendMessage
    57:57:java.lang.String getName() -> getName
    62:62:java.util.UUID getUniqueId() -> getUniqueId
    67:68:void kickPlayer(java.lang.String) -> kickPlayer
    72:73:void sendTitle(java.lang.String,java.lang.String,int,int,int) -> sendTitle
    77:81:void sendTo(java.lang.String) -> sendTo
    84:85:void sendTo(be.alexandre01.dnplugin.api.objects.server.DNServer) -> sendTo
    89:97:java.lang.Object castTo(java.lang.Class) -> castTo
be.alexandre01.dnplugin.plugins.spigot.communication.objects.SpigotPlayer$1 -> be.alexandre01.dnplugin.plugins.spigot.b.b.c:
    be.alexandre01.dnplugin.plugins.spigot.communication.objects.SpigotPlayer this$0 -> a
    26:26:void <init>(be.alexandre01.dnplugin.plugins.spigot.communication.objects.SpigotPlayer) -> <init>
    29:30:void onPlayerUpdateServer(be.alexandre01.dnplugin.api.universal.player.UniversalPlayer) -> onPlayerUpdateServer
be.alexandre01.dnplugin.plugins.spigot.components.ColorID -> be.alexandre01.dnplugin.plugins.spigot.c.a:
    be.alexandre01.dnplugin.plugins.spigot.components.ColorID BLACK -> BLACK
    be.alexandre01.dnplugin.plugins.spigot.components.ColorID BLUE -> BLUE
    be.alexandre01.dnplugin.plugins.spigot.components.ColorID BROWN -> BROWN
    be.alexandre01.dnplugin.plugins.spigot.components.ColorID CYAN -> CYAN
    be.alexandre01.dnplugin.plugins.spigot.components.ColorID GRAY -> GRAY
    be.alexandre01.dnplugin.plugins.spigot.components.ColorID GREEN -> GREEN
    be.alexandre01.dnplugin.plugins.spigot.components.ColorID LIGHT_BLUE -> LIGHT_BLUE
    be.alexandre01.dnplugin.plugins.spigot.components.ColorID LIGHT_GRAY -> LIGHT_GRAY
    be.alexandre01.dnplugin.plugins.spigot.components.ColorID LIME -> LIME
    be.alexandre01.dnplugin.plugins.spigot.components.ColorID MAGENTA -> MAGENTA
    be.alexandre01.dnplugin.plugins.spigot.components.ColorID ORANGE -> ORANGE
    be.alexandre01.dnplugin.plugins.spigot.components.ColorID PINK -> PINK
    be.alexandre01.dnplugin.plugins.spigot.components.ColorID PURPLE -> PURPLE
    be.alexandre01.dnplugin.plugins.spigot.components.ColorID RED -> RED
    be.alexandre01.dnplugin.plugins.spigot.components.ColorID WHITE -> WHITE
    be.alexandre01.dnplugin.plugins.spigot.components.ColorID YELLOW -> YELLOW
    int id -> id
    be.alexandre01.dnplugin.plugins.spigot.components.ColorID[] $VALUES -> $VALUES
    3:3:be.alexandre01.dnplugin.plugins.spigot.components.ColorID[] values() -> values
    3:3:be.alexandre01.dnplugin.plugins.spigot.components.ColorID valueOf(java.lang.String) -> valueOf
    23:25:void <init>(java.lang.String,int,int) -> <init>
    28:28:int getID() -> a
    3:19:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.spigot.components.GUIAction -> be.alexandre01.dnplugin.plugins.spigot.c.b:
    be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$Action action -> a
    be.alexandre01.dnplugin.plugins.spigot.components.GUIItem item -> b
    be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$CustomAction customAction -> c
    java.lang.Object[] objects -> d
    22:25:void <init>(be.alexandre01.dnplugin.plugins.spigot.components.GUIItem) -> <init>
    27:29:void <init>(be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$Action) -> <init>
    32:32:be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$Action getAction() -> a
    36:38:void setAction(be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$Action,java.lang.Object[]) -> a
    40:43:void setCustomAction(be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$CustomAction,java.lang.Object[]) -> a
    46:58:void exec(org.bukkit.entity.Player) -> a
be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$Action -> be.alexandre01.dnplugin.plugins.spigot.c.b$a:
    be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$Action OPEN -> OPEN
    be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$Action CLOSE -> CLOSE
    be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$Action NEXT -> NEXT
    be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$Action PREVIOUS -> PREVIOUS
    be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$Action SELECT -> SELECT
    be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$Action EXIT -> EXIT
    be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$Action BACK -> BACK
    be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$Action CUSTOM -> CUSTOM
    be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$Action NULL -> NULL
    be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$Action[] $VALUES -> $VALUES
    6:6:be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$Action[] values() -> values
    6:6:be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$Action valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    6:15:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.spigot.components.GUIAction$CustomAction -> be.alexandre01.dnplugin.plugins.spigot.c.b$b:
    void onClick(org.bukkit.entity.Player,java.lang.Object[]) -> a
be.alexandre01.dnplugin.plugins.spigot.components.GUIItem -> be.alexandre01.dnplugin.plugins.spigot.c.c:
    be.alexandre01.dnplugin.plugins.spigot.components.GUIItemStack itemStack -> a
    be.alexandre01.dnplugin.plugins.spigot.components.NetworkGUI gui -> b
    int slot -> c
    be.alexandre01.dnplugin.plugins.spigot.components.GUIAction guiAction -> d
    13:16:void <init>(org.bukkit.inventory.ItemStack,int) -> <init>
    17:20:void <init>(be.alexandre01.dnplugin.plugins.spigot.components.GUIItemStack,int) -> <init>
    23:23:int getSlot() -> a
    8:8:be.alexandre01.dnplugin.plugins.spigot.components.GUIItemStack getItemStack() -> b
    9:9:be.alexandre01.dnplugin.plugins.spigot.components.NetworkGUI getGui() -> c
    11:11:be.alexandre01.dnplugin.plugins.spigot.components.GUIAction getGuiAction() -> d
    6:6:void setItemStack(be.alexandre01.dnplugin.plugins.spigot.components.GUIItemStack) -> a
    6:6:void setGui(be.alexandre01.dnplugin.plugins.spigot.components.NetworkGUI) -> a
    6:6:void setSlot(int) -> a
    6:6:void setGuiAction(be.alexandre01.dnplugin.plugins.spigot.components.GUIAction) -> a
    6:6:boolean equals(java.lang.Object) -> equals
    6:6:boolean canEqual(java.lang.Object) -> a
    6:6:int hashCode() -> hashCode
    6:6:java.lang.String toString() -> toString
be.alexandre01.dnplugin.plugins.spigot.components.GUIItemStack -> be.alexandre01.dnplugin.plugins.spigot.c.d:
    org.bukkit.inventory.ItemStack itemStack -> a
    org.bukkit.inventory.meta.ItemMeta itemMeta -> b
    13:15:void <init>(org.bukkit.Material) -> <init>
    18:20:void <init>(org.bukkit.inventory.ItemStack) -> <init>
    23:24:void setAmount(int) -> a
    28:29:void setName(java.lang.String) -> a
    33:34:void setLore(java.lang.String[]) -> a
    38:39:void setColor(be.alexandre01.dnplugin.plugins.spigot.components.ColorID) -> a
    43:44:org.bukkit.inventory.ItemStack build() -> a
be.alexandre01.dnplugin.plugins.spigot.components.GUIManager -> be.alexandre01.dnplugin.plugins.spigot.c.e:
    be.alexandre01.dnplugin.plugins.spigot.components.NetworkGUI networkGUI -> a
    5:5:void <init>() -> <init>
    9:10:void setNetworkGUI(be.alexandre01.dnplugin.plugins.spigot.components.NetworkGUI) -> a
    13:13:be.alexandre01.dnplugin.plugins.spigot.components.NetworkGUI getNetworkGUI() -> a
    17:19:void openNetworkGUI(org.bukkit.entity.Player) -> a
be.alexandre01.dnplugin.plugins.spigot.components.GUIManager$InventoryClickListener -> be.alexandre01.dnplugin.plugins.spigot.c.e$a:
    void onClick(org.bukkit.entity.Player,int,be.alexandre01.dnplugin.plugins.spigot.components.NetworkGUI) -> a
be.alexandre01.dnplugin.plugins.spigot.components.GUIManager$InventoryInitializer -> be.alexandre01.dnplugin.plugins.spigot.c.e$b:
    void init(be.alexandre01.dnplugin.plugins.spigot.components.NetworkGUI) -> a
be.alexandre01.dnplugin.plugins.spigot.components.GUIOverlay -> be.alexandre01.dnplugin.plugins.spigot.c.f:
    be.alexandre01.dnplugin.plugins.spigot.components.NetworkGUI networkGUI -> a
    org.bukkit.inventory.Inventory inventory -> b
    java.util.HashMap itemStacks -> c
    boolean enabled -> d
    be.alexandre01.dnplugin.plugins.spigot.components.GUIOverlay$Type type -> e
    int startSlot -> f
    int minSlot -> g
    int maxSlot -> h
    boolean isSetup -> i
    int[] free -> j
    java.util.ArrayList networkGUIs -> k
    java.util.HashMap places -> l
    java.util.ArrayList slots -> m
    java.util.HashMap converterSlot -> n
    27:27:be.alexandre01.dnplugin.plugins.spigot.components.GUIOverlay EMPTY(be.alexandre01.dnplugin.plugins.spigot.components.NetworkGUI) -> a
    15:32:void <init>(be.alexandre01.dnplugin.plugins.spigot.components.NetworkGUI) -> <init>
    35:38:void regenerateSlot() -> b
    40:52:void setup(boolean) -> a
    54:61:void update() -> a
    64:72:void insertItem(be.alexandre01.dnplugin.plugins.spigot.components.GUIItem,int) -> a
    75:85:be.alexandre01.dnplugin.plugins.spigot.components.GUIItem insertItem(org.bukkit.inventory.ItemStack,int) -> a
    88:98:be.alexandre01.dnplugin.plugins.spigot.components.GUIItem insertItem(be.alexandre01.dnplugin.plugins.spigot.components.GUIItemStack,int) -> a
be.alexandre01.dnplugin.plugins.spigot.components.GUIOverlay$Type -> be.alexandre01.dnplugin.plugins.spigot.c.f$a:
    be.alexandre01.dnplugin.plugins.spigot.components.GUIOverlay$Type SQUARE -> SQUARE
    be.alexandre01.dnplugin.plugins.spigot.components.GUIOverlay$Type FREE -> FREE
    be.alexandre01.dnplugin.plugins.spigot.components.GUIOverlay$Type[] $VALUES -> $VALUES
    100:100:be.alexandre01.dnplugin.plugins.spigot.components.GUIOverlay$Type[] values() -> values
    100:100:be.alexandre01.dnplugin.plugins.spigot.components.GUIOverlay$Type valueOf(java.lang.String) -> valueOf
    100:100:void <init>(java.lang.String,int) -> <init>
    100:102:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.spigot.components.GUIPlayerData -> be.alexandre01.dnplugin.plugins.spigot.c.g:
    org.bukkit.entity.Player player -> a
    be.alexandre01.dnplugin.plugins.spigot.components.NetworkGUI gui -> b
    be.alexandre01.dnplugin.plugins.spigot.components.NetworkGUI lastGUI -> c
    org.bukkit.inventory.Inventory inventory -> d
    int page -> e
    16:19:void <init>(org.bukkit.entity.Player,be.alexandre01.dnplugin.plugins.spigot.components.NetworkGUI) -> <init>
    22:25:void copyData() -> a
    29:29:org.bukkit.entity.Player getPlayer() -> b
    33:33:be.alexandre01.dnplugin.plugins.spigot.components.NetworkGUI getGui() -> c
be.alexandre01.dnplugin.plugins.spigot.components.NetworkGUI -> be.alexandre01.dnplugin.plugins.spigot.c.h:
    org.bukkit.inventory.Inventory inventory -> a
    java.util.HashMap pages -> b
    boolean hasMultiplePages -> c
    java.lang.String title -> d
    be.alexandre01.dnplugin.plugins.spigot.components.GUIOverlay overlay -> e
    be.alexandre01.dnplugin.plugins.spigot.components.GUIManager$InventoryInitializer inventoryInitializer -> f
    java.util.HashMap subGUIs -> g
    18:29:void <init>(java.lang.String) -> <init>
    32:36:java.util.List getRecursiveSubGUIs(java.util.List) -> a
    41:42:void setInitializer(be.alexandre01.dnplugin.plugins.spigot.components.GUIManager$InventoryInitializer) -> a
    44:46:void setInitialPage(be.alexandre01.dnplugin.plugins.spigot.components.NetworkGUI) -> a
    48:49:void open(org.bukkit.entity.Player) -> a
    51:78:org.bukkit.inventory.ItemStack generateItemFromServers(be.alexandre01.dnplugin.api.objects.RemoteService) -> a
    17:17:org.bukkit.inventory.Inventory getInventory() -> a
    21:21:void setOverlay(be.alexandre01.dnplugin.plugins.spigot.components.GUIOverlay) -> a
    21:21:be.alexandre01.dnplugin.plugins.spigot.components.GUIOverlay getOverlay() -> b
    23:23:java.util.HashMap getSubGUIs() -> c
be.alexandre01.dnplugin.plugins.spigot.components.gui.MainMenu -> be.alexandre01.dnplugin.plugins.spigot.c.a.a:
    7:8:void <init>(java.lang.String) -> <init>
be.alexandre01.dnplugin.plugins.spigot.components.items.ServerItem -> be.alexandre01.dnplugin.plugins.spigot.c.b.a:
    9:11:void <init>(int) -> <init>
be.alexandre01.dnplugin.plugins.spigot.components.overlays.DreamOverlay -> be.alexandre01.dnplugin.plugins.spigot.c.c.a:
    11:15:void <init>(be.alexandre01.dnplugin.plugins.spigot.components.NetworkGUI) -> <init>
be.alexandre01.dnplugin.plugins.spigot.listeners.ReloadListener -> be.alexandre01.dnplugin.plugins.spigot.d.a:
    9:9:void <init>() -> <init>
    12:24:void onReload(org.bukkit.event.player.PlayerCommandPreprocessEvent) -> a
be.alexandre01.dnplugin.plugins.spigot.listeners.StopListener -> be.alexandre01.dnplugin.plugins.spigot.d.b:
    13:13:void <init>() -> <init>
    16:19:void onConsole(org.bukkit.event.server.ServerCommandEvent) -> a
    23:28:void onChat(org.bukkit.event.player.PlayerCommandPreprocessEvent) -> a
    31:48:boolean doAction(java.lang.String) -> a
be.alexandre01.dnplugin.plugins.spigot.listeners.TestChannelListener -> be.alexandre01.dnplugin.plugins.spigot.d.c:
    int serverOnline -> a
    int playerOnline -> b
    be.alexandre01.dnplugin.api.request.channels.DNChannel dnChannel -> c
    24:26:void <init>() -> <init>
    31:126:void onAttached(be.alexandre01.dnplugin.plugins.spigot.api.events.server.ServerAttachedEvent) -> a
    130:132:void onPlayerJoin(be.alexandre01.dnplugin.plugins.spigot.api.events.player.NetworkJoinEvent) -> a
    135:137:void onPlayerQuit(be.alexandre01.dnplugin.plugins.spigot.api.events.player.NetworkDisconnectEvent) -> a
    140:142:void onPlayerSwitch(be.alexandre01.dnplugin.plugins.spigot.api.events.player.NetworkSwitchServerEvent) -> a
    147:150:void onServerStart(be.alexandre01.dnplugin.plugins.spigot.api.events.server.ServerStartedEvent) -> a
    155:158:void onServerStop(be.alexandre01.dnplugin.plugins.spigot.api.events.server.ServerStoppedEvent) -> a
be.alexandre01.dnplugin.plugins.spigot.listeners.TestChannelListener$1 -> be.alexandre01.dnplugin.plugins.spigot.d.d:
    be.alexandre01.dnplugin.plugins.spigot.listeners.TestChannelListener this$0 -> a
    41:41:void <init>(be.alexandre01.dnplugin.plugins.spigot.listeners.TestChannelListener) -> <init>
    44:46:void onUpdateData(java.lang.Integer) -> a
    41:41:void onUpdateData(java.lang.Object) -> onUpdateData
be.alexandre01.dnplugin.plugins.spigot.listeners.TestChannelListener$2 -> be.alexandre01.dnplugin.plugins.spigot.d.e:
    be.alexandre01.dnplugin.plugins.spigot.listeners.TestChannelListener this$0 -> a
    48:48:void <init>(be.alexandre01.dnplugin.plugins.spigot.listeners.TestChannelListener) -> <init>
    51:53:void onUpdateData(java.lang.Integer) -> a
    48:48:void onUpdateData(java.lang.Object) -> onUpdateData
be.alexandre01.dnplugin.plugins.spigot.listeners.TestChannelListener$3 -> be.alexandre01.dnplugin.plugins.spigot.d.f:
    be.alexandre01.dnplugin.plugins.spigot.listeners.TestChannelListener this$0 -> a
    59:59:void <init>(be.alexandre01.dnplugin.plugins.spigot.listeners.TestChannelListener) -> <init>
    62:77:void onNewDataReceived(be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap) -> onNewDataReceived
be.alexandre01.dnplugin.plugins.spigot.listeners.TestChannelListener$4 -> be.alexandre01.dnplugin.plugins.spigot.d.g:
    be.alexandre01.dnplugin.plugins.spigot.listeners.TestChannelListener this$0 -> a
    81:81:void <init>(be.alexandre01.dnplugin.plugins.spigot.listeners.TestChannelListener) -> <init>
    84:101:void received(be.alexandre01.dnplugin.api.request.channels.ChannelPacket) -> received
be.alexandre01.dnplugin.plugins.spigot.listeners.TestChannelListener$5 -> be.alexandre01.dnplugin.plugins.spigot.d.h:
    be.alexandre01.dnplugin.plugins.spigot.listeners.TestChannelListener this$0 -> a
    116:116:void <init>(be.alexandre01.dnplugin.plugins.spigot.listeners.TestChannelListener) -> <init>
    119:120:void onComplete(java.lang.String) -> a
    116:116:void onComplete(java.lang.Object) -> onComplete
be.alexandre01.dnplugin.plugins.spigot.utils.SpigotText -> be.alexandre01.dnplugin.plugins.spigot.e.a:
    org.bukkit.configuration.file.FileConfiguration configuration -> b
    java.io.File file -> d
    boolean backup -> e
    boolean $assertionsDisabled -> a
    20:30:void <init>(boolean) -> <init>
    34:34:java.util.Set getKeys(java.lang.String,boolean) -> a
    39:39:boolean hasSubSection(java.lang.String) -> a
    44:44:java.lang.String getString(java.lang.String) -> b
    49:78:void reloadConfig() -> b
    83:87:void saveFile() -> c
    91:92:void setString(java.lang.String,java.lang.String) -> a
    96:96:java.io.File getFile() -> d
    24:29:void lambda$new$0(java.lang.String,java.lang.Object[]) -> c
    14:14:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.velocity.DNVelocity -> be.alexandre01.dnplugin.plugins.a.a:
    be.alexandre01.dnplugin.plugins.velocity.DNVelocity instance -> b
    be.alexandre01.dnplugin.plugins.velocity.ImplAPI api -> c
    be.alexandre01.dnplugin.api.connection.IClientHandler clientHandler -> d
    be.alexandre01.dnplugin.api.request.channels.DNChannelManager dnChannelManager -> e
    be.alexandre01.dnplugin.api.connection.IBasicClient basicClient -> f
    java.lang.String version -> g
    com.velocitypowered.api.proxy.server.ServerInfo coreTemp -> h
    java.lang.String type -> i
    int port -> j
    be.alexandre01.dnplugin.api.request.RequestManager requestManager -> k
    java.io.File file -> a
    be.alexandre01.dnplugin.utils.files.YAMLManager yamlManager -> l
    be.alexandre01.dnplugin.utils.files.network.NetworkYAML configuration -> m
    be.alexandre01.dnplugin.utils.files.messages.MessagesManager messagesManager -> n
    be.alexandre01.dnplugin.plugins.velocity.PlayerTabList playerTabList -> o
    com.velocitypowered.api.proxy.ProxyServer server -> p
    java.util.logging.Logger logger -> q
    be.alexandre01.dnplugin.shaded.bstats.velocity.Metrics$Factory metricsFactory -> r
    be.alexandre01.dnplugin.plugins.velocity.objects.PlayerManagement playerManagement -> s
    74:131:void <init>(com.velocitypowered.api.proxy.ProxyServer,java.util.logging.Logger,java.nio.file.Path,be.alexandre01.dnplugin.shaded.bstats.velocity.Metrics$Factory) -> <init>
    139:158:void onProxyInitialization(com.velocitypowered.api.event.proxy.ProxyInitializeEvent) -> a
    163:164:void onProxyShutDown(com.velocitypowered.api.event.proxy.ProxyShutdownEvent) -> a
    167:174:void loadConfig(java.nio.file.Path) -> a
    177:178:void saveConfig() -> a
    181:200:java.lang.String getMessage(java.lang.String,com.velocitypowered.api.proxy.Player) -> a
    45:45:be.alexandre01.dnplugin.api.connection.IClientHandler getClientHandler() -> b
    46:46:be.alexandre01.dnplugin.api.request.channels.DNChannelManager getDnChannelManager() -> c
    47:47:be.alexandre01.dnplugin.api.connection.IBasicClient getBasicClient() -> d
    48:48:java.lang.String getVersion() -> e
    49:49:com.velocitypowered.api.proxy.server.ServerInfo getCoreTemp() -> f
    50:50:java.lang.String getType() -> g
    51:51:int getPort() -> h
    52:52:be.alexandre01.dnplugin.api.request.RequestManager getRequestManager() -> i
    53:53:java.io.File getFile() -> j
    72:72:be.alexandre01.dnplugin.shaded.bstats.velocity.Metrics$Factory getMetricsFactory() -> k
    40:40:void setClientHandler(be.alexandre01.dnplugin.api.connection.IClientHandler) -> a
    40:40:void setDnChannelManager(be.alexandre01.dnplugin.api.request.channels.DNChannelManager) -> a
    40:40:void setBasicClient(be.alexandre01.dnplugin.api.connection.IBasicClient) -> a
    40:40:void setVersion(java.lang.String) -> a
    40:40:void setCoreTemp(com.velocitypowered.api.proxy.server.ServerInfo) -> a
    40:40:void setType(java.lang.String) -> b
    40:40:void setPort(int) -> a
    40:40:void setRequestManager(be.alexandre01.dnplugin.api.request.RequestManager) -> a
    40:40:void setFile(java.io.File) -> a
    40:40:void setYamlManager(be.alexandre01.dnplugin.utils.files.YAMLManager) -> a
    40:40:void setConfiguration(be.alexandre01.dnplugin.utils.files.network.NetworkYAML) -> a
    40:40:void setMessagesManager(be.alexandre01.dnplugin.utils.files.messages.MessagesManager) -> a
    40:40:void setPlayerTabList(be.alexandre01.dnplugin.plugins.velocity.PlayerTabList) -> a
    43:43:be.alexandre01.dnplugin.plugins.velocity.DNVelocity getInstance() -> l
    44:44:be.alexandre01.dnplugin.plugins.velocity.ImplAPI getApi() -> m
    54:54:be.alexandre01.dnplugin.utils.files.YAMLManager getYamlManager() -> n
    55:55:be.alexandre01.dnplugin.utils.files.network.NetworkYAML getConfiguration() -> o
    56:56:be.alexandre01.dnplugin.utils.files.messages.MessagesManager getMessagesManager() -> p
    57:57:be.alexandre01.dnplugin.plugins.velocity.PlayerTabList getPlayerTabList() -> q
    70:70:com.velocitypowered.api.proxy.ProxyServer getServer() -> r
    71:71:java.util.logging.Logger getLogger() -> s
    74:74:be.alexandre01.dnplugin.plugins.velocity.objects.PlayerManagement getPlayerManagement() -> t
    140:141:void lambda$onProxyInitialization$0(com.velocitypowered.api.proxy.server.RegisteredServer) -> a
be.alexandre01.dnplugin.plugins.velocity.ImplAPI -> be.alexandre01.dnplugin.plugins.a.b:
    be.alexandre01.dnplugin.api.connection.IClientHandler basicClientHandler -> a
    be.alexandre01.dnplugin.plugins.velocity.DNVelocity dnVelocity -> b
    be.alexandre01.dnplugin.plugins.velocity.api.DNVelocityServersManager dnVelocityServersManager -> c
    java.lang.String serverName -> d
    int id -> e
    java.lang.String processName -> f
    26:30:void <init>(be.alexandre01.dnplugin.plugins.velocity.DNVelocity) -> <init>
    33:33:be.alexandre01.dnplugin.api.connection.IClientHandler getClientHandler() -> getClientHandler
    38:38:java.lang.String getInfo() -> getInfo
    43:43:java.lang.String getProcessName() -> getProcessName
    48:48:be.alexandre01.dnplugin.api.universal.player.UniversalPlayer getUniversalPlayer(java.lang.String) -> getUniversalPlayer
    53:54:void setProcessName(java.lang.String) -> setProcessName
    58:58:java.lang.String getServerName() -> getServerName
    63:64:void setServerName(java.lang.String) -> setServerName
    68:68:int getID() -> getID
    73:74:void setID(int) -> setID
    78:78:int getPort() -> getPort
    83:83:java.util.logging.Logger getLogger() -> getLogger
    88:88:be.alexandre01.dnplugin.api.request.RequestManager getRequestManager() -> getRequestManager
    93:93:be.alexandre01.dnplugin.api.request.channels.DNChannelManager getChannelManager() -> getChannelManager
    98:99:void setRequestManager(be.alexandre01.dnplugin.api.request.RequestManager) -> setRequestManager
    106:106:void callServerAttachedEvent() -> callServerAttachedEvent
    110:114:void setClientHandler(be.alexandre01.dnplugin.api.connection.IClientHandler) -> setClientHandler
    118:119:void shutdownProcess() -> shutdownProcess
    21:21:be.alexandre01.dnplugin.plugins.velocity.api.DNVelocityServersManager getDnVelocityServersManager() -> a
be.alexandre01.dnplugin.plugins.velocity.PlayerTabList -> be.alexandre01.dnplugin.plugins.a.c:
    com.velocitypowered.api.proxy.ProxyServer server -> a
    be.alexandre01.dnplugin.plugins.velocity.DNVelocity dnVelocity -> b
    boolean end -> c
    java.util.HashMap actualHeader -> d
    java.util.HashMap actualFooter -> e
    int hIterationLeft -> f
    int fIterationLeft -> g
    int hNumber -> h
    int fNumber -> i
    25:28:void <init>(com.velocitypowered.api.proxy.ProxyServer) -> <init>
    31:107:void start() -> a
    110:113:java.lang.String stringFormat(java.lang.String,com.velocitypowered.api.proxy.Player) -> a
    117:121:void stop() -> b
    124:126:void restart() -> c
    45:104:void lambda$start$2(be.alexandre01.dnplugin.utils.files.tablist.TabListYAML,be.alexandre01.dnplugin.utils.files.tablist.TabList,be.alexandre01.dnplugin.utils.files.tablist.TabList) -> a
    84:85:void lambda$null$1(java.lang.StringBuilder,java.lang.Integer,java.lang.String) -> a
    79:80:void lambda$null$0(java.lang.StringBuilder,java.lang.Integer,java.lang.String) -> b
be.alexandre01.dnplugin.plugins.velocity.api.DNVelocityAPI -> be.alexandre01.dnplugin.plugins.a.a.a:
    12:12:be.alexandre01.dnplugin.plugins.velocity.api.DNVelocityAPI getInstance() -> b
    be.alexandre01.dnplugin.api.connection.IClientHandler getClientHandler() -> getClientHandler
    java.lang.String getInfo() -> getInfo
    java.lang.String getProcessName() -> getProcessName
    void setProcessName(java.lang.String) -> setProcessName
    java.lang.String getServerName() -> getServerName
    void setServerName(java.lang.String) -> setServerName
    int getID() -> getID
    void setID(int) -> setID
    int getPort() -> getPort
    java.util.logging.Logger getLogger() -> getLogger
    be.alexandre01.dnplugin.api.request.RequestManager getRequestManager() -> getRequestManager
    be.alexandre01.dnplugin.api.request.channels.DNChannelManager getChannelManager() -> getChannelManager
    void setRequestManager(be.alexandre01.dnplugin.api.request.RequestManager) -> setRequestManager
    void setClientHandler(be.alexandre01.dnplugin.api.connection.IClientHandler) -> setClientHandler
    void shutdownProcess() -> shutdownProcess
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    be.alexandre01.dnplugin.plugins.velocity.api.DNVelocityServersManager getDnVelocityServersManager() -> a
be.alexandre01.dnplugin.plugins.velocity.api.DNVelocityServersManager -> be.alexandre01.dnplugin.plugins.a.a.b:
    void registerServer(java.lang.String,java.lang.String,int,be.alexandre01.dnplugin.utils.Mods) -> a
    void unregisterServer(java.lang.String) -> a
    java.util.ArrayList getServers() -> a
be.alexandre01.dnplugin.plugins.velocity.communication.VelocityRequestResponse -> be.alexandre01.dnplugin.plugins.a.b.a:
    be.alexandre01.dnplugin.plugins.velocity.api.DNVelocityAPI dnVelocityAPI -> a
    16:56:void <init>() -> <init>
    60:61:boolean preReader(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> preReader
    48:54:void lambda$new$7(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> a
    44:45:void lambda$new$6(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> b
    40:41:void lambda$new$5(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> c
    37:38:void lambda$new$4(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> d
    34:35:void lambda$new$3(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> e
    30:31:void lambda$new$2(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> f
    25:27:void lambda$new$1(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> g
    20:22:void lambda$new$0(be.alexandre01.dnplugin.utils.messages.Message,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> h
be.alexandre01.dnplugin.plugins.velocity.communication.generated.VelocityGeneratedRequest -> be.alexandre01.dnplugin.plugins.a.b.a.a:
    7:23:void <init>() -> <init>
    20:21:be.alexandre01.dnplugin.utils.messages.Message lambda$new$1(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> a
    9:17:be.alexandre01.dnplugin.utils.messages.Message lambda$new$0(be.alexandre01.dnplugin.utils.messages.Message,java.lang.Object[]) -> b
be.alexandre01.dnplugin.plugins.velocity.communication.objects.ProxyService -> be.alexandre01.dnplugin.plugins.a.b.b.a:
    12:13:void <init>(java.lang.String,be.alexandre01.dnplugin.utils.Mods,boolean,be.alexandre01.dnplugin.api.objects.RemoteBundle) -> <init>
    17:18:void start() -> start
    22:34:void createServer(java.lang.String) -> a
    36:42:void createServer(java.lang.String,int) -> a
    45:49:void removeServer(java.lang.String) -> b
    52:57:void removeServer(int) -> a
be.alexandre01.dnplugin.plugins.velocity.components.commands.Maintenance -> be.alexandre01.dnplugin.plugins.a.c.a.a:
    be.alexandre01.dnplugin.plugins.velocity.DNVelocity dnVelocity -> a
    18:20:void <init>() -> <init>
    28:87:void execute(com.velocitypowered.api.command.SimpleCommand$Invocation) -> a
    90:97:void sendHelp(com.velocitypowered.api.command.CommandSource) -> a
    101:106:java.util.List suggest(com.velocitypowered.api.command.SimpleCommand$Invocation) -> b
    111:111:java.util.concurrent.CompletableFuture suggestAsync(com.velocitypowered.api.command.SimpleCommand$Invocation) -> c
    116:116:boolean hasPermission(com.velocitypowered.api.command.SimpleCommand$Invocation) -> d
    15:15:boolean hasPermission(com.velocitypowered.api.command.CommandInvocation) -> a
    15:15:java.util.concurrent.CompletableFuture suggestAsync(com.velocitypowered.api.command.CommandInvocation) -> b
    15:15:java.util.List suggest(com.velocitypowered.api.command.CommandInvocation) -> c
    15:15:void execute(com.velocitypowered.api.command.CommandInvocation) -> d
be.alexandre01.dnplugin.plugins.velocity.components.commands.Maintenance$1 -> be.alexandre01.dnplugin.plugins.a.c.a.b:
    int[] $SwitchMap$be$alexandre01$dnplugin$plugins$velocity$components$commands$Maintenance$SubCommand -> a
    43:43:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.velocity.components.commands.Maintenance$SubCommand -> be.alexandre01.dnplugin.plugins.a.c.a.a$a:
    be.alexandre01.dnplugin.plugins.velocity.components.commands.Maintenance$SubCommand ON -> ON
    be.alexandre01.dnplugin.plugins.velocity.components.commands.Maintenance$SubCommand OFF -> OFF
    be.alexandre01.dnplugin.plugins.velocity.components.commands.Maintenance$SubCommand ADD -> ADD
    be.alexandre01.dnplugin.plugins.velocity.components.commands.Maintenance$SubCommand REMOVE -> REMOVE
    be.alexandre01.dnplugin.plugins.velocity.components.commands.Maintenance$SubCommand LIST -> LIST
    be.alexandre01.dnplugin.plugins.velocity.components.commands.Maintenance$SubCommand[] $VALUES -> $VALUES
    22:22:be.alexandre01.dnplugin.plugins.velocity.components.commands.Maintenance$SubCommand[] values() -> values
    22:22:be.alexandre01.dnplugin.plugins.velocity.components.commands.Maintenance$SubCommand valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    22:23:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.velocity.components.commands.Slot -> be.alexandre01.dnplugin.plugins.a.c.a.c:
    be.alexandre01.dnplugin.plugins.velocity.DNVelocity dnVelocity -> a
    11:13:void <init>() -> <init>
    16:36:void execute(com.velocitypowered.api.command.SimpleCommand$Invocation) -> a
    39:43:void sendHelp(com.velocitypowered.api.command.CommandSource) -> a
    47:47:boolean hasPermission(com.velocitypowered.api.command.SimpleCommand$Invocation) -> b
    8:8:boolean hasPermission(com.velocitypowered.api.command.CommandInvocation) -> a
    8:8:void execute(com.velocitypowered.api.command.CommandInvocation) -> b
be.alexandre01.dnplugin.plugins.velocity.components.commands.TabList -> be.alexandre01.dnplugin.plugins.a.c.a.d:
    be.alexandre01.dnplugin.plugins.velocity.DNVelocity dnVelocity -> a
    16:18:void <init>() -> <init>
    34:76:void execute(com.velocitypowered.api.command.SimpleCommand$Invocation) -> a
    79:85:void sendHelp(com.velocitypowered.api.command.CommandSource) -> a
    89:94:java.util.List suggest(com.velocitypowered.api.command.SimpleCommand$Invocation) -> b
    99:99:java.util.concurrent.CompletableFuture suggestAsync(com.velocitypowered.api.command.SimpleCommand$Invocation) -> c
    104:104:boolean hasPermission(com.velocitypowered.api.command.SimpleCommand$Invocation) -> d
    13:13:boolean hasPermission(com.velocitypowered.api.command.CommandInvocation) -> a
    13:13:java.util.concurrent.CompletableFuture suggestAsync(com.velocitypowered.api.command.CommandInvocation) -> b
    13:13:java.util.List suggest(com.velocitypowered.api.command.CommandInvocation) -> c
    13:13:void execute(com.velocitypowered.api.command.CommandInvocation) -> d
be.alexandre01.dnplugin.plugins.velocity.components.commands.TabList$1 -> be.alexandre01.dnplugin.plugins.a.c.a.e:
    int[] $SwitchMap$be$alexandre01$dnplugin$plugins$velocity$components$commands$TabList$Options -> a
    43:43:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.velocity.components.commands.TabList$Options -> be.alexandre01.dnplugin.plugins.a.c.a.d$a:
    be.alexandre01.dnplugin.plugins.velocity.components.commands.TabList$Options ENABLE -> ENABLE
    be.alexandre01.dnplugin.plugins.velocity.components.commands.TabList$Options DISABLE -> DISABLE
    be.alexandre01.dnplugin.plugins.velocity.components.commands.TabList$Options RELOAD -> RELOAD
    be.alexandre01.dnplugin.plugins.velocity.components.commands.TabList$Options DELAY -> DELAY
    be.alexandre01.dnplugin.plugins.velocity.components.commands.TabList$Options[] $VALUES -> $VALUES
    20:20:be.alexandre01.dnplugin.plugins.velocity.components.commands.TabList$Options[] values() -> values
    20:20:be.alexandre01.dnplugin.plugins.velocity.components.commands.TabList$Options valueOf(java.lang.String) -> valueOf
    20:20:void <init>(java.lang.String,int) -> <init>
    24:29:be.alexandre01.dnplugin.plugins.velocity.components.commands.TabList$Options get(java.lang.String) -> a
    20:21:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.plugins.velocity.components.listeners.ServerPingListener -> be.alexandre01.dnplugin.plugins.a.c.b.a:
    be.alexandre01.dnplugin.plugins.velocity.DNVelocity dnVelocity -> a
    be.alexandre01.dnplugin.utils.files.network.NetworkYAML config -> b
    int maxPlayers -> c
    int onlinePlayers -> d
    18:21:void <init>() -> <init>
    24:63:void onPing(com.velocitypowered.api.event.proxy.ProxyPingEvent) -> a
    66:68:java.lang.String formatString(java.lang.String) -> a
be.alexandre01.dnplugin.plugins.velocity.listeners.PlayerServerListener -> be.alexandre01.dnplugin.plugins.a.d.a:
    be.alexandre01.dnplugin.plugins.velocity.DNVelocity dnVelocity -> a
    13:15:void <init>() -> <init>
    30:30:void onHandshake(com.velocitypowered.api.event.connection.ConnectionHandshakeEvent) -> a
    34:35:void onLog(com.velocitypowered.api.event.connection.LoginEvent) -> a
    38:39:void onLogin(com.velocitypowered.api.event.player.PlayerChooseInitialServerEvent) -> a
be.alexandre01.dnplugin.plugins.velocity.listeners.RedirectConnection -> be.alexandre01.dnplugin.plugins.a.d.b:
    boolean connexionOnLobby -> a
    java.util.Set pending -> b
    be.alexandre01.dnplugin.plugins.velocity.DNVelocity dnVelocity -> c
    be.alexandre01.dnplugin.plugins.velocity.api.DNVelocityAPI dnVelocityAPI -> d
    int max -> e
    22:32:void <init>() -> <init>
    36:37:void onPJoin(com.velocitypowered.api.event.connection.LoginEvent) -> a
    41:83:void onJoin(com.velocitypowered.api.event.player.ServerConnectedEvent) -> a
    87:91:void onPlayerConnect(com.velocitypowered.api.event.connection.PostLoginEvent) -> a
be.alexandre01.dnplugin.plugins.velocity.objects.PlayerManagement -> be.alexandre01.dnplugin.plugins.a.e.a:
    java.util.HashMap players -> a
    java.util.ArrayList removedIds -> b
    int currentID -> c
    13:16:void <init>() -> <init>
    20:38:void updatePlayer(com.velocitypowered.api.proxy.Player) -> a
    41:48:int createId() -> a
    52:60:void removePlayer(com.velocitypowered.api.proxy.Player) -> b
    57:58:void lambda$removePlayer$0(int,be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> a
be.alexandre01.dnplugin.plugins.velocity.utils.VelocityServersManager -> be.alexandre01.dnplugin.plugins.a.f.a:
    java.util.ArrayList servers -> a
    be.alexandre01.dnplugin.api.NetworkBaseAPI networkBaseAPI -> b
    19:24:void <init>(be.alexandre01.dnplugin.api.NetworkBaseAPI) -> <init>
    29:55:void registerServer(java.lang.String,java.lang.String,int,be.alexandre01.dnplugin.utils.Mods) -> a
    59:67:void unregisterServer(java.lang.String) -> a
    19:19:java.util.ArrayList getServers() -> a
be.alexandre01.dnplugin.shaded.bstats.MetricsBase -> be.alexandre01.dnplugin.shaded.bstats.MetricsBase:
    java.lang.String METRICS_VERSION -> METRICS_VERSION
    java.util.concurrent.ScheduledExecutorService scheduler -> scheduler
    java.lang.String REPORT_URL -> REPORT_URL
    java.lang.String platform -> platform
    java.lang.String serverUuid -> serverUuid
    int serviceId -> serviceId
    java.util.function.Consumer appendPlatformDataConsumer -> appendPlatformDataConsumer
    java.util.function.Consumer appendServiceDataConsumer -> appendServiceDataConsumer
    java.util.function.Consumer submitTaskConsumer -> submitTaskConsumer
    java.util.function.Supplier checkServiceEnabledSupplier -> checkServiceEnabledSupplier
    java.util.function.BiConsumer errorLogger -> errorLogger
    java.util.function.Consumer infoLogger -> infoLogger
    boolean logErrors -> logErrors
    boolean logSentData -> logSentData
    boolean logResponseStatusText -> logResponseStatusText
    java.util.Set customCharts -> customCharts
    boolean enabled -> enabled
    51:109:void <init>(java.lang.String,java.lang.String,int,boolean,java.util.function.Consumer,java.util.function.Consumer,java.util.function.Consumer,java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.Consumer,boolean,boolean,boolean) -> <init>
    112:113:void addCustomChart(be.alexandre01.dnplugin.shaded.bstats.charts.CustomChart) -> addCustomChart
    116:136:void startSubmitting() -> startSubmitting
    139:169:void submitData() -> submitData
    172:206:void sendData(be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$JsonObject) -> sendData
    213:223:void checkRelocation() -> checkRelocation
    232:239:byte[] compress(java.lang.String) -> compress
    161:168:void lambda$submitData$4(be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$JsonObject) -> lambda$submitData$4
    148:148:be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$JsonObject[] lambda$submitData$3(int) -> lambda$submitData$3
    146:146:be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$JsonObject lambda$submitData$2(be.alexandre01.dnplugin.shaded.bstats.charts.CustomChart) -> lambda$submitData$2
    117:126:void lambda$startSubmitting$1() -> lambda$startSubmitting$1
    33:33:java.lang.Thread lambda$static$0(java.lang.Runnable) -> lambda$static$0
    32:33:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.bstats.bungeecord.Metrics -> be.alexandre01.dnplugin.shaded.bstats.bungeecord.Metrics:
    net.md_5.bungee.api.plugin.Plugin plugin -> plugin
    be.alexandre01.dnplugin.shaded.bstats.MetricsBase metricsBase -> metricsBase
    boolean enabled -> enabled
    java.lang.String serverUUID -> serverUUID
    boolean logErrors -> logErrors
    boolean logSentData -> logSentData
    boolean logResponseStatusText -> logResponseStatusText
    25:63:void <init>(net.md_5.bungee.api.plugin.Plugin,int) -> <init>
    69:94:void loadConfig() -> loadConfig
    97:103:void writeFile(java.io.File,java.lang.String[]) -> writeFile
    111:112:void addCustomChart(be.alexandre01.dnplugin.shaded.bstats.charts.CustomChart) -> addCustomChart
    115:125:void appendPlatformData(be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder) -> appendPlatformData
    128:129:void appendServiceData(be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder) -> appendServiceData
    58:58:void lambda$new$2(java.lang.String) -> lambda$new$2
    57:57:void lambda$new$1(java.lang.String,java.lang.Throwable) -> lambda$new$1
    56:56:java.lang.Boolean lambda$new$0() -> lambda$new$0
be.alexandre01.dnplugin.shaded.bstats.charts.AdvancedBarChart -> be.alexandre01.dnplugin.shaded.bstats.charts.AdvancedBarChart:
    java.util.concurrent.Callable callable -> callable
    19:21:void <init>(java.lang.String,java.util.concurrent.Callable) -> <init>
    25:46:be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$JsonObject getChartData() -> getChartData
be.alexandre01.dnplugin.shaded.bstats.charts.AdvancedPie -> be.alexandre01.dnplugin.shaded.bstats.charts.AdvancedPie:
    java.util.concurrent.Callable callable -> callable
    19:21:void <init>(java.lang.String,java.util.concurrent.Callable) -> <init>
    25:47:be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$JsonObject getChartData() -> getChartData
be.alexandre01.dnplugin.shaded.bstats.charts.CustomChart -> be.alexandre01.dnplugin.shaded.bstats.charts.CustomChart:
    java.lang.String chartId -> chartId
    11:16:void <init>(java.lang.String) -> <init>
    19:35:be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$JsonObject getRequestJsonObject(java.util.function.BiConsumer,boolean) -> getRequestJsonObject
    be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$JsonObject getChartData() -> getChartData
be.alexandre01.dnplugin.shaded.bstats.charts.DrilldownPie -> be.alexandre01.dnplugin.shaded.bstats.charts.DrilldownPie:
    java.util.concurrent.Callable callable -> callable
    19:21:void <init>(java.lang.String,java.util.concurrent.Callable) -> <init>
    25:52:be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$JsonObject getChartData() -> getChartData
be.alexandre01.dnplugin.shaded.bstats.charts.MultiLineChart -> be.alexandre01.dnplugin.shaded.bstats.charts.MultiLineChart:
    java.util.concurrent.Callable callable -> callable
    19:21:void <init>(java.lang.String,java.util.concurrent.Callable) -> <init>
    25:47:be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$JsonObject getChartData() -> getChartData
be.alexandre01.dnplugin.shaded.bstats.charts.SimpleBarChart -> be.alexandre01.dnplugin.shaded.bstats.charts.SimpleBarChart:
    java.util.concurrent.Callable callable -> callable
    19:21:void <init>(java.lang.String,java.util.concurrent.Callable) -> <init>
    25:38:be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$JsonObject getChartData() -> getChartData
be.alexandre01.dnplugin.shaded.bstats.charts.SimplePie -> be.alexandre01.dnplugin.shaded.bstats.charts.SimplePie:
    java.util.concurrent.Callable callable -> callable
    18:20:void <init>(java.lang.String,java.util.concurrent.Callable) -> <init>
    24:31:be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$JsonObject getChartData() -> getChartData
be.alexandre01.dnplugin.shaded.bstats.charts.SingleLineChart -> be.alexandre01.dnplugin.shaded.bstats.charts.SingleLineChart:
    java.util.concurrent.Callable callable -> callable
    18:20:void <init>(java.lang.String,java.util.concurrent.Callable) -> <init>
    24:31:be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$JsonObject getChartData() -> getChartData
be.alexandre01.dnplugin.shaded.bstats.config.MetricsConfig -> be.alexandre01.dnplugin.shaded.bstats.config.MetricsConfig:
    java.io.File file -> file
    boolean defaultEnabled -> defaultEnabled
    java.lang.String serverUUID -> serverUUID
    boolean enabled -> enabled
    boolean logErrors -> logErrors
    boolean logSentData -> logSentData
    boolean logResponseStatusText -> logResponseStatusText
    boolean didExistBefore -> didExistBefore
    32:39:void <init>(java.io.File,boolean) -> <init>
    42:42:java.lang.String getServerUUID() -> getServerUUID
    46:46:boolean isEnabled() -> isEnabled
    50:50:boolean isLogErrorsEnabled() -> isLogErrorsEnabled
    54:54:boolean isLogSentDataEnabled() -> isLogSentDataEnabled
    58:58:boolean isLogResponseStatusTextEnabled() -> isLogResponseStatusTextEnabled
    67:67:boolean didExistBefore() -> didExistBefore
    74:84:void setupConfig() -> setupConfig
    90:102:void writeConfig() -> writeConfig
    108:118:void readConfig() -> readConfig
    128:131:java.util.Optional getConfigValue(java.lang.String,java.util.List) -> getConfigValue
    141:149:java.util.List readFile(java.io.File) -> readFile
    159:172:void writeFile(java.io.File,java.util.List) -> writeFile
    130:130:java.lang.String lambda$getConfigValue$1(java.lang.String,java.lang.String) -> lambda$getConfigValue$1
    129:129:boolean lambda$getConfigValue$0(java.lang.String,java.lang.String) -> lambda$getConfigValue$0
be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder -> be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder:
    java.lang.StringBuilder builder -> builder
    boolean hasAtLeastOneField -> hasAtLeastOneField
    14:19:void <init>() -> <init>
    28:29:be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder appendNull(java.lang.String) -> appendNull
    40:44:be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder appendField(java.lang.String,java.lang.String) -> appendField
    55:56:be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder appendField(java.lang.String,int) -> appendField
    67:71:be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder appendField(java.lang.String,be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$JsonObject) -> appendField
    82:89:be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder appendField(java.lang.String,java.lang.String[]) -> appendField
    100:107:be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder appendField(java.lang.String,int[]) -> appendField
    118:125:be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder appendField(java.lang.String,be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$JsonObject[]) -> appendField
    135:147:void appendFieldUnescaped(java.lang.String,java.lang.String) -> appendFieldUnescaped
    155:160:be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$JsonObject build() -> build
    173:188:java.lang.String escape(java.lang.String) -> escape
    86:86:java.lang.String lambda$appendField$0(java.lang.String) -> lambda$appendField$0
be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$1 -> be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$1:
be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$JsonObject -> be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$JsonObject:
    java.lang.String value -> value
    201:203:void <init>(java.lang.String) -> <init>
    207:207:java.lang.String toString() -> toString
    197:197:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder$1) -> <init>
be.alexandre01.dnplugin.shaded.bstats.velocity.Metrics -> be.alexandre01.dnplugin.shaded.bstats.velocity.Metrics:
    com.velocitypowered.api.plugin.PluginContainer pluginContainer -> pluginContainer
    com.velocitypowered.api.proxy.ProxyServer server -> server
    be.alexandre01.dnplugin.shaded.bstats.MetricsBase metricsBase -> metricsBase
    57:95:void <init>(java.lang.Object,com.velocitypowered.api.proxy.ProxyServer,org.slf4j.Logger,java.nio.file.Path,int) -> <init>
    103:106:void addCustomChart(be.alexandre01.dnplugin.shaded.bstats.charts.CustomChart) -> addCustomChart
    109:121:void appendPlatformData(be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder) -> appendPlatformData
    124:125:void appendServiceData(be.alexandre01.dnplugin.shaded.bstats.json.JsonObjectBuilder) -> appendServiceData
    79:79:java.lang.Boolean lambda$new$2() -> lambda$new$2
    78:78:void lambda$new$1(com.velocitypowered.api.proxy.ProxyServer,java.lang.Object,java.lang.Runnable) -> lambda$new$1
    59:59:java.lang.IllegalArgumentException lambda$new$0() -> lambda$new$0
    18:18:void <init>(java.lang.Object,com.velocitypowered.api.proxy.ProxyServer,org.slf4j.Logger,java.nio.file.Path,int,be.alexandre01.dnplugin.shaded.bstats.velocity.Metrics$1) -> <init>
be.alexandre01.dnplugin.shaded.bstats.velocity.Metrics$1 -> be.alexandre01.dnplugin.shaded.bstats.velocity.Metrics$1:
be.alexandre01.dnplugin.shaded.bstats.velocity.Metrics$Factory -> be.alexandre01.dnplugin.shaded.bstats.velocity.Metrics$Factory:
    com.velocitypowered.api.proxy.ProxyServer server -> server
    org.slf4j.Logger logger -> logger
    java.nio.file.Path dataDirectory -> dataDirectory
    32:36:void <init>(com.velocitypowered.api.proxy.ProxyServer,org.slf4j.Logger,java.nio.file.Path) -> <init>
    49:49:be.alexandre01.dnplugin.shaded.bstats.velocity.Metrics make(java.lang.Object,int) -> make
be.alexandre01.dnplugin.shaded.gson.ExclusionStrategy -> be.alexandre01.dnplugin.shaded.gson.ExclusionStrategy:
    boolean shouldSkipField(be.alexandre01.dnplugin.shaded.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
be.alexandre01.dnplugin.shaded.gson.FieldAttributes -> be.alexandre01.dnplugin.shaded.gson.FieldAttributes:
    java.lang.reflect.Field field -> field
    44:47:void <init>(java.lang.reflect.Field) -> <init>
    53:53:java.lang.Class getDeclaringClass() -> getDeclaringClass
    60:60:java.lang.String getName() -> getName
    80:80:java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    100:100:java.lang.Class getDeclaredClass() -> getDeclaredClass
    111:111:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    121:121:java.util.Collection getAnnotations() -> getAnnotations
    135:135:boolean hasModifier(int) -> hasModifier
    150:150:java.lang.Object get(java.lang.Object) -> get
    159:159:boolean isSynthetic() -> isSynthetic
be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy -> be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy:
    be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy LOWER_CASE_WITH_DOTS -> LOWER_CASE_WITH_DOTS
    be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy[] $VALUES -> $VALUES
    31:31:be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy[] values() -> values
    31:31:be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    31:31:void <init>(java.lang.String,int) -> <init>
    147:155:java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> separateCamelCase
    162:176:java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    31:31:void <init>(java.lang.String,int,be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy$1) -> <init>
    31:136:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy$1 -> be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy$1:
    37:37:void <init>(java.lang.String,int) -> <init>
    39:39:java.lang.String translateName(java.lang.reflect.Field) -> translateName
be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy$2 -> be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy$2:
    53:53:void <init>(java.lang.String,int) -> <init>
    55:55:java.lang.String translateName(java.lang.reflect.Field) -> translateName
be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy$3 -> be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy$3:
    72:72:void <init>(java.lang.String,int) -> <init>
    74:74:java.lang.String translateName(java.lang.reflect.Field) -> translateName
be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy$4 -> be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy$4:
    90:90:void <init>(java.lang.String,int) -> <init>
    92:92:java.lang.String translateName(java.lang.reflect.Field) -> translateName
be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy$5 -> be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy$5:
    113:113:void <init>(java.lang.String,int) -> <init>
    115:115:java.lang.String translateName(java.lang.reflect.Field) -> translateName
be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy$6 -> be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy$6:
    136:136:void <init>(java.lang.String,int) -> <init>
    138:138:java.lang.String translateName(java.lang.reflect.Field) -> translateName
be.alexandre01.dnplugin.shaded.gson.FieldNamingStrategy -> be.alexandre01.dnplugin.shaded.gson.FieldNamingStrategy:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
be.alexandre01.dnplugin.shaded.gson.Gson -> be.alexandre01.dnplugin.shaded.gson.Gson:
    boolean DEFAULT_JSON_NON_EXECUTABLE -> DEFAULT_JSON_NON_EXECUTABLE
    boolean DEFAULT_LENIENT -> DEFAULT_LENIENT
    boolean DEFAULT_PRETTY_PRINT -> DEFAULT_PRETTY_PRINT
    boolean DEFAULT_ESCAPE_HTML -> DEFAULT_ESCAPE_HTML
    boolean DEFAULT_SERIALIZE_NULLS -> DEFAULT_SERIALIZE_NULLS
    boolean DEFAULT_COMPLEX_MAP_KEYS -> DEFAULT_COMPLEX_MAP_KEYS
    boolean DEFAULT_SPECIALIZE_FLOAT_VALUES -> DEFAULT_SPECIALIZE_FLOAT_VALUES
    be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken NULL_KEY_SURROGATE -> NULL_KEY_SURROGATE
    java.lang.String JSON_NON_EXECUTABLE_PREFIX -> JSON_NON_EXECUTABLE_PREFIX
    java.lang.ThreadLocal calls -> calls
    java.util.Map typeTokenCache -> typeTokenCache
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    be.alexandre01.dnplugin.shaded.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory -> jsonAdapterFactory
    java.util.List factories -> factories
    be.alexandre01.dnplugin.shaded.gson.internal.Excluder excluder -> excluder
    be.alexandre01.dnplugin.shaded.gson.FieldNamingStrategy fieldNamingStrategy -> fieldNamingStrategy
    java.util.Map instanceCreators -> instanceCreators
    boolean serializeNulls -> serializeNulls
    boolean complexMapKeySerialization -> complexMapKeySerialization
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean htmlSafe -> htmlSafe
    boolean prettyPrinting -> prettyPrinting
    boolean lenient -> lenient
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    int timeStyle -> timeStyle
    be.alexandre01.dnplugin.shaded.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    java.util.List builderFactories -> builderFactories
    java.util.List builderHierarchyFactories -> builderHierarchyFactories
    be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy objectToNumberStrategy -> objectToNumberStrategy
    be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy numberToNumberStrategy -> numberToNumberStrategy
    188:195:void <init>() -> <init>
    124:290:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.Excluder,be.alexandre01.dnplugin.shaded.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,boolean,be.alexandre01.dnplugin.shaded.gson.LongSerializationPolicy,java.lang.String,int,int,java.util.List,java.util.List,java.util.List,be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy,be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy) -> <init>
    299:299:be.alexandre01.dnplugin.shaded.gson.GsonBuilder newBuilder() -> newBuilder
    308:308:be.alexandre01.dnplugin.shaded.gson.internal.Excluder excluder() -> excluder
    317:317:be.alexandre01.dnplugin.shaded.gson.FieldNamingStrategy fieldNamingStrategy() -> fieldNamingStrategy
    327:327:boolean serializeNulls() -> serializeNulls
    337:337:boolean htmlSafe() -> htmlSafe
    341:344:be.alexandre01.dnplugin.shaded.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    365:368:be.alexandre01.dnplugin.shaded.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    389:394:void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    397:400:be.alexandre01.dnplugin.shaded.gson.TypeAdapter longAdapter(be.alexandre01.dnplugin.shaded.gson.LongSerializationPolicy) -> longAdapter
    419:427:be.alexandre01.dnplugin.shaded.gson.TypeAdapter atomicLongAdapter(be.alexandre01.dnplugin.shaded.gson.TypeAdapter) -> atomicLongAdapter
    431:454:be.alexandre01.dnplugin.shaded.gson.TypeAdapter atomicLongArrayAdapter(be.alexandre01.dnplugin.shaded.gson.TypeAdapter) -> atomicLongArrayAdapter
    465:501:be.alexandre01.dnplugin.shaded.gson.TypeAdapter getAdapter(be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> getAdapter
    559:577:be.alexandre01.dnplugin.shaded.gson.TypeAdapter getDelegateAdapter(be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> getDelegateAdapter
    587:587:be.alexandre01.dnplugin.shaded.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    604:607:be.alexandre01.dnplugin.shaded.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    627:629:be.alexandre01.dnplugin.shaded.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    646:649:java.lang.String toJson(java.lang.Object) -> toJson
    668:670:java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    688:693:void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    713:718:void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    727:747:void toJson(java.lang.Object,java.lang.reflect.Type,be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter) -> toJson
    757:759:java.lang.String toJson(be.alexandre01.dnplugin.shaded.gson.JsonElement) -> toJson
    772:777:void toJson(be.alexandre01.dnplugin.shaded.gson.JsonElement,java.lang.Appendable) -> toJson
    783:791:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    798:800:be.alexandre01.dnplugin.shaded.gson.stream.JsonReader newJsonReader(java.io.Reader) -> newJsonReader
    808:827:void toJson(be.alexandre01.dnplugin.shaded.gson.JsonElement,be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter) -> toJson
    848:849:java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    873:878:java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    900:903:java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    927:930:java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    935:943:void assertFullConsumption(java.lang.Object,be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> assertFullConsumption
    955:984:java.lang.Object fromJson(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    1006:1007:java.lang.Object fromJson(be.alexandre01.dnplugin.shaded.gson.JsonElement,java.lang.Class) -> fromJson
    1031:1034:java.lang.Object fromJson(be.alexandre01.dnplugin.shaded.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    1064:1069:java.lang.String toString() -> toString
    114:114:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.Gson$1 -> be.alexandre01.dnplugin.shaded.gson.Gson$1:
    be.alexandre01.dnplugin.shaded.gson.Gson this$0 -> this$0
    344:344:void <init>(be.alexandre01.dnplugin.shaded.gson.Gson) -> <init>
    346:350:java.lang.Double read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    353:360:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Number) -> write
    344:344:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    344:344:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.Gson$2 -> be.alexandre01.dnplugin.shaded.gson.Gson$2:
    be.alexandre01.dnplugin.shaded.gson.Gson this$0 -> this$0
    368:368:void <init>(be.alexandre01.dnplugin.shaded.gson.Gson) -> <init>
    370:374:java.lang.Float read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    377:384:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Number) -> write
    368:368:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    368:368:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.Gson$3 -> be.alexandre01.dnplugin.shaded.gson.Gson$3:
    400:400:void <init>() -> <init>
    402:406:java.lang.Number read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    409:414:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Number) -> write
    400:400:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    400:400:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.Gson$4 -> be.alexandre01.dnplugin.shaded.gson.Gson$4:
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter val$longAdapter -> val$longAdapter
    419:419:void <init>(be.alexandre01.dnplugin.shaded.gson.TypeAdapter) -> <init>
    421:422:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLong) -> write
    424:425:java.util.concurrent.atomic.AtomicLong read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    419:419:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    419:419:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.Gson$5 -> be.alexandre01.dnplugin.shaded.gson.Gson$5:
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter val$longAdapter -> val$longAdapter
    431:431:void <init>(be.alexandre01.dnplugin.shaded.gson.TypeAdapter) -> <init>
    433:438:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLongArray) -> write
    440:452:java.util.concurrent.atomic.AtomicLongArray read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    431:431:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    431:431:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.Gson$FutureTypeAdapter -> be.alexandre01.dnplugin.shaded.gson.Gson$FutureTypeAdapter:
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter delegate -> delegate
    1037:1037:void <init>() -> <init>
    1041:1045:void setDelegate(be.alexandre01.dnplugin.shaded.gson.TypeAdapter) -> setDelegate
    1048:1051:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    1055:1059:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.GsonBuilder -> be.alexandre01.dnplugin.shaded.gson.GsonBuilder:
    be.alexandre01.dnplugin.shaded.gson.internal.Excluder excluder -> excluder
    be.alexandre01.dnplugin.shaded.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    be.alexandre01.dnplugin.shaded.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    java.util.Map instanceCreators -> instanceCreators
    java.util.List factories -> factories
    java.util.List hierarchyFactories -> hierarchyFactories
    boolean serializeNulls -> serializeNulls
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    int timeStyle -> timeStyle
    boolean complexMapKeySerialization -> complexMapKeySerialization
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    boolean escapeHtmlChars -> escapeHtmlChars
    boolean prettyPrinting -> prettyPrinting
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean lenient -> lenient
    be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy objectToNumberStrategy -> objectToNumberStrategy
    be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy numberToNumberStrategy -> numberToNumberStrategy
    80:108:void <init>() -> <init>
    80:135:void <init>(be.alexandre01.dnplugin.shaded.gson.Gson) -> <init>
    145:146:be.alexandre01.dnplugin.shaded.gson.GsonBuilder setVersion(double) -> setVersion
    161:162:be.alexandre01.dnplugin.shaded.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    175:176:be.alexandre01.dnplugin.shaded.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    186:187:be.alexandre01.dnplugin.shaded.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    198:199:be.alexandre01.dnplugin.shaded.gson.GsonBuilder serializeNulls() -> serializeNulls
    279:280:be.alexandre01.dnplugin.shaded.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    290:291:be.alexandre01.dnplugin.shaded.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    303:304:be.alexandre01.dnplugin.shaded.gson.GsonBuilder setLongSerializationPolicy(be.alexandre01.dnplugin.shaded.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    316:317:be.alexandre01.dnplugin.shaded.gson.GsonBuilder setFieldNamingPolicy(be.alexandre01.dnplugin.shaded.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    329:330:be.alexandre01.dnplugin.shaded.gson.GsonBuilder setFieldNamingStrategy(be.alexandre01.dnplugin.shaded.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    341:342:be.alexandre01.dnplugin.shaded.gson.GsonBuilder setObjectToNumberStrategy(be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy) -> setObjectToNumberStrategy
    353:354:be.alexandre01.dnplugin.shaded.gson.GsonBuilder setNumberToNumberStrategy(be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy) -> setNumberToNumberStrategy
    368:371:be.alexandre01.dnplugin.shaded.gson.GsonBuilder setExclusionStrategies(be.alexandre01.dnplugin.shaded.gson.ExclusionStrategy[]) -> setExclusionStrategies
    387:388:be.alexandre01.dnplugin.shaded.gson.GsonBuilder addSerializationExclusionStrategy(be.alexandre01.dnplugin.shaded.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    404:405:be.alexandre01.dnplugin.shaded.gson.GsonBuilder addDeserializationExclusionStrategy(be.alexandre01.dnplugin.shaded.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    415:416:be.alexandre01.dnplugin.shaded.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    428:429:be.alexandre01.dnplugin.shaded.gson.GsonBuilder setLenient() -> setLenient
    440:441:be.alexandre01.dnplugin.shaded.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    462:463:be.alexandre01.dnplugin.shaded.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    481:483:be.alexandre01.dnplugin.shaded.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    502:505:be.alexandre01.dnplugin.shaded.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    526:540:be.alexandre01.dnplugin.shaded.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    552:553:be.alexandre01.dnplugin.shaded.gson.GsonBuilder registerTypeAdapterFactory(be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory) -> registerTypeAdapterFactory
    572:581:be.alexandre01.dnplugin.shaded.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    605:606:be.alexandre01.dnplugin.shaded.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    616:626:be.alexandre01.dnplugin.shaded.gson.Gson create() -> create
    637:664:void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
be.alexandre01.dnplugin.shaded.gson.InstanceCreator -> be.alexandre01.dnplugin.shaded.gson.InstanceCreator:
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
be.alexandre01.dnplugin.shaded.gson.JsonArray -> be.alexandre01.dnplugin.shaded.gson.JsonArray:
    java.util.List elements -> elements
    39:41:void <init>() -> <init>
    43:45:void <init>(int) -> <init>
    53:60:be.alexandre01.dnplugin.shaded.gson.JsonArray deepCopy() -> deepCopy
    69:70:void add(java.lang.Boolean) -> add
    78:79:void add(java.lang.Character) -> add
    87:88:void add(java.lang.Number) -> add
    96:97:void add(java.lang.String) -> add
    105:109:void add(be.alexandre01.dnplugin.shaded.gson.JsonElement) -> add
    117:118:void addAll(be.alexandre01.dnplugin.shaded.gson.JsonArray) -> addAll
    129:129:be.alexandre01.dnplugin.shaded.gson.JsonElement set(int,be.alexandre01.dnplugin.shaded.gson.JsonElement) -> set
    140:140:boolean remove(be.alexandre01.dnplugin.shaded.gson.JsonElement) -> remove
    153:153:be.alexandre01.dnplugin.shaded.gson.JsonElement remove(int) -> remove
    163:163:boolean contains(be.alexandre01.dnplugin.shaded.gson.JsonElement) -> contains
    172:172:int size() -> size
    181:181:boolean isEmpty() -> isEmpty
    191:191:java.util.Iterator iterator() -> iterator
    203:203:be.alexandre01.dnplugin.shaded.gson.JsonElement get(int) -> get
    216:219:java.lang.Number getAsNumber() -> getAsNumber
    232:235:java.lang.String getAsString() -> getAsString
    248:251:double getAsDouble() -> getAsDouble
    265:268:java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    282:285:java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    298:301:float getAsFloat() -> getAsFloat
    314:317:long getAsLong() -> getAsLong
    330:333:int getAsInt() -> getAsInt
    338:341:byte getAsByte() -> getAsByte
    346:349:char getAsCharacter() -> getAsCharacter
    362:365:short getAsShort() -> getAsShort
    378:381:boolean getAsBoolean() -> getAsBoolean
    386:386:boolean equals(java.lang.Object) -> equals
    391:391:int hashCode() -> hashCode
    33:33:be.alexandre01.dnplugin.shaded.gson.JsonElement deepCopy() -> deepCopy
be.alexandre01.dnplugin.shaded.gson.JsonDeserializationContext -> be.alexandre01.dnplugin.shaded.gson.JsonDeserializationContext:
    java.lang.Object deserialize(be.alexandre01.dnplugin.shaded.gson.JsonElement,java.lang.reflect.Type) -> deserialize
be.alexandre01.dnplugin.shaded.gson.JsonDeserializer -> be.alexandre01.dnplugin.shaded.gson.JsonDeserializer:
    java.lang.Object deserialize(be.alexandre01.dnplugin.shaded.gson.JsonElement,java.lang.reflect.Type,be.alexandre01.dnplugin.shaded.gson.JsonDeserializationContext) -> deserialize
be.alexandre01.dnplugin.shaded.gson.JsonElement -> be.alexandre01.dnplugin.shaded.gson.JsonElement:
    33:33:void <init>() -> <init>
    be.alexandre01.dnplugin.shaded.gson.JsonElement deepCopy() -> deepCopy
    47:47:boolean isJsonArray() -> isJsonArray
    56:56:boolean isJsonObject() -> isJsonObject
    65:65:boolean isJsonPrimitive() -> isJsonPrimitive
    75:75:boolean isJsonNull() -> isJsonNull
    88:91:be.alexandre01.dnplugin.shaded.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    104:107:be.alexandre01.dnplugin.shaded.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    120:123:be.alexandre01.dnplugin.shaded.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    137:140:be.alexandre01.dnplugin.shaded.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    153:153:boolean getAsBoolean() -> getAsBoolean
    166:166:java.lang.Number getAsNumber() -> getAsNumber
    179:179:java.lang.String getAsString() -> getAsString
    192:192:double getAsDouble() -> getAsDouble
    205:205:float getAsFloat() -> getAsFloat
    218:218:long getAsLong() -> getAsLong
    231:231:int getAsInt() -> getAsInt
    245:245:byte getAsByte() -> getAsByte
    263:263:char getAsCharacter() -> getAsCharacter
    277:277:java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    291:291:java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    304:304:short getAsShort() -> getAsShort
    313:319:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.gson.JsonIOException -> be.alexandre01.dnplugin.shaded.gson.JsonIOException:
    long serialVersionUID -> serialVersionUID
    29:30:void <init>(java.lang.String) -> <init>
    33:34:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    43:44:void <init>(java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.gson.JsonNull -> be.alexandre01.dnplugin.shaded.gson.JsonNull:
    be.alexandre01.dnplugin.shaded.gson.JsonNull INSTANCE -> INSTANCE
    39:41:void <init>() -> <init>
    49:49:be.alexandre01.dnplugin.shaded.gson.JsonNull deepCopy() -> deepCopy
    57:57:int hashCode() -> hashCode
    65:65:boolean equals(java.lang.Object) -> equals
    26:26:be.alexandre01.dnplugin.shaded.gson.JsonElement deepCopy() -> deepCopy
    32:32:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.JsonObject -> be.alexandre01.dnplugin.shaded.gson.JsonObject:
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap members -> members
    32:33:void <init>() -> <init>
    42:46:be.alexandre01.dnplugin.shaded.gson.JsonObject deepCopy() -> deepCopy
    58:59:void add(java.lang.String,be.alexandre01.dnplugin.shaded.gson.JsonElement) -> add
    69:69:be.alexandre01.dnplugin.shaded.gson.JsonElement remove(java.lang.String) -> remove
    80:81:void addProperty(java.lang.String,java.lang.String) -> addProperty
    91:92:void addProperty(java.lang.String,java.lang.Number) -> addProperty
    102:103:void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    113:114:void addProperty(java.lang.String,java.lang.Character) -> addProperty
    123:123:java.util.Set entrySet() -> entrySet
    133:133:java.util.Set keySet() -> keySet
    142:142:int size() -> size
    152:152:boolean has(java.lang.String) -> has
    162:162:be.alexandre01.dnplugin.shaded.gson.JsonElement get(java.lang.String) -> get
    172:172:be.alexandre01.dnplugin.shaded.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    182:182:be.alexandre01.dnplugin.shaded.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    192:192:be.alexandre01.dnplugin.shaded.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    197:198:boolean equals(java.lang.Object) -> equals
    203:203:int hashCode() -> hashCode
    32:32:be.alexandre01.dnplugin.shaded.gson.JsonElement deepCopy() -> deepCopy
be.alexandre01.dnplugin.shaded.gson.JsonParseException -> be.alexandre01.dnplugin.shaded.gson.JsonParseException:
    long serialVersionUID -> serialVersionUID
    42:43:void <init>(java.lang.String) -> <init>
    52:53:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    62:63:void <init>(java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.gson.JsonParser -> be.alexandre01.dnplugin.shaded.gson.JsonParser:
    37:37:void <init>() -> <init>
    47:47:be.alexandre01.dnplugin.shaded.gson.JsonElement parseString(java.lang.String) -> parseString
    59:70:be.alexandre01.dnplugin.shaded.gson.JsonElement parseReader(java.io.Reader) -> parseReader
    82:91:be.alexandre01.dnplugin.shaded.gson.JsonElement parseReader(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> parseReader
    98:98:be.alexandre01.dnplugin.shaded.gson.JsonElement parse(java.lang.String) -> parse
    104:104:be.alexandre01.dnplugin.shaded.gson.JsonElement parse(java.io.Reader) -> parse
    110:110:be.alexandre01.dnplugin.shaded.gson.JsonElement parse(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> parse
be.alexandre01.dnplugin.shaded.gson.JsonPrimitive -> be.alexandre01.dnplugin.shaded.gson.JsonPrimitive:
    java.lang.Object value -> value
    42:44:void <init>(java.lang.Boolean) -> <init>
    51:53:void <init>(java.lang.Number) -> <init>
    60:62:void <init>(java.lang.String) -> <init>
    70:74:void <init>(java.lang.Character) -> <init>
    82:82:be.alexandre01.dnplugin.shaded.gson.JsonPrimitive deepCopy() -> deepCopy
    91:91:boolean isBoolean() -> isBoolean
    101:105:boolean getAsBoolean() -> getAsBoolean
    114:114:boolean isNumber() -> isNumber
    125:125:java.lang.Number getAsNumber() -> getAsNumber
    134:134:boolean isString() -> isString
    144:149:java.lang.String getAsString() -> getAsString
    161:161:double getAsDouble() -> getAsDouble
    172:172:java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    183:184:java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    195:195:float getAsFloat() -> getAsFloat
    206:206:long getAsLong() -> getAsLong
    217:217:short getAsShort() -> getAsShort
    228:228:int getAsInt() -> getAsInt
    233:233:byte getAsByte() -> getAsByte
    238:238:char getAsCharacter() -> getAsCharacter
    243:255:int hashCode() -> hashCode
    260:280:boolean equals(java.lang.Object) -> equals
    288:293:boolean isIntegral(be.alexandre01.dnplugin.shaded.gson.JsonPrimitive) -> isIntegral
    33:33:be.alexandre01.dnplugin.shaded.gson.JsonElement deepCopy() -> deepCopy
be.alexandre01.dnplugin.shaded.gson.JsonSerializationContext -> be.alexandre01.dnplugin.shaded.gson.JsonSerializationContext:
    be.alexandre01.dnplugin.shaded.gson.JsonElement serialize(java.lang.Object) -> serialize
    be.alexandre01.dnplugin.shaded.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
be.alexandre01.dnplugin.shaded.gson.JsonSerializer -> be.alexandre01.dnplugin.shaded.gson.JsonSerializer:
    be.alexandre01.dnplugin.shaded.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,be.alexandre01.dnplugin.shaded.gson.JsonSerializationContext) -> serialize
be.alexandre01.dnplugin.shaded.gson.JsonStreamParser -> be.alexandre01.dnplugin.shaded.gson.JsonStreamParser:
    be.alexandre01.dnplugin.shaded.gson.stream.JsonReader parser -> parser
    java.lang.Object lock -> lock
    62:63:void <init>(java.lang.String) -> <init>
    69:73:void <init>(java.io.Reader) -> <init>
    85:96:be.alexandre01.dnplugin.shaded.gson.JsonElement next() -> next
    107:115:boolean hasNext() -> hasNext
    124:124:void remove() -> remove
    53:53:java.lang.Object next() -> next
be.alexandre01.dnplugin.shaded.gson.JsonSyntaxException -> be.alexandre01.dnplugin.shaded.gson.JsonSyntaxException:
    long serialVersionUID -> serialVersionUID
    30:31:void <init>(java.lang.String) -> <init>
    34:35:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    45:46:void <init>(java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.gson.LongSerializationPolicy -> be.alexandre01.dnplugin.shaded.gson.LongSerializationPolicy:
    be.alexandre01.dnplugin.shaded.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    be.alexandre01.dnplugin.shaded.gson.LongSerializationPolicy STRING -> STRING
    be.alexandre01.dnplugin.shaded.gson.LongSerializationPolicy[] $VALUES -> $VALUES
    27:27:be.alexandre01.dnplugin.shaded.gson.LongSerializationPolicy[] values() -> values
    27:27:be.alexandre01.dnplugin.shaded.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    be.alexandre01.dnplugin.shaded.gson.JsonElement serialize(java.lang.Long) -> serialize
    27:27:void <init>(java.lang.String,int,be.alexandre01.dnplugin.shaded.gson.LongSerializationPolicy$1) -> <init>
    27:52:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.LongSerializationPolicy$1 -> be.alexandre01.dnplugin.shaded.gson.LongSerializationPolicy$1:
    36:36:void <init>(java.lang.String,int) -> <init>
    38:41:be.alexandre01.dnplugin.shaded.gson.JsonElement serialize(java.lang.Long) -> serialize
be.alexandre01.dnplugin.shaded.gson.LongSerializationPolicy$2 -> be.alexandre01.dnplugin.shaded.gson.LongSerializationPolicy$2:
    52:52:void <init>(java.lang.String,int) -> <init>
    54:57:be.alexandre01.dnplugin.shaded.gson.JsonElement serialize(java.lang.Long) -> serialize
be.alexandre01.dnplugin.shaded.gson.ToNumberPolicy -> be.alexandre01.dnplugin.shaded.gson.ToNumberPolicy:
    be.alexandre01.dnplugin.shaded.gson.ToNumberPolicy DOUBLE -> DOUBLE
    be.alexandre01.dnplugin.shaded.gson.ToNumberPolicy LAZILY_PARSED_NUMBER -> LAZILY_PARSED_NUMBER
    be.alexandre01.dnplugin.shaded.gson.ToNumberPolicy LONG_OR_DOUBLE -> LONG_OR_DOUBLE
    be.alexandre01.dnplugin.shaded.gson.ToNumberPolicy BIG_DECIMAL -> BIG_DECIMAL
    be.alexandre01.dnplugin.shaded.gson.ToNumberPolicy[] $VALUES -> $VALUES
    33:33:be.alexandre01.dnplugin.shaded.gson.ToNumberPolicy[] values() -> values
    33:33:be.alexandre01.dnplugin.shaded.gson.ToNumberPolicy valueOf(java.lang.String) -> valueOf
    33:33:void <init>(java.lang.String,int) -> <init>
    33:33:void <init>(java.lang.String,int,be.alexandre01.dnplugin.shaded.gson.ToNumberPolicy$1) -> <init>
    33:88:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.ToNumberPolicy$1 -> be.alexandre01.dnplugin.shaded.gson.ToNumberPolicy$1:
    39:39:void <init>(java.lang.String,int) -> <init>
    41:41:java.lang.Double readNumber(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> readNumber
    39:39:java.lang.Number readNumber(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> readNumber
be.alexandre01.dnplugin.shaded.gson.ToNumberPolicy$2 -> be.alexandre01.dnplugin.shaded.gson.ToNumberPolicy$2:
    50:50:void <init>(java.lang.String,int) -> <init>
    52:52:java.lang.Number readNumber(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> readNumber
be.alexandre01.dnplugin.shaded.gson.ToNumberPolicy$3 -> be.alexandre01.dnplugin.shaded.gson.ToNumberPolicy$3:
    65:65:void <init>(java.lang.String,int) -> <init>
    67:78:java.lang.Number readNumber(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> readNumber
be.alexandre01.dnplugin.shaded.gson.ToNumberPolicy$4 -> be.alexandre01.dnplugin.shaded.gson.ToNumberPolicy$4:
    88:88:void <init>(java.lang.String,int) -> <init>
    90:94:java.math.BigDecimal readNumber(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> readNumber
    88:88:java.lang.Number readNumber(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> readNumber
be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy -> be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy:
    java.lang.Number readNumber(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> readNumber
be.alexandre01.dnplugin.shaded.gson.TypeAdapter -> be.alexandre01.dnplugin.shaded.gson.TypeAdapter:
    119:119:void <init>() -> <init>
    void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
    141:143:void toJson(java.io.Writer,java.lang.Object) -> toJson
    186:186:be.alexandre01.dnplugin.shaded.gson.TypeAdapter nullSafe() -> nullSafe
    215:221:java.lang.String toJson(java.lang.Object) -> toJson
    233:237:be.alexandre01.dnplugin.shaded.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    259:260:java.lang.Object fromJson(java.io.Reader) -> fromJson
    273:273:java.lang.Object fromJson(java.lang.String) -> fromJson
    284:287:java.lang.Object fromJsonTree(be.alexandre01.dnplugin.shaded.gson.JsonElement) -> fromJsonTree
be.alexandre01.dnplugin.shaded.gson.TypeAdapter$1 -> be.alexandre01.dnplugin.shaded.gson.TypeAdapter$1:
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter this$0 -> this$0
    186:186:void <init>(be.alexandre01.dnplugin.shaded.gson.TypeAdapter) -> <init>
    188:193:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
    195:199:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory -> be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory:
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
be.alexandre01.dnplugin.shaded.gson.annotations.Expose -> be.alexandre01.dnplugin.shaded.gson.annotations.Expose:
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
be.alexandre01.dnplugin.shaded.gson.annotations.JsonAdapter -> be.alexandre01.dnplugin.shaded.gson.annotations.JsonAdapter:
    java.lang.Class value() -> value
    boolean nullSafe() -> nullSafe
be.alexandre01.dnplugin.shaded.gson.annotations.SerializedName -> be.alexandre01.dnplugin.shaded.gson.annotations.SerializedName:
    java.lang.String value() -> value
    java.lang.String[] alternate() -> alternate
be.alexandre01.dnplugin.shaded.gson.annotations.Since -> be.alexandre01.dnplugin.shaded.gson.annotations.Since:
    double value() -> value
be.alexandre01.dnplugin.shaded.gson.annotations.Until -> be.alexandre01.dnplugin.shaded.gson.annotations.Until:
    double value() -> value
be.alexandre01.dnplugin.shaded.gson.internal.$Gson$Preconditions -> be.alexandre01.dnplugin.shaded.gson.internal.$Gson$Preconditions:
    33:34:void <init>() -> <init>
    38:41:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    45:48:void checkArgument(boolean) -> checkArgument
be.alexandre01.dnplugin.shaded.gson.internal.$Gson$Types -> be.alexandre01.dnplugin.shaded.gson.internal.$Gson$Types:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    47:48:void <init>() -> <init>
    59:59:java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    69:69:java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    80:85:java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    95:100:java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    109:128:java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    133:161:java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    167:167:boolean equal(java.lang.Object,java.lang.Object) -> equal
    174:224:boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    229:229:int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    233:233:java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    242:272:java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    283:289:java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    297:299:java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    307:315:java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    328:338:java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    343:343:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    349:440:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Map) -> resolve
    444:457:java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    461:466:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    474:477:java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    481:482:void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    45:45:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.$Gson$Types$GenericArrayTypeImpl -> be.alexandre01.dnplugin.shaded.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    551:553:void <init>(java.lang.reflect.Type) -> <init>
    556:556:java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    560:561:boolean equals(java.lang.Object) -> equals
    565:565:int hashCode() -> hashCode
    569:569:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.gson.internal.$Gson$Types$ParameterizedTypeImpl -> be.alexandre01.dnplugin.shaded.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] typeArguments -> typeArguments
    long serialVersionUID -> serialVersionUID
    489:506:void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> <init>
    509:509:java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    513:513:java.lang.reflect.Type getRawType() -> getRawType
    517:517:java.lang.reflect.Type getOwnerType() -> getOwnerType
    521:522:boolean equals(java.lang.Object) -> equals
    526:528:int hashCode() -> hashCode
    532:542:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.gson.internal.$Gson$Types$WildcardTypeImpl -> be.alexandre01.dnplugin.shaded.gson.internal.$Gson$Types$WildcardTypeImpl:
    java.lang.reflect.Type upperBound -> upperBound
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    584:601:void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> <init>
    604:604:java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    608:608:java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    612:613:boolean equals(java.lang.Object) -> equals
    618:619:int hashCode() -> hashCode
    623:628:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor -> be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor:
    java.util.Map instanceCreators -> instanceCreators
    be.alexandre01.dnplugin.shaded.gson.internal.reflect.ReflectionAccessor accessor -> accessor
    51:55:void <init>(java.util.Map) -> <init>
    58:96:be.alexandre01.dnplugin.shaded.gson.internal.ObjectConstructor get(be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> get
    101:125:be.alexandre01.dnplugin.shaded.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> newDefaultConstructor
    136:215:be.alexandre01.dnplugin.shaded.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> newDefaultImplementationConstructor
    220:220:be.alexandre01.dnplugin.shaded.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> newUnsafeAllocator
    236:236:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$1 -> be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$1:
    be.alexandre01.dnplugin.shaded.gson.InstanceCreator val$typeCreator -> val$typeCreator
    java.lang.reflect.Type val$type -> val$type
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor this$0 -> this$0
    66:66:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor,be.alexandre01.dnplugin.shaded.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    68:68:java.lang.Object construct() -> construct
be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$10 -> be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$10:
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor this$0 -> this$0
    188:188:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor) -> <init>
    190:190:java.lang.Object construct() -> construct
be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$11 -> be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$11:
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor this$0 -> this$0
    194:194:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor) -> <init>
    196:196:java.lang.Object construct() -> construct
be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$12 -> be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$12:
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor this$0 -> this$0
    201:201:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor) -> <init>
    203:203:java.lang.Object construct() -> construct
be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$13 -> be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$13:
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor this$0 -> this$0
    207:207:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor) -> <init>
    209:209:java.lang.Object construct() -> construct
be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$14 -> be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$14:
    be.alexandre01.dnplugin.shaded.gson.internal.UnsafeAllocator unsafeAllocator -> unsafeAllocator
    java.lang.Class val$rawType -> val$rawType
    java.lang.reflect.Type val$type -> val$type
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor this$0 -> this$0
    220:221:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor,java.lang.Class,java.lang.reflect.Type) -> <init>
    225:228:java.lang.Object construct() -> construct
be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$2 -> be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$2:
    be.alexandre01.dnplugin.shaded.gson.InstanceCreator val$rawTypeCreator -> val$rawTypeCreator
    java.lang.reflect.Type val$type -> val$type
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor this$0 -> this$0
    78:78:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor,be.alexandre01.dnplugin.shaded.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    80:80:java.lang.Object construct() -> construct
be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$3 -> be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$3:
    java.lang.reflect.Constructor val$constructor -> val$constructor
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor this$0 -> this$0
    105:105:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor,java.lang.reflect.Constructor) -> <init>
    109:120:java.lang.Object construct() -> construct
be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$4 -> be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$4:
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor this$0 -> this$0
    138:138:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor) -> <init>
    140:140:java.lang.Object construct() -> construct
be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$5 -> be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$5:
    java.lang.reflect.Type val$type -> val$type
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor this$0 -> this$0
    144:144:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor,java.lang.reflect.Type) -> <init>
    147:155:java.lang.Object construct() -> construct
be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$6 -> be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$6:
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor this$0 -> this$0
    160:160:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor) -> <init>
    162:162:java.lang.Object construct() -> construct
be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$7 -> be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$7:
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor this$0 -> this$0
    166:166:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor) -> <init>
    168:168:java.lang.Object construct() -> construct
be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$8 -> be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$8:
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor this$0 -> this$0
    172:172:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor) -> <init>
    174:174:java.lang.Object construct() -> construct
be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$9 -> be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor$9:
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor this$0 -> this$0
    182:182:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor) -> <init>
    184:184:java.lang.Object construct() -> construct
be.alexandre01.dnplugin.shaded.gson.internal.Excluder -> be.alexandre01.dnplugin.shaded.gson.internal.Excluder:
    double IGNORE_VERSIONS -> IGNORE_VERSIONS
    be.alexandre01.dnplugin.shaded.gson.internal.Excluder DEFAULT -> DEFAULT
    double version -> version
    int modifiers -> modifiers
    boolean serializeInnerClasses -> serializeInnerClasses
    boolean requireExpose -> requireExpose
    java.util.List serializationStrategies -> serializationStrategies
    java.util.List deserializationStrategies -> deserializationStrategies
    50:59:void <init>() -> <init>
    63:65:be.alexandre01.dnplugin.shaded.gson.internal.Excluder clone() -> clone
    70:72:be.alexandre01.dnplugin.shaded.gson.internal.Excluder withVersion(double) -> withVersion
    76:81:be.alexandre01.dnplugin.shaded.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    85:87:be.alexandre01.dnplugin.shaded.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    91:93:be.alexandre01.dnplugin.shaded.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    98:108:be.alexandre01.dnplugin.shaded.gson.internal.Excluder withExclusionStrategy(be.alexandre01.dnplugin.shaded.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    112:122:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
    152:190:boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    194:206:boolean excludeClassChecks(java.lang.Class) -> excludeClassChecks
    210:211:boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    215:221:boolean excludeClassInStrategy(java.lang.Class,boolean) -> excludeClassInStrategy
    225:226:boolean isAnonymousOrNonStaticLocal(java.lang.Class) -> isAnonymousOrNonStaticLocal
    230:230:boolean isInnerClass(java.lang.Class) -> isInnerClass
    234:234:boolean isStatic(java.lang.Class) -> isStatic
    238:238:boolean isValidVersion(be.alexandre01.dnplugin.shaded.gson.annotations.Since,be.alexandre01.dnplugin.shaded.gson.annotations.Until) -> isValidVersion
    242:248:boolean isValidSince(be.alexandre01.dnplugin.shaded.gson.annotations.Since) -> isValidSince
    252:258:boolean isValidUntil(be.alexandre01.dnplugin.shaded.gson.annotations.Until) -> isValidUntil
    50:50:java.lang.Object clone() -> clone
    52:52:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.Excluder$1 -> be.alexandre01.dnplugin.shaded.gson.internal.Excluder$1:
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter delegate -> delegate
    boolean val$skipDeserialize -> val$skipDeserialize
    boolean val$skipSerialize -> val$skipSerialize
    be.alexandre01.dnplugin.shaded.gson.Gson val$gson -> val$gson
    be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken val$type -> val$type
    be.alexandre01.dnplugin.shaded.gson.internal.Excluder this$0 -> this$0
    122:122:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.Excluder,boolean,boolean,be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> <init>
    127:131:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    135:140:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
    143:146:be.alexandre01.dnplugin.shaded.gson.TypeAdapter delegate() -> delegate
be.alexandre01.dnplugin.shaded.gson.internal.GsonBuildConfig -> be.alexandre01.dnplugin.shaded.gson.internal.GsonBuildConfig:
    java.lang.String VERSION -> VERSION
    31:31:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.gson.internal.JavaVersion -> be.alexandre01.dnplugin.shaded.gson.internal.JavaVersion:
    int majorJavaVersion -> majorJavaVersion
    29:30:int determineMajorJavaVersion() -> determineMajorJavaVersion
    35:42:int getMajorJavaVersion(java.lang.String) -> getMajorJavaVersion
    48:56:int parseDotted(java.lang.String) -> parseDotted
    62:73:int extractBeginningInt(java.lang.String) -> extractBeginningInt
    81:81:int getMajorJavaVersion() -> getMajorJavaVersion
    88:88:boolean isJava9OrLater() -> isJava9OrLater
    91:91:void <init>() -> <init>
    26:26:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.JsonReaderInternalAccess -> be.alexandre01.dnplugin.shaded.gson.internal.JsonReaderInternalAccess:
    be.alexandre01.dnplugin.shaded.gson.internal.JsonReaderInternalAccess INSTANCE -> INSTANCE
    25:25:void <init>() -> <init>
    void promoteNameToValue(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> promoteNameToValue
be.alexandre01.dnplugin.shaded.gson.internal.LazilyParsedNumber -> be.alexandre01.dnplugin.shaded.gson.internal.LazilyParsedNumber:
    java.lang.String value -> value
    33:35:void <init>(java.lang.String) -> <init>
    40:45:int intValue() -> intValue
    53:55:long longValue() -> longValue
    61:61:float floatValue() -> floatValue
    66:66:double doubleValue() -> doubleValue
    71:71:java.lang.String toString() -> toString
    80:80:java.lang.Object writeReplace() -> writeReplace
    85:85:void readObject(java.io.ObjectInputStream) -> readObject
    90:90:int hashCode() -> hashCode
    95:102:boolean equals(java.lang.Object) -> equals
be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap -> be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    java.util.Comparator comparator -> comparator
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node[] table -> table
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node header -> header
    int size -> size
    int modCount -> modCount
    int threshold -> threshold
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$EntrySet entrySet -> entrySet
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$KeySet keySet -> keySet
    boolean $assertionsDisabled -> $assertionsDisabled
    64:65:void <init>() -> <init>
    54:82:void <init>(java.util.Comparator) -> <init>
    85:85:int size() -> size
    89:90:java.lang.Object get(java.lang.Object) -> get
    94:94:boolean containsKey(java.lang.Object) -> containsKey
    98:104:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    108:121:void clear() -> clear
    124:125:java.lang.Object remove(java.lang.Object) -> remove
    135:199:be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node find(java.lang.Object,boolean) -> find
    205:207:be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node findByObject(java.lang.Object) -> findByObject
    221:223:be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    227:227:boolean equal(java.lang.Object,java.lang.Object) -> equal
    238:239:int secondaryHash(int) -> secondaryHash
    249:304:void removeInternal(be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node,boolean) -> removeInternal
    307:311:be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    315:332:void replaceInParent(be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node,be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node) -> replaceInParent
    342:399:void rebalance(be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node,boolean) -> rebalance
    405:427:void rotateLeft(be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node) -> rotateLeft
    433:455:void rotateRight(be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node) -> rotateRight
    461:462:java.util.Set entrySet() -> entrySet
    466:467:java.util.Set keySet() -> keySet
    561:563:void doubleCapacity() -> doubleCapacity
    571:613:be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node[] doubleCapacity(be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node[]) -> doubleCapacity
    865:865:java.lang.Object writeReplace() -> writeReplace
    870:870:void readObject(java.io.ObjectInputStream) -> readObject
    43:45:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$1 -> be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$1:
    45:45:void <init>() -> <init>
    47:47:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    45:45:int compare(java.lang.Object,java.lang.Object) -> compare
be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$AvlBuilder -> be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$AvlBuilder:
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node stack -> stack
    int leavesToSkip -> leavesToSkip
    int leavesSkipped -> leavesSkipped
    int size -> size
    673:673:void <init>() -> <init>
    682:687:void reset(int) -> reset
    690:752:void add(be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node) -> add
    755:759:be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node root() -> root
be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$AvlIterator -> be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$AvlIterator:
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node stackTop -> stackTop
    625:625:void <init>() -> <init>
    630:636:void reset(be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node) -> reset
    639:651:be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node next() -> next
be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$EntrySet -> be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$EntrySet:
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap this$0 -> this$0
    797:797:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap) -> <init>
    799:799:int size() -> size
    803:803:java.util.Iterator iterator() -> iterator
    811:811:boolean contains(java.lang.Object) -> contains
    815:824:boolean remove(java.lang.Object) -> remove
    828:829:void clear() -> clear
be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$EntrySet$1 -> be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$EntrySet$1:
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$EntrySet this$1 -> this$1
    803:803:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$EntrySet) -> <init>
    805:805:java.util.Map$Entry next() -> next
    803:803:java.lang.Object next() -> next
be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$KeySet -> be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$KeySet:
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap this$0 -> this$0
    832:832:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap) -> <init>
    834:834:int size() -> size
    838:838:java.util.Iterator iterator() -> iterator
    846:846:boolean contains(java.lang.Object) -> contains
    850:850:boolean remove(java.lang.Object) -> remove
    854:855:void clear() -> clear
be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$KeySet$1 -> be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$KeySet$1:
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$KeySet this$1 -> this$1
    838:838:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$KeySet) -> <init>
    840:840:java.lang.Object next() -> next
be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator -> be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator:
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node next -> next
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node lastReturned -> lastReturned
    int expectedModCount -> expectedModCount
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap this$0 -> this$0
    764:769:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap) -> <init>
    772:772:boolean hasNext() -> hasNext
    776:784:be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node nextNode() -> nextNode
    788:794:void remove() -> remove
be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node -> be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node:
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node parent -> parent
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node left -> left
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node right -> right
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node next -> next
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node prev -> prev
    java.lang.Object key -> key
    int hash -> hash
    java.lang.Object value -> value
    int height -> height
    482:486:void <init>() -> <init>
    489:498:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node,java.lang.Object,int,be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node,be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node) -> <init>
    501:501:java.lang.Object getKey() -> getKey
    505:505:java.lang.Object getValue() -> getValue
    509:511:java.lang.Object setValue(java.lang.Object) -> setValue
    516:521:boolean equals(java.lang.Object) -> equals
    525:526:int hashCode() -> hashCode
    530:530:java.lang.String toString() -> toString
    537:543:be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node first() -> first
    550:556:be.alexandre01.dnplugin.shaded.gson.internal.LinkedHashTreeMap$Node last() -> last
be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap -> be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    java.util.Comparator comparator -> comparator
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node root -> root
    int size -> size
    int modCount -> modCount
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node header -> header
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$EntrySet entrySet -> entrySet
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$KeySet keySet -> keySet
    boolean $assertionsDisabled -> $assertionsDisabled
    63:64:void <init>() -> <init>
    51:78:void <init>(java.util.Comparator) -> <init>
    81:81:int size() -> size
    85:86:java.lang.Object get(java.lang.Object) -> get
    90:90:boolean containsKey(java.lang.Object) -> containsKey
    94:100:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    104:111:void clear() -> clear
    114:115:java.lang.Object remove(java.lang.Object) -> remove
    125:183:be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> find
    189:191:be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> findByObject
    205:207:be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    211:211:boolean equal(java.lang.Object,java.lang.Object) -> equal
    221:277:void removeInternal(be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node,boolean) -> removeInternal
    280:284:be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    288:304:void replaceInParent(be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node,be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node) -> replaceInParent
    314:371:void rebalance(be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node,boolean) -> rebalance
    377:399:void rotateLeft(be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node) -> rotateLeft
    405:427:void rotateRight(be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node) -> rotateRight
    433:434:java.util.Set entrySet() -> entrySet
    438:439:java.util.Set keySet() -> keySet
    631:631:java.lang.Object writeReplace() -> writeReplace
    636:636:void readObject(java.io.ObjectInputStream) -> readObject
    41:43:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$1 -> be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$1:
    43:43:void <init>() -> <init>
    45:45:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    43:43:int compare(java.lang.Object,java.lang.Object) -> compare
be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$EntrySet -> be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$EntrySet:
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap this$0 -> this$0
    563:563:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap) -> <init>
    565:565:int size() -> size
    569:569:java.util.Iterator iterator() -> iterator
    577:577:boolean contains(java.lang.Object) -> contains
    581:590:boolean remove(java.lang.Object) -> remove
    594:595:void clear() -> clear
be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$EntrySet$1 -> be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$EntrySet$1:
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$EntrySet this$1 -> this$1
    569:569:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$EntrySet) -> <init>
    571:571:java.util.Map$Entry next() -> next
    569:569:java.lang.Object next() -> next
be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$KeySet -> be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$KeySet:
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap this$0 -> this$0
    598:598:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap) -> <init>
    600:600:int size() -> size
    604:604:java.util.Iterator iterator() -> iterator
    612:612:boolean contains(java.lang.Object) -> contains
    616:616:boolean remove(java.lang.Object) -> remove
    620:621:void clear() -> clear
be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$KeySet$1 -> be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$KeySet$1:
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$KeySet this$1 -> this$1
    604:604:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$KeySet) -> <init>
    606:606:java.lang.Object next() -> next
be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$LinkedTreeMapIterator:
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node next -> next
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node lastReturned -> lastReturned
    int expectedModCount -> expectedModCount
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap this$0 -> this$0
    530:535:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap) -> <init>
    538:538:boolean hasNext() -> hasNext
    542:550:be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node nextNode() -> nextNode
    554:560:void remove() -> remove
be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node -> be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node:
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node parent -> parent
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node left -> left
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node right -> right
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node next -> next
    be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node prev -> prev
    java.lang.Object key -> key
    java.lang.Object value -> value
    int height -> height
    453:456:void <init>() -> <init>
    459:467:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node,java.lang.Object,be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node,be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node) -> <init>
    470:470:java.lang.Object getKey() -> getKey
    474:474:java.lang.Object getValue() -> getValue
    478:480:java.lang.Object setValue(java.lang.Object) -> setValue
    485:490:boolean equals(java.lang.Object) -> equals
    494:495:int hashCode() -> hashCode
    499:499:java.lang.String toString() -> toString
    506:512:be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node first() -> first
    519:525:be.alexandre01.dnplugin.shaded.gson.internal.LinkedTreeMap$Node last() -> last
be.alexandre01.dnplugin.shaded.gson.internal.ObjectConstructor -> be.alexandre01.dnplugin.shaded.gson.internal.ObjectConstructor:
    java.lang.Object construct() -> construct
be.alexandre01.dnplugin.shaded.gson.internal.PreJava9DateFormatProvider -> be.alexandre01.dnplugin.shaded.gson.internal.PreJava9DateFormatProvider:
    25:25:void <init>() -> <init>
    31:31:java.text.DateFormat getUSDateFormat(int) -> getUSDateFormat
    39:40:java.text.DateFormat getUSDateTimeFormat(int,int) -> getUSDateTimeFormat
    44:54:java.lang.String getDateFormatPattern(int) -> getDateFormatPattern
    59:69:java.lang.String getDatePartOfDateTimePattern(int) -> getDatePartOfDateTimePattern
    74:83:java.lang.String getTimePartOfDateTimePattern(int) -> getTimePartOfDateTimePattern
be.alexandre01.dnplugin.shaded.gson.internal.Primitives -> be.alexandre01.dnplugin.shaded.gson.internal.Primitives:
    28:28:void <init>() -> <init>
    34:34:boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    44:44:boolean isWrapperType(java.lang.reflect.Type) -> isWrapperType
    66:75:java.lang.Class wrap(java.lang.Class) -> wrap
    89:98:java.lang.Class unwrap(java.lang.Class) -> unwrap
be.alexandre01.dnplugin.shaded.gson.internal.Streams -> be.alexandre01.dnplugin.shaded.gson.internal.Streams:
    36:37:void <init>() -> <init>
    44:64:be.alexandre01.dnplugin.shaded.gson.JsonElement parse(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> parse
    72:73:void write(be.alexandre01.dnplugin.shaded.gson.JsonElement,be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter) -> write
    76:76:java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
be.alexandre01.dnplugin.shaded.gson.internal.Streams$AppendableWriter -> be.alexandre01.dnplugin.shaded.gson.internal.Streams$AppendableWriter:
    java.lang.Appendable appendable -> appendable
    be.alexandre01.dnplugin.shaded.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> currentWrite
    85:89:void <init>(java.lang.Appendable) -> <init>
    92:94:void write(char[],int,int) -> write
    97:98:void write(int) -> write
    100:100:void flush() -> flush
    101:101:void close() -> close
be.alexandre01.dnplugin.shaded.gson.internal.Streams$AppendableWriter$CurrentWrite -> be.alexandre01.dnplugin.shaded.gson.internal.Streams$AppendableWriter$CurrentWrite:
    char[] chars -> chars
    106:106:void <init>() -> <init>
    109:109:int length() -> length
    112:112:char charAt(int) -> charAt
    115:115:java.lang.CharSequence subSequence(int,int) -> subSequence
be.alexandre01.dnplugin.shaded.gson.internal.UnsafeAllocator -> be.alexandre01.dnplugin.shaded.gson.internal.UnsafeAllocator:
    31:31:void <init>() -> <init>
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    40:101:be.alexandre01.dnplugin.shaded.gson.internal.UnsafeAllocator create() -> create
    115:122:void assertInstantiable(java.lang.Class) -> assertInstantiable
be.alexandre01.dnplugin.shaded.gson.internal.UnsafeAllocator$1 -> be.alexandre01.dnplugin.shaded.gson.internal.UnsafeAllocator$1:
    java.lang.reflect.Method val$allocateInstance -> val$allocateInstance
    java.lang.Object val$unsafe -> val$unsafe
    45:45:void <init>(java.lang.reflect.Method,java.lang.Object) -> <init>
    49:50:java.lang.Object newInstance(java.lang.Class) -> newInstance
be.alexandre01.dnplugin.shaded.gson.internal.UnsafeAllocator$2 -> be.alexandre01.dnplugin.shaded.gson.internal.UnsafeAllocator$2:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    int val$constructorId -> val$constructorId
    69:69:void <init>(java.lang.reflect.Method,int) -> <init>
    73:74:java.lang.Object newInstance(java.lang.Class) -> newInstance
be.alexandre01.dnplugin.shaded.gson.internal.UnsafeAllocator$3 -> be.alexandre01.dnplugin.shaded.gson.internal.UnsafeAllocator$3:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    89:89:void <init>(java.lang.reflect.Method) -> <init>
    93:94:java.lang.Object newInstance(java.lang.Class) -> newInstance
be.alexandre01.dnplugin.shaded.gson.internal.UnsafeAllocator$4 -> be.alexandre01.dnplugin.shaded.gson.internal.UnsafeAllocator$4:
    101:101:void <init>() -> <init>
    104:104:java.lang.Object newInstance(java.lang.Class) -> newInstance
be.alexandre01.dnplugin.shaded.gson.internal.bind.ArrayTypeAdapter -> be.alexandre01.dnplugin.shaded.gson.internal.bind.ArrayTypeAdapter:
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.lang.Class componentType -> componentType
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter componentTypeAdapter -> componentTypeAdapter
    57:61:void <init>(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.TypeAdapter,java.lang.Class) -> <init>
    64:82:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    87:98:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
    39:39:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.bind.ArrayTypeAdapter$1 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.ArrayTypeAdapter$1:
    39:39:void <init>() -> <init>
    42:50:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
be.alexandre01.dnplugin.shaded.gson.internal.bind.CollectionTypeAdapterFactory -> be.alexandre01.dnplugin.shaded.gson.internal.bind.CollectionTypeAdapterFactory:
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    39:41:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor) -> <init>
    45:58:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
be.alexandre01.dnplugin.shaded.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> be.alexandre01.dnplugin.shaded.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter elementTypeAdapter -> elementTypeAdapter
    be.alexandre01.dnplugin.shaded.gson.internal.ObjectConstructor constructor -> constructor
    67:71:void <init>(be.alexandre01.dnplugin.shaded.gson.Gson,java.lang.reflect.Type,be.alexandre01.dnplugin.shaded.gson.TypeAdapter,be.alexandre01.dnplugin.shaded.gson.internal.ObjectConstructor) -> <init>
    74:86:java.util.Collection read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    90:100:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.util.Collection) -> write
    61:61:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    61:61:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.DateTypeAdapter -> be.alexandre01.dnplugin.shaded.gson.internal.bind.DateTypeAdapter:
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.util.List dateFormats -> dateFormats
    58:68:void <init>() -> <init>
    71:75:java.util.Date read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    79:87:java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    92:98:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.util.Date) -> write
    46:46:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    46:46:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
    47:47:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.bind.DateTypeAdapter$1 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.DateTypeAdapter$1:
    47:47:void <init>() -> <init>
    50:50:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter -> be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter:
    java.lang.String SIMPLE_NAME -> SIMPLE_NAME
    be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$DateType dateType -> dateType
    java.util.List dateFormats -> dateFormats
    93:101:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$DateType,java.lang.String) -> <init>
    93:112:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$DateType,int) -> <init>
    93:123:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$DateType,int,int) -> <init>
    129:137:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.util.Date) -> write
    141:146:java.util.Date read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    150:161:java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    167:171:java.lang.String toString() -> toString
    48:48:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    48:48:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
    48:48:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$DateType,java.lang.String,be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$1) -> <init>
    48:48:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$DateType,int,be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$1) -> <init>
    48:48:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$DateType,int,int,be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$1) -> <init>
be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$1 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$1:
be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$DateType -> be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$DateType:
    be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$DateType DATE -> DATE
    java.lang.Class dateClass -> dateClass
    60:62:void <init>(java.lang.Class) -> <init>
    java.util.Date deserialize(java.util.Date) -> deserialize
    67:67:be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory createFactory(be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter) -> createFactory
    71:71:be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory createAdapterFactory(java.lang.String) -> createAdapterFactory
    75:75:be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory createAdapterFactory(int) -> createAdapterFactory
    79:79:be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory createAdapterFactory(int,int) -> createAdapterFactory
    83:83:be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory createDefaultsAdapterFactory() -> createDefaultsAdapterFactory
    52:52:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$DateType$1 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$DateType$1:
    52:52:void <init>(java.lang.Class) -> <init>
    54:54:java.util.Date deserialize(java.util.Date) -> deserialize
be.alexandre01.dnplugin.shaded.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory -> be.alexandre01.dnplugin.shaded.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    37:39:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor) -> <init>
    44:49:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
    55:81:be.alexandre01.dnplugin.shaded.gson.TypeAdapter getTypeAdapter(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor,be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken,be.alexandre01.dnplugin.shaded.gson.annotations.JsonAdapter) -> getTypeAdapter
be.alexandre01.dnplugin.shaded.gson.internal.bind.JsonTreeReader -> be.alexandre01.dnplugin.shaded.gson.internal.bind.JsonTreeReader:
    java.io.Reader UNREADABLE_READER -> UNREADABLE_READER
    java.lang.Object SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.lang.Object[] stack -> stack
    int stackSize -> stackSize
    java.lang.String[] pathNames -> pathNames
    int[] pathIndices -> pathIndices
    52:69:void <init>(be.alexandre01.dnplugin.shaded.gson.JsonElement) -> <init>
    72:76:void beginArray() -> beginArray
    79:85:void endArray() -> endArray
    88:91:void beginObject() -> beginObject
    94:100:void endObject() -> endObject
    103:104:boolean hasNext() -> hasNext
    108:146:be.alexandre01.dnplugin.shaded.gson.stream.JsonToken peek() -> peek
    151:151:java.lang.Object peekStack() -> peekStack
    155:157:java.lang.Object popStack() -> popStack
    161:165:void expect(be.alexandre01.dnplugin.shaded.gson.stream.JsonToken) -> expect
    168:174:java.lang.String nextName() -> nextName
    178:187:java.lang.String nextString() -> nextString
    191:196:boolean nextBoolean() -> nextBoolean
    200:205:void nextNull() -> nextNull
    208:221:double nextDouble() -> nextDouble
    225:235:long nextLong() -> nextLong
    239:249:int nextInt() -> nextInt
    253:262:be.alexandre01.dnplugin.shaded.gson.JsonElement nextJsonElement() -> nextJsonElement
    266:268:void close() -> close
    271:283:void skipValue() -> skipValue
    286:286:java.lang.String toString() -> toString
    290:295:void promoteNameToValue() -> promoteNameToValue
    298:305:void push(java.lang.Object) -> push
    308:323:java.lang.String getPath() -> getPath
    327:327:java.lang.String locationString() -> locationString
    39:47:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.bind.JsonTreeReader$1 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.JsonTreeReader$1:
    39:39:void <init>() -> <init>
    41:41:int read(char[],int,int) -> read
    44:44:void close() -> close
be.alexandre01.dnplugin.shaded.gson.internal.bind.JsonTreeWriter -> be.alexandre01.dnplugin.shaded.gson.internal.bind.JsonTreeWriter:
    java.io.Writer UNWRITABLE_WRITER -> UNWRITABLE_WRITER
    be.alexandre01.dnplugin.shaded.gson.JsonPrimitive SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    java.lang.String pendingName -> pendingName
    be.alexandre01.dnplugin.shaded.gson.JsonElement product -> product
    49:59:void <init>() -> <init>
    65:68:be.alexandre01.dnplugin.shaded.gson.JsonElement get() -> get
    72:72:be.alexandre01.dnplugin.shaded.gson.JsonElement peek() -> peek
    76:92:void put(be.alexandre01.dnplugin.shaded.gson.JsonElement) -> put
    95:98:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter beginArray() -> beginArray
    102:110:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter endArray() -> endArray
    114:117:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter beginObject() -> beginObject
    121:129:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter endObject() -> endObject
    133:144:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter name(java.lang.String) -> name
    148:152:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter value(java.lang.String) -> value
    156:157:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter nullValue() -> nullValue
    161:162:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter value(boolean) -> value
    166:170:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter value(java.lang.Boolean) -> value
    174:178:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter value(double) -> value
    182:183:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter value(long) -> value
    187:199:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter value(java.lang.Number) -> value
    203:203:void flush() -> flush
    206:210:void close() -> close
    34:46:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.bind.JsonTreeWriter$1 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.JsonTreeWriter$1:
    34:34:void <init>() -> <init>
    36:36:void write(char[],int,int) -> write
    39:39:void flush() -> flush
    42:42:void close() -> close
be.alexandre01.dnplugin.shaded.gson.internal.bind.MapTypeAdapterFactory -> be.alexandre01.dnplugin.shaded.gson.internal.bind.MapTypeAdapterFactory:
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean complexMapKeySerialization -> complexMapKeySerialization
    110:113:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor,boolean) -> <init>
    116:133:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
    140:142:be.alexandre01.dnplugin.shaded.gson.TypeAdapter getKeyAdapter(be.alexandre01.dnplugin.shaded.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
be.alexandre01.dnplugin.shaded.gson.internal.bind.MapTypeAdapterFactory$Adapter -> be.alexandre01.dnplugin.shaded.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter keyTypeAdapter -> keyTypeAdapter
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter valueTypeAdapter -> valueTypeAdapter
    be.alexandre01.dnplugin.shaded.gson.internal.ObjectConstructor constructor -> constructor
    be.alexandre01.dnplugin.shaded.gson.internal.bind.MapTypeAdapterFactory this$0 -> this$0
    152:158:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.bind.MapTypeAdapterFactory,be.alexandre01.dnplugin.shaded.gson.Gson,java.lang.reflect.Type,be.alexandre01.dnplugin.shaded.gson.TypeAdapter,java.lang.reflect.Type,be.alexandre01.dnplugin.shaded.gson.TypeAdapter,be.alexandre01.dnplugin.shaded.gson.internal.ObjectConstructor) -> <init>
    161:195:java.util.Map read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    199:243:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.util.Map) -> write
    246:260:java.lang.String keyToString(be.alexandre01.dnplugin.shaded.gson.JsonElement) -> keyToString
    145:145:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    145:145:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.NumberTypeAdapter -> be.alexandre01.dnplugin.shaded.gson.internal.bind.NumberTypeAdapter:
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory LAZILY_PARSED_NUMBER_FACTORY -> LAZILY_PARSED_NUMBER_FACTORY
    be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy toNumberStrategy -> toNumberStrategy
    43:45:void <init>(be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy) -> <init>
    48:49:be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory newFactory(be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy) -> newFactory
    58:61:be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory getFactory(be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy) -> getFactory
    66:75:java.lang.Number read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    80:81:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Number) -> write
    35:35:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    35:35:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
    39:39:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.bind.NumberTypeAdapter$1 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.NumberTypeAdapter$1:
    be.alexandre01.dnplugin.shaded.gson.internal.bind.NumberTypeAdapter val$adapter -> val$adapter
    49:49:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.bind.NumberTypeAdapter) -> <init>
    52:52:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
be.alexandre01.dnplugin.shaded.gson.internal.bind.NumberTypeAdapter$2 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.NumberTypeAdapter$2:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
    67:67:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.bind.ObjectTypeAdapter -> be.alexandre01.dnplugin.shaded.gson.internal.bind.ObjectTypeAdapter:
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory DOUBLE_FACTORY -> DOUBLE_FACTORY
    be.alexandre01.dnplugin.shaded.gson.Gson gson -> gson
    be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy toNumberStrategy -> toNumberStrategy
    48:51:void <init>(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy) -> <init>
    54:54:be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory newFactory(be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy) -> newFactory
    66:69:be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory getFactory(be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy) -> getFactory
    74:108:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    114:127:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
    39:39:void <init>(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy,be.alexandre01.dnplugin.shaded.gson.internal.bind.ObjectTypeAdapter$1) -> <init>
    43:43:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.bind.ObjectTypeAdapter$1 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.ObjectTypeAdapter$1:
    be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy val$toNumberStrategy -> val$toNumberStrategy
    54:54:void <init>(be.alexandre01.dnplugin.shaded.gson.ToNumberStrategy) -> <init>
    57:60:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
be.alexandre01.dnplugin.shaded.gson.internal.bind.ObjectTypeAdapter$2 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.ObjectTypeAdapter$2:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
    75:75:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.bind.ReflectiveTypeAdapterFactory -> be.alexandre01.dnplugin.shaded.gson.internal.bind.ReflectiveTypeAdapterFactory:
    be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    be.alexandre01.dnplugin.shaded.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    be.alexandre01.dnplugin.shaded.gson.internal.Excluder excluder -> excluder
    be.alexandre01.dnplugin.shaded.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory -> jsonAdapterFactory
    be.alexandre01.dnplugin.shaded.gson.internal.reflect.ReflectionAccessor accessor -> accessor
    53:62:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ConstructorConstructor,be.alexandre01.dnplugin.shaded.gson.FieldNamingStrategy,be.alexandre01.dnplugin.shaded.gson.internal.Excluder,be.alexandre01.dnplugin.shaded.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory) -> <init>
    65:65:boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    69:69:boolean excludeField(java.lang.reflect.Field,boolean,be.alexandre01.dnplugin.shaded.gson.internal.Excluder) -> excludeField
    74:91:java.util.List getFieldNames(java.lang.reflect.Field) -> getFieldNames
    95:102:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
    108:120:be.alexandre01.dnplugin.shaded.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(be.alexandre01.dnplugin.shaded.gson.Gson,java.lang.reflect.Field,java.lang.String,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken,boolean,boolean) -> createBoundField
    145:179:java.util.Map getBoundFields(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken,java.lang.Class) -> getBoundFields
be.alexandre01.dnplugin.shaded.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    java.lang.reflect.Field val$field -> val$field
    boolean val$jsonAdapterPresent -> val$jsonAdapterPresent
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    be.alexandre01.dnplugin.shaded.gson.Gson val$context -> val$context
    be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken val$fieldType -> val$fieldType
    boolean val$isPrimitive -> val$isPrimitive
    be.alexandre01.dnplugin.shaded.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> this$0
    120:120:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.bind.ReflectiveTypeAdapterFactory,java.lang.String,boolean,boolean,java.lang.reflect.Field,boolean,be.alexandre01.dnplugin.shaded.gson.TypeAdapter,be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken,boolean) -> <init>
    124:128:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
    131:135:void read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader,java.lang.Object) -> read
    137:139:boolean writeField(java.lang.Object) -> writeField
be.alexandre01.dnplugin.shaded.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> be.alexandre01.dnplugin.shaded.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    be.alexandre01.dnplugin.shaded.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Map boundFields -> boundFields
    201:204:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.ObjectConstructor,java.util.Map) -> <init>
    207:231:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    235:252:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> be.alexandre01.dnplugin.shaded.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    java.lang.String name -> name
    boolean serialized -> serialized
    boolean deserialized -> deserialized
    187:191:void <init>(java.lang.String,boolean,boolean) -> <init>
    boolean writeField(java.lang.Object) -> writeField
    void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader,java.lang.Object) -> read
be.alexandre01.dnplugin.shaded.gson.internal.bind.TreeTypeAdapter -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TreeTypeAdapter:
    be.alexandre01.dnplugin.shaded.gson.JsonSerializer serializer -> serializer
    be.alexandre01.dnplugin.shaded.gson.JsonDeserializer deserializer -> deserializer
    be.alexandre01.dnplugin.shaded.gson.Gson gson -> gson
    be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken typeToken -> typeToken
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory skipPast -> skipPast
    be.alexandre01.dnplugin.shaded.gson.internal.bind.TreeTypeAdapter$GsonContextImpl context -> context
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter delegate -> delegate
    47:59:void <init>(be.alexandre01.dnplugin.shaded.gson.JsonSerializer,be.alexandre01.dnplugin.shaded.gson.JsonDeserializer,be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken,be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory) -> <init>
    62:69:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    73:83:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
    86:89:be.alexandre01.dnplugin.shaded.gson.TypeAdapter delegate() -> delegate
    96:96:be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory newFactory(be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken,java.lang.Object) -> newFactory
    106:107:be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory newFactoryWithMatchRawType(be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken,java.lang.Object) -> newFactoryWithMatchRawType
    116:116:be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object) -> newTypeHierarchyFactory
be.alexandre01.dnplugin.shaded.gson.internal.bind.TreeTypeAdapter$1 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TreeTypeAdapter$1:
be.alexandre01.dnplugin.shaded.gson.internal.bind.TreeTypeAdapter$GsonContextImpl -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TreeTypeAdapter$GsonContextImpl:
    be.alexandre01.dnplugin.shaded.gson.internal.bind.TreeTypeAdapter this$0 -> this$0
    153:153:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.bind.TreeTypeAdapter) -> <init>
    155:155:be.alexandre01.dnplugin.shaded.gson.JsonElement serialize(java.lang.Object) -> serialize
    158:158:be.alexandre01.dnplugin.shaded.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
    162:162:java.lang.Object deserialize(be.alexandre01.dnplugin.shaded.gson.JsonElement,java.lang.reflect.Type) -> deserialize
    153:153:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.bind.TreeTypeAdapter,be.alexandre01.dnplugin.shaded.gson.internal.bind.TreeTypeAdapter$1) -> <init>
be.alexandre01.dnplugin.shaded.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory:
    be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken exactType -> exactType
    boolean matchRawType -> matchRawType
    java.lang.Class hierarchyType -> hierarchyType
    be.alexandre01.dnplugin.shaded.gson.JsonSerializer serializer -> serializer
    be.alexandre01.dnplugin.shaded.gson.JsonDeserializer deserializer -> deserializer
    127:138:void <init>(java.lang.Object,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken,boolean,java.lang.Class) -> <init>
    143:149:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    be.alexandre01.dnplugin.shaded.gson.Gson context -> context
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter delegate -> delegate
    java.lang.reflect.Type type -> type
    33:37:void <init>(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.TypeAdapter,java.lang.reflect.Type) -> <init>
    41:41:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    53:70:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
    76:80:java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters:
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter CLASS -> CLASS
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory CLASS_FACTORY -> CLASS_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter BIT_SET -> BIT_SET
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory BIT_SET_FACTORY -> BIT_SET_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter BOOLEAN -> BOOLEAN
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter BOOLEAN_AS_STRING -> BOOLEAN_AS_STRING
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory BOOLEAN_FACTORY -> BOOLEAN_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter BYTE -> BYTE
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory BYTE_FACTORY -> BYTE_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter SHORT -> SHORT
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory SHORT_FACTORY -> SHORT_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter INTEGER -> INTEGER
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory INTEGER_FACTORY -> INTEGER_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter ATOMIC_INTEGER -> ATOMIC_INTEGER
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory ATOMIC_INTEGER_FACTORY -> ATOMIC_INTEGER_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter ATOMIC_BOOLEAN -> ATOMIC_BOOLEAN
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory ATOMIC_BOOLEAN_FACTORY -> ATOMIC_BOOLEAN_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter ATOMIC_INTEGER_ARRAY -> ATOMIC_INTEGER_ARRAY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory ATOMIC_INTEGER_ARRAY_FACTORY -> ATOMIC_INTEGER_ARRAY_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter LONG -> LONG
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter FLOAT -> FLOAT
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter DOUBLE -> DOUBLE
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter CHARACTER -> CHARACTER
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory CHARACTER_FACTORY -> CHARACTER_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter STRING -> STRING
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter BIG_DECIMAL -> BIG_DECIMAL
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter BIG_INTEGER -> BIG_INTEGER
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory STRING_FACTORY -> STRING_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter STRING_BUILDER -> STRING_BUILDER
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> STRING_BUILDER_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter STRING_BUFFER -> STRING_BUFFER
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> STRING_BUFFER_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter URL -> URL
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory URL_FACTORY -> URL_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter URI -> URI
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory URI_FACTORY -> URI_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter INET_ADDRESS -> INET_ADDRESS
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> INET_ADDRESS_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter UUID -> UUID
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory UUID_FACTORY -> UUID_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter CURRENCY -> CURRENCY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory CURRENCY_FACTORY -> CURRENCY_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter CALENDAR -> CALENDAR
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory CALENDAR_FACTORY -> CALENDAR_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter LOCALE -> LOCALE
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory LOCALE_FACTORY -> LOCALE_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter JSON_ELEMENT -> JSON_ELEMENT
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> JSON_ELEMENT_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory ENUM_FACTORY -> ENUM_FACTORY
    65:66:void <init>() -> <init>
    796:796:be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory newFactory(be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken,be.alexandre01.dnplugin.shaded.gson.TypeAdapter) -> newFactory
    806:806:be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory newFactory(java.lang.Class,be.alexandre01.dnplugin.shaded.gson.TypeAdapter) -> newFactory
    819:819:be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,be.alexandre01.dnplugin.shaded.gson.TypeAdapter) -> newFactory
    834:834:be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,be.alexandre01.dnplugin.shaded.gson.TypeAdapter) -> newFactoryForMultipleTypes
    853:853:be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,be.alexandre01.dnplugin.shaded.gson.TypeAdapter) -> newTypeHierarchyFactory
    70:780:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$1 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$1:
    70:70:void <init>() -> <init>
    73:74:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Class) -> write
    78:78:java.lang.Class read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    70:70:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    70:70:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$10 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$10:
    266:266:void <init>() -> <init>
    268:284:java.util.concurrent.atomic.AtomicIntegerArray read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    287:292:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicIntegerArray) -> write
    266:266:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    266:266:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$11 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$11:
    297:297:void <init>() -> <init>
    300:307:java.lang.Number read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    312:313:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Number) -> write
    297:297:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    297:297:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$12 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$12:
    316:316:void <init>() -> <init>
    319:323:java.lang.Number read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    327:328:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Number) -> write
    316:316:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    316:316:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$13 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$13:
    331:331:void <init>() -> <init>
    334:338:java.lang.Number read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    342:343:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Number) -> write
    331:331:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    331:331:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$14 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$14:
    346:346:void <init>() -> <init>
    349:357:java.lang.Character read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    361:362:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Character) -> write
    346:346:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    346:346:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$15 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$15:
    368:368:void <init>() -> <init>
    371:380:java.lang.String read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    384:385:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.String) -> write
    368:368:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    368:368:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$16 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$16:
    388:388:void <init>() -> <init>
    390:397:java.math.BigDecimal read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    402:403:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.math.BigDecimal) -> write
    388:388:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    388:388:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$17 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$17:
    406:406:void <init>() -> <init>
    408:415:java.math.BigInteger read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    420:421:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.math.BigInteger) -> write
    406:406:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    406:406:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$18 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$18:
    426:426:void <init>() -> <init>
    429:433:java.lang.StringBuilder read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    437:438:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
    426:426:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    426:426:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$19 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$19:
    444:444:void <init>() -> <init>
    447:451:java.lang.StringBuffer read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    455:456:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
    444:444:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    444:444:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$2 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$2:
    85:85:void <init>() -> <init>
    87:119:java.util.BitSet read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    123:129:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.util.BitSet) -> write
    85:85:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    85:85:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$20 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$20:
    462:462:void <init>() -> <init>
    465:470:java.net.URL read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    474:475:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.net.URL) -> write
    462:462:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    462:462:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$21 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$21:
    480:480:void <init>() -> <init>
    483:491:java.net.URI read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    496:497:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.net.URI) -> write
    480:480:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    480:480:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$22 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$22:
    502:502:void <init>() -> <init>
    505:510:java.net.InetAddress read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    514:515:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.net.InetAddress) -> write
    502:502:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    502:502:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$23 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$23:
    521:521:void <init>() -> <init>
    524:528:java.util.UUID read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    532:533:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.util.UUID) -> write
    521:521:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    521:521:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$24 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$24:
    538:538:void <init>() -> <init>
    541:541:java.util.Currency read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    545:546:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.util.Currency) -> write
    538:538:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    538:538:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$25 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$25:
    java.lang.String YEAR -> YEAR
    java.lang.String MONTH -> MONTH
    java.lang.String DAY_OF_MONTH -> DAY_OF_MONTH
    java.lang.String HOUR_OF_DAY -> HOUR_OF_DAY
    java.lang.String MINUTE -> MINUTE
    java.lang.String SECOND -> SECOND
    550:550:void <init>() -> <init>
    560:589:java.util.Calendar read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    594:612:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.util.Calendar) -> write
    550:550:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    550:550:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$26 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$26:
    618:618:void <init>() -> <init>
    621:644:java.util.Locale read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    649:650:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.util.Locale) -> write
    618:618:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    618:618:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$27 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$27:
    655:655:void <init>() -> <init>
    657:693:be.alexandre01.dnplugin.shaded.gson.JsonElement read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    698:728:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,be.alexandre01.dnplugin.shaded.gson.JsonElement) -> write
    655:655:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    655:655:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$28 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$28:
    780:780:void <init>() -> <init>
    783:790:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$29 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$29:
    be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken val$type -> val$type
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    796:796:void <init>(be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken,be.alexandre01.dnplugin.shaded.gson.TypeAdapter) -> <init>
    799:799:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$3 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$3:
    134:134:void <init>() -> <init>
    137:145:java.lang.Boolean read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    149:150:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Boolean) -> write
    134:134:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    134:134:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$30 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$30:
    java.lang.Class val$type -> val$type
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    806:806:void <init>(java.lang.Class,be.alexandre01.dnplugin.shaded.gson.TypeAdapter) -> <init>
    809:809:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
    812:812:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$31 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$31:
    java.lang.Class val$unboxed -> val$unboxed
    java.lang.Class val$boxed -> val$boxed
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    819:819:void <init>(java.lang.Class,java.lang.Class,be.alexandre01.dnplugin.shaded.gson.TypeAdapter) -> <init>
    822:823:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
    826:827:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$32 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$32:
    java.lang.Class val$base -> val$base
    java.lang.Class val$sub -> val$sub
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    834:834:void <init>(java.lang.Class,java.lang.Class,be.alexandre01.dnplugin.shaded.gson.TypeAdapter) -> <init>
    837:838:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
    841:842:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$33 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$33:
    java.lang.Class val$clazz -> val$clazz
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    853:853:void <init>(java.lang.Class,be.alexandre01.dnplugin.shaded.gson.TypeAdapter) -> <init>
    856:860:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
    876:876:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$33$1 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$33$1:
    java.lang.Class val$requestedType -> val$requestedType
    be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$33 this$0 -> this$0
    860:860:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$33,java.lang.Class) -> <init>
    862:863:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
    866:871:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$34 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$34:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
    93:93:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$4 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$4:
    157:157:void <init>() -> <init>
    159:163:java.lang.Boolean read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    167:168:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Boolean) -> write
    157:157:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    157:157:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$5 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$5:
    174:174:void <init>() -> <init>
    177:185:java.lang.Number read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    190:191:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Number) -> write
    174:174:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    174:174:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$6 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$6:
    197:197:void <init>() -> <init>
    200:207:java.lang.Number read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    212:213:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Number) -> write
    197:197:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    197:197:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$7 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$7:
    219:219:void <init>() -> <init>
    222:229:java.lang.Number read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    234:235:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Number) -> write
    219:219:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    219:219:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$8 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$8:
    240:240:void <init>() -> <init>
    243:245:java.util.concurrent.atomic.AtomicInteger read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    249:250:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicInteger) -> write
    240:240:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    240:240:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$9 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$9:
    255:255:void <init>() -> <init>
    257:257:java.util.concurrent.atomic.AtomicBoolean read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    260:261:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicBoolean) -> write
    255:255:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    255:255:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    java.util.Map nameToConstant -> nameToConstant
    java.util.Map constantToName -> constantToName
    735:766:void <init>(java.lang.Class) -> <init>
    768:772:java.lang.Enum read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    776:777:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Enum) -> write
    734:734:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    734:734:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$EnumTypeAdapter$1 -> be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$EnumTypeAdapter$1:
    java.lang.reflect.Field val$field -> val$field
    be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$EnumTypeAdapter this$0 -> this$0
    744:744:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.bind.TypeAdapters$EnumTypeAdapter,java.lang.reflect.Field) -> <init>
    746:747:java.lang.Void run() -> run
    744:744:java.lang.Object run() -> run
be.alexandre01.dnplugin.shaded.gson.internal.bind.util.ISO8601Utils -> be.alexandre01.dnplugin.shaded.gson.internal.bind.util.ISO8601Utils:
    java.lang.String UTC_ID -> UTC_ID
    java.util.TimeZone TIMEZONE_UTC -> TIMEZONE_UTC
    17:17:void <init>() -> <init>
    45:45:java.lang.String format(java.util.Date) -> format
    56:56:java.lang.String format(java.util.Date,boolean) -> format
    68:105:java.lang.String format(java.util.Date,boolean,java.util.TimeZone) -> format
    124:276:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    288:288:boolean checkOffset(java.lang.String,int,char) -> checkOffset
    301:323:int parseInt(java.lang.String,int,int) -> parseInt
    334:339:void padInt(java.lang.StringBuilder,int,int) -> padInt
    345:349:int indexOfNonDigit(java.lang.String,int) -> indexOfNonDigit
    30:30:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.reflect.PreJava9ReflectionAccessor -> be.alexandre01.dnplugin.shaded.gson.internal.reflect.PreJava9ReflectionAccessor:
    26:26:void <init>() -> <init>
    31:32:void makeAccessible(java.lang.reflect.AccessibleObject) -> makeAccessible
be.alexandre01.dnplugin.shaded.gson.internal.reflect.ReflectionAccessor -> be.alexandre01.dnplugin.shaded.gson.internal.reflect.ReflectionAccessor:
    be.alexandre01.dnplugin.shaded.gson.internal.reflect.ReflectionAccessor instance -> instance
    33:33:void <init>() -> <init>
    void makeAccessible(java.lang.reflect.AccessibleObject) -> makeAccessible
    52:52:be.alexandre01.dnplugin.shaded.gson.internal.reflect.ReflectionAccessor getInstance() -> getInstance
    36:36:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.reflect.UnsafeReflectionAccessor -> be.alexandre01.dnplugin.shaded.gson.internal.reflect.UnsafeReflectionAccessor:
    java.lang.Class unsafeClass -> unsafeClass
    java.lang.Object theUnsafe -> theUnsafe
    java.lang.reflect.Field overrideField -> overrideField
    31:35:void <init>() -> <init>
    40:51:void makeAccessible(java.lang.reflect.AccessibleObject) -> makeAccessible
    55:65:boolean makeAccessibleWithUnsafe(java.lang.reflect.AccessibleObject) -> makeAccessibleWithUnsafe
    70:75:java.lang.Object getUnsafeInstance() -> getUnsafeInstance
    81:83:java.lang.reflect.Field getOverrideField() -> getOverrideField
be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlDateTypeAdapter -> be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlDateTypeAdapter:
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    47:50:void <init>() -> <init>
    54:62:java.sql.Date read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    68:69:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.sql.Date) -> write
    38:38:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    38:38:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
    38:38:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlDateTypeAdapter$1) -> <init>
    39:39:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlDateTypeAdapter$1 -> be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlDateTypeAdapter$1:
    39:39:void <init>() -> <init>
    42:43:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlTimeTypeAdapter -> be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlTimeTypeAdapter:
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    48:51:void <init>() -> <init>
    54:62:java.sql.Time read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    67:68:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.sql.Time) -> write
    40:40:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    40:40:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
    40:40:void <init>(be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlTimeTypeAdapter$1) -> <init>
    41:41:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlTimeTypeAdapter$1 -> be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlTimeTypeAdapter$1:
    41:41:void <init>() -> <init>
    44:44:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlTimestampTypeAdapter -> be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlTimestampTypeAdapter:
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory FACTORY -> FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapter dateTypeAdapter -> dateTypeAdapter
    29:31:void <init>(be.alexandre01.dnplugin.shaded.gson.TypeAdapter) -> <init>
    35:36:java.sql.Timestamp read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    41:42:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.sql.Timestamp) -> write
    14:14:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> read
    14:14:void write(be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter,java.lang.Object) -> write
    14:14:void <init>(be.alexandre01.dnplugin.shaded.gson.TypeAdapter,be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlTimestampTypeAdapter$1) -> <init>
    15:15:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlTimestampTypeAdapter$1 -> be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlTimestampTypeAdapter$1:
    15:15:void <init>() -> <init>
    18:22:be.alexandre01.dnplugin.shaded.gson.TypeAdapter create(be.alexandre01.dnplugin.shaded.gson.Gson,be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> create
be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlTypesSupport -> be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlTypesSupport:
    boolean SUPPORTS_SQL_TYPES -> SUPPORTS_SQL_TYPES
    be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$DateType DATE_DATE_TYPE -> DATE_DATE_TYPE
    be.alexandre01.dnplugin.shaded.gson.internal.bind.DefaultDateTypeAdapter$DateType TIMESTAMP_DATE_TYPE -> TIMESTAMP_DATE_TYPE
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory DATE_FACTORY -> DATE_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory TIME_FACTORY -> TIME_FACTORY
    be.alexandre01.dnplugin.shaded.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> TIMESTAMP_FACTORY
    69:70:void <init>() -> <init>
    37:67:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlTypesSupport$1 -> be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlTypesSupport$1:
    45:45:void <init>(java.lang.Class) -> <init>
    47:47:java.sql.Date deserialize(java.util.Date) -> deserialize
    45:45:java.util.Date deserialize(java.util.Date) -> deserialize
be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlTypesSupport$2 -> be.alexandre01.dnplugin.shaded.gson.internal.sql.SqlTypesSupport$2:
    50:50:void <init>(java.lang.Class) -> <init>
    52:52:java.sql.Timestamp deserialize(java.util.Date) -> deserialize
    50:50:java.util.Date deserialize(java.util.Date) -> deserialize
be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken -> be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken:
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    int hashCode -> hashCode
    61:65:void <init>() -> <init>
    71:75:void <init>(java.lang.reflect.Type) -> <init>
    82:87:java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    94:94:java.lang.Class getRawType() -> getRawType
    101:101:java.lang.reflect.Type getType() -> getType
    112:112:boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    123:140:boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    153:153:boolean isAssignableFrom(be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken) -> isAssignableFrom
    161:178:boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> isAssignableFrom
    188:231:boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignableFrom
    240:250:boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> typeEquals
    257:265:java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> buildUnexpectedTypeError
    273:275:boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> matches
    280:280:int hashCode() -> hashCode
    284:285:boolean equals(java.lang.Object) -> equals
    289:289:java.lang.String toString() -> toString
    296:296:be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    303:303:be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken get(java.lang.Class) -> get
    311:311:be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken getParameterized(java.lang.reflect.Type,java.lang.reflect.Type[]) -> getParameterized
    318:318:be.alexandre01.dnplugin.shaded.gson.reflect.TypeToken getArray(java.lang.reflect.Type) -> getArray
be.alexandre01.dnplugin.shaded.gson.stream.JsonReader -> be.alexandre01.dnplugin.shaded.gson.stream.JsonReader:
    long MIN_INCOMPLETE_INTEGER -> MIN_INCOMPLETE_INTEGER
    int PEEKED_NONE -> PEEKED_NONE
    int PEEKED_BEGIN_OBJECT -> PEEKED_BEGIN_OBJECT
    int PEEKED_END_OBJECT -> PEEKED_END_OBJECT
    int PEEKED_BEGIN_ARRAY -> PEEKED_BEGIN_ARRAY
    int PEEKED_END_ARRAY -> PEEKED_END_ARRAY
    int PEEKED_TRUE -> PEEKED_TRUE
    int PEEKED_FALSE -> PEEKED_FALSE
    int PEEKED_NULL -> PEEKED_NULL
    int PEEKED_SINGLE_QUOTED -> PEEKED_SINGLE_QUOTED
    int PEEKED_DOUBLE_QUOTED -> PEEKED_DOUBLE_QUOTED
    int PEEKED_UNQUOTED -> PEEKED_UNQUOTED
    int PEEKED_BUFFERED -> PEEKED_BUFFERED
    int PEEKED_SINGLE_QUOTED_NAME -> PEEKED_SINGLE_QUOTED_NAME
    int PEEKED_DOUBLE_QUOTED_NAME -> PEEKED_DOUBLE_QUOTED_NAME
    int PEEKED_UNQUOTED_NAME -> PEEKED_UNQUOTED_NAME
    int PEEKED_LONG -> PEEKED_LONG
    int PEEKED_NUMBER -> PEEKED_NUMBER
    int PEEKED_EOF -> PEEKED_EOF
    int NUMBER_CHAR_NONE -> NUMBER_CHAR_NONE
    int NUMBER_CHAR_SIGN -> NUMBER_CHAR_SIGN
    int NUMBER_CHAR_DIGIT -> NUMBER_CHAR_DIGIT
    int NUMBER_CHAR_DECIMAL -> NUMBER_CHAR_DECIMAL
    int NUMBER_CHAR_FRACTION_DIGIT -> NUMBER_CHAR_FRACTION_DIGIT
    int NUMBER_CHAR_EXP_E -> NUMBER_CHAR_EXP_E
    int NUMBER_CHAR_EXP_SIGN -> NUMBER_CHAR_EXP_SIGN
    int NUMBER_CHAR_EXP_DIGIT -> NUMBER_CHAR_EXP_DIGIT
    java.io.Reader in -> in
    boolean lenient -> lenient
    char[] buffer -> buffer
    int pos -> pos
    int limit -> limit
    int lineNumber -> lineNumber
    int lineStart -> lineStart
    int peeked -> peeked
    long peekedLong -> peekedLong
    int peekedNumberLength -> peekedNumberLength
    java.lang.String peekedString -> peekedString
    int[] stack -> stack
    int stackSize -> stackSize
    java.lang.String[] pathNames -> pathNames
    int[] pathIndices -> pathIndices
    229:293:void <init>(java.io.Reader) -> <init>
    325:326:void setLenient(boolean) -> setLenient
    332:332:boolean isLenient() -> isLenient
    340:351:void beginArray() -> beginArray
    358:369:void endArray() -> endArray
    376:386:void beginObject() -> beginObject
    393:405:void endObject() -> endObject
    411:415:boolean hasNext() -> hasNext
    422:456:be.alexandre01.dnplugin.shaded.gson.stream.JsonToken peek() -> peek
    461:593:int doPeek() -> doPeek
    598:637:int peekKeyword() -> peekKeyword
    642:739:int peekNumber() -> peekNumber
    744:764:boolean isLiteral(char) -> isLiteral
    776:792:java.lang.String nextName() -> nextName
    804:828:java.lang.String nextString() -> nextString
    839:852:boolean nextBoolean() -> nextBoolean
    863:873:void nextNull() -> nextNull
    885:916:double nextDouble() -> nextDouble
    930:971:long nextLong() -> nextLong
    986:1032:java.lang.String nextQuotedValue(char) -> nextQuotedValue
    1040:1091:java.lang.String nextUnquotedValue() -> nextUnquotedValue
    1096:1118:void skipQuotedValue(char) -> skipQuotedValue
    1123:1149:void skipUnquotedValue() -> skipUnquotedValue
    1162:1208:int nextInt() -> nextInt
    1215:1219:void close() -> close
    1227:1260:void skipValue() -> skipValue
    1263:1270:void push(int) -> push
    1278:1303:boolean fillBuffer(int) -> fillBuffer
    1321:1397:int nextNonWhitespace(boolean) -> nextNonWhitespace
    1402:1405:void checkLenient() -> checkLenient
    1413:1423:void skipToEndOfLine() -> skipToEndOfLine
    1429:1444:boolean skipTo(java.lang.String) -> skipTo
    1448:1448:java.lang.String toString() -> toString
    1452:1454:java.lang.String locationString() -> locationString
    1462:1485:java.lang.String getPath() -> getPath
    1498:1553:char readEscapeCharacter() -> readEscapeCharacter
    1562:1562:java.io.IOException syntaxError(java.lang.String) -> syntaxError
    1570:1585:void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    1588:1610:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.stream.JsonReader$1 -> be.alexandre01.dnplugin.shaded.gson.stream.JsonReader$1:
    1588:1588:void <init>() -> <init>
    1590:1608:void promoteNameToValue(be.alexandre01.dnplugin.shaded.gson.stream.JsonReader) -> promoteNameToValue
be.alexandre01.dnplugin.shaded.gson.stream.JsonScope -> be.alexandre01.dnplugin.shaded.gson.stream.JsonScope:
    int EMPTY_ARRAY -> EMPTY_ARRAY
    int NONEMPTY_ARRAY -> NONEMPTY_ARRAY
    int EMPTY_OBJECT -> EMPTY_OBJECT
    int DANGLING_NAME -> DANGLING_NAME
    int NONEMPTY_OBJECT -> NONEMPTY_OBJECT
    int EMPTY_DOCUMENT -> EMPTY_DOCUMENT
    int NONEMPTY_DOCUMENT -> NONEMPTY_DOCUMENT
    int CLOSED -> CLOSED
    25:25:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.gson.stream.JsonToken -> be.alexandre01.dnplugin.shaded.gson.stream.JsonToken:
    be.alexandre01.dnplugin.shaded.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    be.alexandre01.dnplugin.shaded.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    be.alexandre01.dnplugin.shaded.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    be.alexandre01.dnplugin.shaded.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    be.alexandre01.dnplugin.shaded.gson.stream.JsonToken NAME -> NAME
    be.alexandre01.dnplugin.shaded.gson.stream.JsonToken STRING -> STRING
    be.alexandre01.dnplugin.shaded.gson.stream.JsonToken NUMBER -> NUMBER
    be.alexandre01.dnplugin.shaded.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    be.alexandre01.dnplugin.shaded.gson.stream.JsonToken NULL -> NULL
    be.alexandre01.dnplugin.shaded.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    be.alexandre01.dnplugin.shaded.gson.stream.JsonToken[] $VALUES -> $VALUES
    25:25:be.alexandre01.dnplugin.shaded.gson.stream.JsonToken[] values() -> values
    25:25:be.alexandre01.dnplugin.shaded.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
    25:25:void <init>(java.lang.String,int) -> <init>
    25:84:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter -> be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter:
    java.lang.String[] REPLACEMENT_CHARS -> REPLACEMENT_CHARS
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> HTML_SAFE_REPLACEMENT_CHARS
    java.io.Writer out -> out
    int[] stack -> stack
    int stackSize -> stackSize
    java.lang.String indent -> indent
    java.lang.String separator -> separator
    boolean lenient -> lenient
    boolean htmlSafe -> htmlSafe
    java.lang.String deferredName -> deferredName
    boolean serializeNulls -> serializeNulls
    168:203:void <init>(java.io.Writer) -> <init>
    214:221:void setIndent(java.lang.String) -> setIndent
    236:237:void setLenient(boolean) -> setLenient
    243:243:boolean isLenient() -> isLenient
    254:255:void setHtmlSafe(boolean) -> setHtmlSafe
    262:262:boolean isHtmlSafe() -> isHtmlSafe
    270:271:void setSerializeNulls(boolean) -> setSerializeNulls
    278:278:boolean getSerializeNulls() -> getSerializeNulls
    288:289:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter beginArray() -> beginArray
    298:298:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter endArray() -> endArray
    308:309:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter beginObject() -> beginObject
    318:318:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter endObject() -> endObject
    326:329:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter open(int,char) -> open
    338:351:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter close(int,int,char) -> close
    355:359:void push(int) -> push
    365:368:int peek() -> peek
    375:376:void replaceTop(int) -> replaceTop
    385:395:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter name(java.lang.String) -> name
    399:404:void writeDeferredName() -> writeDeferredName
    413:419:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter value(java.lang.String) -> value
    430:436:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter jsonValue(java.lang.String) -> jsonValue
    445:455:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter nullValue() -> nullValue
    464:467:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter value(boolean) -> value
    476:482:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter value(java.lang.Boolean) -> value
    493:499:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter value(double) -> value
    508:511:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter value(long) -> value
    522:534:be.alexandre01.dnplugin.shaded.gson.stream.JsonWriter value(java.lang.Number) -> value
    542:546:void flush() -> flush
    554:561:void close() -> close
    564:593:void string(java.lang.String) -> string
    596:604:void newline() -> newline
    611:619:void beforeName() -> beforeName
    628:657:void beforeValue() -> beforeValue
    146:163:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.gson.stream.MalformedJsonException -> be.alexandre01.dnplugin.shaded.gson.stream.MalformedJsonException:
    long serialVersionUID -> serialVersionUID
    29:30:void <init>(java.lang.String) -> <init>
    33:37:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    39:43:void <init>(java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap -> be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap:
    be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup group -> group
    be.alexandre01.dnplugin.shaded.netty.bootstrap.ChannelFactory channelFactory -> channelFactory
    java.net.SocketAddress localAddress -> localAddress
    java.util.Map options -> options
    java.util.Map attrs -> attrs
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler handler -> handler
    52:58:void <init>() -> <init>
    52:71:void <init>(be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap) -> <init>
    79:86:be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap group(be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup) -> group
    95:98:be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap channel(java.lang.Class) -> channel
    110:118:be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap channelFactory(be.alexandre01.dnplugin.shaded.netty.bootstrap.ChannelFactory) -> channelFactory
    127:128:be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap localAddress(java.net.SocketAddress) -> localAddress
    135:135:be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap localAddress(int) -> localAddress
    142:142:be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap localAddress(java.lang.String,int) -> localAddress
    149:149:be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap localAddress(java.net.InetAddress,int) -> localAddress
    158:170:be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap option(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption,java.lang.Object) -> option
    178:193:be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap attr(be.alexandre01.dnplugin.shaded.netty.util.AttributeKey,java.lang.Object) -> attr
    202:208:be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap validate() -> validate
    be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap clone() -> clone
    224:225:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture register() -> register
    232:237:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bind() -> bind
    244:244:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bind(int) -> bind
    251:251:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bind(java.lang.String,int) -> bind
    258:258:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bind(java.net.InetAddress,int) -> bind
    265:269:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    273:294:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture doBind(java.net.SocketAddress) -> doBind
    298:325:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture initAndRegister() -> initAndRegister
    void init(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> init
    336:346:void doBind0(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture,be.alexandre01.dnplugin.shaded.netty.channel.Channel,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> doBind0
    353:357:be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap handler(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> handler
    361:361:java.net.SocketAddress localAddress() -> localAddress
    365:365:be.alexandre01.dnplugin.shaded.netty.bootstrap.ChannelFactory channelFactory() -> channelFactory
    369:369:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler handler() -> handler
    376:376:be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup group() -> group
    380:380:java.util.Map options() -> options
    384:384:java.util.Map attrs() -> attrs
    389:432:java.lang.String toString() -> toString
    47:47:java.lang.Object clone() -> clone
    47:47:void access$100(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture,be.alexandre01.dnplugin.shaded.netty.channel.Channel,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> access$100
be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap$1 -> be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture val$regFuture -> val$regFuture
    be.alexandre01.dnplugin.shaded.netty.channel.Channel val$channel -> val$channel
    java.net.SocketAddress val$localAddress -> val$localAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap this$0 -> this$0
    286:286:void <init>(be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap,be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture,be.alexandre01.dnplugin.shaded.netty.channel.Channel,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    289:290:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    286:286:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap$2 -> be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap$2:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture val$regFuture -> val$regFuture
    be.alexandre01.dnplugin.shaded.netty.channel.Channel val$channel -> val$channel
    java.net.SocketAddress val$localAddress -> val$localAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    336:336:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture,be.alexandre01.dnplugin.shaded.netty.channel.Channel,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    339:344:void run() -> run
be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap$BootstrapChannelFactory -> be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap$BootstrapChannelFactory:
    java.lang.Class clazz -> clazz
    438:440:void <init>(java.lang.Class) -> <init>
    445:447:be.alexandre01.dnplugin.shaded.netty.channel.Channel newChannel() -> newChannel
    453:453:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise -> be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise:
    459:460:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> <init>
    464:472:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor executor() -> executor
    457:457:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.bootstrap.Bootstrap -> be.alexandre01.dnplugin.shaded.netty.bootstrap.Bootstrap:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.net.SocketAddress remoteAddress -> remoteAddress
    47:47:void <init>() -> <init>
    50:52:void <init>(be.alexandre01.dnplugin.shaded.netty.bootstrap.Bootstrap) -> <init>
    59:60:be.alexandre01.dnplugin.shaded.netty.bootstrap.Bootstrap remoteAddress(java.net.SocketAddress) -> remoteAddress
    67:68:be.alexandre01.dnplugin.shaded.netty.bootstrap.Bootstrap remoteAddress(java.lang.String,int) -> remoteAddress
    75:76:be.alexandre01.dnplugin.shaded.netty.bootstrap.Bootstrap remoteAddress(java.net.InetAddress,int) -> remoteAddress
    83:89:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect() -> connect
    96:96:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.lang.String,int) -> connect
    103:103:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.InetAddress,int) -> connect
    110:115:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    122:126:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    133:151:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    160:175:void doConnect0(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture,be.alexandre01.dnplugin.shaded.netty.channel.Channel,java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> doConnect0
    180:202:void init(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> init
    206:210:be.alexandre01.dnplugin.shaded.netty.bootstrap.Bootstrap validate() -> validate
    216:216:be.alexandre01.dnplugin.shaded.netty.bootstrap.Bootstrap clone() -> clone
    221:231:java.lang.String toString() -> toString
    41:41:be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap clone() -> clone
    41:41:be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap validate() -> validate
    41:41:java.lang.Object clone() -> clone
    41:41:void access$000(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture,be.alexandre01.dnplugin.shaded.netty.channel.Channel,java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> access$000
    43:43:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.bootstrap.Bootstrap$1 -> be.alexandre01.dnplugin.shaded.netty.bootstrap.Bootstrap$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture val$regFuture -> val$regFuture
    be.alexandre01.dnplugin.shaded.netty.channel.Channel val$channel -> val$channel
    java.net.SocketAddress val$remoteAddress -> val$remoteAddress
    java.net.SocketAddress val$localAddress -> val$localAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.bootstrap.Bootstrap this$0 -> this$0
    143:143:void <init>(be.alexandre01.dnplugin.shaded.netty.bootstrap.Bootstrap,be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture,be.alexandre01.dnplugin.shaded.netty.channel.Channel,java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    146:147:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    143:143:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.bootstrap.Bootstrap$2 -> be.alexandre01.dnplugin.shaded.netty.bootstrap.Bootstrap$2:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture val$regFuture -> val$regFuture
    java.net.SocketAddress val$localAddress -> val$localAddress
    be.alexandre01.dnplugin.shaded.netty.channel.Channel val$channel -> val$channel
    java.net.SocketAddress val$remoteAddress -> val$remoteAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    160:160:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.Channel,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    163:173:void run() -> run
be.alexandre01.dnplugin.shaded.netty.bootstrap.ChannelFactory -> be.alexandre01.dnplugin.shaded.netty.bootstrap.ChannelFactory:
    be.alexandre01.dnplugin.shaded.netty.channel.Channel newChannel() -> newChannel
be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap -> be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.Map childOptions -> childOptions
    java.util.Map childAttrs -> childAttrs
    be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup childGroup -> childGroup
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler childHandler -> childHandler
    49:54:void <init>() -> <init>
    49:66:void <init>(be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap) -> <init>
    73:73:be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap group(be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup) -> group
    82:90:be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap group(be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup,be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup) -> group
    99:111:be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap childOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption,java.lang.Object) -> childOption
    119:127:be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap childAttr(be.alexandre01.dnplugin.shaded.netty.util.AttributeKey,java.lang.Object) -> childAttr
    134:138:be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap childHandler(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> childHandler
    146:146:be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup childGroup() -> childGroup
    151:188:void init(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> init
    192:200:be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap validate() -> validate
    205:205:java.util.Map$Entry[] newOptionArray(int) -> newOptionArray
    210:210:java.util.Map$Entry[] newAttrArray(int) -> newAttrArray
    292:292:be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap clone() -> clone
    297:331:java.lang.String toString() -> toString
    45:45:be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap clone() -> clone
    45:45:be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap validate() -> validate
    45:45:be.alexandre01.dnplugin.shaded.netty.bootstrap.AbstractBootstrap group(be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup) -> group
    45:45:java.lang.Object clone() -> clone
    45:45:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger access$000() -> access$000
    47:47:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap$1 -> be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap$1:
    be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup val$currentChildGroup -> val$currentChildGroup
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler val$currentChildHandler -> val$currentChildHandler
    java.util.Map$Entry[] val$currentChildOptions -> val$currentChildOptions
    java.util.Map$Entry[] val$currentChildAttrs -> val$currentChildAttrs
    be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap this$0 -> this$0
    181:181:void <init>(be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap,be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler,java.util.Map$Entry[],java.util.Map$Entry[]) -> <init>
    184:186:void initChannel(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> initChannel
be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor -> be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor:
    be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup childGroup -> childGroup
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler childHandler -> childHandler
    java.util.Map$Entry[] childOptions -> childOptions
    java.util.Map$Entry[] childAttrs -> childAttrs
    222:227:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler,java.util.Map$Entry[],java.util.Map$Entry[]) -> <init>
    232:262:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    265:267:void forceClose(be.alexandre01.dnplugin.shaded.netty.channel.Channel,java.lang.Throwable) -> forceClose
    271:286:void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    213:213:void access$100(be.alexandre01.dnplugin.shaded.netty.channel.Channel,java.lang.Throwable) -> access$100
be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$1 -> be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$1:
    be.alexandre01.dnplugin.shaded.netty.channel.Channel val$child -> val$child
    be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor this$0 -> this$0
    251:251:void <init>(be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor,be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> <init>
    254:257:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    251:251:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$2 -> be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$2:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig val$config -> val$config
    be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor this$0 -> this$0
    276:276:void <init>(be.alexandre01.dnplugin.shaded.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor,be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig) -> <init>
    279:280:void run() -> run
be.alexandre01.dnplugin.shaded.netty.buffer.AbstractByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.AbstractByteBuf:
    be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector leakDetector -> leakDetector
    int readerIndex -> readerIndex
    int writerIndex -> writerIndex
    int markedReaderIndex -> markedReaderIndex
    int markedWriterIndex -> markedWriterIndex
    int maxCapacity -> maxCapacity
    be.alexandre01.dnplugin.shaded.netty.buffer.SwappedByteBuf swappedBuf -> swappedBuf
    49:54:void <init>(int) -> <init>
    58:58:int maxCapacity() -> maxCapacity
    62:63:void maxCapacity(int) -> maxCapacity
    67:67:int readerIndex() -> readerIndex
    72:77:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    82:82:int writerIndex() -> writerIndex
    87:93:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    98:105:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    110:111:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf clear() -> clear
    116:116:boolean isReadable() -> isReadable
    121:121:boolean isReadable(int) -> isReadable
    126:126:boolean isWritable() -> isWritable
    131:131:boolean isWritable(int) -> isWritable
    136:136:int readableBytes() -> readableBytes
    141:141:int writableBytes() -> writableBytes
    146:146:int maxWritableBytes() -> maxWritableBytes
    151:152:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    157:158:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    163:164:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf markWriterIndex() -> markWriterIndex
    169:170:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf resetWriterIndex() -> resetWriterIndex
    175:189:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    194:211:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    215:228:void adjustMarkers(int) -> adjustMarkers
    232:252:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    257:282:int ensureWritable(int,boolean) -> ensureWritable
    286:310:int calculateNewCapacity(int) -> calculateNewCapacity
    315:326:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    333:333:be.alexandre01.dnplugin.shaded.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> newSwappedByteBuf
    338:339:byte getByte(int) -> getByte
    byte _getByte(int) -> _getByte
    346:346:boolean getBoolean(int) -> getBoolean
    351:351:short getUnsignedByte(int) -> getUnsignedByte
    356:357:short getShort(int) -> getShort
    short _getShort(int) -> _getShort
    364:364:int getUnsignedShort(int) -> getUnsignedShort
    369:370:int getUnsignedMedium(int) -> getUnsignedMedium
    int _getUnsignedMedium(int) -> _getUnsignedMedium
    377:381:int getMedium(int) -> getMedium
    386:387:int getInt(int) -> getInt
    int _getInt(int) -> _getInt
    394:394:long getUnsignedInt(int) -> getUnsignedInt
    399:400:long getLong(int) -> getLong
    long _getLong(int) -> _getLong
    407:407:char getChar(int) -> getChar
    412:412:float getFloat(int) -> getFloat
    417:417:double getDouble(int) -> getDouble
    422:423:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    428:429:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> getBytes
    434:436:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> getBytes
    441:443:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setByte(int,int) -> setByte
    void _setByte(int,int) -> _setByte
    450:451:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBoolean(int,boolean) -> setBoolean
    456:458:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setShort(int,int) -> setShort
    void _setShort(int,int) -> _setShort
    465:466:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setChar(int,int) -> setChar
    471:473:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    void _setMedium(int,int) -> _setMedium
    480:482:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setInt(int,int) -> setInt
    void _setInt(int,int) -> _setInt
    489:490:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    495:497:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setLong(int,long) -> setLong
    void _setLong(int,long) -> _setLong
    504:505:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    510:511:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    516:517:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setBytes
    522:533:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> setBytes
    538:565:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setZero(int,int) -> setZero
    570:574:byte readByte() -> readByte
    579:579:boolean readBoolean() -> readBoolean
    584:584:short readUnsignedByte() -> readUnsignedByte
    589:592:short readShort() -> readShort
    597:597:int readUnsignedShort() -> readUnsignedShort
    602:606:int readMedium() -> readMedium
    611:614:int readUnsignedMedium() -> readUnsignedMedium
    619:622:int readInt() -> readInt
    627:627:long readUnsignedInt() -> readUnsignedInt
    632:635:long readLong() -> readLong
    640:640:char readChar() -> readChar
    645:645:float readFloat() -> readFloat
    650:650:double readDouble() -> readDouble
    655:664:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(int) -> readBytes
    669:671:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readSlice(int) -> readSlice
    676:679:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    684:685:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    690:691:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readBytes
    696:702:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> readBytes
    707:710:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> readBytes
    715:719:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    725:728:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    733:736:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    741:743:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    748:749:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBoolean(boolean) -> writeBoolean
    754:757:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeByte(int) -> writeByte
    762:766:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeShort(int) -> writeShort
    771:775:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    780:784:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeInt(int) -> writeInt
    789:793:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeLong(long) -> writeLong
    798:799:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeChar(int) -> writeChar
    804:805:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    810:811:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    816:820:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    825:826:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    831:832:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> writeBytes
    837:843:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> writeBytes
    848:852:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> writeBytes
    857:862:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    868:874:int writeBytes(java.io.InputStream,int) -> writeBytes
    879:885:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    890:914:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeZero(int) -> writeZero
    919:919:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy() -> copy
    924:924:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf duplicate() -> duplicate
    929:929:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice() -> slice
    934:938:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice(int,int) -> slice
    943:943:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    948:948:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    953:953:java.lang.String toString(java.nio.charset.Charset) -> toString
    958:971:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    976:976:int indexOf(int,int,byte) -> indexOf
    981:981:int bytesBefore(byte) -> bytesBefore
    986:987:int bytesBefore(int,byte) -> bytesBefore
    992:996:int bytesBefore(int,int,byte) -> bytesBefore
    1001:1004:int forEachByte(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByte
    1009:1010:int forEachByte(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByte
    1014:1036:int forEachByteAsc0(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteAsc0
    1041:1044:int forEachByteDesc(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteDesc
    1049:1051:int forEachByteDesc(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteDesc
    1056:1077:int forEachByteDesc0(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteDesc0
    1082:1082:int hashCode() -> hashCode
    1087:1093:boolean equals(java.lang.Object) -> equals
    1098:1098:int compareTo(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> compareTo
    1103:1126:java.lang.String toString() -> toString
    1130:1135:void checkIndex(int) -> checkIndex
    1138:1146:void checkIndex(int,int) -> checkIndex
    1149:1154:void checkSrcIndex(int,int,int,int) -> checkSrcIndex
    1157:1162:void checkDstIndex(int,int,int,int) -> checkDstIndex
    1170:1179:void checkReadableBytes(int) -> checkReadableBytes
    1186:1189:void ensureAccessible() -> ensureAccessible
    36:36:int compareTo(java.lang.Object) -> compareTo
    38:38:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.AbstractByteBufAllocator -> be.alexandre01.dnplugin.shaded.netty.buffer.AbstractByteBufAllocator:
    int DEFAULT_INITIAL_CAPACITY -> DEFAULT_INITIAL_CAPACITY
    int DEFAULT_MAX_COMPONENTS -> DEFAULT_MAX_COMPONENTS
    boolean directByDefault -> directByDefault
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf emptyBuf -> emptyBuf
    33:48:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf toLeakAwareBuffer(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> toLeakAwareBuffer
    58:59:void <init>() -> <init>
    67:70:void <init>(boolean) -> <init>
    74:77:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer() -> buffer
    82:85:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer(int) -> buffer
    90:93:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer(int,int) -> buffer
    98:101:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf ioBuffer() -> ioBuffer
    106:109:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf ioBuffer(int) -> ioBuffer
    114:117:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf ioBuffer(int,int) -> ioBuffer
    122:122:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf heapBuffer() -> heapBuffer
    127:127:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf heapBuffer(int) -> heapBuffer
    132:136:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf heapBuffer(int,int) -> heapBuffer
    141:141:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf directBuffer() -> directBuffer
    146:146:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    151:155:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    160:163:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf compositeBuffer() -> compositeBuffer
    168:171:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    176:176:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf compositeHeapBuffer() -> compositeHeapBuffer
    181:181:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    186:186:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf compositeDirectBuffer() -> compositeDirectBuffer
    191:191:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    195:203:void validate(int,int) -> validate
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf newHeapBuffer(int,int) -> newHeapBuffer
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf newDirectBuffer(int,int) -> newDirectBuffer
    217:217:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.netty.buffer.AbstractByteBufAllocator$1 -> be.alexandre01.dnplugin.shaded.netty.buffer.AbstractByteBufAllocator$1:
    int[] $SwitchMap$io$netty$util$ResourceLeakDetector$Level -> $SwitchMap$io$netty$util$ResourceLeakDetector$Level
    33:33:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.AbstractDerivedByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.AbstractDerivedByteBuf:
    28:29:void <init>(int) -> <init>
    33:33:int refCnt() -> refCnt
    38:39:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain() -> retain
    44:45:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain(int) -> retain
    50:50:boolean release() -> release
    55:55:boolean release(int) -> release
    60:60:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    65:65:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    25:25:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.buffer.AbstractReferenceCountedByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.AbstractReferenceCountedByteBuf:
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater refCntUpdater -> refCntUpdater
    int refCnt -> refCnt
    40:44:void <init>(int) -> <init>
    48:48:int refCnt() -> refCnt
    55:56:void setRefCnt(int) -> setRefCnt
    61:72:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain() -> retain
    77:93:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain(int) -> retain
    99:111:boolean release() -> release
    116:133:boolean release(int) -> release
    void deallocate() -> deallocate
    27:27:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    27:27:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    32:38:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.AdvancedLeakAwareByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.AdvancedLeakAwareByteBuf:
    be.alexandre01.dnplugin.shaded.netty.util.ResourceLeak leak -> leak
    35:37:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.util.ResourceLeak) -> <init>
    41:47:boolean release() -> release
    52:58:boolean release(int) -> release
    63:67:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    73:74:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice() -> slice
    79:80:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice(int,int) -> slice
    85:86:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf duplicate() -> duplicate
    91:92:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readSlice(int) -> readSlice
    97:98:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    103:104:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    109:110:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    115:116:int ensureWritable(int,boolean) -> ensureWritable
    121:122:boolean getBoolean(int) -> getBoolean
    127:128:byte getByte(int) -> getByte
    133:134:short getUnsignedByte(int) -> getUnsignedByte
    139:140:short getShort(int) -> getShort
    145:146:int getUnsignedShort(int) -> getUnsignedShort
    151:152:int getMedium(int) -> getMedium
    157:158:int getUnsignedMedium(int) -> getUnsignedMedium
    163:164:int getInt(int) -> getInt
    169:170:long getUnsignedInt(int) -> getUnsignedInt
    175:176:long getLong(int) -> getLong
    181:182:char getChar(int) -> getChar
    187:188:float getFloat(int) -> getFloat
    193:194:double getDouble(int) -> getDouble
    199:200:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> getBytes
    205:206:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> getBytes
    211:212:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    217:218:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    223:224:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    229:230:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    235:236:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    241:242:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    247:248:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBoolean(int,boolean) -> setBoolean
    253:254:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setByte(int,int) -> setByte
    259:260:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setShort(int,int) -> setShort
    265:266:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    271:272:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setInt(int,int) -> setInt
    277:278:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setLong(int,long) -> setLong
    283:284:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setChar(int,int) -> setChar
    289:290:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    295:296:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    301:302:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setBytes
    307:308:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> setBytes
    313:314:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setBytes
    319:320:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    325:326:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    331:332:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    337:338:int setBytes(int,java.io.InputStream,int) -> setBytes
    343:344:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    349:350:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setZero(int,int) -> setZero
    355:356:boolean readBoolean() -> readBoolean
    361:362:byte readByte() -> readByte
    367:368:short readUnsignedByte() -> readUnsignedByte
    373:374:short readShort() -> readShort
    379:380:int readUnsignedShort() -> readUnsignedShort
    385:386:int readMedium() -> readMedium
    391:392:int readUnsignedMedium() -> readUnsignedMedium
    397:398:int readInt() -> readInt
    403:404:long readUnsignedInt() -> readUnsignedInt
    409:410:long readLong() -> readLong
    415:416:char readChar() -> readChar
    421:422:float readFloat() -> readFloat
    427:428:double readDouble() -> readDouble
    433:434:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(int) -> readBytes
    439:440:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readBytes
    445:446:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> readBytes
    451:452:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> readBytes
    457:458:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    463:464:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    469:470:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    475:476:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    481:482:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    487:488:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    493:494:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBoolean(boolean) -> writeBoolean
    499:500:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeByte(int) -> writeByte
    505:506:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeShort(int) -> writeShort
    511:512:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    517:518:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeInt(int) -> writeInt
    523:524:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeLong(long) -> writeLong
    529:530:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeChar(int) -> writeChar
    535:536:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    541:542:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    547:548:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> writeBytes
    553:554:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> writeBytes
    559:560:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> writeBytes
    565:566:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    571:572:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    577:578:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    583:584:int writeBytes(java.io.InputStream,int) -> writeBytes
    589:590:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    595:596:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeZero(int) -> writeZero
    601:602:int indexOf(int,int,byte) -> indexOf
    607:608:int bytesBefore(byte) -> bytesBefore
    613:614:int bytesBefore(int,byte) -> bytesBefore
    619:620:int bytesBefore(int,int,byte) -> bytesBefore
    625:626:int forEachByte(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByte
    631:632:int forEachByte(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByte
    637:638:int forEachByteDesc(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteDesc
    643:644:int forEachByteDesc(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteDesc
    649:650:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy() -> copy
    655:656:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy(int,int) -> copy
    661:662:int nioBufferCount() -> nioBufferCount
    667:668:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    673:674:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    679:680:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    685:686:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    691:692:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    697:698:java.lang.String toString(java.nio.charset.Charset) -> toString
    703:704:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    709:710:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain() -> retain
    715:716:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain(int) -> retain
    721:722:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf capacity(int) -> capacity
    30:30:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf:
    230:230:void <init>() -> <init>
    int capacity() -> capacity
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf capacity(int) -> capacity
    int maxCapacity() -> maxCapacity
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc() -> alloc
    java.nio.ByteOrder order() -> order
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf unwrap() -> unwrap
    boolean isDirect() -> isDirect
    int readerIndex() -> readerIndex
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    int writerIndex() -> writerIndex
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    int readableBytes() -> readableBytes
    int writableBytes() -> writableBytes
    int maxWritableBytes() -> maxWritableBytes
    boolean isReadable() -> isReadable
    boolean isReadable(int) -> isReadable
    boolean isWritable() -> isWritable
    boolean isWritable(int) -> isWritable
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf clear() -> clear
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf markWriterIndex() -> markWriterIndex
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf resetWriterIndex() -> resetWriterIndex
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    int ensureWritable(int,boolean) -> ensureWritable
    boolean getBoolean(int) -> getBoolean
    byte getByte(int) -> getByte
    short getUnsignedByte(int) -> getUnsignedByte
    short getShort(int) -> getShort
    int getUnsignedShort(int) -> getUnsignedShort
    int getMedium(int) -> getMedium
    int getUnsignedMedium(int) -> getUnsignedMedium
    int getInt(int) -> getInt
    long getUnsignedInt(int) -> getUnsignedInt
    long getLong(int) -> getLong
    char getChar(int) -> getChar
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> getBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> getBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBoolean(int,boolean) -> setBoolean
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setByte(int,int) -> setByte
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setShort(int,int) -> setShort
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setInt(int,int) -> setInt
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setLong(int,long) -> setLong
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setChar(int,int) -> setChar
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> setBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    int setBytes(int,java.io.InputStream,int) -> setBytes
    int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setZero(int,int) -> setZero
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    short readUnsignedByte() -> readUnsignedByte
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    int readMedium() -> readMedium
    int readUnsignedMedium() -> readUnsignedMedium
    int readInt() -> readInt
    long readUnsignedInt() -> readUnsignedInt
    long readLong() -> readLong
    char readChar() -> readChar
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(int) -> readBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readSlice(int) -> readSlice
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> readBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> readBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBoolean(boolean) -> writeBoolean
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeByte(int) -> writeByte
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeShort(int) -> writeShort
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeInt(int) -> writeInt
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeLong(long) -> writeLong
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeChar(int) -> writeChar
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> writeBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> writeBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> writeBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    int writeBytes(java.io.InputStream,int) -> writeBytes
    int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeZero(int) -> writeZero
    int indexOf(int,int,byte) -> indexOf
    int bytesBefore(byte) -> bytesBefore
    int bytesBefore(int,byte) -> bytesBefore
    int bytesBefore(int,int,byte) -> bytesBefore
    int forEachByte(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByte
    int forEachByte(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByte
    int forEachByteDesc(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteDesc
    int forEachByteDesc(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteDesc
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy() -> copy
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy(int,int) -> copy
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice() -> slice
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice(int,int) -> slice
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf duplicate() -> duplicate
    int nioBufferCount() -> nioBufferCount
    java.nio.ByteBuffer nioBuffer() -> nioBuffer
    java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    boolean hasArray() -> hasArray
    byte[] array() -> array
    int arrayOffset() -> arrayOffset
    boolean hasMemoryAddress() -> hasMemoryAddress
    long memoryAddress() -> memoryAddress
    java.lang.String toString(java.nio.charset.Charset) -> toString
    java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> compareTo
    java.lang.String toString() -> toString
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain(int) -> retain
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain() -> retain
    229:229:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    229:229:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    229:229:int compareTo(java.lang.Object) -> compareTo
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator DEFAULT -> DEFAULT
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer() -> buffer
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer(int) -> buffer
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer(int,int) -> buffer
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf ioBuffer() -> ioBuffer
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf ioBuffer(int) -> ioBuffer
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf ioBuffer(int,int) -> ioBuffer
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf heapBuffer() -> heapBuffer
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf heapBuffer(int) -> heapBuffer
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf heapBuffer(int,int) -> heapBuffer
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf directBuffer() -> directBuffer
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf compositeBuffer() -> compositeBuffer
    be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf compositeHeapBuffer() -> compositeHeapBuffer
    be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf compositeDirectBuffer() -> compositeDirectBuffer
    be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    boolean isDirectBufferPooled() -> isDirectBufferPooled
    24:24:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf content() -> content
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufInputStream -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufInputStream:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer -> buffer
    int startIndex -> startIndex
    int endIndex -> endIndex
    java.lang.StringBuilder lineBuf -> lineBuf
    52:53:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    64:184:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> <init>
    86:86:int readBytes() -> readBytes
    91:91:int available() -> available
    96:97:void mark(int) -> mark
    101:101:boolean markSupported() -> markSupported
    106:109:int read() -> read
    114:121:int read(byte[],int,int) -> read
    126:127:void reset() -> reset
    131:134:long skip(long) -> skip
    140:141:boolean readBoolean() -> readBoolean
    146:149:byte readByte() -> readByte
    154:154:char readChar() -> readChar
    159:159:double readDouble() -> readDouble
    164:164:float readFloat() -> readFloat
    169:170:void readFully(byte[]) -> readFully
    174:176:void readFully(byte[],int,int) -> readFully
    180:181:int readInt() -> readInt
    188:211:java.lang.String readLine() -> readLine
    216:217:long readLong() -> readLong
    222:223:short readShort() -> readShort
    228:228:java.lang.String readUTF() -> readUTF
    233:233:int readUnsignedByte() -> readUnsignedByte
    238:238:int readUnsignedShort() -> readUnsignedShort
    243:245:int skipBytes(int) -> skipBytes
    249:256:void checkAvailable(int) -> checkAvailable
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufOutputStream -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufOutputStream:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer -> buffer
    int startIndex -> startIndex
    java.io.DataOutputStream utf8out -> utf8out
    40:51:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    57:57:int writtenBytes() -> writtenBytes
    62:67:void write(byte[],int,int) -> write
    71:72:void write(byte[]) -> write
    76:77:void write(int) -> write
    81:82:void writeBoolean(boolean) -> writeBoolean
    86:87:void writeByte(int) -> writeByte
    91:95:void writeBytes(java.lang.String) -> writeBytes
    99:100:void writeChar(int) -> writeChar
    104:108:void writeChars(java.lang.String) -> writeChars
    112:113:void writeDouble(double) -> writeDouble
    117:118:void writeFloat(float) -> writeFloat
    122:123:void writeInt(int) -> writeInt
    127:128:void writeLong(long) -> writeLong
    132:133:void writeShort(int) -> writeShort
    137:138:void writeUTF(java.lang.String) -> writeUTF
    144:144:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer() -> buffer
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor FIND_NUL -> FIND_NUL
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor FIND_NON_NUL -> FIND_NON_NUL
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor FIND_CR -> FIND_CR
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor FIND_NON_CR -> FIND_NON_CR
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor FIND_LF -> FIND_LF
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor FIND_NON_LF -> FIND_NON_LF
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor FIND_CRLF -> FIND_CRLF
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor FIND_NON_CRLF -> FIND_NON_CRLF
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor FIND_LINEAR_WHITESPACE -> FIND_LINEAR_WHITESPACE
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor FIND_NON_LINEAR_WHITESPACE -> FIND_NON_LINEAR_WHITESPACE
    boolean process(byte) -> process
    24:114:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$1 -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$1:
    24:24:void <init>() -> <init>
    27:27:boolean process(byte) -> process
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$10 -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$10:
    114:114:void <init>() -> <init>
    117:117:boolean process(byte) -> process
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$2 -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$2:
    34:34:void <init>() -> <init>
    37:37:boolean process(byte) -> process
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$3 -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$3:
    44:44:void <init>() -> <init>
    47:47:boolean process(byte) -> process
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$4 -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$4:
    54:54:void <init>() -> <init>
    57:57:boolean process(byte) -> process
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$5 -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$5:
    64:64:void <init>() -> <init>
    67:67:boolean process(byte) -> process
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$6 -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$6:
    74:74:void <init>() -> <init>
    77:77:boolean process(byte) -> process
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$7 -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$7:
    84:84:void <init>() -> <init>
    87:87:boolean process(byte) -> process
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$8 -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$8:
    94:94:void <init>() -> <init>
    97:97:boolean process(byte) -> process
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$9 -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor$9:
    104:104:void <init>() -> <init>
    107:107:boolean process(byte) -> process
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufUtil -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufUtil:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    char[] HEXDUMP_TABLE -> HEXDUMP_TABLE
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator DEFAULT_ALLOCATOR -> DEFAULT_ALLOCATOR
    int THREAD_LOCAL_BUFFER_SIZE -> THREAD_LOCAL_BUFFER_SIZE
    80:80:java.lang.String hexDump(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> hexDump
    88:106:java.lang.String hexDump(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> hexDump
    114:140:int hashCode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> hashCode
    149:186:boolean equals(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> equals
    194:244:int compare(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> compare
    252:255:int indexOf(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int,byte) -> indexOf
    263:263:short swapShort(short) -> swapShort
    270:274:int swapMedium(int) -> swapMedium
    281:281:int swapInt(int) -> swapInt
    288:288:long swapLong(long) -> swapLong
    295:303:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> readBytes
    309:320:int firstIndexOf(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int,byte) -> firstIndexOf
    324:335:int lastIndexOf(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int,byte) -> lastIndexOf
    343:343:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encodeString(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,java.nio.CharBuffer,java.nio.charset.Charset) -> encodeString
    347:374:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encodeString0(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,boolean,java.nio.CharBuffer,java.nio.charset.Charset) -> encodeString0
    380:395:java.lang.String decodeString(java.nio.ByteBuffer,java.nio.charset.Charset) -> decodeString
    404:411:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf threadLocalDirectBuffer() -> threadLocalDirectBuffer
    482:482:void <init>() -> <init>
    39:39:int access$100() -> access$100
    41:73:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufUtil$1 -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufUtil$1:
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf:
    be.alexandre01.dnplugin.shaded.netty.util.Recycler RECYCLER -> RECYCLER
    be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle handle -> handle
    459:461:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf newInstance() -> newInstance
    467:469:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> <init>
    473:479:void deallocate() -> deallocate
    449:449:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufUtil$1) -> <init>
    451:451:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf$1 -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf$1:
    451:451:void <init>() -> <init>
    454:454:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
    451:451:java.lang.Object newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf:
    be.alexandre01.dnplugin.shaded.netty.util.Recycler RECYCLER -> RECYCLER
    be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle handle -> handle
    426:428:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf newInstance() -> newInstance
    434:436:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> <init>
    440:446:void deallocate() -> deallocate
    415:415:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufUtil$1) -> <init>
    417:417:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf$1 -> be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf$1:
    418:418:void <init>() -> <init>
    421:421:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
    418:418:java.lang.Object newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf:
    be.alexandre01.dnplugin.shaded.netty.util.ResourceLeak leak -> leak
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc -> alloc
    boolean direct -> direct
    java.util.List components -> components
    int maxNumComponents -> maxNumComponents
    java.nio.ByteBuffer FULL_BYTEBUFFER -> FULL_BYTEBUFFER
    boolean freed -> freed
    45:60:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,boolean,int) -> <init>
    45:80:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,boolean,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf[]) -> <init>
    45:100:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,boolean,int,java.lang.Iterable) -> <init>
    111:113:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf addComponent(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> addComponent
    125:127:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf addComponents(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf[]) -> addComponents
    139:141:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf addComponents(java.lang.Iterable) -> addComponents
    154:156:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf addComponent(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> addComponent
    160:186:int addComponent0(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> addComponent0
    199:201:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf addComponents(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf[]) -> addComponents
    205:238:int addComponents0(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf[]) -> addComponents0
    251:253:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf addComponents(int,java.lang.Iterable) -> addComponents
    257:275:int addComponents0(int,java.lang.Iterable) -> addComponents0
    285:303:void consolidateIfNeeded() -> consolidateIfNeeded
    306:312:void checkComponentIndex(int) -> checkComponentIndex
    315:322:void checkComponentIndex(int,int) -> checkComponentIndex
    325:343:void updateComponentOffsets(int) -> updateComponentOffsets
    351:354:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf removeComponent(int) -> removeComponent
    364:373:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf removeComponents(int,int) -> removeComponents
    377:382:java.util.Iterator iterator() -> iterator
    389:427:java.util.List decompose(int,int) -> decompose
    432:441:boolean isDirect() -> isDirect
    446:449:boolean hasArray() -> hasArray
    454:457:byte[] array() -> array
    462:465:int arrayOffset() -> arrayOffset
    470:473:boolean hasMemoryAddress() -> hasMemoryAddress
    478:481:long memoryAddress() -> memoryAddress
    486:489:int capacity() -> capacity
    494:540:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf capacity(int) -> capacity
    545:545:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc() -> alloc
    550:550:java.nio.ByteOrder order() -> order
    557:557:int numComponents() -> numComponents
    564:564:int maxNumComponents() -> maxNumComponents
    571:585:int toComponentIndex(int) -> toComponentIndex
    589:590:int toByteIndex(int) -> toByteIndex
    595:595:byte getByte(int) -> getByte
    600:601:byte _getByte(int) -> _getByte
    606:612:short _getShort(int) -> _getShort
    618:624:int _getUnsignedMedium(int) -> _getUnsignedMedium
    630:636:int _getInt(int) -> _getInt
    642:648:long _getLong(int) -> _getLong
    654:671:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf getBytes(int,byte[],int,int) -> getBytes
    676:700:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    705:722:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    728:736:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    743:759:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    764:766:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf setByte(int,int) -> setByte
    771:772:void _setByte(int,int) -> _setByte
    776:776:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf setShort(int,int) -> setShort
    781:791:void _setShort(int,int) -> _setShort
    795:795:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf setMedium(int,int) -> setMedium
    800:810:void _setMedium(int,int) -> _setMedium
    814:814:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf setInt(int,int) -> setInt
    819:829:void _setInt(int,int) -> _setInt
    833:833:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf setLong(int,long) -> setLong
    838:848:void _setLong(int,long) -> _setLong
    852:869:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf setBytes(int,byte[],int,int) -> setBytes
    874:898:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    903:920:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setBytes
    925:959:int setBytes(int,java.io.InputStream,int) -> setBytes
    964:1002:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    1007:1012:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy(int,int) -> copy
    1016:1032:void copyTo(int,int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> copyTo
    1041:1041:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf component(int) -> component
    1051:1051:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf componentAtOffset(int) -> componentAtOffset
    1061:1062:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf internalComponent(int) -> internalComponent
    1072:1072:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf internalComponentAtOffset(int) -> internalComponentAtOffset
    1076:1090:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf$Component findComponent(int) -> findComponent
    1095:1104:int nioBufferCount() -> nioBufferCount
    1110:1113:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    1118:1133:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    1138:1165:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    1172:1192:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf consolidate() -> consolidate
    1202:1222:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf consolidate(int,int) -> consolidate
    1229:1260:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf discardReadComponents() -> discardReadComponents
    1265:1305:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf discardReadBytes() -> discardReadBytes
    1309:1312:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf allocBuffer(int) -> allocBuffer
    1317:1319:java.lang.String toString() -> toString
    1341:1341:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf readerIndex(int) -> readerIndex
    1346:1346:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf writerIndex(int) -> writerIndex
    1351:1351:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf setIndex(int,int) -> setIndex
    1356:1356:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf clear() -> clear
    1361:1361:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf markReaderIndex() -> markReaderIndex
    1366:1366:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf resetReaderIndex() -> resetReaderIndex
    1371:1371:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf markWriterIndex() -> markWriterIndex
    1376:1376:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf resetWriterIndex() -> resetWriterIndex
    1381:1381:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf ensureWritable(int) -> ensureWritable
    1386:1386:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> getBytes
    1391:1391:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> getBytes
    1396:1396:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf getBytes(int,byte[]) -> getBytes
    1401:1401:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf setBoolean(int,boolean) -> setBoolean
    1406:1406:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf setChar(int,int) -> setChar
    1411:1411:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf setFloat(int,float) -> setFloat
    1416:1416:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf setDouble(int,double) -> setDouble
    1421:1421:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setBytes
    1426:1426:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> setBytes
    1431:1431:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf setBytes(int,byte[]) -> setBytes
    1436:1436:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf setZero(int,int) -> setZero
    1441:1441:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readBytes
    1446:1446:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> readBytes
    1451:1451:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> readBytes
    1456:1456:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf readBytes(byte[]) -> readBytes
    1461:1461:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf readBytes(byte[],int,int) -> readBytes
    1466:1466:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    1471:1471:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    1476:1476:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf skipBytes(int) -> skipBytes
    1481:1481:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf writeBoolean(boolean) -> writeBoolean
    1486:1486:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf writeByte(int) -> writeByte
    1491:1491:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf writeShort(int) -> writeShort
    1496:1496:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf writeMedium(int) -> writeMedium
    1501:1501:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf writeInt(int) -> writeInt
    1506:1506:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf writeLong(long) -> writeLong
    1511:1511:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf writeChar(int) -> writeChar
    1516:1516:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf writeFloat(float) -> writeFloat
    1521:1521:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf writeDouble(double) -> writeDouble
    1526:1526:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> writeBytes
    1531:1531:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> writeBytes
    1536:1536:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> writeBytes
    1541:1541:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf writeBytes(byte[]) -> writeBytes
    1546:1546:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf writeBytes(byte[],int,int) -> writeBytes
    1551:1551:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    1556:1556:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf writeZero(int) -> writeZero
    1561:1561:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf retain(int) -> retain
    1566:1566:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf retain() -> retain
    1571:1571:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    1576:1576:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    1581:1596:void deallocate() -> deallocate
    1600:1600:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf unwrap() -> unwrap
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain(int) -> retain
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain() -> retain
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeZero(int) -> writeZero
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> writeBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> writeBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> writeBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeChar(int) -> writeChar
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeLong(long) -> writeLong
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeInt(int) -> writeInt
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeShort(int) -> writeShort
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeByte(int) -> writeByte
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBoolean(boolean) -> writeBoolean
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> readBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> readBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setZero(int,int) -> setZero
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> setBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setLong(int,long) -> setLong
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setInt(int,int) -> setInt
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setChar(int,int) -> setChar
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setShort(int,int) -> setShort
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBoolean(int,boolean) -> setBoolean
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setByte(int,int) -> setByte
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> getBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> getBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf resetWriterIndex() -> resetWriterIndex
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf markWriterIndex() -> markWriterIndex
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf clear() -> clear
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf capacity(int) -> capacity
    40:40:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    40:40:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    47:47:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf$Component -> be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf$Component:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buf -> buf
    int length -> length
    int offset -> offset
    int endOffset -> endOffset
    1328:1331:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    1335:1336:void freeIfNecessary() -> freeIfNecessary
be.alexandre01.dnplugin.shaded.netty.buffer.DefaultByteBufHolder -> be.alexandre01.dnplugin.shaded.netty.buffer.DefaultByteBufHolder:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf data -> data
    29:34:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    38:41:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf content() -> content
    46:46:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    51:51:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    56:56:int refCnt() -> refCnt
    61:62:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    67:68:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    73:73:boolean release() -> release
    78:78:boolean release(int) -> release
    83:83:java.lang.String toString() -> toString
    25:25:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.buffer.DuplicatedByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.DuplicatedByteBuf:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer -> buffer
    37:46:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    50:50:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf unwrap() -> unwrap
    55:55:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc() -> alloc
    60:60:java.nio.ByteOrder order() -> order
    65:65:boolean isDirect() -> isDirect
    70:70:int capacity() -> capacity
    75:76:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf capacity(int) -> capacity
    81:81:boolean hasArray() -> hasArray
    86:86:byte[] array() -> array
    91:91:int arrayOffset() -> arrayOffset
    96:96:boolean hasMemoryAddress() -> hasMemoryAddress
    101:101:long memoryAddress() -> memoryAddress
    106:106:byte getByte(int) -> getByte
    111:111:byte _getByte(int) -> _getByte
    116:116:short getShort(int) -> getShort
    121:121:short _getShort(int) -> _getShort
    126:126:int getUnsignedMedium(int) -> getUnsignedMedium
    131:131:int _getUnsignedMedium(int) -> _getUnsignedMedium
    136:136:int getInt(int) -> getInt
    141:141:int _getInt(int) -> _getInt
    146:146:long getLong(int) -> getLong
    151:151:long _getLong(int) -> _getLong
    156:156:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy(int,int) -> copy
    161:161:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice(int,int) -> slice
    166:167:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    172:173:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    178:179:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    184:185:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setByte(int,int) -> setByte
    190:191:void _setByte(int,int) -> _setByte
    195:196:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setShort(int,int) -> setShort
    201:202:void _setShort(int,int) -> _setShort
    206:207:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    212:213:void _setMedium(int,int) -> _setMedium
    217:218:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setInt(int,int) -> setInt
    223:224:void _setInt(int,int) -> _setInt
    228:229:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setLong(int,long) -> setLong
    234:235:void _setLong(int,long) -> _setLong
    239:240:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    245:246:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setBytes
    251:252:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    258:259:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    265:265:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    271:271:int setBytes(int,java.io.InputStream,int) -> setBytes
    277:277:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    282:282:int nioBufferCount() -> nioBufferCount
    287:287:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    292:292:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    297:297:int forEachByte(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByte
    302:302:int forEachByteDesc(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteDesc
be.alexandre01.dnplugin.shaded.netty.buffer.EmptyByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.EmptyByteBuf:
    java.nio.ByteBuffer EMPTY_BYTE_BUFFER -> EMPTY_BYTE_BUFFER
    long EMPTY_BYTE_BUFFER_ADDRESS -> EMPTY_BYTE_BUFFER_ADDRESS
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc -> alloc
    java.nio.ByteOrder order -> order
    java.lang.String str -> str
    be.alexandre01.dnplugin.shaded.netty.buffer.EmptyByteBuf swapped -> swapped
    58:59:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> <init>
    61:69:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,java.nio.ByteOrder) -> <init>
    73:73:int capacity() -> capacity
    78:78:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf capacity(int) -> capacity
    83:83:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc() -> alloc
    88:88:java.nio.ByteOrder order() -> order
    93:93:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf unwrap() -> unwrap
    98:98:boolean isDirect() -> isDirect
    103:103:int maxCapacity() -> maxCapacity
    108:121:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    126:126:int readerIndex() -> readerIndex
    131:131:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    136:136:int writerIndex() -> writerIndex
    141:141:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    146:148:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    153:153:int readableBytes() -> readableBytes
    158:158:int writableBytes() -> writableBytes
    163:163:int maxWritableBytes() -> maxWritableBytes
    168:168:boolean isReadable() -> isReadable
    173:173:boolean isWritable() -> isWritable
    178:178:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf clear() -> clear
    183:183:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    188:188:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    193:193:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf markWriterIndex() -> markWriterIndex
    198:198:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf resetWriterIndex() -> resetWriterIndex
    203:203:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    208:208:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    213:219:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    224:232:int ensureWritable(int,boolean) -> ensureWritable
    237:237:boolean getBoolean(int) -> getBoolean
    242:242:byte getByte(int) -> getByte
    247:247:short getUnsignedByte(int) -> getUnsignedByte
    252:252:short getShort(int) -> getShort
    257:257:int getUnsignedShort(int) -> getUnsignedShort
    262:262:int getMedium(int) -> getMedium
    267:267:int getUnsignedMedium(int) -> getUnsignedMedium
    272:272:int getInt(int) -> getInt
    277:277:long getUnsignedInt(int) -> getUnsignedInt
    282:282:long getLong(int) -> getLong
    287:287:char getChar(int) -> getChar
    292:292:float getFloat(int) -> getFloat
    297:297:double getDouble(int) -> getDouble
    302:302:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> getBytes
    307:307:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> getBytes
    312:312:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    317:317:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    322:322:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    327:327:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    332:332:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    337:338:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    343:343:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBoolean(int,boolean) -> setBoolean
    348:348:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setByte(int,int) -> setByte
    353:353:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setShort(int,int) -> setShort
    358:358:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    363:363:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setInt(int,int) -> setInt
    368:368:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setLong(int,long) -> setLong
    373:373:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setChar(int,int) -> setChar
    378:378:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    383:383:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    388:388:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setBytes
    393:393:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> setBytes
    398:398:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setBytes
    403:403:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    408:408:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    413:413:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    418:419:int setBytes(int,java.io.InputStream,int) -> setBytes
    424:425:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    430:430:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setZero(int,int) -> setZero
    435:435:boolean readBoolean() -> readBoolean
    440:440:byte readByte() -> readByte
    445:445:short readUnsignedByte() -> readUnsignedByte
    450:450:short readShort() -> readShort
    455:455:int readUnsignedShort() -> readUnsignedShort
    460:460:int readMedium() -> readMedium
    465:465:int readUnsignedMedium() -> readUnsignedMedium
    470:470:int readInt() -> readInt
    475:475:long readUnsignedInt() -> readUnsignedInt
    480:480:long readLong() -> readLong
    485:485:char readChar() -> readChar
    490:490:float readFloat() -> readFloat
    495:495:double readDouble() -> readDouble
    500:500:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(int) -> readBytes
    505:505:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readSlice(int) -> readSlice
    510:510:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readBytes
    515:515:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> readBytes
    520:520:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> readBytes
    525:525:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    530:530:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    535:535:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    540:540:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    545:546:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    551:551:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    556:556:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBoolean(boolean) -> writeBoolean
    561:561:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeByte(int) -> writeByte
    566:566:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeShort(int) -> writeShort
    571:571:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    576:576:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeInt(int) -> writeInt
    581:581:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeLong(long) -> writeLong
    586:586:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeChar(int) -> writeChar
    591:591:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    596:596:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    601:601:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> writeBytes
    606:606:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> writeBytes
    611:611:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> writeBytes
    616:616:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    621:621:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    626:626:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    631:632:int writeBytes(java.io.InputStream,int) -> writeBytes
    637:638:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    643:643:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeZero(int) -> writeZero
    648:650:int indexOf(int,int,byte) -> indexOf
    655:655:int bytesBefore(byte) -> bytesBefore
    660:661:int bytesBefore(int,byte) -> bytesBefore
    666:667:int bytesBefore(int,int,byte) -> bytesBefore
    672:672:int forEachByte(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByte
    677:678:int forEachByte(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByte
    683:683:int forEachByteDesc(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteDesc
    688:689:int forEachByteDesc(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteDesc
    694:694:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy() -> copy
    699:699:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy(int,int) -> copy
    704:704:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice() -> slice
    709:709:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice(int,int) -> slice
    714:714:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf duplicate() -> duplicate
    719:719:int nioBufferCount() -> nioBufferCount
    724:724:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    729:730:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    735:735:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    740:741:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    746:746:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    751:751:boolean hasArray() -> hasArray
    756:756:byte[] array() -> array
    761:761:int arrayOffset() -> arrayOffset
    766:766:boolean hasMemoryAddress() -> hasMemoryAddress
    771:774:long memoryAddress() -> memoryAddress
    780:780:java.lang.String toString(java.nio.charset.Charset) -> toString
    785:786:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    791:791:int hashCode() -> hashCode
    796:796:boolean equals(java.lang.Object) -> equals
    801:801:int compareTo(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> compareTo
    806:806:java.lang.String toString() -> toString
    811:811:boolean isReadable(int) -> isReadable
    816:816:boolean isWritable(int) -> isWritable
    821:821:int refCnt() -> refCnt
    826:826:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain() -> retain
    831:831:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain(int) -> retain
    836:836:boolean release() -> release
    841:841:boolean release(int) -> release
    845:848:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf checkIndex(int) -> checkIndex
    852:858:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf checkIndex(int,int) -> checkIndex
    862:868:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf checkLength(int) -> checkLength
    35:35:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    35:35:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    35:35:int compareTo(java.lang.Object) -> compareTo
    37:50:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena -> be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena:
    int numTinySubpagePools -> numTinySubpagePools
    be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBufAllocator parent -> parent
    int maxOrder -> maxOrder
    int pageSize -> pageSize
    int pageShifts -> pageShifts
    int chunkSize -> chunkSize
    int subpageOverflowMask -> subpageOverflowMask
    int numSmallSubpagePools -> numSmallSubpagePools
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolSubpage[] tinySubpagePools -> tinySubpagePools
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolSubpage[] smallSubpagePools -> smallSubpagePools
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunkList q050 -> q050
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunkList q025 -> q025
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunkList q000 -> q000
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunkList qInit -> qInit
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunkList q075 -> q075
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunkList q100 -> q100
    boolean $assertionsDisabled -> $assertionsDisabled
    49:80:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBufAllocator,int,int,int,int) -> <init>
    83:86:be.alexandre01.dnplugin.shaded.netty.buffer.PoolSubpage newSubpagePoolHead(int) -> newSubpagePoolHead
    91:91:be.alexandre01.dnplugin.shaded.netty.buffer.PoolSubpage[] newSubpagePoolArray(int) -> newSubpagePoolArray
    boolean isDirect() -> isDirect
    97:99:be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf allocate(be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache,int,int) -> allocate
    103:103:int tinyIdx(int) -> tinyIdx
    107:113:int smallIdx(int) -> smallIdx
    118:118:boolean isTinyOrSmall(int) -> isTinyOrSmall
    123:123:boolean isTiny(int) -> isTiny
    127:169:void allocate(be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache,be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf,int) -> allocate
    172:184:void allocateNormal(be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf,int,int) -> allocateNormal
    187:188:void allocateHuge(be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf,int) -> allocateHuge
    191:203:void free(be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk,long,int) -> free
    208:221:be.alexandre01.dnplugin.shaded.netty.buffer.PoolSubpage findSubpagePoolHead(int) -> findSubpagePoolHead
    225:256:int normalizeCapacity(int) -> normalizeCapacity
    260:300:void reallocate(be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf,int,boolean) -> reallocate
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk newChunk(int,int,int,int) -> newChunk
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk newUnpooledChunk(int) -> newUnpooledChunk
    be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf newByteBuf(int) -> newByteBuf
    void memoryCopy(java.lang.Object,int,java.lang.Object,int,int) -> memoryCopy
    void destroyChunk(be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk) -> destroyChunk
    309:375:java.lang.String toString() -> toString
    24:24:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena$DirectArena -> be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena$DirectArena:
    boolean HAS_UNSAFE -> HAS_UNSAFE
    424:425:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBufAllocator,int,int,int,int) -> <init>
    429:429:boolean isDirect() -> isDirect
    434:434:be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk newChunk(int,int,int,int) -> newChunk
    440:440:be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk newUnpooledChunk(int) -> newUnpooledChunk
    445:446:void destroyChunk(be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk) -> destroyChunk
    450:453:be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf newByteBuf(int) -> newByteBuf
    459:475:void memoryCopy(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int) -> memoryCopy
    419:419:void memoryCopy(java.lang.Object,int,java.lang.Object,int,int) -> memoryCopy
    421:421:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena$HeapArena -> be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena$HeapArena:
    381:382:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBufAllocator,int,int,int,int) -> <init>
    386:386:boolean isDirect() -> isDirect
    391:391:be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk newChunk(int,int,int,int) -> newChunk
    396:396:be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk newUnpooledChunk(int) -> newUnpooledChunk
    402:402:void destroyChunk(be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk) -> destroyChunk
    406:406:be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf newByteBuf(int) -> newByteBuf
    411:416:void memoryCopy(byte[],int,byte[],int,int) -> memoryCopy
    378:378:void memoryCopy(java.lang.Object,int,java.lang.Object,int,int) -> memoryCopy
be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk -> be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk:
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena arena -> arena
    java.lang.Object memory -> memory
    boolean unpooled -> unpooled
    byte[] memoryMap -> memoryMap
    byte[] depthMap -> depthMap
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolSubpage[] subpages -> subpages
    int subpageOverflowMask -> subpageOverflowMask
    int pageSize -> pageSize
    int pageShifts -> pageShifts
    int maxOrder -> maxOrder
    int chunkSize -> chunkSize
    int log2ChunkSize -> log2ChunkSize
    int maxSubpageAllocs -> maxSubpageAllocs
    byte unusable -> unusable
    int freeBytes -> freeBytes
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunkList parent -> parent
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk prev -> prev
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk next -> next
    boolean $assertionsDisabled -> $assertionsDisabled
    133:164:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena,java.lang.Object,int,int,int,int) -> <init>
    167:182:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena,java.lang.Object,int) -> <init>
    186:186:be.alexandre01.dnplugin.shaded.netty.buffer.PoolSubpage[] newSubpageArray(int) -> newSubpageArray
    190:199:int usage() -> usage
    203:206:long allocate(int) -> allocate
    219:227:void updateParentsAlloc(int) -> updateParentsAlloc
    237:253:void updateParentsFree(int) -> updateParentsFree
    263:282:int allocateNode(int) -> allocateNode
    292:298:long allocateRun(int) -> allocateRun
    309:328:long allocateSubpage(int) -> allocateSubpage
    340:353:void free(long) -> free
    356:365:void initBuf(be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf,long,int) -> initBuf
    368:369:void initBufWithSubpage(be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf,long,int) -> initBufWithSubpage
    372:383:void initBufWithSubpage(be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf,long,int,int) -> initBufWithSubpage
    386:386:byte value(int) -> value
    390:391:void setValue(int,byte) -> setValue
    394:394:byte depth(int) -> depth
    399:399:int log2(int) -> log2
    404:404:int runLength(int) -> runLength
    409:410:int runOffset(int) -> runOffset
    414:414:int subpageIdx(int) -> subpageIdx
    419:429:java.lang.String toString() -> toString
    104:104:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunkList -> be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunkList:
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena arena -> arena
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunkList nextList -> nextList
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunkList prevList -> prevList
    int minUsage -> minUsage
    int maxUsage -> maxUsage
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk head -> head
    boolean $assertionsDisabled -> $assertionsDisabled
    34:39:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena,be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunkList,int,int) -> <init>
    42:61:boolean allocate(be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf,int,int) -> allocate
    65:75:void free(be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk,long) -> free
    78:94:void add(be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk) -> add
    97:109:void remove(be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk) -> remove
    113:127:java.lang.String toString() -> toString
    21:21:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.PoolSubpage -> be.alexandre01.dnplugin.shaded.netty.buffer.PoolSubpage:
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk chunk -> chunk
    int memoryMapIdx -> memoryMapIdx
    int runOffset -> runOffset
    int pageSize -> pageSize
    long[] bitmap -> bitmap
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolSubpage prev -> prev
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolSubpage next -> next
    boolean doNotDestroy -> doNotDestroy
    int elemSize -> elemSize
    int maxNumElems -> maxNumElems
    int bitmapLength -> bitmapLength
    int nextAvail -> nextAvail
    int numAvail -> numAvail
    boolean $assertionsDisabled -> $assertionsDisabled
    41:48:void <init>(int) -> <init>
    50:57:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk,int,int,int,int) -> <init>
    60:76:void init(int) -> init
    82:100:long allocate() -> allocate
    109:137:boolean free(int) -> free
    142:148:void addToPool() -> addToPool
    151:156:void removeFromPool() -> removeFromPool
    159:160:void setNextAvail(int) -> setNextAvail
    163:168:int getNextAvail() -> getNextAvail
    172:180:int findNextAvail() -> findNextAvail
    184:198:int findNextAvail0(int,long) -> findNextAvail0
    202:202:long toHandle(int) -> toHandle
    206:210:java.lang.String toString() -> toString
    19:19:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache -> be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena heapArena -> heapArena
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena directArena -> directArena
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache[] tinySubPageHeapCaches -> tinySubPageHeapCaches
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache[] smallSubPageHeapCaches -> smallSubPageHeapCaches
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache[] tinySubPageDirectCaches -> tinySubPageDirectCaches
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache[] smallSubPageDirectCaches -> smallSubPageDirectCaches
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache[] normalHeapCaches -> normalHeapCaches
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache[] normalDirectCaches -> normalDirectCaches
    int numShiftsNormalDirect -> numShiftsNormalDirect
    int numShiftsNormalHeap -> numShiftsNormalHeap
    int freeSweepAllocationThreshold -> freeSweepAllocationThreshold
    int allocations -> allocations
    java.lang.Thread thread -> thread
    java.lang.Runnable freeTask -> freeTask
    54:112:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena,be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena,int,int,int,int,int) -> <init>
    115:124:be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache[] createSubPageCaches(int,int) -> createSubPageCaches
    130:141:be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$NormalMemoryRegionCache[] createNormalCaches(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena) -> createNormalCaches
    146:151:int log2(int) -> log2
    158:158:boolean allocateTiny(be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena,be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf,int,int) -> allocateTiny
    165:165:boolean allocateSmall(be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena,be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf,int,int) -> allocateSmall
    172:172:boolean allocateNormal(be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena,be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf,int,int) -> allocateNormal
    177:186:boolean allocate(be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache,be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf,int) -> allocate
    196:208:boolean add(be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena,be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk,long,int) -> add
    215:217:void free() -> free
    220:230:void free0() -> free0
    233:241:int free(be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache[]) -> free
    245:248:int free(be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache) -> free
    252:258:void trim() -> trim
    261:267:void trim(be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache[]) -> trim
    270:274:void trim(be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache) -> trim
    277:281:be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache cacheForTiny(be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena,int) -> cacheForTiny
    285:289:be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache cacheForSmall(be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena,int) -> cacheForSmall
    293:298:be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache cacheForNormal(be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena,int) -> cacheForNormal
    302:305:be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache cache(be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache[],int) -> cache
    32:32:void access$000(be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache) -> access$000
    34:34:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$1 -> be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$1:
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache this$0 -> this$0
    55:55:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache) -> <init>
    58:59:void run() -> run
be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache -> be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache:
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry[] entries -> entries
    int maxUnusedCached -> maxUnusedCached
    int head -> head
    int tail -> tail
    int maxEntriesInUse -> maxEntriesInUse
    int entriesInUse -> entriesInUse
    350:356:void <init>(int) -> <init>
    359:369:int powerOfTwo(int) -> powerOfTwo
    void initBuf(be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk,long,be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf,int) -> initBuf
    382:392:boolean add(be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk,long) -> add
    399:412:boolean allocate(be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf,int) -> allocate
    419:427:int free() -> free
    436:452:void trim() -> trim
    456:465:boolean freeEntry(be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry) -> freeEntry
    472:472:int size() -> size
    477:477:int nextIdx(int) -> nextIdx
    341:341:void access$100(be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache) -> access$100
be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry -> be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry:
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk chunk -> chunk
    long handle -> handle
    480:480:void <init>() -> <init>
    480:480:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$NormalMemoryRegionCache -> be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$NormalMemoryRegionCache:
    328:329:void <init>(int) -> <init>
    334:335:void initBuf(be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk,long,be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf,int) -> initBuf
be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache -> be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache:
    313:314:void <init>(int) -> <init>
    319:320:void initBuf(be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk,long,be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf,int) -> initBuf
be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBuf:
    be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle recyclerHandle -> recyclerHandle
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk chunk -> chunk
    long handle -> handle
    java.lang.Object memory -> memory
    int offset -> offset
    int length -> length
    int maxLength -> maxLength
    java.nio.ByteBuffer tmpNioBuf -> tmpNioBuf
    boolean $assertionsDisabled -> $assertionsDisabled
    38:40:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle,int) -> <init>
    43:54:void init(be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk,long,int,int,int) -> init
    57:66:void initUnpooled(be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk,int) -> initUnpooled
    70:70:int capacity() -> capacity
    75:109:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf capacity(int) -> capacity
    114:114:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc() -> alloc
    119:119:java.nio.ByteOrder order() -> order
    124:124:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf unwrap() -> unwrap
    128:132:java.nio.ByteBuffer internalNioBuffer() -> internalNioBuffer
    java.nio.ByteBuffer newInternalNioBuffer(java.lang.Object) -> newInternalNioBuffer
    139:146:void deallocate() -> deallocate
    149:153:void recycle() -> recycle
    be.alexandre01.dnplugin.shaded.netty.util.Recycler recycler() -> recycler
    158:158:int idx(int) -> idx
    24:24:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBufAllocator -> be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBufAllocator:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    int DEFAULT_NUM_HEAP_ARENA -> DEFAULT_NUM_HEAP_ARENA
    int DEFAULT_NUM_DIRECT_ARENA -> DEFAULT_NUM_DIRECT_ARENA
    int DEFAULT_PAGE_SIZE -> DEFAULT_PAGE_SIZE
    int DEFAULT_MAX_ORDER -> DEFAULT_MAX_ORDER
    int DEFAULT_TINY_CACHE_SIZE -> DEFAULT_TINY_CACHE_SIZE
    int DEFAULT_SMALL_CACHE_SIZE -> DEFAULT_SMALL_CACHE_SIZE
    int DEFAULT_NORMAL_CACHE_SIZE -> DEFAULT_NORMAL_CACHE_SIZE
    int DEFAULT_MAX_CACHED_BUFFER_CAPACITY -> DEFAULT_MAX_CACHED_BUFFER_CAPACITY
    int DEFAULT_CACHE_TRIM_INTERVAL -> DEFAULT_CACHE_TRIM_INTERVAL
    int MIN_PAGE_SIZE -> MIN_PAGE_SIZE
    int MAX_CHUNK_SIZE -> MAX_CHUNK_SIZE
    be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBufAllocator DEFAULT -> DEFAULT
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena[] heapArenas -> heapArenas
    be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena[] directArenas -> directArenas
    int tinyCacheSize -> tinyCacheSize
    int smallCacheSize -> smallCacheSize
    int normalCacheSize -> normalCacheSize
    be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache threadCache -> threadCache
    131:132:void <init>() -> <init>
    135:136:void <init>(boolean) -> <init>
    139:140:void <init>(int,int,int,int) -> <init>
    143:145:void <init>(boolean,int,int,int,int) -> <init>
    149:182:void <init>(boolean,int,int,int,int,int,int,int) -> <init>
    189:191:void <init>(boolean,int,int,int,int,int,int,int,long) -> <init>
    195:195:be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena[] newArenaArray(int) -> newArenaArray
    199:208:int validateAndCalculatePageShifts(int) -> validateAndCalculatePageShifts
    212:225:int validateAndCalculateChunkSize(int,int) -> validateAndCalculateChunkSize
    230:240:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf newHeapBuffer(int,int) -> newHeapBuffer
    245:259:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf newDirectBuffer(int,int) -> newDirectBuffer
    264:264:boolean isDirectBufferPooled() -> isDirectBufferPooled
    273:273:boolean hasThreadLocalCache() -> hasThreadLocalCache
    281:282:void freeThreadLocalCache() -> freeThreadLocalCache
    28:28:be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena[] access$000(be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBufAllocator) -> access$000
    28:28:be.alexandre01.dnplugin.shaded.netty.buffer.PoolArena[] access$100(be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBufAllocator) -> access$100
    28:28:int access$200(be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBufAllocator) -> access$200
    28:28:int access$300(be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBufAllocator) -> access$300
    28:28:int access$400(be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBufAllocator) -> access$400
    28:28:int access$500() -> access$500
    28:28:int access$600() -> access$600
    30:119:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache -> be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache:
    java.util.concurrent.atomic.AtomicInteger index -> index
    be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBufAllocator this$0 -> this$0
    284:285:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.PooledByteBufAllocator) -> <init>
    289:305:be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache initialValue() -> initialValue
    312:313:void onRemoval(be.alexandre01.dnplugin.shaded.netty.buffer.PoolThreadCache) -> onRemoval
    284:284:void onRemoval(java.lang.Object) -> onRemoval
    284:284:java.lang.Object initialValue() -> initialValue
be.alexandre01.dnplugin.shaded.netty.buffer.PooledDirectByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.PooledDirectByteBuf:
    be.alexandre01.dnplugin.shaded.netty.util.Recycler RECYCLER -> RECYCLER
    39:42:be.alexandre01.dnplugin.shaded.netty.buffer.PooledDirectByteBuf newInstance(int) -> newInstance
    46:47:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle,int) -> <init>
    51:51:java.nio.ByteBuffer newInternalNioBuffer(java.nio.ByteBuffer) -> newInternalNioBuffer
    56:56:boolean isDirect() -> isDirect
    61:61:byte _getByte(int) -> _getByte
    66:66:short _getShort(int) -> _getShort
    71:72:int _getUnsignedMedium(int) -> _getUnsignedMedium
    77:77:int _getInt(int) -> _getInt
    82:82:long _getLong(int) -> _getLong
    87:99:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    104:105:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    109:119:void getBytes(int,byte[],int,int,boolean) -> getBytes
    123:126:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    131:132:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    136:147:void getBytes(int,java.nio.ByteBuffer,boolean) -> getBytes
    151:155:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    160:161:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    165:180:void getBytes(int,java.io.OutputStream,int,boolean) -> getBytes
    184:187:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    192:192:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    196:209:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> getBytes
    214:217:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    222:223:void _setByte(int,int) -> _setByte
    227:228:void _setShort(int,int) -> _setShort
    232:236:void _setMedium(int,int) -> _setMedium
    240:241:void _setInt(int,int) -> _setInt
    245:246:void _setLong(int,long) -> _setLong
    250:262:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setBytes
    267:272:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    277:286:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    291:300:int setBytes(int,java.io.InputStream,int) -> setBytes
    305:312:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    318:321:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy(int,int) -> copy
    326:326:int nioBufferCount() -> nioBufferCount
    331:333:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    338:338:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    343:345:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    350:350:boolean hasArray() -> hasArray
    355:355:byte[] array() -> array
    360:360:int arrayOffset() -> arrayOffset
    365:365:boolean hasMemoryAddress() -> hasMemoryAddress
    370:370:long memoryAddress() -> memoryAddress
    375:375:be.alexandre01.dnplugin.shaded.netty.util.Recycler recycler() -> recycler
    29:29:java.nio.ByteBuffer newInternalNioBuffer(java.lang.Object) -> newInternalNioBuffer
    29:29:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle,int,be.alexandre01.dnplugin.shaded.netty.buffer.PooledDirectByteBuf$1) -> <init>
    31:31:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.PooledDirectByteBuf$1 -> be.alexandre01.dnplugin.shaded.netty.buffer.PooledDirectByteBuf$1:
    31:31:void <init>() -> <init>
    34:34:be.alexandre01.dnplugin.shaded.netty.buffer.PooledDirectByteBuf newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
    31:31:java.lang.Object newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
be.alexandre01.dnplugin.shaded.netty.buffer.PooledHeapByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.PooledHeapByteBuf:
    be.alexandre01.dnplugin.shaded.netty.util.Recycler RECYCLER -> RECYCLER
    38:41:be.alexandre01.dnplugin.shaded.netty.buffer.PooledHeapByteBuf newInstance(int) -> newInstance
    45:46:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle,int) -> <init>
    50:50:boolean isDirect() -> isDirect
    55:55:byte _getByte(int) -> _getByte
    60:61:short _getShort(int) -> _getShort
    66:67:int _getUnsignedMedium(int) -> _getUnsignedMedium
    74:75:int _getInt(int) -> _getInt
    83:84:long _getLong(int) -> _getLong
    96:104:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    109:111:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    116:118:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    123:125:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    130:130:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    134:142:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> getBytes
    147:150:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    155:156:void _setByte(int,int) -> _setByte
    160:163:void _setShort(int,int) -> _setShort
    167:171:void _setMedium(int,int) -> _setMedium
    175:180:void _setInt(int,int) -> _setInt
    184:193:void _setLong(int,long) -> _setLong
    197:205:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setBytes
    210:212:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    217:220:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    225:226:int setBytes(int,java.io.InputStream,int) -> setBytes
    231:236:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    242:245:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy(int,int) -> copy
    250:250:int nioBufferCount() -> nioBufferCount
    255:255:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    260:263:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    268:270:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    275:275:boolean hasArray() -> hasArray
    280:280:byte[] array() -> array
    285:285:int arrayOffset() -> arrayOffset
    290:290:boolean hasMemoryAddress() -> hasMemoryAddress
    295:295:long memoryAddress() -> memoryAddress
    300:300:java.nio.ByteBuffer newInternalNioBuffer(byte[]) -> newInternalNioBuffer
    305:305:be.alexandre01.dnplugin.shaded.netty.util.Recycler recycler() -> recycler
    28:28:java.nio.ByteBuffer newInternalNioBuffer(java.lang.Object) -> newInternalNioBuffer
    28:28:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle,int,be.alexandre01.dnplugin.shaded.netty.buffer.PooledHeapByteBuf$1) -> <init>
    30:30:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.PooledHeapByteBuf$1 -> be.alexandre01.dnplugin.shaded.netty.buffer.PooledHeapByteBuf$1:
    30:30:void <init>() -> <init>
    33:33:be.alexandre01.dnplugin.shaded.netty.buffer.PooledHeapByteBuf newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
    30:30:java.lang.Object newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
be.alexandre01.dnplugin.shaded.netty.buffer.PooledUnsafeDirectByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.PooledUnsafeDirectByteBuf:
    boolean NATIVE_ORDER -> NATIVE_ORDER
    be.alexandre01.dnplugin.shaded.netty.util.Recycler RECYCLER -> RECYCLER
    long memoryAddress -> memoryAddress
    43:46:be.alexandre01.dnplugin.shaded.netty.buffer.PooledUnsafeDirectByteBuf newInstance(int) -> newInstance
    52:53:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle,int) -> <init>
    57:59:void init(be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk,long,int,int,int) -> init
    63:65:void initUnpooled(be.alexandre01.dnplugin.shaded.netty.buffer.PoolChunk,int) -> initUnpooled
    68:69:void initMemoryAddress() -> initMemoryAddress
    73:73:java.nio.ByteBuffer newInternalNioBuffer(java.nio.ByteBuffer) -> newInternalNioBuffer
    78:78:boolean isDirect() -> isDirect
    83:83:byte _getByte(int) -> _getByte
    88:89:short _getShort(int) -> _getShort
    94:95:int _getUnsignedMedium(int) -> _getUnsignedMedium
    102:103:int _getInt(int) -> _getInt
    108:109:long _getLong(int) -> _getLong
    114:131:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    136:146:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    151:152:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    156:167:void getBytes(int,java.nio.ByteBuffer,boolean) -> getBytes
    171:175:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    180:186:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    191:191:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    195:208:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> getBytes
    214:217:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    222:223:void _setByte(int,int) -> _setByte
    227:228:void _setShort(int,int) -> _setShort
    232:236:void _setMedium(int,int) -> _setMedium
    240:241:void _setInt(int,int) -> _setInt
    245:246:void _setLong(int,long) -> _setLong
    250:267:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setBytes
    272:276:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    281:290:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    295:301:int setBytes(int,java.io.InputStream,int) -> setBytes
    306:313:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    319:329:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy(int,int) -> copy
    334:334:int nioBufferCount() -> nioBufferCount
    339:339:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    344:346:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    351:353:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    358:358:boolean hasArray() -> hasArray
    363:363:byte[] array() -> array
    368:368:int arrayOffset() -> arrayOffset
    373:373:boolean hasMemoryAddress() -> hasMemoryAddress
    378:378:long memoryAddress() -> memoryAddress
    382:382:long addr(int) -> addr
    387:387:be.alexandre01.dnplugin.shaded.netty.util.Recycler recycler() -> recycler
    392:392:be.alexandre01.dnplugin.shaded.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> newSwappedByteBuf
    31:31:java.nio.ByteBuffer newInternalNioBuffer(java.lang.Object) -> newInternalNioBuffer
    31:31:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle,int,be.alexandre01.dnplugin.shaded.netty.buffer.PooledUnsafeDirectByteBuf$1) -> <init>
    33:35:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.PooledUnsafeDirectByteBuf$1 -> be.alexandre01.dnplugin.shaded.netty.buffer.PooledUnsafeDirectByteBuf$1:
    35:35:void <init>() -> <init>
    38:38:be.alexandre01.dnplugin.shaded.netty.buffer.PooledUnsafeDirectByteBuf newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
    35:35:java.lang.Object newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
be.alexandre01.dnplugin.shaded.netty.buffer.ReadOnlyByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.ReadOnlyByteBuf:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer -> buffer
    37:45:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    49:49:boolean isWritable() -> isWritable
    54:54:boolean isWritable(int) -> isWritable
    59:59:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf unwrap() -> unwrap
    64:64:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc() -> alloc
    69:69:java.nio.ByteOrder order() -> order
    74:74:boolean isDirect() -> isDirect
    79:79:boolean hasArray() -> hasArray
    84:84:byte[] array() -> array
    89:89:int arrayOffset() -> arrayOffset
    94:94:boolean hasMemoryAddress() -> hasMemoryAddress
    99:99:long memoryAddress() -> memoryAddress
    104:104:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    109:109:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setBytes
    114:114:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    119:119:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    124:124:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setByte(int,int) -> setByte
    129:129:void _setByte(int,int) -> _setByte
    134:134:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setShort(int,int) -> setShort
    139:139:void _setShort(int,int) -> _setShort
    144:144:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    149:149:void _setMedium(int,int) -> _setMedium
    154:154:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setInt(int,int) -> setInt
    159:159:void _setInt(int,int) -> _setInt
    164:164:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setLong(int,long) -> setLong
    169:169:void _setLong(int,long) -> _setLong
    174:174:int setBytes(int,java.io.InputStream,int) -> setBytes
    179:179:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    185:185:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    191:192:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    197:198:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    203:204:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    209:210:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    215:215:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf duplicate() -> duplicate
    220:220:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy(int,int) -> copy
    225:225:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice(int,int) -> slice
    230:230:byte getByte(int) -> getByte
    235:235:byte _getByte(int) -> _getByte
    240:240:short getShort(int) -> getShort
    245:245:short _getShort(int) -> _getShort
    250:250:int getUnsignedMedium(int) -> getUnsignedMedium
    255:255:int _getUnsignedMedium(int) -> _getUnsignedMedium
    260:260:int getInt(int) -> getInt
    265:265:int _getInt(int) -> _getInt
    270:270:long getLong(int) -> getLong
    275:275:long _getLong(int) -> _getLong
    280:280:int nioBufferCount() -> nioBufferCount
    285:285:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    290:290:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    295:295:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    300:300:int forEachByte(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByte
    305:305:int forEachByteDesc(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteDesc
    310:310:int capacity() -> capacity
    315:315:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf capacity(int) -> capacity
be.alexandre01.dnplugin.shaded.netty.buffer.ReadOnlyByteBufferBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.ReadOnlyByteBufferBuf:
    java.nio.ByteBuffer buffer -> buffer
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator allocator -> allocator
    java.nio.ByteBuffer tmpNioBuf -> tmpNioBuf
    40:48:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,java.nio.ByteBuffer) -> <init>
    51:51:void deallocate() -> deallocate
    55:56:byte getByte(int) -> getByte
    61:61:byte _getByte(int) -> _getByte
    66:67:short getShort(int) -> getShort
    72:72:short _getShort(int) -> _getShort
    77:78:int getUnsignedMedium(int) -> getUnsignedMedium
    83:83:int _getUnsignedMedium(int) -> _getUnsignedMedium
    88:89:int getInt(int) -> getInt
    94:94:int _getInt(int) -> _getInt
    99:100:long getLong(int) -> getLong
    105:105:long _getLong(int) -> _getLong
    110:122:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    127:137:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    142:151:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    156:156:void _setByte(int,int) -> _setByte
    161:161:void _setShort(int,int) -> _setShort
    166:166:void _setMedium(int,int) -> _setMedium
    171:171:void _setInt(int,int) -> _setInt
    176:176:void _setLong(int,long) -> _setLong
    181:181:int capacity() -> capacity
    186:186:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf capacity(int) -> capacity
    191:191:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc() -> alloc
    196:196:java.nio.ByteOrder order() -> order
    201:201:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf unwrap() -> unwrap
    206:206:boolean isDirect() -> isDirect
    211:225:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    230:237:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    242:242:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setBytes
    247:247:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    252:252:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    257:257:int setBytes(int,java.io.InputStream,int) -> setBytes
    262:262:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    266:270:java.nio.ByteBuffer internalNioBuffer() -> internalNioBuffer
    275:287:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy(int,int) -> copy
    292:292:int nioBufferCount() -> nioBufferCount
    297:297:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    302:302:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    307:308:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    313:313:boolean hasArray() -> hasArray
    318:318:byte[] array() -> array
    323:323:int arrayOffset() -> arrayOffset
    328:328:boolean hasMemoryAddress() -> hasMemoryAddress
    333:333:long memoryAddress() -> memoryAddress
be.alexandre01.dnplugin.shaded.netty.buffer.ReadOnlyUnsafeDirectByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.ReadOnlyUnsafeDirectByteBuf:
    boolean NATIVE_ORDER -> NATIVE_ORDER
    long memoryAddress -> memoryAddress
    34:36:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,java.nio.ByteBuffer) -> <init>
    40:40:byte _getByte(int) -> _getByte
    45:46:short _getShort(int) -> _getShort
    51:52:int _getUnsignedMedium(int) -> _getUnsignedMedium
    59:60:int _getInt(int) -> _getInt
    65:66:long _getLong(int) -> _getLong
    71:86:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    91:103:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    108:117:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    122:132:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy(int,int) -> copy
    136:136:long addr(int) -> addr
    30:30:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.SimpleLeakAwareByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.SimpleLeakAwareByteBuf:
    be.alexandre01.dnplugin.shaded.netty.util.ResourceLeak leak -> leak
    28:30:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.util.ResourceLeak) -> <init>
    34:38:boolean release() -> release
    43:47:boolean release(int) -> release
    52:56:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    62:62:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice() -> slice
    67:67:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice(int,int) -> slice
    72:72:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf duplicate() -> duplicate
    77:77:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readSlice(int) -> readSlice
be.alexandre01.dnplugin.shaded.netty.buffer.SlicedByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.SlicedByteBuf:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer -> buffer
    int adjustment -> adjustment
    int length -> length
    40:58:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> <init>
    62:62:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf unwrap() -> unwrap
    67:67:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc() -> alloc
    72:72:java.nio.ByteOrder order() -> order
    77:77:boolean isDirect() -> isDirect
    82:82:int capacity() -> capacity
    87:87:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf capacity(int) -> capacity
    92:92:boolean hasArray() -> hasArray
    97:97:byte[] array() -> array
    102:102:int arrayOffset() -> arrayOffset
    107:107:boolean hasMemoryAddress() -> hasMemoryAddress
    112:112:long memoryAddress() -> memoryAddress
    117:117:byte _getByte(int) -> _getByte
    122:122:short _getShort(int) -> _getShort
    127:127:int _getUnsignedMedium(int) -> _getUnsignedMedium
    132:132:int _getInt(int) -> _getInt
    137:137:long _getLong(int) -> _getLong
    142:144:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf duplicate() -> duplicate
    149:150:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy(int,int) -> copy
    155:159:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice(int,int) -> slice
    164:166:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    171:173:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    178:180:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    185:186:void _setByte(int,int) -> _setByte
    190:191:void _setShort(int,int) -> _setShort
    195:196:void _setMedium(int,int) -> _setMedium
    200:201:void _setInt(int,int) -> _setInt
    205:206:void _setLong(int,long) -> _setLong
    210:212:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    217:219:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setBytes
    224:226:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    231:233:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    238:239:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    244:245:int setBytes(int,java.io.InputStream,int) -> setBytes
    250:251:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    256:256:int nioBufferCount() -> nioBufferCount
    261:262:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    267:268:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    273:274:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    279:283:int forEachByte(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByte
    289:293:int forEachByteDesc(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteDesc
be.alexandre01.dnplugin.shaded.netty.buffer.SwappedByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.SwappedByteBuf:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buf -> buf
    java.nio.ByteOrder order -> order
    35:45:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    49:49:java.nio.ByteOrder order() -> order
    54:60:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    65:65:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf unwrap() -> unwrap
    70:70:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc() -> alloc
    75:75:int capacity() -> capacity
    80:81:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf capacity(int) -> capacity
    86:86:int maxCapacity() -> maxCapacity
    91:91:boolean isDirect() -> isDirect
    96:96:int readerIndex() -> readerIndex
    101:102:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    107:107:int writerIndex() -> writerIndex
    112:113:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    118:119:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    124:124:int readableBytes() -> readableBytes
    129:129:int writableBytes() -> writableBytes
    134:134:int maxWritableBytes() -> maxWritableBytes
    139:139:boolean isReadable() -> isReadable
    144:144:boolean isReadable(int) -> isReadable
    149:149:boolean isWritable() -> isWritable
    154:154:boolean isWritable(int) -> isWritable
    159:160:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf clear() -> clear
    165:166:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    171:172:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    177:178:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf markWriterIndex() -> markWriterIndex
    183:184:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf resetWriterIndex() -> resetWriterIndex
    189:190:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    195:196:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    201:202:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    207:207:int ensureWritable(int,boolean) -> ensureWritable
    212:212:boolean getBoolean(int) -> getBoolean
    217:217:byte getByte(int) -> getByte
    222:222:short getUnsignedByte(int) -> getUnsignedByte
    227:227:short getShort(int) -> getShort
    232:232:int getUnsignedShort(int) -> getUnsignedShort
    237:237:int getMedium(int) -> getMedium
    242:242:int getUnsignedMedium(int) -> getUnsignedMedium
    247:247:int getInt(int) -> getInt
    252:252:long getUnsignedInt(int) -> getUnsignedInt
    257:257:long getLong(int) -> getLong
    262:262:char getChar(int) -> getChar
    267:267:float getFloat(int) -> getFloat
    272:272:double getDouble(int) -> getDouble
    277:278:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> getBytes
    283:284:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> getBytes
    289:290:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    295:296:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    301:302:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    307:308:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    313:314:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    319:319:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    324:325:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBoolean(int,boolean) -> setBoolean
    330:331:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setByte(int,int) -> setByte
    336:337:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setShort(int,int) -> setShort
    342:343:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    348:349:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setInt(int,int) -> setInt
    354:355:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setLong(int,long) -> setLong
    360:361:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setChar(int,int) -> setChar
    366:367:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    372:373:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    378:379:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setBytes
    384:385:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> setBytes
    390:391:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setBytes
    396:397:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    402:403:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    408:409:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    414:414:int setBytes(int,java.io.InputStream,int) -> setBytes
    419:419:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    424:425:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setZero(int,int) -> setZero
    430:430:boolean readBoolean() -> readBoolean
    435:435:byte readByte() -> readByte
    440:440:short readUnsignedByte() -> readUnsignedByte
    445:445:short readShort() -> readShort
    450:450:int readUnsignedShort() -> readUnsignedShort
    455:455:int readMedium() -> readMedium
    460:460:int readUnsignedMedium() -> readUnsignedMedium
    465:465:int readInt() -> readInt
    470:470:long readUnsignedInt() -> readUnsignedInt
    475:475:long readLong() -> readLong
    480:480:char readChar() -> readChar
    485:485:float readFloat() -> readFloat
    490:490:double readDouble() -> readDouble
    495:495:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(int) -> readBytes
    500:500:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readSlice(int) -> readSlice
    505:506:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readBytes
    511:512:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> readBytes
    517:518:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> readBytes
    523:524:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    529:530:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    535:536:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    541:542:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    547:547:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    552:553:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    558:559:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBoolean(boolean) -> writeBoolean
    564:565:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeByte(int) -> writeByte
    570:571:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeShort(int) -> writeShort
    576:577:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    582:583:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeInt(int) -> writeInt
    588:589:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeLong(long) -> writeLong
    594:595:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeChar(int) -> writeChar
    600:601:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    606:607:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    612:613:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> writeBytes
    618:619:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> writeBytes
    624:625:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> writeBytes
    630:631:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    636:637:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    642:643:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    648:648:int writeBytes(java.io.InputStream,int) -> writeBytes
    653:653:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    658:659:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeZero(int) -> writeZero
    664:664:int indexOf(int,int,byte) -> indexOf
    669:669:int bytesBefore(byte) -> bytesBefore
    674:674:int bytesBefore(int,byte) -> bytesBefore
    679:679:int bytesBefore(int,int,byte) -> bytesBefore
    684:684:int forEachByte(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByte
    689:689:int forEachByte(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByte
    694:694:int forEachByteDesc(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteDesc
    699:699:int forEachByteDesc(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteDesc
    704:704:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy() -> copy
    709:709:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy(int,int) -> copy
    714:714:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice() -> slice
    719:719:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice(int,int) -> slice
    724:724:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf duplicate() -> duplicate
    729:729:int nioBufferCount() -> nioBufferCount
    734:734:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    739:739:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    744:744:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    749:753:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    758:762:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    767:767:boolean hasArray() -> hasArray
    772:772:byte[] array() -> array
    777:777:int arrayOffset() -> arrayOffset
    782:782:boolean hasMemoryAddress() -> hasMemoryAddress
    787:787:long memoryAddress() -> memoryAddress
    792:792:java.lang.String toString(java.nio.charset.Charset) -> toString
    797:797:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    802:802:int refCnt() -> refCnt
    807:808:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain() -> retain
    813:814:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain(int) -> retain
    819:819:boolean release() -> release
    824:824:boolean release(int) -> release
    829:829:int hashCode() -> hashCode
    834:840:boolean equals(java.lang.Object) -> equals
    845:845:int compareTo(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> compareTo
    850:850:java.lang.String toString() -> toString
    30:30:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    30:30:int compareTo(java.lang.Object) -> compareTo
be.alexandre01.dnplugin.shaded.netty.buffer.Unpooled -> be.alexandre01.dnplugin.shaded.netty.buffer.Unpooled:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator ALLOC -> ALLOC
    java.nio.ByteOrder BIG_ENDIAN -> BIG_ENDIAN
    java.nio.ByteOrder LITTLE_ENDIAN -> LITTLE_ENDIAN
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf EMPTY_BUFFER -> EMPTY_BUFFER
    101:101:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer() -> buffer
    109:109:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf directBuffer() -> directBuffer
    118:118:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer(int) -> buffer
    127:127:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    137:137:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer(int,int) -> buffer
    147:147:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    156:159:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf wrappedBuffer(byte[]) -> wrappedBuffer
    168:176:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf wrappedBuffer(byte[],int,int) -> wrappedBuffer
    185:207:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf wrappedBuffer(java.nio.ByteBuffer) -> wrappedBuffer
    218:221:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf wrappedBuffer(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> wrappedBuffer
    231:231:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf wrappedBuffer(byte[][]) -> wrappedBuffer
    240:240:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf wrappedBuffer(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf[]) -> wrappedBuffer
    249:249:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf wrappedBuffer(java.nio.ByteBuffer[]) -> wrappedBuffer
    258:283:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf wrappedBuffer(int,byte[][]) -> wrappedBuffer
    292:307:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf wrappedBuffer(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf[]) -> wrappedBuffer
    316:341:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf wrappedBuffer(int,java.nio.ByteBuffer[]) -> wrappedBuffer
    348:348:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf compositeBuffer() -> compositeBuffer
    355:355:be.alexandre01.dnplugin.shaded.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    364:367:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copiedBuffer(byte[]) -> copiedBuffer
    377:382:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copiedBuffer(byte[],int,int) -> copiedBuffer
    392:403:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copiedBuffer(java.nio.ByteBuffer) -> copiedBuffer
    413:419:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copiedBuffer(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> copiedBuffer
    430:462:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copiedBuffer(byte[][]) -> copiedBuffer
    476:517:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copiedBuffer(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf[]) -> copiedBuffer
    531:574:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copiedBuffer(java.nio.ByteBuffer[]) -> copiedBuffer
    584:592:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copiedBuffer(java.lang.CharSequence,java.nio.charset.Charset) -> copiedBuffer
    603:625:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copiedBuffer(java.lang.CharSequence,int,int,java.nio.charset.Charset) -> copiedBuffer
    635:638:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copiedBuffer(char[],java.nio.charset.Charset) -> copiedBuffer
    648:654:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copiedBuffer(char[],int,int,java.nio.charset.Charset) -> copiedBuffer
    658:658:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copiedBuffer(java.nio.CharBuffer,java.nio.charset.Charset) -> copiedBuffer
    668:673:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf unmodifiableBuffer(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> unmodifiableBuffer
    680:682:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copyInt(int) -> copyInt
    689:696:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copyInt(int[]) -> copyInt
    703:705:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copyShort(int) -> copyShort
    712:719:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copyShort(short[]) -> copyShort
    726:733:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copyShort(int[]) -> copyShort
    740:742:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copyMedium(int) -> copyMedium
    749:756:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copyMedium(int[]) -> copyMedium
    763:765:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copyLong(long) -> copyLong
    772:779:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copyLong(long[]) -> copyLong
    786:788:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copyBoolean(boolean) -> copyBoolean
    795:802:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copyBoolean(boolean[]) -> copyBoolean
    809:811:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copyFloat(float) -> copyFloat
    818:825:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copyFloat(float[]) -> copyFloat
    832:834:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copyDouble(double) -> copyDouble
    841:848:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copyDouble(double[]) -> copyDouble
    855:855:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf unreleasableBuffer(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> unreleasableBuffer
    858:860:void <init>() -> <init>
    79:94:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.UnpooledByteBufAllocator -> be.alexandre01.dnplugin.shaded.netty.buffer.UnpooledByteBufAllocator:
    be.alexandre01.dnplugin.shaded.netty.buffer.UnpooledByteBufAllocator DEFAULT -> DEFAULT
    38:39:void <init>(boolean) -> <init>
    43:43:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf newHeapBuffer(int,int) -> newHeapBuffer
    49:55:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf newDirectBuffer(int,int) -> newDirectBuffer
    60:60:boolean isDirectBufferPooled() -> isDirectBufferPooled
    28:28:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.UnpooledDirectByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.UnpooledDirectByteBuf:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc -> alloc
    java.nio.ByteBuffer buffer -> buffer
    java.nio.ByteBuffer tmpNioBuf -> tmpNioBuf
    int capacity -> capacity
    boolean doNotFree -> doNotFree
    50:67:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,int,int) -> <init>
    75:99:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,java.nio.ByteBuffer,int) -> <init>
    105:105:java.nio.ByteBuffer allocateDirect(int) -> allocateDirect
    112:113:void freeDirect(java.nio.ByteBuffer) -> freeDirect
    116:128:void setByteBuffer(java.nio.ByteBuffer) -> setByteBuffer
    132:132:boolean isDirect() -> isDirect
    137:137:int capacity() -> capacity
    142:175:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf capacity(int) -> capacity
    180:180:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc() -> alloc
    185:185:java.nio.ByteOrder order() -> order
    190:190:boolean hasArray() -> hasArray
    195:195:byte[] array() -> array
    200:200:int arrayOffset() -> arrayOffset
    205:205:boolean hasMemoryAddress() -> hasMemoryAddress
    210:210:long memoryAddress() -> memoryAddress
    215:216:byte getByte(int) -> getByte
    221:221:byte _getByte(int) -> _getByte
    226:227:short getShort(int) -> getShort
    232:232:short _getShort(int) -> _getShort
    237:238:int getUnsignedMedium(int) -> getUnsignedMedium
    243:243:int _getUnsignedMedium(int) -> _getUnsignedMedium
    248:249:int getInt(int) -> getInt
    254:254:int _getInt(int) -> _getInt
    259:260:long getLong(int) -> getLong
    265:265:long _getLong(int) -> _getLong
    270:282:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    287:288:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    292:307:void getBytes(int,byte[],int,int,boolean) -> getBytes
    311:314:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    319:320:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    324:338:void getBytes(int,java.nio.ByteBuffer,boolean) -> getBytes
    342:346:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    351:353:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setByte(int,int) -> setByte
    358:359:void _setByte(int,int) -> _setByte
    363:365:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setShort(int,int) -> setShort
    370:371:void _setShort(int,int) -> _setShort
    375:377:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    382:385:void _setMedium(int,int) -> _setMedium
    389:391:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setInt(int,int) -> setInt
    396:397:void _setInt(int,int) -> _setInt
    401:403:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setLong(int,long) -> setLong
    408:409:void _setLong(int,long) -> _setLong
    413:423:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setBytes
    428:432:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    437:445:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    450:451:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    455:474:void getBytes(int,java.io.OutputStream,int,boolean) -> getBytes
    478:481:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    486:486:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    490:502:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> getBytes
    507:510:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    515:527:int setBytes(int,java.io.InputStream,int) -> setBytes
    533:539:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    545:545:int nioBufferCount() -> nioBufferCount
    550:550:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    555:563:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy(int,int) -> copy
    568:569:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    573:577:java.nio.ByteBuffer internalNioBuffer() -> internalNioBuffer
    582:583:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    588:598:void deallocate() -> deallocate
    602:602:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf unwrap() -> unwrap
be.alexandre01.dnplugin.shaded.netty.buffer.UnpooledHeapByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.UnpooledHeapByteBuf:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc -> alloc
    byte[] array -> array
    java.nio.ByteBuffer tmpNioBuf -> tmpNioBuf
    45:46:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,int,int) -> <init>
    55:56:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,byte[],int) -> <init>
    61:77:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,byte[],int,int,int) -> <init>
    80:82:void setArray(byte[]) -> setArray
    86:86:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc() -> alloc
    91:91:java.nio.ByteOrder order() -> order
    96:96:boolean isDirect() -> isDirect
    101:102:int capacity() -> capacity
    107:131:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf capacity(int) -> capacity
    136:136:boolean hasArray() -> hasArray
    141:142:byte[] array() -> array
    147:147:int arrayOffset() -> arrayOffset
    152:152:boolean hasMemoryAddress() -> hasMemoryAddress
    157:157:long memoryAddress() -> memoryAddress
    162:170:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    175:177:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    182:184:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    189:191:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    196:197:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    201:208:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> getBytes
    213:216:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    221:229:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setBytes
    234:236:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    241:243:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    248:249:int setBytes(int,java.io.InputStream,int) -> setBytes
    254:258:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    264:264:int nioBufferCount() -> nioBufferCount
    269:270:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    275:275:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    280:281:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    286:287:byte getByte(int) -> getByte
    292:292:byte _getByte(int) -> _getByte
    297:298:short getShort(int) -> getShort
    303:303:short _getShort(int) -> _getShort
    308:309:int getUnsignedMedium(int) -> getUnsignedMedium
    314:314:int _getUnsignedMedium(int) -> _getUnsignedMedium
    321:322:int getInt(int) -> getInt
    327:327:int _getInt(int) -> _getInt
    335:336:long getLong(int) -> getLong
    341:341:long _getLong(int) -> _getLong
    353:355:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setByte(int,int) -> setByte
    360:361:void _setByte(int,int) -> _setByte
    365:367:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setShort(int,int) -> setShort
    372:374:void _setShort(int,int) -> _setShort
    378:380:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    385:388:void _setMedium(int,int) -> _setMedium
    392:394:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setInt(int,int) -> setInt
    399:403:void _setInt(int,int) -> _setInt
    407:409:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setLong(int,long) -> setLong
    414:422:void _setLong(int,long) -> _setLong
    426:429:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy(int,int) -> copy
    433:437:java.nio.ByteBuffer internalNioBuffer() -> internalNioBuffer
    442:443:void deallocate() -> deallocate
    447:447:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf unwrap() -> unwrap
be.alexandre01.dnplugin.shaded.netty.buffer.UnpooledUnsafeDirectByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.UnpooledUnsafeDirectByteBuf:
    boolean NATIVE_ORDER -> NATIVE_ORDER
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc -> alloc
    long memoryAddress -> memoryAddress
    java.nio.ByteBuffer buffer -> buffer
    java.nio.ByteBuffer tmpNioBuf -> tmpNioBuf
    int capacity -> capacity
    boolean doNotFree -> doNotFree
    53:70:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,int,int) -> <init>
    78:102:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,java.nio.ByteBuffer,int) -> <init>
    108:108:java.nio.ByteBuffer allocateDirect(int) -> allocateDirect
    115:116:void freeDirect(java.nio.ByteBuffer) -> freeDirect
    119:132:void setByteBuffer(java.nio.ByteBuffer) -> setByteBuffer
    136:136:boolean isDirect() -> isDirect
    141:141:int capacity() -> capacity
    146:179:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf capacity(int) -> capacity
    184:184:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc() -> alloc
    189:189:java.nio.ByteOrder order() -> order
    194:194:boolean hasArray() -> hasArray
    199:199:byte[] array() -> array
    204:204:int arrayOffset() -> arrayOffset
    209:209:boolean hasMemoryAddress() -> hasMemoryAddress
    214:214:long memoryAddress() -> memoryAddress
    219:219:byte _getByte(int) -> _getByte
    224:225:short _getShort(int) -> _getShort
    230:231:int _getUnsignedMedium(int) -> _getUnsignedMedium
    238:239:int _getInt(int) -> _getInt
    244:245:long _getLong(int) -> _getLong
    250:265:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    270:282:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    287:288:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    292:306:void getBytes(int,java.nio.ByteBuffer,boolean) -> getBytes
    310:314:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    319:320:void _setByte(int,int) -> _setByte
    324:325:void _setShort(int,int) -> _setShort
    329:333:void _setMedium(int,int) -> _setMedium
    337:338:void _setInt(int,int) -> _setInt
    342:343:void _setLong(int,long) -> _setLong
    347:364:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setBytes
    369:373:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    378:386:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    391:397:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    402:402:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    406:418:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> getBytes
    423:426:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    431:437:int setBytes(int,java.io.InputStream,int) -> setBytes
    442:448:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    454:454:int nioBufferCount() -> nioBufferCount
    459:459:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    464:474:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy(int,int) -> copy
    479:480:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    484:488:java.nio.ByteBuffer internalNioBuffer() -> internalNioBuffer
    493:494:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    499:509:void deallocate() -> deallocate
    513:513:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf unwrap() -> unwrap
    517:517:long addr(int) -> addr
    522:522:be.alexandre01.dnplugin.shaded.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> newSwappedByteBuf
    36:36:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.UnreleasableByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.UnreleasableByteBuf:
    be.alexandre01.dnplugin.shaded.netty.buffer.SwappedByteBuf swappedBuf -> swappedBuf
    29:30:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    34:45:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    50:50:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readSlice(int) -> readSlice
    55:55:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice() -> slice
    60:60:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice(int,int) -> slice
    65:65:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf duplicate() -> duplicate
    70:70:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain(int) -> retain
    75:75:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain() -> retain
    80:80:boolean release() -> release
    85:85:boolean release(int) -> release
    24:24:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.buffer.UnsafeDirectSwappedByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.UnsafeDirectSwappedByteBuf:
    boolean NATIVE_ORDER -> NATIVE_ORDER
    boolean nativeByteOrder -> nativeByteOrder
    be.alexandre01.dnplugin.shaded.netty.buffer.AbstractByteBuf wrapped -> wrapped
    32:35:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.AbstractByteBuf) -> <init>
    42:42:long addr(int) -> addr
    47:49:long getLong(int) -> getLong
    54:54:float getFloat(int) -> getFloat
    59:59:double getDouble(int) -> getDouble
    64:64:char getChar(int) -> getChar
    69:69:long getUnsignedInt(int) -> getUnsignedInt
    74:76:int getInt(int) -> getInt
    81:81:int getUnsignedShort(int) -> getUnsignedShort
    86:88:short getShort(int) -> getShort
    93:95:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setShort(int,int) -> setShort
    100:102:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setInt(int,int) -> setInt
    107:109:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setLong(int,long) -> setLong
    114:115:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setChar(int,int) -> setChar
    120:121:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    126:127:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    132:136:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeShort(int) -> writeShort
    141:145:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeInt(int) -> writeInt
    150:154:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeLong(long) -> writeLong
    159:160:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeChar(int) -> writeChar
    165:166:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    171:172:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    176:177:void _setShort(int,int) -> _setShort
    180:181:void _setInt(int,int) -> _setInt
    184:185:void _setLong(int,long) -> _setLong
    27:27:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.buffer.WrappedByteBuf -> be.alexandre01.dnplugin.shaded.netty.buffer.WrappedByteBuf:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buf -> buf
    34:39:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    43:43:boolean hasMemoryAddress() -> hasMemoryAddress
    48:48:long memoryAddress() -> memoryAddress
    53:53:int capacity() -> capacity
    58:59:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf capacity(int) -> capacity
    64:64:int maxCapacity() -> maxCapacity
    69:69:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc() -> alloc
    74:74:java.nio.ByteOrder order() -> order
    79:79:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    84:84:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf unwrap() -> unwrap
    89:89:boolean isDirect() -> isDirect
    94:94:int readerIndex() -> readerIndex
    99:100:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    105:105:int writerIndex() -> writerIndex
    110:111:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    116:117:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    122:122:int readableBytes() -> readableBytes
    127:127:int writableBytes() -> writableBytes
    132:132:int maxWritableBytes() -> maxWritableBytes
    137:137:boolean isReadable() -> isReadable
    142:142:boolean isWritable() -> isWritable
    147:148:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf clear() -> clear
    153:154:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    159:160:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    165:166:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf markWriterIndex() -> markWriterIndex
    171:172:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf resetWriterIndex() -> resetWriterIndex
    177:178:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    183:184:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    189:190:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    195:195:int ensureWritable(int,boolean) -> ensureWritable
    200:200:boolean getBoolean(int) -> getBoolean
    205:205:byte getByte(int) -> getByte
    210:210:short getUnsignedByte(int) -> getUnsignedByte
    215:215:short getShort(int) -> getShort
    220:220:int getUnsignedShort(int) -> getUnsignedShort
    225:225:int getMedium(int) -> getMedium
    230:230:int getUnsignedMedium(int) -> getUnsignedMedium
    235:235:int getInt(int) -> getInt
    240:240:long getUnsignedInt(int) -> getUnsignedInt
    245:245:long getLong(int) -> getLong
    250:250:char getChar(int) -> getChar
    255:255:float getFloat(int) -> getFloat
    260:260:double getDouble(int) -> getDouble
    265:266:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> getBytes
    271:272:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> getBytes
    277:278:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    283:284:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    289:290:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    295:296:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    301:302:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    307:307:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    312:313:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBoolean(int,boolean) -> setBoolean
    318:319:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setByte(int,int) -> setByte
    324:325:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setShort(int,int) -> setShort
    330:331:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    336:337:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setInt(int,int) -> setInt
    342:343:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setLong(int,long) -> setLong
    348:349:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setChar(int,int) -> setChar
    354:355:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    360:361:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    366:367:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setBytes
    372:373:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> setBytes
    378:379:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setBytes
    384:385:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    390:391:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    396:397:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    402:402:int setBytes(int,java.io.InputStream,int) -> setBytes
    407:407:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    412:413:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setZero(int,int) -> setZero
    418:418:boolean readBoolean() -> readBoolean
    423:423:byte readByte() -> readByte
    428:428:short readUnsignedByte() -> readUnsignedByte
    433:433:short readShort() -> readShort
    438:438:int readUnsignedShort() -> readUnsignedShort
    443:443:int readMedium() -> readMedium
    448:448:int readUnsignedMedium() -> readUnsignedMedium
    453:453:int readInt() -> readInt
    458:458:long readUnsignedInt() -> readUnsignedInt
    463:463:long readLong() -> readLong
    468:468:char readChar() -> readChar
    473:473:float readFloat() -> readFloat
    478:478:double readDouble() -> readDouble
    483:483:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(int) -> readBytes
    488:488:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readSlice(int) -> readSlice
    493:494:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readBytes
    499:500:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> readBytes
    505:506:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> readBytes
    511:512:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    517:518:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    523:524:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    529:530:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    535:535:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    540:541:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    546:547:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBoolean(boolean) -> writeBoolean
    552:553:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeByte(int) -> writeByte
    558:559:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeShort(int) -> writeShort
    564:565:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    570:571:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeInt(int) -> writeInt
    576:577:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeLong(long) -> writeLong
    582:583:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeChar(int) -> writeChar
    588:589:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    594:595:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    600:601:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> writeBytes
    606:607:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> writeBytes
    612:613:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> writeBytes
    618:619:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    624:625:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    630:631:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    636:636:int writeBytes(java.io.InputStream,int) -> writeBytes
    641:641:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    646:647:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeZero(int) -> writeZero
    652:652:int indexOf(int,int,byte) -> indexOf
    657:657:int bytesBefore(byte) -> bytesBefore
    662:662:int bytesBefore(int,byte) -> bytesBefore
    667:667:int bytesBefore(int,int,byte) -> bytesBefore
    672:672:int forEachByte(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByte
    677:677:int forEachByte(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByte
    682:682:int forEachByteDesc(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteDesc
    687:687:int forEachByteDesc(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteDesc
    692:692:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy() -> copy
    697:697:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy(int,int) -> copy
    702:702:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice() -> slice
    707:707:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice(int,int) -> slice
    712:712:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf duplicate() -> duplicate
    717:717:int nioBufferCount() -> nioBufferCount
    722:722:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    727:727:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    732:732:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    737:737:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    742:742:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    747:747:boolean hasArray() -> hasArray
    752:752:byte[] array() -> array
    757:757:int arrayOffset() -> arrayOffset
    762:762:java.lang.String toString(java.nio.charset.Charset) -> toString
    767:767:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    772:772:int hashCode() -> hashCode
    778:778:boolean equals(java.lang.Object) -> equals
    783:783:int compareTo(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> compareTo
    788:788:java.lang.String toString() -> toString
    793:794:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain(int) -> retain
    799:800:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain() -> retain
    805:805:boolean isReadable(int) -> isReadable
    810:810:boolean isWritable(int) -> isWritable
    815:815:int refCnt() -> refCnt
    820:820:boolean release() -> release
    825:825:boolean release(int) -> release
    30:30:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    30:30:int compareTo(java.lang.Object) -> compareTo
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.nio.channels.ClosedChannelException CLOSED_CHANNEL_EXCEPTION -> CLOSED_CHANNEL_EXCEPTION
    java.nio.channels.NotYetConnectedException NOT_YET_CONNECTED_EXCEPTION -> NOT_YET_CONNECTED_EXCEPTION
    be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator$Handle estimatorHandle -> estimatorHandle
    be.alexandre01.dnplugin.shaded.netty.channel.Channel parent -> parent
    long hashCode -> hashCode
    be.alexandre01.dnplugin.shaded.netty.channel.Channel$Unsafe unsafe -> unsafe
    be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline pipeline -> pipeline
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture succeededFuture -> succeededFuture
    be.alexandre01.dnplugin.shaded.netty.channel.VoidChannelPromise voidPromise -> voidPromise
    be.alexandre01.dnplugin.shaded.netty.channel.VoidChannelPromise unsafeVoidPromise -> unsafeVoidPromise
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$CloseFuture closeFuture -> closeFuture
    java.net.SocketAddress localAddress -> localAddress
    java.net.SocketAddress remoteAddress -> remoteAddress
    be.alexandre01.dnplugin.shaded.netty.channel.EventLoop eventLoop -> eventLoop
    boolean registered -> registered
    boolean strValActive -> strValActive
    java.lang.String strVal -> strVal
    53:80:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> <init>
    84:85:boolean isWritable() -> isWritable
    90:90:be.alexandre01.dnplugin.shaded.netty.channel.Channel parent() -> parent
    95:95:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline pipeline() -> pipeline
    100:100:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc() -> alloc
    105:109:be.alexandre01.dnplugin.shaded.netty.channel.EventLoop eventLoop() -> eventLoop
    114:123:java.net.SocketAddress localAddress() -> localAddress
    127:128:void invalidateLocalAddress() -> invalidateLocalAddress
    132:141:java.net.SocketAddress remoteAddress() -> remoteAddress
    148:149:void invalidateRemoteAddress() -> invalidateRemoteAddress
    153:153:boolean isRegistered() -> isRegistered
    158:158:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    163:163:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    168:168:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    173:173:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture disconnect() -> disconnect
    178:178:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close() -> close
    183:183:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture deregister() -> deregister
    188:189:be.alexandre01.dnplugin.shaded.netty.channel.Channel flush() -> flush
    194:194:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bind(java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bind
    199:199:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    204:204:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    209:209:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture disconnect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> disconnect
    214:214:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    219:219:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture deregister(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> deregister
    224:225:be.alexandre01.dnplugin.shaded.netty.channel.Channel read() -> read
    230:230:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture write(java.lang.Object) -> write
    235:235:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture write(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    240:240:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    245:245:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> writeAndFlush
    250:250:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise newPromise() -> newPromise
    255:255:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    260:260:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    265:265:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    270:270:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture closeFuture() -> closeFuture
    275:275:be.alexandre01.dnplugin.shaded.netty.channel.Channel$Unsafe unsafe() -> unsafe
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    288:288:int hashCode() -> hashCode
    297:297:boolean equals(java.lang.Object) -> equals
    302:320:int compareTo(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> compareTo
    331:356:java.lang.String toString() -> toString
    361:361:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise voidPromise() -> voidPromise
    365:368:be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator$Handle estimatorHandle() -> estimatorHandle
    boolean isCompatible(be.alexandre01.dnplugin.shaded.netty.channel.EventLoop) -> isCompatible
    java.net.SocketAddress localAddress0() -> localAddress0
    java.net.SocketAddress remoteAddress0() -> remoteAddress0
    799:799:void doRegister() -> doRegister
    void doBind(java.net.SocketAddress) -> doBind
    void doDisconnect() -> doDisconnect
    void doClose() -> doClose
    823:823:void doDeregister() -> doDeregister
    void doBeginRead() -> doBeginRead
    void doWrite(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWrite
    840:840:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    38:38:int compareTo(java.lang.Object) -> compareTo
    38:38:be.alexandre01.dnplugin.shaded.netty.channel.EventLoop access$002(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel,be.alexandre01.dnplugin.shaded.netty.channel.EventLoop) -> access$002
    38:38:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger access$200() -> access$200
    38:38:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$CloseFuture access$300(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel) -> access$300
    38:38:boolean access$402(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel,boolean) -> access$402
    38:38:be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline access$500(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel) -> access$500
    38:38:boolean access$400(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel) -> access$400
    38:38:be.alexandre01.dnplugin.shaded.netty.channel.VoidChannelPromise access$600(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel) -> access$600
    40:48:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer outboundBuffer -> outboundBuffer
    boolean inFlush0 -> inFlush0
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel this$0 -> this$0
    374:376:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel) -> <init>
    381:381:be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer outboundBuffer() -> outboundBuffer
    386:386:java.net.SocketAddress localAddress() -> localAddress
    391:391:java.net.SocketAddress remoteAddress() -> remoteAddress
    396:430:void register(be.alexandre01.dnplugin.shaded.netty.channel.EventLoop,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> register
    436:452:void register0(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> register0
    456:492:void bind(java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bind
    496:520:void disconnect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> disconnect
    524:574:void close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    579:583:void closeForcibly() -> closeForcibly
    587:617:void deregister(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> deregister
    621:636:void beginRead() -> beginRead
    640:666:void write(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    670:677:void flush() -> flush
    680:716:void flush0() -> flush0
    720:720:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise voidPromise() -> voidPromise
    724:729:boolean ensureOpen(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> ensureOpen
    736:739:void safeSetSuccess(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> safeSetSuccess
    745:748:void safeSetFailure(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,java.lang.Throwable) -> safeSetFailure
    751:755:void closeIfClosed() -> closeIfClosed
    770:774:void invokeLater(java.lang.Runnable) -> invokeLater
    374:374:void access$100(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> access$100
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe$1 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    415:415:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    418:419:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe$2 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe$2:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    483:483:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe) -> <init>
    486:487:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe$3 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe$3:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    510:510:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe) -> <init>
    513:514:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe$4 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe$4:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    529:529:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    532:533:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe$5 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe$5:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    564:564:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe) -> <init>
    567:568:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe$6 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe$6:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    603:603:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe) -> <init>
    606:607:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe$7 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe$7:
    java.lang.Exception val$e -> val$e
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    628:628:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe,java.lang.Exception) -> <init>
    631:632:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$CloseFuture -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$CloseFuture:
    846:847:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel) -> <init>
    851:851:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise setSuccess() -> setSuccess
    856:856:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    861:861:boolean trySuccess() -> trySuccess
    866:866:boolean tryFailure(java.lang.Throwable) -> tryFailure
    870:870:boolean setClosed() -> setClosed
    843:843:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext next -> next
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext prev -> prev
    boolean inbound -> inbound
    boolean outbound -> outbound
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel channel -> channel
    be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline pipeline -> pipeline
    java.lang.String name -> name
    boolean removed -> removed
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor executor -> executor
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture succeededFuture -> succeededFuture
    java.lang.Runnable invokeChannelReadCompleteTask -> invokeChannelReadCompleteTask
    java.lang.Runnable invokeReadTask -> invokeReadTask
    java.lang.Runnable invokeChannelWritableStateChangedTask -> invokeChannelWritableStateChangedTask
    java.lang.Runnable invokeFlushTask -> invokeFlushTask
    58:83:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline,be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup,java.lang.String,boolean,boolean) -> <init>
    87:98:void teardown() -> teardown
    101:108:void teardown0() -> teardown0
    112:112:be.alexandre01.dnplugin.shaded.netty.channel.Channel channel() -> channel
    117:117:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline pipeline() -> pipeline
    122:122:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc() -> alloc
    127:130:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor executor() -> executor
    136:136:java.lang.String name() -> name
    141:153:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext fireChannelRegistered() -> fireChannelRegistered
    158:162:void invokeChannelRegistered() -> invokeChannelRegistered
    166:178:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext fireChannelUnregistered() -> fireChannelUnregistered
    183:187:void invokeChannelUnregistered() -> invokeChannelUnregistered
    191:203:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext fireChannelActive() -> fireChannelActive
    208:212:void invokeChannelActive() -> invokeChannelActive
    216:228:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext fireChannelInactive() -> fireChannelInactive
    233:237:void invokeChannelInactive() -> invokeChannelInactive
    241:266:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    271:279:void invokeExceptionCaught(java.lang.Throwable) -> invokeExceptionCaught
    283:299:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    304:308:void invokeUserEventTriggered(java.lang.Object) -> invokeUserEventTriggered
    312:328:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object) -> fireChannelRead
    333:337:void invokeChannelRead(java.lang.Object) -> invokeChannelRead
    341:357:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext fireChannelReadComplete() -> fireChannelReadComplete
    362:366:void invokeChannelReadComplete() -> invokeChannelReadComplete
    370:386:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    391:395:void invokeChannelWritabilityChanged() -> invokeChannelWritabilityChanged
    399:399:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    404:404:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    409:409:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    414:414:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture disconnect() -> disconnect
    419:419:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close() -> close
    424:424:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture deregister() -> deregister
    429:450:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bind(java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bind
    455:459:void invokeBind(java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> invokeBind
    463:463:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    470:491:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    496:500:void invokeConnect(java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> invokeConnect
    504:532:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture disconnect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> disconnect
    537:541:void invokeDisconnect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> invokeDisconnect
    545:563:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    568:572:void invokeClose(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> invokeClose
    576:594:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture deregister(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> deregister
    599:603:void invokeDeregister(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> invokeDeregister
    607:624:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext read() -> read
    629:633:void invokeRead() -> invokeRead
    637:637:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture write(java.lang.Object) -> write
    642:653:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture write(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    658:662:void invokeWrite(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> invokeWrite
    666:683:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext flush() -> flush
    688:692:void invokeFlush() -> invokeFlush
    696:708:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> writeAndFlush
    713:737:void write(java.lang.Object,boolean,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    741:741:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    747:756:void notifyOutboundHandlerException(java.lang.Throwable,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> notifyOutboundHandlerException
    759:769:void notifyHandlerException(java.lang.Throwable) -> notifyHandlerException
    773:788:boolean inExceptionCaught(java.lang.Throwable) -> inExceptionCaught
    793:793:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise newPromise() -> newPromise
    798:798:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    803:807:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    812:812:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    816:849:boolean validatePromise(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,boolean) -> validatePromise
    853:857:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext findContextInbound() -> findContextInbound
    861:865:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext findContextOutbound() -> findContextOutbound
    870:870:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise voidPromise() -> voidPromise
    874:875:void setRemoved() -> setRemoved
    879:879:boolean isRemoved() -> isRemoved
    884:894:void safeExecute(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor,java.lang.Runnable,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,java.lang.Object) -> safeExecute
    32:32:void access$000(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> access$000
    32:32:void access$100(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> access$100
    32:32:void access$200(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> access$200
    32:32:void access$300(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> access$300
    32:32:void access$400(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> access$400
    32:32:void access$500(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.lang.Throwable) -> access$500
    32:32:void access$600(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> access$600
    32:32:void access$700(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> access$700
    32:32:void access$800(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> access$800
    32:32:void access$900(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> access$900
    32:32:void access$1000(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> access$1000
    32:32:void access$1100(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> access$1100
    32:32:void access$1200(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> access$1200
    32:32:void access$1300(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> access$1300
    32:32:void access$1400(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> access$1400
    32:32:void access$1500(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> access$1500
    32:32:void access$1600(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> access$1600
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel access$1900(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> access$1900
    32:32:void access$2000(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> access$2000
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$1 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$1:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    91:91:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> <init>
    94:95:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$10 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$10:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    377:377:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> <init>
    380:381:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$11 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$11:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.net.SocketAddress val$localAddress -> val$localAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    442:442:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    445:446:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$12 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$12:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.net.SocketAddress val$remoteAddress -> val$remoteAddress
    java.net.SocketAddress val$localAddress -> val$localAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    483:483:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    486:487:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$13 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$13:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    520:520:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    523:528:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$14 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$14:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    555:555:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    558:559:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$15 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$15:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    586:586:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    589:590:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$16 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$16:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    614:614:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> <init>
    617:618:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$17 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$17:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    673:673:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> <init>
    676:677:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$2 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$2:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    146:146:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> <init>
    149:150:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$3 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$3:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    171:171:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> <init>
    174:175:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$4 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$4:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    196:196:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> <init>
    199:200:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$5 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$5:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    221:221:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> <init>
    224:225:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$6 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$6:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.lang.Throwable val$cause -> val$cause
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    252:252:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.lang.Throwable) -> <init>
    255:256:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$7 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$7:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.lang.Object val$event -> val$event
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    292:292:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> <init>
    295:296:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$8 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$8:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.lang.Object val$msg -> val$msg
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    321:321:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> <init>
    324:325:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$9 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$9:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    348:348:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> <init>
    351:352:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext ctx -> ctx
    java.lang.Object msg -> msg
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise promise -> promise
    int size -> size
    903:904:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> <init>
    908:912:void init(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.lang.Object,int,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> init
    917:931:void run() -> run
    935:935:java.lang.Runnable value() -> value
    939:940:void write(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    896:896:java.lang.Object value() -> value
    896:896:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask:
    be.alexandre01.dnplugin.shaded.netty.util.Recycler RECYCLER -> RECYCLER
    980:982:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask newInstance(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.lang.Object,int,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> newInstance
    986:987:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> <init>
    991:993:void write(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    997:998:void recycle(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> recycle
    969:969:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask access$1700(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.lang.Object,int,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> access$1700
    969:969:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$1) -> <init>
    971:971:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask$1 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask$1:
    971:971:void <init>() -> <init>
    974:974:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
    971:971:java.lang.Object newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$WriteTask -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$WriteTask:
    be.alexandre01.dnplugin.shaded.netty.util.Recycler RECYCLER -> RECYCLER
    954:956:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$WriteTask newInstance(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.lang.Object,int,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> newInstance
    960:961:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> <init>
    965:966:void recycle(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> recycle
    943:943:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$WriteTask access$1800(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.lang.Object,int,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> access$1800
    943:943:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$1) -> <init>
    945:945:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$WriteTask$1 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$WriteTask$1:
    945:945:void <init>() -> <init>
    948:948:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext$WriteTask newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
    945:945:java.lang.Object newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
be.alexandre01.dnplugin.shaded.netty.channel.AbstractServerChannel -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractServerChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata METADATA -> METADATA
    41:42:void <init>() -> <init>
    46:46:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    51:51:java.net.SocketAddress remoteAddress() -> remoteAddress
    56:56:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    61:61:void doDisconnect() -> doDisconnect
    66:66:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    71:71:void doWrite(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWrite
    76:76:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    35:35:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.AbstractServerChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractServerChannel$1:
be.alexandre01.dnplugin.shaded.netty.channel.AbstractServerChannel$DefaultServerUnsafe -> be.alexandre01.dnplugin.shaded.netty.channel.AbstractServerChannel$DefaultServerUnsafe:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractServerChannel this$0 -> this$0
    79:79:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractServerChannel) -> <init>
    82:83:void connect(java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    79:79:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractServerChannel,be.alexandre01.dnplugin.shaded.netty.channel.AbstractServerChannel$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.AdaptiveRecvByteBufAllocator -> be.alexandre01.dnplugin.shaded.netty.channel.AdaptiveRecvByteBufAllocator:
    int DEFAULT_MINIMUM -> DEFAULT_MINIMUM
    int DEFAULT_INITIAL -> DEFAULT_INITIAL
    int DEFAULT_MAXIMUM -> DEFAULT_MAXIMUM
    int INDEX_INCREMENT -> INDEX_INCREMENT
    int INDEX_DECREMENT -> INDEX_DECREMENT
    int[] SIZE_TABLE -> SIZE_TABLE
    be.alexandre01.dnplugin.shaded.netty.channel.AdaptiveRecvByteBufAllocator DEFAULT -> DEFAULT
    int minIndex -> minIndex
    int maxIndex -> maxIndex
    int initial -> initial
    64:84:int getSizeTableIndex(int) -> getSizeTableIndex
    140:141:void <init>() -> <init>
    150:176:void <init>(int,int,int) -> <init>
    180:180:be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator$Handle newHandle() -> newHandle
    34:34:int access$000(int) -> access$000
    34:34:int[] access$100() -> access$100
    46:61:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl -> be.alexandre01.dnplugin.shaded.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl:
    int minIndex -> minIndex
    int maxIndex -> maxIndex
    int index -> index
    int nextReceiveBufferSize -> nextReceiveBufferSize
    boolean decreaseNow -> decreaseNow
    94:100:void <init>(int,int,int) -> <init>
    104:104:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf allocate(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> allocate
    109:109:int guess() -> guess
    114:127:void record(int) -> record
be.alexandre01.dnplugin.shaded.netty.channel.AddressedEnvelope -> be.alexandre01.dnplugin.shaded.netty.channel.AddressedEnvelope:
    java.lang.Object content() -> content
    java.net.SocketAddress sender() -> sender
    java.net.SocketAddress recipient() -> recipient
be.alexandre01.dnplugin.shaded.netty.channel.Channel -> be.alexandre01.dnplugin.shaded.netty.channel.Channel:
    be.alexandre01.dnplugin.shaded.netty.channel.EventLoop eventLoop() -> eventLoop
    be.alexandre01.dnplugin.shaded.netty.channel.Channel parent() -> parent
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    boolean isOpen() -> isOpen
    boolean isRegistered() -> isRegistered
    boolean isActive() -> isActive
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    java.net.SocketAddress localAddress() -> localAddress
    java.net.SocketAddress remoteAddress() -> remoteAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture closeFuture() -> closeFuture
    boolean isWritable() -> isWritable
    be.alexandre01.dnplugin.shaded.netty.channel.Channel$Unsafe unsafe() -> unsafe
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline pipeline() -> pipeline
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc() -> alloc
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise newPromise() -> newPromise
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise voidPromise() -> voidPromise
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture disconnect() -> disconnect
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close() -> close
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture deregister() -> deregister
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bind(java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bind
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture disconnect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> disconnect
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture deregister(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> deregister
    be.alexandre01.dnplugin.shaded.netty.channel.Channel read() -> read
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture write(java.lang.Object) -> write
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture write(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    be.alexandre01.dnplugin.shaded.netty.channel.Channel flush() -> flush
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> writeAndFlush
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
be.alexandre01.dnplugin.shaded.netty.channel.Channel$Unsafe -> be.alexandre01.dnplugin.shaded.netty.channel.Channel$Unsafe:
    java.net.SocketAddress localAddress() -> localAddress
    java.net.SocketAddress remoteAddress() -> remoteAddress
    void register(be.alexandre01.dnplugin.shaded.netty.channel.EventLoop,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> register
    void bind(java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bind
    void connect(java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    void disconnect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> disconnect
    void close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    void closeForcibly() -> closeForcibly
    void deregister(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> deregister
    void beginRead() -> beginRead
    void write(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    void flush() -> flush
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise voidPromise() -> voidPromise
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer outboundBuffer() -> outboundBuffer
be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig:
    java.util.Map getOptions() -> getOptions
    boolean setOptions(java.util.Map) -> setOptions
    java.lang.Object getOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption) -> getOption
    boolean setOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption,java.lang.Object) -> setOption
    int getConnectTimeoutMillis() -> getConnectTimeoutMillis
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    int getMaxMessagesPerRead() -> getMaxMessagesPerRead
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    int getWriteSpinCount() -> getWriteSpinCount
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator getAllocator() -> getAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator getRecvByteBufAllocator() -> getRecvByteBufAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    boolean isAutoRead() -> isAutoRead
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    boolean isAutoClose() -> isAutoClose
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    int getWriteBufferHighWaterMark() -> getWriteBufferHighWaterMark
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    int getWriteBufferLowWaterMark() -> getWriteBufferLowWaterMark
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator getMessageSizeEstimator() -> getMessageSizeEstimator
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
be.alexandre01.dnplugin.shaded.netty.channel.ChannelDuplexHandler -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelDuplexHandler:
    27:27:void <init>() -> <init>
    38:39:void bind(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bind
    50:51:void connect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    62:63:void disconnect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> disconnect
    73:74:void close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    84:85:void deregister(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> deregister
    95:96:void read(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> read
    106:107:void write(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    117:118:void flush(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> flush
be.alexandre01.dnplugin.shaded.netty.channel.ChannelException -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelException:
    long serialVersionUID -> serialVersionUID
    28:29:void <init>() -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    42:43:void <init>(java.lang.String) -> <init>
    49:50:void <init>(java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.ChannelFlushPromiseNotifier -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelFlushPromiseNotifier:
    long writeCounter -> writeCounter
    java.util.Queue flushCheckpoints -> flushCheckpoints
    boolean tryNotify -> tryNotify
    28:41:void <init>(boolean) -> <init>
    48:49:void <init>() -> <init>
    56:56:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFlushPromiseNotifier add(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,int) -> add
    64:78:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFlushPromiseNotifier add(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,long) -> add
    84:88:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFlushPromiseNotifier increaseWriteCounter(long) -> increaseWriteCounter
    95:95:long writeCounter() -> writeCounter
    106:107:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFlushPromiseNotifier notifyPromises() -> notifyPromises
    115:115:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFlushPromiseNotifier notifyFlushFutures() -> notifyFlushFutures
    130:142:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFlushPromiseNotifier notifyPromises(java.lang.Throwable) -> notifyPromises
    150:150:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFlushPromiseNotifier notifyFlushFutures(java.lang.Throwable) -> notifyFlushFutures
    170:182:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFlushPromiseNotifier notifyPromises(java.lang.Throwable,java.lang.Throwable) -> notifyPromises
    190:190:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFlushPromiseNotifier notifyFlushFutures(java.lang.Throwable,java.lang.Throwable) -> notifyFlushFutures
    194:243:void notifyPromises0(java.lang.Throwable) -> notifyPromises0
be.alexandre01.dnplugin.shaded.netty.channel.ChannelFlushPromiseNotifier$DefaultFlushCheckpoint -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelFlushPromiseNotifier$DefaultFlushCheckpoint:
    long checkpoint -> checkpoint
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise future -> future
    255:258:void <init>(long,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    262:262:long flushCheckpoint() -> flushCheckpoint
    267:268:void flushCheckpoint(long) -> flushCheckpoint
    272:272:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise promise() -> promise
be.alexandre01.dnplugin.shaded.netty.channel.ChannelFlushPromiseNotifier$FlushCheckpoint -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelFlushPromiseNotifier$FlushCheckpoint:
    long flushCheckpoint() -> flushCheckpoint
    void flushCheckpoint(long) -> flushCheckpoint
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise promise() -> promise
be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture:
    be.alexandre01.dnplugin.shaded.netty.channel.Channel channel() -> channel
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture sync() -> sync
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture await() -> await
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
be.alexandre01.dnplugin.shaded.netty.channel.ChannelFutureListener -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelFutureListener:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFutureListener CLOSE -> CLOSE
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFutureListener CLOSE_ON_FAILURE -> CLOSE_ON_FAILURE
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFutureListener FIRE_EXCEPTION_ON_FAILURE -> FIRE_EXCEPTION_ON_FAILURE
    41:65:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.ChannelFutureListener$1 -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelFutureListener$1:
    41:41:void <init>() -> <init>
    44:45:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    41:41:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.channel.ChannelFutureListener$2 -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelFutureListener$2:
    52:52:void <init>() -> <init>
    55:58:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    52:52:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.channel.ChannelFutureListener$3 -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelFutureListener$3:
    65:65:void <init>() -> <init>
    68:71:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    65:65:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler:
    void handlerAdded(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerAdded
    void handlerRemoved(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerRemoved
    void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler$Sharable -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler$Sharable:
be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerAdapter -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerAdapter:
    boolean added -> added
    27:27:void <init>() -> <init>
    45:52:boolean isSharable() -> isSharable
    61:61:void handlerAdded(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerAdded
    69:69:void handlerRemoved(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerRemoved
    79:80:void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext:
    be.alexandre01.dnplugin.shaded.netty.channel.Channel channel() -> channel
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor executor() -> executor
    java.lang.String name() -> name
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler handler() -> handler
    boolean isRemoved() -> isRemoved
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext fireChannelRegistered() -> fireChannelRegistered
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext fireChannelUnregistered() -> fireChannelUnregistered
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext fireChannelActive() -> fireChannelActive
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext fireChannelInactive() -> fireChannelInactive
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object) -> fireChannelRead
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext fireChannelReadComplete() -> fireChannelReadComplete
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture disconnect() -> disconnect
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close() -> close
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture deregister() -> deregister
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bind(java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bind
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture disconnect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> disconnect
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture deregister(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> deregister
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext read() -> read
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture write(java.lang.Object) -> write
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture write(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext flush() -> flush
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> writeAndFlush
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline pipeline() -> pipeline
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc() -> alloc
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise newPromise() -> newPromise
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise voidPromise() -> voidPromise
be.alexandre01.dnplugin.shaded.netty.channel.ChannelInboundHandler -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelInboundHandler:
    void channelRegistered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelRegistered
    void channelUnregistered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelUnregistered
    void channelActive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelActive
    void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    void channelReadComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelReadComplete
    void userEventTriggered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    void channelWritabilityChanged(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
be.alexandre01.dnplugin.shaded.netty.channel.ChannelInboundHandlerAdapter -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelInboundHandlerAdapter:
    32:32:void <init>() -> <init>
    42:43:void channelRegistered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelRegistered
    53:54:void channelUnregistered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelUnregistered
    64:65:void channelActive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelActive
    75:76:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    86:87:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    97:98:void channelReadComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelReadComplete
    108:109:void userEventTriggered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    119:120:void channelWritabilityChanged(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    131:132:void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
be.alexandre01.dnplugin.shaded.netty.channel.ChannelInitializer -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelInitializer:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    50:50:void <init>() -> <init>
    void initChannel(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> initChannel
    66:83:void channelRegistered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelRegistered
    52:52:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata:
    boolean hasDisconnect -> hasDisconnect
    34:36:void <init>(boolean) -> <init>
    44:44:boolean hasDisconnect() -> hasDisconnect
be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption:
    java.util.concurrent.ConcurrentMap names -> names
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption ALLOCATOR -> ALLOCATOR
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption RCVBUF_ALLOCATOR -> RCVBUF_ALLOCATOR
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption MESSAGE_SIZE_ESTIMATOR -> MESSAGE_SIZE_ESTIMATOR
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption CONNECT_TIMEOUT_MILLIS -> CONNECT_TIMEOUT_MILLIS
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption MAX_MESSAGES_PER_READ -> MAX_MESSAGES_PER_READ
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption WRITE_SPIN_COUNT -> WRITE_SPIN_COUNT
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption WRITE_BUFFER_HIGH_WATER_MARK -> WRITE_BUFFER_HIGH_WATER_MARK
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption WRITE_BUFFER_LOW_WATER_MARK -> WRITE_BUFFER_LOW_WATER_MARK
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption ALLOW_HALF_CLOSURE -> ALLOW_HALF_CLOSURE
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption AUTO_READ -> AUTO_READ
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption AUTO_CLOSE -> AUTO_CLOSE
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption SO_BROADCAST -> SO_BROADCAST
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption SO_KEEPALIVE -> SO_KEEPALIVE
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption SO_SNDBUF -> SO_SNDBUF
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption SO_RCVBUF -> SO_RCVBUF
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption SO_REUSEADDR -> SO_REUSEADDR
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption SO_LINGER -> SO_LINGER
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption SO_BACKLOG -> SO_BACKLOG
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption SO_TIMEOUT -> SO_TIMEOUT
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption IP_TOS -> IP_TOS
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption IP_MULTICAST_ADDR -> IP_MULTICAST_ADDR
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption IP_MULTICAST_IF -> IP_MULTICAST_IF
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption IP_MULTICAST_TTL -> IP_MULTICAST_TTL
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption IP_MULTICAST_LOOP_DISABLED -> IP_MULTICAST_LOOP_DISABLED
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption TCP_NODELAY -> TCP_NODELAY
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption AIO_READ_TIMEOUT -> AIO_READ_TIMEOUT
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption AIO_WRITE_TIMEOUT -> AIO_WRITE_TIMEOUT
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION -> DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION
    91:91:be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption valueOf(java.lang.String) -> valueOf
    99:100:void <init>(java.lang.String) -> <init>
    107:110:void validate(java.lang.Object) -> validate
    37:84:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.FastThreadLocal NIO_BUFFERS -> NIO_BUFFERS
    be.alexandre01.dnplugin.shaded.netty.channel.Channel channel -> channel
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$Entry flushedEntry -> flushedEntry
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$Entry unflushedEntry -> unflushedEntry
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$Entry tailEntry -> tailEntry
    int flushed -> flushed
    int nioBufferCount -> nioBufferCount
    long nioBufferSize -> nioBufferSize
    boolean inFail -> inFail
    java.util.concurrent.atomic.AtomicLongFieldUpdater TOTAL_PENDING_SIZE_UPDATER -> TOTAL_PENDING_SIZE_UPDATER
    long totalPendingSize -> totalPendingSize
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater WRITABLE_UPDATER -> WRITABLE_UPDATER
    int writable -> writable
    boolean $assertionsDisabled -> $assertionsDisabled
    78:99:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel) -> <init>
    106:122:void addMessage(java.lang.Object,int,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> addMessage
    133:152:void addFlush() -> addFlush
    159:169:void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    176:186:void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
    189:198:long total(java.lang.Object) -> total
    205:210:java.lang.Object current() -> current
    217:225:void progress(long) -> progress
    233:254:boolean remove() -> remove
    263:285:boolean remove(java.lang.Throwable) -> remove
    289:299:void removeEntry(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$Entry) -> removeEntry
    307:331:void removeBytes(long) -> removeBytes
    344:391:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    395:401:int fillBufferArray(java.nio.ByteBuffer[],java.nio.ByteBuffer[],int) -> fillBufferArray
    405:420:java.nio.ByteBuffer[] expandNioBufferArray(java.nio.ByteBuffer[],int,int) -> expandNioBufferArray
    429:429:int nioBufferCount() -> nioBufferCount
    438:438:long nioBufferSize() -> nioBufferSize
    442:442:boolean isWritable() -> isWritable
    449:449:int size() -> size
    457:457:boolean isEmpty() -> isEmpty
    466:480:void failFlushed(java.lang.Throwable) -> failFlushed
    483:520:void close(java.nio.channels.ClosedChannelException) -> close
    523:526:void safeSuccess(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> safeSuccess
    529:532:void safeFail(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,java.lang.Throwable) -> safeFail
    537:537:void recycle() -> recycle
    540:540:long totalPendingWriteBytes() -> totalPendingWriteBytes
    549:566:void forEachFlushedMessage(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$MessageProcessor) -> forEachFlushedMessage
    569:569:boolean isFlushedEntry(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$Entry) -> isFlushedEntry
    42:95:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$1 -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$1:
    46:46:void <init>() -> <init>
    49:49:java.nio.ByteBuffer[] initialValue() -> initialValue
    46:46:java.lang.Object initialValue() -> initialValue
be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$2 -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$2:
    java.nio.channels.ClosedChannelException val$cause -> val$cause
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer this$0 -> this$0
    484:484:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer,java.nio.channels.ClosedChannelException) -> <init>
    487:488:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$Entry -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$Entry:
    be.alexandre01.dnplugin.shaded.netty.util.Recycler RECYCLER -> RECYCLER
    be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle handle -> handle
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$Entry next -> next
    java.lang.Object msg -> msg
    java.nio.ByteBuffer[] bufs -> bufs
    java.nio.ByteBuffer buf -> buf
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise promise -> promise
    long progress -> progress
    long total -> total
    int pendingSize -> pendingSize
    int count -> count
    boolean cancelled -> cancelled
    597:602:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> <init>
    605:610:be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$Entry newInstance(java.lang.Object,int,long,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> newInstance
    614:629:int cancel() -> cancel
    633:644:void recycle() -> recycle
    647:649:be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$Entry recycleAndGetNext() -> recycleAndGetNext
    580:580:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle,be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$1) -> <init>
    581:581:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$Entry$1 -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$Entry$1:
    581:581:void <init>() -> <init>
    584:584:be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$Entry newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
    581:581:java.lang.Object newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$MessageProcessor -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer$MessageProcessor:
    boolean processMessage(java.lang.Object) -> processMessage
be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundHandler -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundHandler:
    void bind(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bind
    void connect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    void disconnect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> disconnect
    void close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    void deregister(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> deregister
    void read(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> read
    void write(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    void flush(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> flush
be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundHandlerAdapter -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundHandlerAdapter:
    24:24:void <init>() -> <init>
    35:36:void bind(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bind
    47:48:void connect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    59:60:void disconnect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> disconnect
    71:72:void close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    82:83:void deregister(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> deregister
    93:94:void read(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> read
    104:105:void write(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    115:116:void flush(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> flush
be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addFirst(java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> addFirst
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addFirst(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> addFirst
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addLast(java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> addLast
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addLast(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> addLast
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addBefore(java.lang.String,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> addBefore
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addBefore(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup,java.lang.String,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> addBefore
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addAfter(java.lang.String,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> addAfter
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addAfter(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup,java.lang.String,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> addAfter
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addFirst(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler[]) -> addFirst
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addFirst(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler[]) -> addFirst
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addLast(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler[]) -> addLast
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addLast(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler[]) -> addLast
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline remove(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> remove
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler remove(java.lang.String) -> remove
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler remove(java.lang.Class) -> remove
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler removeFirst() -> removeFirst
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler removeLast() -> removeLast
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline replace(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> replace
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler replace(java.lang.String,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> replace
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler replace(java.lang.Class,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> replace
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler first() -> first
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext firstContext() -> firstContext
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler last() -> last
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext lastContext() -> lastContext
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler get(java.lang.String) -> get
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler get(java.lang.Class) -> get
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext context(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> context
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext context(java.lang.String) -> context
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext context(java.lang.Class) -> context
    be.alexandre01.dnplugin.shaded.netty.channel.Channel channel() -> channel
    java.util.List names() -> names
    java.util.Map toMap() -> toMap
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline fireChannelRegistered() -> fireChannelRegistered
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline fireChannelUnregistered() -> fireChannelUnregistered
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline fireChannelActive() -> fireChannelActive
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline fireChannelInactive() -> fireChannelInactive
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline fireChannelRead(java.lang.Object) -> fireChannelRead
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline fireChannelReadComplete() -> fireChannelReadComplete
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture disconnect() -> disconnect
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close() -> close
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture deregister() -> deregister
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bind(java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bind
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture disconnect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> disconnect
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture deregister(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> deregister
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline read() -> read
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture write(java.lang.Object) -> write
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture write(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline flush() -> flush
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> writeAndFlush
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipelineException -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipelineException:
    long serialVersionUID -> serialVersionUID
    29:30:void <init>() -> <init>
    36:37:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    43:44:void <init>(java.lang.String) -> <init>
    50:51:void <init>(java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFuture -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFuture:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFuture addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFuture addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFuture removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFuture removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFuture sync() -> sync
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFuture syncUninterruptibly() -> syncUninterruptibly
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFuture await() -> await
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFuture awaitUninterruptibly() -> awaitUninterruptibly
be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFutureListener -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFutureListener:
be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise sync() -> sync
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise syncUninterruptibly() -> syncUninterruptibly
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise await() -> await
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise awaitUninterruptibly() -> awaitUninterruptibly
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise setSuccess(java.lang.Void) -> setSuccess
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise setSuccess() -> setSuccess
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise setFailure(java.lang.Throwable) -> setFailure
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise setProgress(long,long) -> setProgress
be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise:
    be.alexandre01.dnplugin.shaded.netty.channel.Channel channel() -> channel
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise setSuccess() -> setSuccess
    boolean trySuccess() -> trySuccess
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise sync() -> sync
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise await() -> await
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromiseAggregator -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromiseAggregator:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise aggregatePromise -> aggregatePromise
    java.util.Set pendingPromises -> pendingPromises
    38:43:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    49:73:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromiseAggregator add(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise[]) -> add
    78:93:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    28:28:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromiseNotifier -> be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromiseNotifier:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise[] promises -> promises
    30:40:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise[]) -> <init>
    44:55:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    21:21:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.channel.CombinedChannelDuplexHandler -> be.alexandre01.dnplugin.shaded.netty.channel.CombinedChannelDuplexHandler:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelInboundHandler inboundHandler -> inboundHandler
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundHandler outboundHandler -> outboundHandler
    35:35:void <init>() -> <init>
    40:42:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.ChannelInboundHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundHandler) -> <init>
    53:56:void init(be.alexandre01.dnplugin.shaded.netty.channel.ChannelInboundHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundHandler) -> init
    59:81:void validate(be.alexandre01.dnplugin.shaded.netty.channel.ChannelInboundHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundHandler) -> validate
    84:84:be.alexandre01.dnplugin.shaded.netty.channel.ChannelInboundHandler inboundHandler() -> inboundHandler
    88:88:be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundHandler outboundHandler() -> outboundHandler
    93:104:void handlerAdded(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerAdded
    109:113:void handlerRemoved(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerRemoved
    117:118:void channelRegistered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelRegistered
    122:123:void channelUnregistered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelUnregistered
    127:128:void channelActive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelActive
    132:133:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    137:138:void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    142:143:void userEventTriggered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    147:148:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    152:153:void channelReadComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelReadComplete
    159:160:void bind(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bind
    167:168:void connect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    172:173:void disconnect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> disconnect
    177:178:void close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    182:183:void deregister(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> deregister
    187:188:void read(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> read
    192:193:void write(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    197:198:void flush(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> flush
    202:203:void channelWritabilityChanged(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
be.alexandre01.dnplugin.shaded.netty.channel.CompleteChannelFuture -> be.alexandre01.dnplugin.shaded.netty.channel.CompleteChannelFuture:
    be.alexandre01.dnplugin.shaded.netty.channel.Channel channel -> channel
    37:42:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor) -> <init>
    46:50:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor executor() -> executor
    56:57:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    62:63:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    68:69:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    74:75:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    80:80:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    85:85:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture sync() -> sync
    90:90:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture await() -> await
    95:95:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    100:100:be.alexandre01.dnplugin.shaded.netty.channel.Channel channel() -> channel
    105:105:java.lang.Void getNow() -> getNow
    27:27:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    27:27:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    27:27:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future sync() -> sync
    27:27:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future await() -> await
    27:27:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    27:27:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    27:27:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    27:27:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    27:27:java.lang.Object getNow() -> getNow
be.alexandre01.dnplugin.shaded.netty.channel.ConnectTimeoutException -> be.alexandre01.dnplugin.shaded.netty.channel.ConnectTimeoutException:
    long serialVersionUID -> serialVersionUID
    28:29:void <init>(java.lang.String) -> <init>
    31:32:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.DefaultAddressedEnvelope -> be.alexandre01.dnplugin.shaded.netty.channel.DefaultAddressedEnvelope:
    java.lang.Object message -> message
    java.net.SocketAddress sender -> sender
    java.net.SocketAddress recipient -> recipient
    41:49:void <init>(java.lang.Object,java.net.SocketAddress,java.net.SocketAddress) -> <init>
    56:57:void <init>(java.lang.Object,java.net.SocketAddress) -> <init>
    61:61:java.lang.Object content() -> content
    66:66:java.net.SocketAddress sender() -> sender
    71:71:java.net.SocketAddress recipient() -> recipient
    76:79:int refCnt() -> refCnt
    85:86:be.alexandre01.dnplugin.shaded.netty.channel.AddressedEnvelope retain() -> retain
    91:92:be.alexandre01.dnplugin.shaded.netty.channel.AddressedEnvelope retain(int) -> retain
    97:97:boolean release() -> release
    102:102:boolean release(int) -> release
    107:111:java.lang.String toString() -> toString
    31:31:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    31:31:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelConfig:
    be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator DEFAULT_RCVBUF_ALLOCATOR -> DEFAULT_RCVBUF_ALLOCATOR
    be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator DEFAULT_MSG_SIZE_ESTIMATOR -> DEFAULT_MSG_SIZE_ESTIMATOR
    int DEFAULT_CONNECT_TIMEOUT -> DEFAULT_CONNECT_TIMEOUT
    be.alexandre01.dnplugin.shaded.netty.channel.Channel channel -> channel
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator allocator -> allocator
    be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator rcvBufAllocator -> rcvBufAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator msgSizeEstimator -> msgSizeEstimator
    int connectTimeoutMillis -> connectTimeoutMillis
    int maxMessagesPerRead -> maxMessagesPerRead
    int writeSpinCount -> writeSpinCount
    boolean autoRead -> autoRead
    boolean autoClose -> autoClose
    int writeBufferHighWaterMark -> writeBufferHighWaterMark
    int writeBufferLowWaterMark -> writeBufferLowWaterMark
    40:67:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> <init>
    72:72:java.util.Map getOptions() -> getOptions
    81:87:java.util.Map getOptions(java.util.Map,be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption[]) -> getOptions
    93:104:boolean setOptions(java.util.Map) -> setOptions
    110:144:java.lang.Object getOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption) -> getOption
    150:176:boolean setOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption,java.lang.Object) -> setOption
    180:184:void validate(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption,java.lang.Object) -> validate
    188:188:int getConnectTimeoutMillis() -> getConnectTimeoutMillis
    193:198:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    203:203:int getMaxMessagesPerRead() -> getMaxMessagesPerRead
    208:212:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    217:217:int getWriteSpinCount() -> getWriteSpinCount
    222:227:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    232:232:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator getAllocator() -> getAllocator
    237:241:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    246:246:be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator getRecvByteBufAllocator() -> getRecvByteBufAllocator
    251:255:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    260:260:boolean isAutoRead() -> isAutoRead
    265:272:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    279:279:void autoReadCleared() -> autoReadCleared
    283:283:boolean isAutoClose() -> isAutoClose
    288:289:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    294:294:int getWriteBufferHighWaterMark() -> getWriteBufferHighWaterMark
    299:310:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    315:315:int getWriteBufferLowWaterMark() -> getWriteBufferLowWaterMark
    320:331:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    336:336:be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator getMessageSizeEstimator() -> getMessageSizeEstimator
    341:345:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    33:34:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelHandlerContext -> be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelHandlerContext:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler handler -> handler
    26:31:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline,be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> <init>
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler handler() -> handler
    39:39:boolean isInbound(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> isInbound
    43:43:boolean isOutbound(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> isOutbound
be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline -> be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.WeakHashMap[] nameCaches -> nameCaches
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel channel -> channel
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext head -> head
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext tail -> tail
    java.util.Map name2ctx -> name2ctx
    java.util.Map childExecutors -> childExecutors
    boolean $assertionsDisabled -> $assertionsDisabled
    63:80:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel) -> <init>
    84:84:be.alexandre01.dnplugin.shaded.netty.channel.Channel channel() -> channel
    89:89:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addFirst(java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> addFirst
    94:100:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addFirst(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> addFirst
    104:115:void addFirst0(java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> addFirst0
    119:119:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addLast(java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> addLast
    124:131:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addLast(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> addLast
    135:146:void addLast0(java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> addLast0
    150:150:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addBefore(java.lang.String,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> addBefore
    156:162:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addBefore(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup,java.lang.String,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> addBefore
    167:177:void addBefore0(java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> addBefore0
    181:181:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addAfter(java.lang.String,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> addAfter
    187:195:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addAfter(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup,java.lang.String,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> addAfter
    199:210:void addAfter0(java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> addAfter0
    214:214:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addFirst(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler[]) -> addFirst
    219:238:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addFirst(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler[]) -> addFirst
    243:243:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addLast(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler[]) -> addLast
    248:259:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline addLast(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler[]) -> addLast
    263:289:java.lang.String generateName(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> generateName
    293:293:java.lang.String generateName0(java.lang.Class) -> generateName0
    298:299:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline remove(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> remove
    304:304:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler remove(java.lang.String) -> remove
    310:310:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler remove(java.lang.Class) -> remove
    314:341:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext remove(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> remove
    345:351:void remove0(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> remove0
    355:358:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler removeFirst() -> removeFirst
    363:366:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler removeLast() -> removeLast
    371:372:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline replace(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> replace
    377:377:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler replace(java.lang.String,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> replace
    384:384:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler replace(java.lang.Class,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> replace
    391:423:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler replace(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> replace
    428:456:void replace0(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> replace0
    459:469:void checkMultiplicity(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> checkMultiplicity
    472:482:void callHandlerAdded(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> callHandlerAdded
    486:508:void callHandlerAdded0(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> callHandlerAdded0
    511:521:void callHandlerRemoved(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> callHandlerRemoved
    526:532:void callHandlerRemoved0(be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> callHandlerRemoved0
    551:559:void waitForFuture(java.util.concurrent.Future) -> waitForFuture
    563:567:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler first() -> first
    572:576:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext firstContext() -> firstContext
    581:585:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler last() -> last
    590:594:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext lastContext() -> lastContext
    599:603:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler get(java.lang.String) -> get
    610:614:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler get(java.lang.Class) -> get
    620:626:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext context(java.lang.String) -> context
    631:646:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext context(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> context
    652:664:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext context(java.lang.Class) -> context
    670:677:java.util.List names() -> names
    683:690:java.util.Map toMap() -> toMap
    696:696:java.util.Iterator iterator() -> iterator
    704:727:java.lang.String toString() -> toString
    732:733:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline fireChannelRegistered() -> fireChannelRegistered
    738:744:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline fireChannelUnregistered() -> fireChannelUnregistered
    753:754:void teardownAll() -> teardownAll
    758:764:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline fireChannelActive() -> fireChannelActive
    769:770:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline fireChannelInactive() -> fireChannelInactive
    775:776:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    781:782:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    787:788:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline fireChannelRead(java.lang.Object) -> fireChannelRead
    793:797:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline fireChannelReadComplete() -> fireChannelReadComplete
    802:803:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    808:808:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    813:813:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    818:818:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    823:823:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture disconnect() -> disconnect
    828:828:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close() -> close
    833:833:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture deregister() -> deregister
    838:839:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline flush() -> flush
    844:844:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bind(java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bind
    849:849:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    854:854:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    859:859:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture disconnect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> disconnect
    864:864:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    869:869:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture deregister(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> deregister
    874:875:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline read() -> read
    880:880:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture write(java.lang.Object) -> write
    885:885:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture write(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    890:890:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> writeAndFlush
    895:895:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    899:902:void checkDuplicateName(java.lang.String) -> checkDuplicateName
    905:909:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext getContextOrDie(java.lang.String) -> getContextOrDie
    914:918:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext getContextOrDie(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler) -> getContextOrDie
    923:927:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext getContextOrDie(java.lang.Class) -> getContextOrDie
    44:44:void access$000(be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> access$000
    44:44:void access$100(be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> access$100
    44:44:void access$200(be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> access$200
    44:44:java.lang.String access$300(java.lang.Class) -> access$300
    44:56:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline$1 -> be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline$1:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline this$0 -> this$0
    324:324:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> <init>
    327:330:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline$2 -> be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline$2:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$ctx -> val$ctx
    java.lang.String val$newName -> val$newName
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$newCtx -> val$newCtx
    be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline this$0 -> this$0
    407:407:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> <init>
    410:413:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline$3 -> be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline$3:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline this$0 -> this$0
    473:473:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> <init>
    476:477:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline$4 -> be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline$4:
    be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline this$0 -> this$0
    512:512:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline,be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannelHandlerContext) -> <init>
    515:516:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline$HeadContext -> be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline$HeadContext:
    java.lang.String HEAD_NAME -> HEAD_NAME
    be.alexandre01.dnplugin.shaded.netty.channel.Channel$Unsafe unsafe -> unsafe
    998:1000:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline) -> <init>
    1004:1004:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler handler() -> handler
    1010:1010:void handlerAdded(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerAdded
    1015:1015:void handlerRemoved(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerRemoved
    1021:1022:void bind(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bind
    1029:1030:void connect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    1034:1035:void disconnect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> disconnect
    1039:1040:void close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    1044:1045:void deregister(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> deregister
    1049:1050:void read(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> read
    1054:1055:void write(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    1059:1060:void flush(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> flush
    1064:1065:void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    993:993:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline$TailContext -> be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline$TailContext:
    java.lang.String TAIL_NAME -> TAIL_NAME
    937:938:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPipeline) -> <init>
    942:942:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler handler() -> handler
    946:946:void channelRegistered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelRegistered
    949:949:void channelUnregistered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelUnregistered
    952:952:void channelActive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelActive
    955:955:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    958:958:void channelWritabilityChanged(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    961:961:void handlerAdded(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerAdded
    964:964:void handlerRemoved(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerRemoved
    967:967:void userEventTriggered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    971:974:void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    979:985:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    988:988:void channelReadComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelReadComplete
    934:934:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelProgressivePromise -> be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelProgressivePromise:
    be.alexandre01.dnplugin.shaded.netty.channel.Channel channel -> channel
    long checkpoint -> checkpoint
    41:43:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> <init>
    52:54:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor) -> <init>
    58:62:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor executor() -> executor
    68:68:be.alexandre01.dnplugin.shaded.netty.channel.Channel channel() -> channel
    73:73:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise setSuccess() -> setSuccess
    78:79:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise setSuccess(java.lang.Void) -> setSuccess
    84:84:boolean trySuccess() -> trySuccess
    89:90:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise setFailure(java.lang.Throwable) -> setFailure
    95:96:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise setProgress(long,long) -> setProgress
    101:102:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    107:108:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    113:114:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    120:121:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    126:127:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise sync() -> sync
    132:133:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise syncUninterruptibly() -> syncUninterruptibly
    138:139:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise await() -> await
    144:145:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise awaitUninterruptibly() -> awaitUninterruptibly
    150:150:long flushCheckpoint() -> flushCheckpoint
    155:156:void flushCheckpoint(long) -> flushCheckpoint
    160:160:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressivePromise promise() -> promise
    165:168:void checkDeadLock() -> checkDeadLock
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise setFailure(java.lang.Throwable) -> setFailure
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise setSuccess(java.lang.Object) -> setSuccess
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise awaitUninterruptibly() -> awaitUninterruptibly
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise await() -> await
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise syncUninterruptibly() -> syncUninterruptibly
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise sync() -> sync
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise setProgress(long,long) -> setProgress
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise sync() -> sync
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise await() -> await
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future await() -> await
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future sync() -> sync
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture awaitUninterruptibly() -> awaitUninterruptibly
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture await() -> await
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture syncUninterruptibly() -> syncUninterruptibly
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture sync() -> sync
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFuture awaitUninterruptibly() -> awaitUninterruptibly
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFuture await() -> await
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFuture syncUninterruptibly() -> syncUninterruptibly
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFuture sync() -> sync
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFuture removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFuture removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFuture addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelProgressiveFuture addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture await() -> await
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture sync() -> sync
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise await() -> await
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise sync() -> sync
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise setSuccess() -> setSuccess
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    29:29:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise promise() -> promise
be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPromise -> be.alexandre01.dnplugin.shaded.netty.channel.DefaultChannelPromise:
    be.alexandre01.dnplugin.shaded.netty.channel.Channel channel -> channel
    long checkpoint -> checkpoint
    39:41:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> <init>
    50:52:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor) -> <init>
    56:60:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor executor() -> executor
    66:66:be.alexandre01.dnplugin.shaded.netty.channel.Channel channel() -> channel
    71:71:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise setSuccess() -> setSuccess
    76:77:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    82:82:boolean trySuccess() -> trySuccess
    87:88:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    93:94:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    99:100:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    105:106:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    111:112:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    117:118:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise sync() -> sync
    123:124:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    129:130:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise await() -> await
    135:136:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    141:141:long flushCheckpoint() -> flushCheckpoint
    146:147:void flushCheckpoint(long) -> flushCheckpoint
    151:151:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise promise() -> promise
    156:159:void checkDeadLock() -> checkDeadLock
    28:28:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    28:28:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    28:28:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    28:28:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise await() -> await
    28:28:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    28:28:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise sync() -> sync
    28:28:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    28:28:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    28:28:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    28:28:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    28:28:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    28:28:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future await() -> await
    28:28:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    28:28:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future sync() -> sync
    28:28:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    28:28:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    28:28:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    28:28:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    28:28:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    28:28:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture await() -> await
    28:28:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    28:28:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture sync() -> sync
    28:28:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    28:28:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    28:28:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    28:28:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
be.alexandre01.dnplugin.shaded.netty.channel.DefaultFileRegion -> be.alexandre01.dnplugin.shaded.netty.channel.DefaultFileRegion:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.nio.channels.FileChannel file -> file
    long position -> position
    long count -> count
    long transfered -> transfered
    48:61:void <init>(java.nio.channels.FileChannel,long,long) -> <init>
    65:65:long position() -> position
    70:70:long count() -> count
    75:75:long transfered() -> transfered
    80:94:long transferTo(java.nio.channels.WritableByteChannel,long) -> transferTo
    100:106:void deallocate() -> deallocate
    34:34:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.DefaultMessageSizeEstimator -> be.alexandre01.dnplugin.shaded.netty.channel.DefaultMessageSizeEstimator:
    be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator DEFAULT -> DEFAULT
    be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator$Handle handle -> handle
    61:66:void <init>(int) -> <init>
    70:70:be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator$Handle newHandle() -> newHandle
    52:52:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.DefaultMessageSizeEstimator$1 -> be.alexandre01.dnplugin.shaded.netty.channel.DefaultMessageSizeEstimator$1:
be.alexandre01.dnplugin.shaded.netty.channel.DefaultMessageSizeEstimator$HandleImpl -> be.alexandre01.dnplugin.shaded.netty.channel.DefaultMessageSizeEstimator$HandleImpl:
    int unknownSize -> unknownSize
    30:32:void <init>(int) -> <init>
    36:45:int size(java.lang.Object) -> size
    27:27:void <init>(int,be.alexandre01.dnplugin.shaded.netty.channel.DefaultMessageSizeEstimator$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.EventLoop -> be.alexandre01.dnplugin.shaded.netty.channel.EventLoop:
    be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup parent() -> parent
be.alexandre01.dnplugin.shaded.netty.channel.EventLoopException -> be.alexandre01.dnplugin.shaded.netty.channel.EventLoopException:
    long serialVersionUID -> serialVersionUID
    26:27:void <init>() -> <init>
    30:31:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    34:35:void <init>(java.lang.String) -> <init>
    38:39:void <init>(java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup -> be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup:
    be.alexandre01.dnplugin.shaded.netty.channel.EventLoop next() -> next
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture register(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> register
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture register(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> register
be.alexandre01.dnplugin.shaded.netty.channel.FailedChannelFuture -> be.alexandre01.dnplugin.shaded.netty.channel.FailedChannelFuture:
    java.lang.Throwable cause -> cause
    37:42:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor,java.lang.Throwable) -> <init>
    46:46:java.lang.Throwable cause() -> cause
    51:51:boolean isSuccess() -> isSuccess
    56:57:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture sync() -> sync
    62:63:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    26:26:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    26:26:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future sync() -> sync
be.alexandre01.dnplugin.shaded.netty.channel.FileRegion -> be.alexandre01.dnplugin.shaded.netty.channel.FileRegion:
    long position() -> position
    long transfered() -> transfered
    long count() -> count
    long transferTo(java.nio.channels.WritableByteChannel,long) -> transferTo
be.alexandre01.dnplugin.shaded.netty.channel.FixedRecvByteBufAllocator -> be.alexandre01.dnplugin.shaded.netty.channel.FixedRecvByteBufAllocator:
    be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator$Handle handle -> handle
    56:63:void <init>(int) -> <init>
    67:67:be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator$Handle newHandle() -> newHandle
be.alexandre01.dnplugin.shaded.netty.channel.FixedRecvByteBufAllocator$HandleImpl -> be.alexandre01.dnplugin.shaded.netty.channel.FixedRecvByteBufAllocator$HandleImpl:
    int bufferSize -> bufferSize
    32:34:void <init>(int) -> <init>
    38:38:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf allocate(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> allocate
    43:43:int guess() -> guess
    47:47:void record(int) -> record
be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator -> be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator:
    be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator$Handle newHandle() -> newHandle
be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator$Handle -> be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator$Handle:
    int size(java.lang.Object) -> size
be.alexandre01.dnplugin.shaded.netty.channel.MultithreadEventLoopGroup -> be.alexandre01.dnplugin.shaded.netty.channel.MultithreadEventLoopGroup:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    int DEFAULT_EVENT_LOOP_THREADS -> DEFAULT_EVENT_LOOP_THREADS
    49:50:void <init>(int,java.util.concurrent.ThreadFactory,java.lang.Object[]) -> <init>
    54:54:java.util.concurrent.ThreadFactory newDefaultThreadFactory() -> newDefaultThreadFactory
    59:59:be.alexandre01.dnplugin.shaded.netty.channel.EventLoop next() -> next
    64:64:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture register(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> register
    69:69:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture register(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> register
    30:30:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor next() -> next
    32:43:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue -> be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext ctx -> ctx
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer buffer -> buffer
    be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator$Handle estimatorHandle -> estimatorHandle
    be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite head -> head
    be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite tail -> tail
    int size -> size
    boolean $assertionsDisabled -> $assertionsDisabled
    40:47:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> <init>
    53:54:boolean isEmpty() -> isEmpty
    61:62:int size() -> size
    69:91:void add(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> add
    98:112:void removeAndFailAll(java.lang.Throwable) -> removeAndFailAll
    119:131:void removeAndFail(java.lang.Throwable) -> removeAndFail
    141:163:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture removeAndWriteAll() -> removeAndWriteAll
    167:168:void assertEmpty() -> assertEmpty
    178:186:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture removeAndWrite() -> removeAndWrite
    196:204:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise remove() -> remove
    211:216:java.lang.Object current() -> current
    220:233:void recycle(be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite) -> recycle
    236:239:void safeFail(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,java.lang.Throwable) -> safeFail
    28:29:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$1 -> be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$1:
be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite -> be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite:
    be.alexandre01.dnplugin.shaded.netty.util.Recycler RECYCLER -> RECYCLER
    be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle handle -> handle
    be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite next -> next
    long size -> size
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise promise -> promise
    java.lang.Object msg -> msg
    258:260:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> <init>
    263:267:be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite newInstance(java.lang.Object,int,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> newInstance
    271:276:void recycle() -> recycle
    244:244:be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite access$002(be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite,be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite) -> access$002
    244:244:long access$100(be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite) -> access$100
    244:244:be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite access$000(be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite) -> access$000
    244:244:java.lang.Object access$200(be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite) -> access$200
    244:244:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise access$300(be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite) -> access$300
    244:244:void access$400(be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite) -> access$400
    244:244:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle,be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$1) -> <init>
    245:245:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite$1 -> be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite$1:
    245:245:void <init>() -> <init>
    248:248:be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue$PendingWrite newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
    245:245:java.lang.Object newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator -> be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator:
    be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator$Handle newHandle() -> newHandle
be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator$Handle -> be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator$Handle:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf allocate(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> allocate
    int guess() -> guess
    void record(int) -> record
be.alexandre01.dnplugin.shaded.netty.channel.ServerChannel -> be.alexandre01.dnplugin.shaded.netty.channel.ServerChannel:
be.alexandre01.dnplugin.shaded.netty.channel.SimpleChannelInboundHandler -> be.alexandre01.dnplugin.shaded.netty.channel.SimpleChannelInboundHandler:
    be.alexandre01.dnplugin.shaded.netty.util.internal.TypeParameterMatcher matcher -> matcher
    boolean autoRelease -> autoRelease
    57:58:void <init>() -> <init>
    66:69:void <init>(boolean) -> <init>
    75:76:void <init>(java.lang.Class) -> <init>
    85:88:void <init>(java.lang.Class,boolean) -> <init>
    95:95:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    100:115:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    void channelRead0(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead0
be.alexandre01.dnplugin.shaded.netty.channel.SingleThreadEventLoop -> be.alexandre01.dnplugin.shaded.netty.channel.SingleThreadEventLoop:
    33:34:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup,java.util.concurrent.ThreadFactory,boolean) -> <init>
    38:38:be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup parent() -> parent
    43:43:be.alexandre01.dnplugin.shaded.netty.channel.EventLoop next() -> next
    48:48:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture register(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> register
    53:61:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture register(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> register
    66:66:boolean wakesUpForTask(java.lang.Runnable) -> wakesUpForTask
    27:27:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup parent() -> parent
    27:27:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor next() -> next
be.alexandre01.dnplugin.shaded.netty.channel.SingleThreadEventLoop$NonWakeupRunnable -> be.alexandre01.dnplugin.shaded.netty.channel.SingleThreadEventLoop$NonWakeupRunnable:
be.alexandre01.dnplugin.shaded.netty.channel.SucceededChannelFuture -> be.alexandre01.dnplugin.shaded.netty.channel.SucceededChannelFuture:
    33:34:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor) -> <init>
    38:38:java.lang.Throwable cause() -> cause
    43:43:boolean isSuccess() -> isSuccess
be.alexandre01.dnplugin.shaded.netty.channel.ThreadPerChannelEventLoop -> be.alexandre01.dnplugin.shaded.netty.channel.ThreadPerChannelEventLoop:
    be.alexandre01.dnplugin.shaded.netty.channel.ThreadPerChannelEventLoopGroup parent -> parent
    be.alexandre01.dnplugin.shaded.netty.channel.Channel ch -> ch
    29:31:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.ThreadPerChannelEventLoopGroup) -> <init>
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture register(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> register
    50:74:void run() -> run
    77:80:void deregister() -> deregister
    23:23:be.alexandre01.dnplugin.shaded.netty.channel.Channel access$002(be.alexandre01.dnplugin.shaded.netty.channel.ThreadPerChannelEventLoop,be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> access$002
be.alexandre01.dnplugin.shaded.netty.channel.ThreadPerChannelEventLoop$1 -> be.alexandre01.dnplugin.shaded.netty.channel.ThreadPerChannelEventLoop$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ThreadPerChannelEventLoop this$0 -> this$0
    35:35:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.ThreadPerChannelEventLoop) -> <init>
    38:43:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    35:35:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.channel.ThreadPerChannelEventLoopGroup -> be.alexandre01.dnplugin.shaded.netty.channel.ThreadPerChannelEventLoopGroup:
    java.lang.Object[] childArgs -> childArgs
    int maxChannels -> maxChannels
    java.util.concurrent.ThreadFactory threadFactory -> threadFactory
    java.util.Set activeChildren -> activeChildren
    java.util.Queue idleChildren -> idleChildren
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelException tooManyChannels -> tooManyChannels
    boolean shuttingDown -> shuttingDown
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise terminationFuture -> terminationFuture
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.FutureListener childTerminationListener -> childTerminationListener
    69:70:void <init>() -> <init>
    82:83:void <init>(int) -> <init>
    48:117:void <init>(int,java.util.concurrent.ThreadFactory,java.lang.Object[]) -> <init>
    124:124:be.alexandre01.dnplugin.shaded.netty.channel.ThreadPerChannelEventLoop newChild(java.lang.Object[]) -> newChild
    129:129:java.util.Iterator iterator() -> iterator
    134:134:be.alexandre01.dnplugin.shaded.netty.channel.EventLoop next() -> next
    139:153:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    158:158:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    164:177:void shutdown() -> shutdown
    181:191:boolean isShuttingDown() -> isShuttingDown
    196:206:boolean isShutdown() -> isShutdown
    211:221:boolean isTerminated() -> isTerminated
    227:250:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    255:262:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture register(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> register
    268:275:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture register(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> register
    280:293:be.alexandre01.dnplugin.shaded.netty.channel.EventLoop nextChild() -> nextChild
    43:43:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor next() -> next
    43:43:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise access$000(be.alexandre01.dnplugin.shaded.netty.channel.ThreadPerChannelEventLoopGroup) -> access$000
be.alexandre01.dnplugin.shaded.netty.channel.ThreadPerChannelEventLoopGroup$1 -> be.alexandre01.dnplugin.shaded.netty.channel.ThreadPerChannelEventLoopGroup$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ThreadPerChannelEventLoopGroup this$0 -> this$0
    55:55:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.ThreadPerChannelEventLoopGroup) -> <init>
    59:62:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.channel.VoidChannelPromise -> be.alexandre01.dnplugin.shaded.netty.channel.VoidChannelPromise:
    be.alexandre01.dnplugin.shaded.netty.channel.Channel channel -> channel
    boolean fireException -> fireException
    34:40:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel,boolean) -> <init>
    44:45:be.alexandre01.dnplugin.shaded.netty.channel.VoidChannelPromise addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    50:51:be.alexandre01.dnplugin.shaded.netty.channel.VoidChannelPromise addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    57:57:be.alexandre01.dnplugin.shaded.netty.channel.VoidChannelPromise removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    63:63:be.alexandre01.dnplugin.shaded.netty.channel.VoidChannelPromise removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    68:71:be.alexandre01.dnplugin.shaded.netty.channel.VoidChannelPromise await() -> await
    76:77:boolean await(long,java.util.concurrent.TimeUnit) -> await
    82:83:boolean await(long) -> await
    88:89:be.alexandre01.dnplugin.shaded.netty.channel.VoidChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    94:95:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    100:101:boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    106:106:be.alexandre01.dnplugin.shaded.netty.channel.Channel channel() -> channel
    111:111:boolean isDone() -> isDone
    116:116:boolean isSuccess() -> isSuccess
    121:121:boolean setUncancellable() -> setUncancellable
    126:126:boolean isCancellable() -> isCancellable
    131:131:boolean isCancelled() -> isCancelled
    136:136:java.lang.Throwable cause() -> cause
    141:142:be.alexandre01.dnplugin.shaded.netty.channel.VoidChannelPromise sync() -> sync
    147:148:be.alexandre01.dnplugin.shaded.netty.channel.VoidChannelPromise syncUninterruptibly() -> syncUninterruptibly
    152:153:be.alexandre01.dnplugin.shaded.netty.channel.VoidChannelPromise setFailure(java.lang.Throwable) -> setFailure
    158:158:be.alexandre01.dnplugin.shaded.netty.channel.VoidChannelPromise setSuccess() -> setSuccess
    163:164:boolean tryFailure(java.lang.Throwable) -> tryFailure
    169:169:boolean cancel(boolean) -> cancel
    174:174:boolean trySuccess() -> trySuccess
    178:178:void fail() -> fail
    183:183:be.alexandre01.dnplugin.shaded.netty.channel.VoidChannelPromise setSuccess(java.lang.Void) -> setSuccess
    188:188:boolean trySuccess(java.lang.Void) -> trySuccess
    193:193:java.lang.Void getNow() -> getNow
    201:204:void fireException(java.lang.Throwable) -> fireException
    24:24:java.lang.Object getNow() -> getNow
    24:24:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    24:24:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future await() -> await
    24:24:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    24:24:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future sync() -> sync
    24:24:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    24:24:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    24:24:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    24:24:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise await() -> await
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise sync() -> sync
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise setSuccess() -> setSuccess
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture await() -> await
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture sync() -> sync
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    24:24:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    24:24:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    24:24:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise sync() -> sync
    24:24:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    24:24:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise await() -> await
    24:24:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    24:24:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    24:24:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    24:24:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    24:24:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    24:24:boolean trySuccess(java.lang.Object) -> trySuccess
    24:24:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel -> be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata METADATA -> METADATA
    be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedEventLoop loop -> loop
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config -> config
    java.net.SocketAddress localAddress -> localAddress
    java.net.SocketAddress remoteAddress -> remoteAddress
    java.util.Queue inboundMessages -> inboundMessages
    java.util.Queue outboundMessages -> outboundMessages
    java.lang.Throwable lastException -> lastException
    int state -> state
    boolean $assertionsDisabled -> $assertionsDisabled
    51:88:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler[]) -> <init>
    92:92:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    97:97:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    102:102:boolean isOpen() -> isOpen
    107:107:boolean isActive() -> isActive
    114:114:java.util.Queue inboundMessages() -> inboundMessages
    122:122:java.util.Queue lastInboundBuffer() -> lastInboundBuffer
    129:129:java.util.Queue outboundMessages() -> outboundMessages
    137:137:java.util.Queue lastOutboundBuffer() -> lastOutboundBuffer
    144:144:java.lang.Object readInbound() -> readInbound
    151:151:java.lang.Object readOutbound() -> readOutbound
    162:174:boolean writeInbound(java.lang.Object[]) -> writeInbound
    184:213:boolean writeOutbound(java.lang.Object[]) -> writeOutbound
    224:227:boolean finish() -> finish
    235:239:void runPendingTasks() -> runPendingTasks
    242:249:void recordException(java.lang.Throwable) -> recordException
    255:263:void checkException() -> checkException
    269:273:void ensureOpen() -> ensureOpen
    277:277:boolean isCompatible(be.alexandre01.dnplugin.shaded.netty.channel.EventLoop) -> isCompatible
    282:282:java.net.SocketAddress localAddress0() -> localAddress0
    287:287:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    292:293:void doRegister() -> doRegister
    298:298:void doBind(java.net.SocketAddress) -> doBind
    302:303:void doDisconnect() -> doDisconnect
    307:308:void doClose() -> doClose
    313:313:void doBeginRead() -> doBeginRead
    317:317:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    323:332:void doWrite(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWrite
    45:45:java.util.Queue access$200(be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel) -> access$200
    45:45:void access$300(be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel,java.lang.Throwable) -> access$300
    45:49:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel$1:
be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel$DefaultUnsafe -> be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel$DefaultUnsafe:
    be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel this$0 -> this$0
    334:334:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel) -> <init>
    337:338:void connect(java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    334:334:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel,be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel$LastInboundHandler -> be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel$LastInboundHandler:
    be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel this$0 -> this$0
    341:341:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel) -> <init>
    344:345:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    349:350:void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    341:341:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel,be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedEventLoop -> be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedEventLoop:
    java.util.Queue tasks -> tasks
    31:33:void <init>() -> <init>
    37:41:void execute(java.lang.Runnable) -> execute
    45:52:void runTasks() -> runTasks
    56:56:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    61:61:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    67:67:void shutdown() -> shutdown
    72:72:boolean isShuttingDown() -> isShuttingDown
    77:77:boolean isShutdown() -> isShutdown
    82:82:boolean isTerminated() -> isTerminated
    88:89:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    94:94:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture register(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> register
    99:100:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture register(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> register
    105:105:boolean inEventLoop() -> inEventLoop
    110:110:boolean inEventLoop(java.lang.Thread) -> inEventLoop
    115:115:be.alexandre01.dnplugin.shaded.netty.channel.EventLoop next() -> next
    120:120:be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup parent() -> parent
    31:31:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor next() -> next
    31:31:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup parent() -> parent
be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedSocketAddress -> be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedSocketAddress:
    long serialVersionUID -> serialVersionUID
    20:20:void <init>() -> <init>
    25:25:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata DATA -> DATA
    int readFlag -> readFlag
    int flags -> flags
    boolean active -> active
    int fd -> fd
    int id -> id
    41:42:void <init>(int,int) -> <init>
    45:50:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel,int,int,boolean) -> <init>
    54:54:boolean isActive() -> isActive
    59:59:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    64:72:void doClose() -> doClose
    76:76:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    81:81:java.net.InetSocketAddress localAddress() -> localAddress
    86:87:void doDisconnect() -> doDisconnect
    91:91:boolean isCompatible(be.alexandre01.dnplugin.shaded.netty.channel.EventLoop) -> isCompatible
    96:96:boolean isOpen() -> isOpen
    101:102:void doDeregister() -> doDeregister
    107:113:void doBeginRead() -> doBeginRead
    117:139:void clearEpollIn() -> clearEpollIn
    142:146:void setEpollOut() -> setEpollOut
    149:153:void clearEpollOut() -> clearEpollOut
    156:159:void modifyEvents() -> modifyEvents
    163:165:void doRegister() -> doRegister
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe newUnsafe() -> newUnsafe
    174:174:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf newDirectBuffer(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> newDirectBuffer
    183:201:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf newDirectBuffer(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> newDirectBuffer
    205:208:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf newDirectBuffer0(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,int) -> newDirectBuffer0
    212:215:void checkResolvable(java.net.InetSocketAddress) -> checkResolvable
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    32:32:java.net.SocketAddress remoteAddress() -> remoteAddress
    32:32:java.net.SocketAddress localAddress() -> localAddress
    32:32:int access$000(be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel) -> access$000
    32:32:void access$100(be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel) -> access$100
    33:33:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel$1:
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe val$unsafe -> val$unsafe
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel this$0 -> this$0
    124:124:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel,be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe) -> <init>
    127:131:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe:
    boolean readPending -> readPending
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel this$0 -> this$0
    217:217:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel) -> <init>
    void epollInReady() -> epollInReady
    230:230:void epollRdHupReady() -> epollRdHupReady
    237:241:void flush0() -> flush0
    248:249:void epollOutReady() -> epollOutReady
    252:252:boolean isFlushPending() -> isFlushPending
    256:260:void clearEpollIn0() -> clearEpollIn0
be.alexandre01.dnplugin.shaded.netty.channel.epoll.Epoll -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.Epoll:
    java.lang.Throwable UNAVAILABILITY_CAUSE -> UNAVAILABILITY_CAUSE
    63:63:boolean isAvailable() -> isAvailable
    73:77:void ensureAvailability() -> ensureAvailability
    86:86:java.lang.Throwable unavailabilityCause() -> unavailabilityCause
    89:89:void <init>() -> <init>
    26:56:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollChannelOption -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollChannelOption:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption TCP_CORK -> TCP_CORK
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption TCP_KEEPIDLE -> TCP_KEEPIDLE
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption TCP_KEEPINTVL -> TCP_KEEPINTVL
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption TCP_KEEPCNT -> TCP_KEEPCNT
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption SO_REUSEPORT -> SO_REUSEPORT
    31:32:void <init>(java.lang.String) -> <init>
    22:27:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannel -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata METADATA -> METADATA
    java.lang.String EXPECTED_TYPES -> EXPECTED_TYPES
    java.net.InetSocketAddress local -> local
    java.net.InetSocketAddress remote -> remote
    boolean connected -> connected
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig config -> config
    61:63:void <init>() -> <init>
    67:67:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    73:73:boolean isActive() -> isActive
    80:80:boolean isConnected() -> isConnected
    85:85:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetAddress) -> joinGroup
    91:98:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> joinGroup
    104:104:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface) -> joinGroup
    111:111:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> joinGroup
    117:117:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> joinGroup
    125:134:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> joinGroup
    139:139:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress) -> leaveGroup
    145:150:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> leaveGroup
    156:156:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetSocketAddress,java.net.NetworkInterface) -> leaveGroup
    163:163:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetSocketAddress,java.net.NetworkInterface,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> leaveGroup
    169:169:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> leaveGroup
    176:185:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> leaveGroup
    192:192:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> block
    199:210:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> block
    215:215:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.InetAddress) -> block
    222:229:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> block
    234:234:be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe newUnsafe() -> newUnsafe
    239:239:java.net.InetSocketAddress localAddress0() -> localAddress0
    244:244:java.net.InetSocketAddress remoteAddress0() -> remoteAddress0
    249:254:void doBind(java.net.SocketAddress) -> doBind
    259:289:void doWrite(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWrite
    294:328:boolean doWriteMessage(java.lang.Object) -> doWriteMessage
    333:374:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    380:380:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig config() -> config
    385:386:void doDisconnect() -> doDisconnect
    46:46:boolean isOpen() -> isOpen
    46:46:java.net.InetSocketAddress localAddress() -> localAddress
    46:46:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    46:46:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    46:46:java.net.SocketAddress localAddress0() -> localAddress0
    46:46:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    46:46:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    46:46:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig config() -> config
    46:46:java.net.InetSocketAddress access$002(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannel,java.net.InetSocketAddress) -> access$002
    46:46:java.net.InetSocketAddress access$102(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannel,java.net.InetSocketAddress) -> access$102
    46:46:boolean access$202(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannel,boolean) -> access$202
    47:48:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannel$DatagramSocketAddress -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannel$DatagramSocketAddress:
    long serialVersionUID -> serialVersionUID
    int receivedAmount -> receivedAmount
    493:495:void <init>(java.lang.String,int,int) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe:
    be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator$Handle allocHandle -> allocHandle
    boolean $assertionsDisabled -> $assertionsDisabled
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannel this$0 -> this$0
    388:388:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannel) -> <init>
    393:417:void connect(java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    421:478:void epollInReady() -> epollInReady
    388:388:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig:
    be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator DEFAULT_RCVBUF_ALLOCATOR -> DEFAULT_RCVBUF_ALLOCATOR
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannel datagramChannel -> datagramChannel
    boolean activeOnOpen -> activeOnOpen
    36:39:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannel) -> <init>
    44:44:java.util.Map getOptions() -> getOptions
    56:89:java.lang.Object getOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption) -> getOption
    95:123:boolean setOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption,java.lang.Object) -> setOption
    127:131:void setActiveOnOpen(boolean) -> setActiveOnOpen
    135:136:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    141:142:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    147:148:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    153:154:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setAutoClose(boolean) -> setAutoClose
    159:160:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setAutoRead(boolean) -> setAutoRead
    165:166:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    171:172:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    177:178:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    183:184:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    189:190:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    195:195:int getSendBufferSize() -> getSendBufferSize
    200:201:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setSendBufferSize(int) -> setSendBufferSize
    206:206:int getReceiveBufferSize() -> getReceiveBufferSize
    211:212:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    217:217:int getTrafficClass() -> getTrafficClass
    222:223:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setTrafficClass(int) -> setTrafficClass
    228:228:boolean isReuseAddress() -> isReuseAddress
    233:234:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setReuseAddress(boolean) -> setReuseAddress
    239:239:boolean isBroadcast() -> isBroadcast
    244:245:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setBroadcast(boolean) -> setBroadcast
    250:250:boolean isLoopbackModeDisabled() -> isLoopbackModeDisabled
    255:255:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setLoopbackModeDisabled(boolean) -> setLoopbackModeDisabled
    260:260:int getTimeToLive() -> getTimeToLive
    265:265:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setTimeToLive(int) -> setTimeToLive
    270:270:java.net.InetAddress getInterface() -> getInterface
    275:275:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setInterface(java.net.InetAddress) -> setInterface
    280:280:java.net.NetworkInterface getNetworkInterface() -> getNetworkInterface
    285:285:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setNetworkInterface(java.net.NetworkInterface) -> setNetworkInterface
    292:292:boolean isReusePort() -> isReusePort
    303:304:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannelConfig setReusePort(boolean) -> setReusePort
    309:310:void autoReadCleared() -> autoReadCleared
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setAutoClose(boolean) -> setAutoClose
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setAutoRead(boolean) -> setAutoRead
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setNetworkInterface(java.net.NetworkInterface) -> setNetworkInterface
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setInterface(java.net.InetAddress) -> setInterface
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setTimeToLive(int) -> setTimeToLive
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setBroadcast(boolean) -> setBroadcast
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setReuseAddress(boolean) -> setReuseAddress
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setTrafficClass(int) -> setTrafficClass
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setSendBufferSize(int) -> setSendBufferSize
    31:31:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollEventLoop -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollEventLoop:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater WAKEN_UP_UPDATER -> WAKEN_UP_UPDATER
    int epollFd -> epollFd
    int eventFd -> eventFd
    be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectMap ids -> ids
    long[] events -> events
    int id -> id
    boolean overflown -> overflown
    int wakenUp -> wakenUp
    int ioRatio -> ioRatio
    boolean $assertionsDisabled -> $assertionsDisabled
    53:92:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.EventLoopGroup,java.util.concurrent.ThreadFactory,int) -> <init>
    95:112:int nextId() -> nextId
    117:121:void wakeup(boolean) -> wakeup
    127:132:void add(be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel) -> add
    138:140:void modify(be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel) -> modify
    146:152:void remove(be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel) -> remove
    157:157:java.util.Queue newTaskQueue() -> newTaskQueue
    164:164:int getIoRatio() -> getIoRatio
    172:176:void setIoRatio(int) -> setIoRatio
    179:206:int epollWait(boolean) -> epollWait
    212:289:void run() -> run
    292:302:void closeAll() -> closeAll
    305:334:void processReady(long[],int) -> processReady
    339:348:void cleanup() -> cleanup
    38:49:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollEventLoopGroup -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollEventLoopGroup:
    34:35:void <init>() -> <init>
    41:42:void <init>(int) -> <init>
    48:49:void <init>(int,java.util.concurrent.ThreadFactory) -> <init>
    56:57:void <init>(int,java.util.concurrent.ThreadFactory,int) -> <init>
    64:67:void setIoRatio(int) -> setIoRatio
    71:71:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor newChild(java.util.concurrent.ThreadFactory,java.lang.Object[]) -> newChild
be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannel -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig config -> config
    java.net.InetSocketAddress local -> local
    37:39:void <init>() -> <init>
    43:43:boolean isCompatible(be.alexandre01.dnplugin.shaded.netty.channel.EventLoop) -> isCompatible
    48:54:void doBind(java.net.SocketAddress) -> doBind
    58:58:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig config() -> config
    63:63:java.net.InetSocketAddress localAddress0() -> localAddress0
    68:68:java.net.InetSocketAddress remoteAddress0() -> remoteAddress0
    73:73:be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe newUnsafe() -> newUnsafe
    78:78:void doWrite(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWrite
    83:83:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    31:31:boolean isOpen() -> isOpen
    31:31:java.net.InetSocketAddress localAddress() -> localAddress
    31:31:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    31:31:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    31:31:boolean isActive() -> isActive
    31:31:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    31:31:java.net.SocketAddress localAddress0() -> localAddress0
    31:31:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    31:31:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    31:31:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig config() -> config
    31:31:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig access$000(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannel) -> access$000
be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannel$EpollServerSocketUnsafe -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannel$EpollServerSocketUnsafe:
    boolean $assertionsDisabled -> $assertionsDisabled
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannel this$0 -> this$0
    86:86:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannel) -> <init>
    91:92:void connect(java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    96:135:void epollInReady() -> epollInReady
    86:86:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig:
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannel channel -> channel
    int backlog -> backlog
    36:46:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannel) -> <init>
    50:50:java.util.Map getOptions() -> getOptions
    56:68:java.lang.Object getOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption) -> getOption
    73:87:boolean setOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption,java.lang.Object) -> setOption
    92:92:boolean isReuseAddress() -> isReuseAddress
    97:98:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    103:103:int getReceiveBufferSize() -> getReceiveBufferSize
    108:110:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    115:115:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    120:120:int getBacklog() -> getBacklog
    125:129:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig setBacklog(int) -> setBacklog
    134:135:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    140:141:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    146:147:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    152:153:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    158:159:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    164:165:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    170:171:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    176:177:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    182:183:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    190:190:boolean isReusePort() -> isReusePort
    201:202:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollServerSocketChannelConfig setReusePort(boolean) -> setReusePort
    207:208:void autoReadCleared() -> autoReadCleared
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setBacklog(int) -> setBacklog
be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel:
    java.lang.String EXPECTED_TYPES -> EXPECTED_TYPES
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig config -> config
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise connectPromise -> connectPromise
    java.util.concurrent.ScheduledFuture connectTimeoutFuture -> connectTimeoutFuture
    java.net.SocketAddress requestedRemoteAddress -> requestedRemoteAddress
    java.net.InetSocketAddress local -> local
    java.net.InetSocketAddress remote -> remote
    boolean inputShutdown -> inputShutdown
    boolean outputShutdown -> outputShutdown
    boolean $assertionsDisabled -> $assertionsDisabled
    72:78:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel,int) -> <init>
    81:83:void <init>() -> <init>
    87:87:be.alexandre01.dnplugin.shaded.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe newUnsafe() -> newUnsafe
    92:92:java.net.SocketAddress localAddress0() -> localAddress0
    97:97:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    102:105:void doBind(java.net.SocketAddress) -> doBind
    112:167:boolean writeBytes(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> writeBytes
    173:213:boolean writeBytesMultiple(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer,be.alexandre01.dnplugin.shaded.netty.channel.epoll.IovArray) -> writeBytesMultiple
    220:258:boolean writeBytesMultiple(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer,java.nio.ByteBuffer[],int,long) -> writeBytesMultiple
    268:301:boolean writeFileRegion(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer,be.alexandre01.dnplugin.shaded.netty.channel.DefaultFileRegion) -> writeFileRegion
    307:330:void doWrite(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWrite
    334:354:boolean doWriteSingle(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWriteSingle
    358:387:boolean doWriteMultiple(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWriteMultiple
    392:407:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    413:413:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig config() -> config
    418:418:boolean isInputShutdown() -> isInputShutdown
    423:423:boolean isOutputShutdown() -> isOutputShutdown
    428:428:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture shutdownOutput() -> shutdownOutput
    433:450:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture shutdownOutput(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> shutdownOutput
    455:455:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannel parent() -> parent
    50:50:boolean isOpen() -> isOpen
    50:50:java.net.InetSocketAddress localAddress() -> localAddress
    50:50:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    50:50:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    50:50:boolean isActive() -> isActive
    50:50:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    50:50:be.alexandre01.dnplugin.shaded.netty.channel.Channel parent() -> parent
    50:50:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    50:50:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig config() -> config
    50:50:boolean access$002(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel,boolean) -> access$002
    50:50:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise access$100(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel) -> access$100
    50:50:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise access$102(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> access$102
    50:50:java.net.SocketAddress access$202(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel,java.net.SocketAddress) -> access$202
    50:50:java.util.concurrent.ScheduledFuture access$302(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel,java.util.concurrent.ScheduledFuture) -> access$302
    50:50:java.util.concurrent.ScheduledFuture access$300(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel) -> access$300
    50:50:java.net.SocketAddress access$200(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel) -> access$200
    50:50:java.net.InetSocketAddress access$402(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel,java.net.InetSocketAddress) -> access$402
    50:50:java.net.InetSocketAddress access$502(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel,java.net.InetSocketAddress) -> access$502
    50:52:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel this$0 -> this$0
    443:443:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    446:447:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel$EpollSocketUnsafe -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel$EpollSocketUnsafe:
    be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator$Handle allocHandle -> allocHandle
    boolean $assertionsDisabled -> $assertionsDisabled
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel this$0 -> this$0
    458:458:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel) -> <init>
    462:471:void closeOnRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline) -> closeOnRead
    474:488:boolean handleReadException(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.lang.Throwable,boolean) -> handleReadException
    494:548:void connect(java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    551:570:void fulfillConnectPromise(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,boolean) -> fulfillConnectPromise
    573:581:void fulfillConnectPromise(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,java.lang.Throwable) -> fulfillConnectPromise
    587:615:void finishConnect() -> finishConnect
    619:625:void epollOutReady() -> epollOutReady
    631:650:boolean doConnect(java.net.InetSocketAddress,java.net.InetSocketAddress) -> doConnect
    659:664:boolean doFinishConnect() -> doFinishConnect
    672:683:int doReadBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> doReadBytes
    688:693:void epollRdHupReady() -> epollRdHupReady
    697:770:void epollInReady() -> epollInReady
    458:458:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel$EpollSocketUnsafe$1 -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel$EpollSocketUnsafe$1:
    java.net.SocketAddress val$remoteAddress -> val$remoteAddress
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel$EpollSocketUnsafe this$1 -> this$1
    513:513:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel$EpollSocketUnsafe,java.net.SocketAddress) -> <init>
    516:522:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel$EpollSocketUnsafe$2 -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel$EpollSocketUnsafe$2:
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel$EpollSocketUnsafe this$1 -> this$1
    526:526:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel$EpollSocketUnsafe) -> <init>
    529:536:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    526:526:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel$EpollSocketUnsafe$3 -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel$EpollSocketUnsafe$3:
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel$EpollSocketUnsafe this$1 -> this$1
    752:752:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel$EpollSocketUnsafe) -> <init>
    755:756:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig:
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel channel -> channel
    boolean allowHalfClosure -> allowHalfClosure
    39:45:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannel) -> <init>
    49:49:java.util.Map getOptions() -> getOptions
    59:95:java.lang.Object getOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption) -> getOption
    100:130:boolean setOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption,java.lang.Object) -> setOption
    135:135:int getReceiveBufferSize() -> getReceiveBufferSize
    140:140:int getSendBufferSize() -> getSendBufferSize
    145:145:int getSoLinger() -> getSoLinger
    150:150:int getTrafficClass() -> getTrafficClass
    155:155:boolean isKeepAlive() -> isKeepAlive
    160:160:boolean isReuseAddress() -> isReuseAddress
    165:165:boolean isTcpNoDelay() -> isTcpNoDelay
    172:172:boolean isTcpCork() -> isTcpCork
    179:179:int getTcpKeepIdle() -> getTcpKeepIdle
    186:186:int getTcpKeepIntvl() -> getTcpKeepIntvl
    193:193:int getTcpKeepCnt() -> getTcpKeepCnt
    198:199:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setKeepAlive(boolean) -> setKeepAlive
    205:205:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    210:211:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    216:217:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    222:223:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setSendBufferSize(int) -> setSendBufferSize
    228:229:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setSoLinger(int) -> setSoLinger
    234:235:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setTcpNoDelay(boolean) -> setTcpNoDelay
    242:243:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setTcpCork(boolean) -> setTcpCork
    248:249:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setTrafficClass(int) -> setTrafficClass
    256:257:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setTcpKeepIdle(int) -> setTcpKeepIdle
    264:265:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setTcpKeepIntvl(int) -> setTcpKeepIntvl
    272:273:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setTcpKeepCntl(int) -> setTcpKeepCntl
    278:278:boolean isAllowHalfClosure() -> isAllowHalfClosure
    283:284:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setAllowHalfClosure(boolean) -> setAllowHalfClosure
    289:290:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    295:296:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    301:302:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    307:308:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    313:314:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    319:320:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    325:326:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setAutoClose(boolean) -> setAutoClose
    331:332:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    337:338:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    343:344:be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollSocketChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    349:350:void autoReadCleared() -> autoReadCleared
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setAutoClose(boolean) -> setAutoClose
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setAutoRead(boolean) -> setAutoRead
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setAllowHalfClosure(boolean) -> setAllowHalfClosure
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setTrafficClass(int) -> setTrafficClass
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setKeepAlive(boolean) -> setKeepAlive
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setSendBufferSize(int) -> setSendBufferSize
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setSoLinger(int) -> setSoLinger
    30:30:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setTcpNoDelay(boolean) -> setTcpNoDelay
be.alexandre01.dnplugin.shaded.netty.channel.epoll.IovArray -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.IovArray:
    int ADDRESS_SIZE -> ADDRESS_SIZE
    int IOV_SIZE -> IOV_SIZE
    int CAPACITY -> CAPACITY
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.FastThreadLocal ARRAY -> ARRAY
    long memoryAddress -> memoryAddress
    int count -> count
    long size -> size
    boolean $assertionsDisabled -> $assertionsDisabled
    74:76:void <init>() -> <init>
    83:113:boolean add(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> add
    121:142:long processWritten(int,long) -> processWritten
    150:150:int count() -> count
    157:157:long size() -> size
    164:164:long memoryAddress(int) -> memoryAddress
    169:169:boolean processMessage(java.lang.Object) -> processMessage
    176:180:be.alexandre01.dnplugin.shaded.netty.channel.epoll.IovArray get(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> get
    41:41:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.epoll.IovArray$1) -> <init>
    41:41:long access$100(be.alexandre01.dnplugin.shaded.netty.channel.epoll.IovArray) -> access$100
    41:57:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.epoll.IovArray$1 -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.IovArray$1:
    57:57:void <init>() -> <init>
    60:60:be.alexandre01.dnplugin.shaded.netty.channel.epoll.IovArray initialValue() -> initialValue
    66:67:void onRemoval(be.alexandre01.dnplugin.shaded.netty.channel.epoll.IovArray) -> onRemoval
    57:57:void onRemoval(java.lang.Object) -> onRemoval
    57:57:java.lang.Object initialValue() -> initialValue
be.alexandre01.dnplugin.shaded.netty.channel.epoll.Native -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.Native:
    byte[] IPV4_MAPPED_IPV6_PREFIX -> IPV4_MAPPED_IPV6_PREFIX
    int EPOLLIN -> EPOLLIN
    int EPOLLOUT -> EPOLLOUT
    int EPOLLACCEPT -> EPOLLACCEPT
    int EPOLLRDHUP -> EPOLLRDHUP
    int IOV_MAX -> IOV_MAX
    int eventFd() -> eventFd
    void eventFdWrite(int,long) -> eventFdWrite
    void eventFdRead(int) -> eventFdRead
    int epollCreate() -> epollCreate
    int epollWait(int,long[],int) -> epollWait
    void epollCtlAdd(int,int,int,int) -> epollCtlAdd
    void epollCtlMod(int,int,int,int) -> epollCtlMod
    void epollCtlDel(int,int) -> epollCtlDel
    void close(int) -> close
    int write(int,java.nio.ByteBuffer,int,int) -> write
    int writeAddress(int,long,int,int) -> writeAddress
    long writev(int,java.nio.ByteBuffer[],int,int) -> writev
    long writevAddresses(int,long,int) -> writevAddresses
    int read(int,java.nio.ByteBuffer,int,int) -> read
    int readAddress(int,long,int,int) -> readAddress
    long sendfile(int,be.alexandre01.dnplugin.shaded.netty.channel.DefaultFileRegion,long,long,long) -> sendfile
    87:95:int sendTo(int,java.nio.ByteBuffer,int,int,java.net.InetAddress,int) -> sendTo
    int sendTo(int,java.nio.ByteBuffer,int,int,byte[],int,int) -> sendTo
    107:115:int sendToAddress(int,long,int,int,java.net.InetAddress,int) -> sendToAddress
    int sendToAddress(int,long,int,int,byte[],int,int) -> sendToAddress
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannel$DatagramSocketAddress recvFrom(int,java.nio.ByteBuffer,int,int) -> recvFrom
    be.alexandre01.dnplugin.shaded.netty.channel.epoll.EpollDatagramChannel$DatagramSocketAddress recvFromAddress(int,long,int,int) -> recvFromAddress
    130:132:int socketStreamFd() -> socketStreamFd
    138:140:int socketDgramFd() -> socketDgramFd
    int socketStream() -> socketStream
    int socketDgram() -> socketDgram
    147:149:void bind(int,java.net.InetAddress,int) -> bind
    152:155:byte[] ipv4MappedIpv6Address(byte[]) -> ipv4MappedIpv6Address
    void bind(int,byte[],int,int) -> bind
    void listen(int,int) -> listen
    161:162:boolean connect(int,java.net.InetAddress,int) -> connect
    boolean connect(int,byte[],int,int) -> connect
    boolean finishConnect(int) -> finishConnect
    java.net.InetSocketAddress remoteAddress(int) -> remoteAddress
    java.net.InetSocketAddress localAddress(int) -> localAddress
    int accept(int) -> accept
    void shutdown(int,boolean,boolean) -> shutdown
    int getReceiveBufferSize(int) -> getReceiveBufferSize
    int getSendBufferSize(int) -> getSendBufferSize
    int isKeepAlive(int) -> isKeepAlive
    int isReuseAddress(int) -> isReuseAddress
    int isReusePort(int) -> isReusePort
    int isTcpNoDelay(int) -> isTcpNoDelay
    int isTcpCork(int) -> isTcpCork
    int getSoLinger(int) -> getSoLinger
    int getTrafficClass(int) -> getTrafficClass
    int isBroadcast(int) -> isBroadcast
    int getTcpKeepIdle(int) -> getTcpKeepIdle
    int getTcpKeepIntvl(int) -> getTcpKeepIntvl
    int getTcpKeepCnt(int) -> getTcpKeepCnt
    void setKeepAlive(int,int) -> setKeepAlive
    void setReceiveBufferSize(int,int) -> setReceiveBufferSize
    void setReuseAddress(int,int) -> setReuseAddress
    void setReusePort(int,int) -> setReusePort
    void setSendBufferSize(int,int) -> setSendBufferSize
    void setTcpNoDelay(int,int) -> setTcpNoDelay
    void setTcpCork(int,int) -> setTcpCork
    void setSoLinger(int,int) -> setSoLinger
    void setTrafficClass(int,int) -> setTrafficClass
    void setBroadcast(int,int) -> setBroadcast
    void setTcpKeepIdle(int,int) -> setTcpKeepIdle
    void setTcpKeepIntvl(int,int) -> setTcpKeepIntvl
    void setTcpKeepCnt(int,int) -> setTcpKeepCnt
    202:207:be.alexandre01.dnplugin.shaded.netty.channel.epoll.Native$NativeInetAddress toNativeInetAddress(java.net.InetAddress) -> toNativeInetAddress
    java.lang.String kernelVersion() -> kernelVersion
    int iovMax() -> iovMax
    229:231:void <init>() -> <init>
    38:54:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.epoll.Native$NativeInetAddress -> be.alexandre01.dnplugin.shaded.netty.channel.epoll.Native$NativeInetAddress:
    byte[] address -> address
    int scopeId -> scopeId
    215:218:void <init>(byte[],int) -> <init>
    221:222:void <init>(byte[]) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroup -> be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroup:
    java.lang.String name() -> name
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture write(java.lang.Object) -> write
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture write(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher) -> write
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroup flush() -> flush
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroup flush(be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher) -> flush
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture flushAndWrite(java.lang.Object) -> flushAndWrite
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture writeAndFlush(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher) -> writeAndFlush
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture flushAndWrite(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher) -> flushAndWrite
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture disconnect() -> disconnect
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture disconnect(be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher) -> disconnect
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture close() -> close
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture close(be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher) -> close
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture deregister() -> deregister
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture deregister(be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher) -> deregister
be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupException -> be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupException:
    long serialVersionUID -> serialVersionUID
    java.util.Collection failed -> failed
    34:42:void <init>(java.util.Collection) -> <init>
    50:50:java.util.Iterator iterator() -> iterator
be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture -> be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture:
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroup group() -> group
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture find(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> find
    boolean isSuccess() -> isSuccess
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupException cause() -> cause
    boolean isPartialSuccess() -> isPartialSuccess
    boolean isPartialFailure() -> isPartialFailure
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture await() -> await
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture awaitUninterruptibly() -> awaitUninterruptibly
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture syncUninterruptibly() -> syncUninterruptibly
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture sync() -> sync
    java.util.Iterator iterator() -> iterator
be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFutureListener -> be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFutureListener:
be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher -> be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher:
    boolean matches(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> matches
be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatchers -> be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatchers:
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher ALL_MATCHER -> ALL_MATCHER
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher SERVER_CHANNEL_MATCHER -> SERVER_CHANNEL_MATCHER
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher NON_SERVER_CHANNEL_MATCHER -> NON_SERVER_CHANNEL_MATCHER
    36:38:void <init>() -> <init>
    44:44:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher all() -> all
    51:51:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher isNot(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> isNot
    58:58:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher is(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> is
    66:66:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher isInstanceOf(java.lang.Class) -> isInstanceOf
    74:74:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher isNotInstanceOf(java.lang.Class) -> isNotInstanceOf
    81:81:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher isServerChannel() -> isServerChannel
    89:89:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher isNonServerChannel() -> isNonServerChannel
    96:96:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher invert(be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher) -> invert
    104:110:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher compose(be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher[]) -> compose
    26:34:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatchers$1 -> be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatchers$1:
    26:26:void <init>() -> <init>
    29:29:boolean matches(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> matches
be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatchers$ClassMatcher -> be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatchers$ClassMatcher:
    java.lang.Class clazz -> clazz
    160:162:void <init>(java.lang.Class) -> <init>
    166:166:boolean matches(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> matches
be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatchers$CompositeMatcher -> be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatchers$CompositeMatcher:
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher[] matchers -> matchers
    116:118:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher[]) -> <init>
    122:127:boolean matches(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> matches
be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatchers$InstanceMatcher -> be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatchers$InstanceMatcher:
    be.alexandre01.dnplugin.shaded.netty.channel.Channel channel -> channel
    147:149:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> <init>
    153:153:boolean matches(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> matches
be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatchers$InvertMatcher -> be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatchers$InvertMatcher:
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher matcher -> matcher
    134:136:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher) -> <init>
    140:140:boolean matches(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> matches
be.alexandre01.dnplugin.shaded.netty.channel.group.CombinedIterator -> be.alexandre01.dnplugin.shaded.netty.channel.group.CombinedIterator:
    java.util.Iterator i1 -> i1
    java.util.Iterator i2 -> i2
    java.util.Iterator currentIterator -> currentIterator
    29:39:void <init>(java.util.Iterator,java.util.Iterator) -> <init>
    44:51:boolean hasNext() -> hasNext
    60:67:java.lang.Object next() -> next
    73:74:void remove() -> remove
be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroup -> be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroup:
    java.util.concurrent.atomic.AtomicInteger nextId -> nextId
    java.lang.String name -> name
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor executor -> executor
    be.alexandre01.dnplugin.shaded.netty.util.internal.ConcurrentSet serverChannels -> serverChannels
    be.alexandre01.dnplugin.shaded.netty.util.internal.ConcurrentSet nonServerChannels -> nonServerChannels
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFutureListener remover -> remover
    59:60:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor) -> <init>
    45:73:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor) -> <init>
    77:77:java.lang.String name() -> name
    82:82:boolean isEmpty() -> isEmpty
    87:87:int size() -> size
    92:100:boolean contains(java.lang.Object) -> contains
    106:113:boolean add(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> add
    118:133:boolean remove(java.lang.Object) -> remove
    138:140:void clear() -> clear
    144:144:java.util.Iterator iterator() -> iterator
    151:154:java.lang.Object[] toArray() -> toArray
    159:162:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    167:167:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture close() -> close
    172:172:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture disconnect() -> disconnect
    177:177:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture deregister() -> deregister
    182:182:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture write(java.lang.Object) -> write
    188:193:java.lang.Object safeDuplicate(java.lang.Object) -> safeDuplicate
    199:214:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture write(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher) -> write
    219:219:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroup flush() -> flush
    224:224:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture flushAndWrite(java.lang.Object) -> flushAndWrite
    229:229:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    234:252:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture disconnect(be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher) -> disconnect
    257:275:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture close(be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher) -> close
    280:298:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture deregister(be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher) -> deregister
    303:308:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroup flush(be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher) -> flush
    313:313:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture flushAndWrite(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher) -> flushAndWrite
    318:332:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture writeAndFlush(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelMatcher) -> writeAndFlush
    337:337:int hashCode() -> hashCode
    342:342:boolean equals(java.lang.Object) -> equals
    347:352:int compareTo(be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroup) -> compareTo
    357:357:java.lang.String toString() -> toString
    40:40:boolean add(java.lang.Object) -> add
    40:40:int compareTo(java.lang.Object) -> compareTo
    42:42:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroup$1 -> be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroup$1:
    be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroup this$0 -> this$0
    47:47:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroup) -> <init>
    50:51:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    47:47:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture -> be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture:
    be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroup group -> group
    java.util.Map futures -> futures
    int successCount -> successCount
    int failureCount -> failureCount
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFutureListener childListener -> childListener
    47:109:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroup,java.util.Collection,be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor) -> <init>
    47:123:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroup,java.util.Map,be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor) -> <init>
    127:127:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroup group() -> group
    132:132:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture find(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> find
    137:137:java.util.Iterator iterator() -> iterator
    142:142:boolean isPartialSuccess() -> isPartialSuccess
    147:147:boolean isPartialFailure() -> isPartialFailure
    152:153:be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    158:159:be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    164:165:be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    171:172:be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    177:178:be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture await() -> await
    183:184:be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture awaitUninterruptibly() -> awaitUninterruptibly
    189:190:be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture syncUninterruptibly() -> syncUninterruptibly
    195:196:be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture sync() -> sync
    201:201:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupException cause() -> cause
    205:206:void setSuccess0() -> setSuccess0
    209:210:void setFailure0(be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupException) -> setFailure0
    214:214:be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture setSuccess(java.lang.Void) -> setSuccess
    219:219:boolean trySuccess(java.lang.Void) -> trySuccess
    224:224:be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture setFailure(java.lang.Throwable) -> setFailure
    229:229:boolean tryFailure(java.lang.Throwable) -> tryFailure
    234:238:void checkDeadLock() -> checkDeadLock
    40:40:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    40:40:boolean trySuccess(java.lang.Object) -> trySuccess
    40:40:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    40:40:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    40:40:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise await() -> await
    40:40:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    40:40:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise sync() -> sync
    40:40:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    40:40:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    40:40:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    40:40:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    40:40:java.lang.Throwable cause() -> cause
    40:40:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    40:40:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future await() -> await
    40:40:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    40:40:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future sync() -> sync
    40:40:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    40:40:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    40:40:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    40:40:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    40:40:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture sync() -> sync
    40:40:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture syncUninterruptibly() -> syncUninterruptibly
    40:40:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture awaitUninterruptibly() -> awaitUninterruptibly
    40:40:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture await() -> await
    40:40:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    40:40:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    40:40:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    40:40:be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupFuture addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    40:40:int access$008(be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture) -> access$008
    40:40:int access$108(be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture) -> access$108
    40:40:int access$000(be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture) -> access$000
    40:40:int access$100(be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture) -> access$100
    40:40:java.util.Map access$200(be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture) -> access$200
    40:40:void access$300(be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture,be.alexandre01.dnplugin.shaded.netty.channel.group.ChannelGroupException) -> access$300
    40:40:void access$400(be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture) -> access$400
be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture$1 -> be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture$1:
    boolean $assertionsDisabled -> $assertionsDisabled
    be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture this$0 -> this$0
    47:47:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture) -> <init>
    50:77:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    47:47:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
    47:47:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture$DefaultEntry -> be.alexandre01.dnplugin.shaded.netty.channel.group.DefaultChannelGroupFuture$DefaultEntry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    244:247:void <init>(java.lang.Object,java.lang.Object) -> <init>
    251:251:java.lang.Object getKey() -> getKey
    256:256:java.lang.Object getValue() -> getValue
    261:261:java.lang.Object setValue(java.lang.Object) -> setValue
be.alexandre01.dnplugin.shaded.netty.channel.local.LocalAddress -> be.alexandre01.dnplugin.shaded.netty.channel.local.LocalAddress:
    long serialVersionUID -> serialVersionUID
    be.alexandre01.dnplugin.shaded.netty.channel.local.LocalAddress ANY -> ANY
    java.lang.String id -> id
    java.lang.String strVal -> strVal
    40:47:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> <init>
    52:62:void <init>(java.lang.String) -> <init>
    68:68:java.lang.String id() -> id
    73:73:int hashCode() -> hashCode
    78:82:boolean equals(java.lang.Object) -> equals
    87:87:int compareTo(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalAddress) -> compareTo
    92:92:java.lang.String toString() -> toString
    26:26:int compareTo(java.lang.Object) -> compareTo
    30:30:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel -> be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata METADATA -> METADATA
    int MAX_READER_STACK_DEPTH -> MAX_READER_STACK_DEPTH
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config -> config
    java.util.Queue inboundBuffer -> inboundBuffer
    java.lang.Runnable readTask -> readTask
    java.lang.Runnable shutdownHook -> shutdownHook
    int state -> state
    be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel peer -> peer
    be.alexandre01.dnplugin.shaded.netty.channel.local.LocalAddress localAddress -> localAddress
    be.alexandre01.dnplugin.shaded.netty.channel.local.LocalAddress remoteAddress -> remoteAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise connectPromise -> connectPromise
    boolean readInProgress -> readInProgress
    boolean registerInProgress -> registerInProgress
    51:85:void <init>() -> <init>
    51:92:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalServerChannel,be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel) -> <init>
    96:96:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    101:101:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    106:106:be.alexandre01.dnplugin.shaded.netty.channel.local.LocalServerChannel parent() -> parent
    111:111:be.alexandre01.dnplugin.shaded.netty.channel.local.LocalAddress localAddress() -> localAddress
    116:116:be.alexandre01.dnplugin.shaded.netty.channel.local.LocalAddress remoteAddress() -> remoteAddress
    121:121:boolean isOpen() -> isOpen
    126:126:boolean isActive() -> isActive
    131:131:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    136:136:boolean isCompatible(be.alexandre01.dnplugin.shaded.netty.channel.EventLoop) -> isCompatible
    141:141:java.net.SocketAddress localAddress0() -> localAddress0
    146:146:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    156:184:void doRegister() -> doRegister
    188:192:void doBind(java.net.SocketAddress) -> doBind
    196:197:void doDisconnect() -> doDisconnect
    201:234:void doClose() -> doClose
    239:240:void doDeregister() -> doDeregister
    244:274:void doBeginRead() -> doBeginRead
    278:316:void doWrite(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWrite
    319:330:void finishPeerRead(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline) -> finishPeerRead
    45:45:java.net.SocketAddress remoteAddress() -> remoteAddress
    45:45:java.net.SocketAddress localAddress() -> localAddress
    45:45:be.alexandre01.dnplugin.shaded.netty.channel.Channel parent() -> parent
    45:45:java.util.Queue access$000(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel) -> access$000
    45:45:boolean access$202(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel,boolean) -> access$202
    45:45:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise access$300(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel) -> access$300
    45:45:void access$400(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline) -> access$400
    45:45:int access$500(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel) -> access$500
    45:45:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise access$302(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> access$302
    45:45:be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel access$602(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel,be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel) -> access$602
    47:47:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel$1:
    be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel this$0 -> this$0
    53:53:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel) -> <init>
    56:65:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel$2 -> be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel$2:
    be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel this$0 -> this$0
    68:68:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel) -> <init>
    71:72:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel$3 -> be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel$3:
    be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel val$peer -> val$peer
    be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel this$0 -> this$0
    174:174:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel,be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel) -> <init>
    177:180:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel$4 -> be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel$4:
    be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel val$peer -> val$peer
    be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel this$0 -> this$0
    225:225:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel,be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel) -> <init>
    228:229:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel$5 -> be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel$5:
    be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel val$peer -> val$peer
    java.lang.Object[] val$msgsCopy -> val$msgsCopy
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline val$peerPipeline -> val$peerPipeline
    be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel this$0 -> this$0
    308:308:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel,be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel,java.lang.Object[],be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline) -> <init>
    311:313:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel$LocalUnsafe -> be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel$LocalUnsafe:
    be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel this$0 -> this$0
    332:332:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel) -> <init>
    337:381:void connect(java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    332:332:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel,be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannelRegistry -> be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannelRegistry:
    java.util.concurrent.ConcurrentMap boundChannels -> boundChannels
    32:48:be.alexandre01.dnplugin.shaded.netty.channel.local.LocalAddress register(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.channel.local.LocalAddress,java.net.SocketAddress) -> register
    52:52:be.alexandre01.dnplugin.shaded.netty.channel.Channel get(java.net.SocketAddress) -> get
    56:57:void unregister(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalAddress) -> unregister
    59:61:void <init>() -> <init>
    28:28:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.local.LocalEventLoop -> be.alexandre01.dnplugin.shaded.netty.channel.local.LocalEventLoop:
    25:26:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalEventLoopGroup,java.util.concurrent.ThreadFactory) -> <init>
    31:41:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.local.LocalEventLoopGroup -> be.alexandre01.dnplugin.shaded.netty.channel.local.LocalEventLoopGroup:
    32:33:void <init>() -> <init>
    41:42:void <init>(int) -> <init>
    51:52:void <init>(int,java.util.concurrent.ThreadFactory) -> <init>
    57:57:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor newChild(java.util.concurrent.ThreadFactory,java.lang.Object[]) -> newChild
be.alexandre01.dnplugin.shaded.netty.channel.local.LocalServerChannel -> be.alexandre01.dnplugin.shaded.netty.channel.local.LocalServerChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config -> config
    java.util.Queue inboundBuffer -> inboundBuffer
    java.lang.Runnable shutdownHook -> shutdownHook
    int state -> state
    be.alexandre01.dnplugin.shaded.netty.channel.local.LocalAddress localAddress -> localAddress
    boolean acceptInProgress -> acceptInProgress
    34:38:void <init>() -> <init>
    51:51:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    56:56:be.alexandre01.dnplugin.shaded.netty.channel.local.LocalAddress localAddress() -> localAddress
    61:61:be.alexandre01.dnplugin.shaded.netty.channel.local.LocalAddress remoteAddress() -> remoteAddress
    66:66:boolean isOpen() -> isOpen
    71:71:boolean isActive() -> isActive
    76:76:boolean isCompatible(be.alexandre01.dnplugin.shaded.netty.channel.EventLoop) -> isCompatible
    81:81:java.net.SocketAddress localAddress0() -> localAddress0
    86:87:void doRegister() -> doRegister
    91:93:void doBind(java.net.SocketAddress) -> doBind
    97:105:void doClose() -> doClose
    109:110:void doDeregister() -> doDeregister
    114:133:void doBeginRead() -> doBeginRead
    136:147:be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel serve(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel) -> serve
    151:164:void serve0(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel) -> serve0
    34:34:java.net.SocketAddress remoteAddress() -> remoteAddress
    34:34:java.net.SocketAddress localAddress() -> localAddress
    34:34:void access$000(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalServerChannel,be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel) -> access$000
be.alexandre01.dnplugin.shaded.netty.channel.local.LocalServerChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.local.LocalServerChannel$1:
    be.alexandre01.dnplugin.shaded.netty.channel.local.LocalServerChannel this$0 -> this$0
    38:38:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalServerChannel) -> <init>
    41:42:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.local.LocalServerChannel$2 -> be.alexandre01.dnplugin.shaded.netty.channel.local.LocalServerChannel$2:
    be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel val$child -> val$child
    be.alexandre01.dnplugin.shaded.netty.channel.local.LocalServerChannel this$0 -> this$0
    140:140:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.local.LocalServerChannel,be.alexandre01.dnplugin.shaded.netty.channel.local.LocalChannel) -> <init>
    143:144:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioByteChannel -> be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioByteChannel:
    java.lang.String EXPECTED_TYPES -> EXPECTED_TYPES
    java.lang.Runnable flushTask -> flushTask
    52:53:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel,java.nio.channels.SelectableChannel) -> <init>
    57:57:be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe newUnsafe() -> newUnsafe
    178:259:void doWrite(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWrite
    263:276:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    282:297:void incompleteWrite(boolean) -> incompleteWrite
    long doWriteFileRegion(be.alexandre01.dnplugin.shaded.netty.channel.FileRegion) -> doWriteFileRegion
    int doReadBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> doReadBytes
    int doWriteBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> doWriteBytes
    320:331:void setOpWrite() -> setOpWrite
    334:345:void clearOpWrite() -> clearOpWrite
    37:37:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    39:39:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioByteChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioByteChannel$1:
    be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioByteChannel this$0 -> this$0
    288:288:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioByteChannel) -> <init>
    291:292:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe -> be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe:
    be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator$Handle allocHandle -> allocHandle
    be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioByteChannel this$0 -> this$0
    60:60:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioByteChannel) -> <init>
    64:74:void closeOnRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline) -> closeOnRead
    78:91:void handleReadException(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.lang.Throwable,boolean) -> handleReadException
    95:173:void read() -> read
    60:60:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioByteChannel,be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioByteChannel$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel -> be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.nio.channels.SelectableChannel ch -> ch
    int readInterestOp -> readInterestOp
    java.nio.channels.SelectionKey selectionKey -> selectionKey
    boolean inputShutdown -> inputShutdown
    boolean readPending -> readPending
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise connectPromise -> connectPromise
    java.util.concurrent.ScheduledFuture connectTimeoutFuture -> connectTimeoutFuture
    java.net.SocketAddress requestedRemoteAddress -> requestedRemoteAddress
    boolean $assertionsDisabled -> $assertionsDisabled
    75:92:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel,java.nio.channels.SelectableChannel,int) -> <init>
    96:96:boolean isOpen() -> isOpen
    101:101:be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel$NioUnsafe unsafe() -> unsafe
    105:105:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    110:110:be.alexandre01.dnplugin.shaded.netty.channel.nio.NioEventLoop eventLoop() -> eventLoop
    117:118:java.nio.channels.SelectionKey selectionKey() -> selectionKey
    122:122:boolean isReadPending() -> isReadPending
    126:127:void setReadPending(boolean) -> setReadPending
    133:133:boolean isInputShutdown() -> isInputShutdown
    140:141:void setInputShutdown() -> setInputShutdown
    332:332:boolean isCompatible(be.alexandre01.dnplugin.shaded.netty.channel.EventLoop) -> isCompatible
    337:353:void doRegister() -> doRegister
    359:360:void doDeregister() -> doDeregister
    365:380:void doBeginRead() -> doBeginRead
    boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    void doFinishConnect() -> doFinishConnect
    398:420:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf newDirectBuffer(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> newDirectBuffer
    430:458:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf newDirectBuffer(be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> newDirectBuffer
    48:48:be.alexandre01.dnplugin.shaded.netty.channel.Channel$Unsafe unsafe() -> unsafe
    48:48:be.alexandre01.dnplugin.shaded.netty.channel.EventLoop eventLoop() -> eventLoop
    48:48:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise access$000(be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel) -> access$000
    48:48:be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise access$002(be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> access$002
    48:48:java.net.SocketAddress access$102(be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel,java.net.SocketAddress) -> access$102
    48:48:java.util.concurrent.ScheduledFuture access$202(be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel,java.util.concurrent.ScheduledFuture) -> access$202
    48:48:java.util.concurrent.ScheduledFuture access$200(be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel) -> access$200
    48:48:java.net.SocketAddress access$100(be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel) -> access$100
    48:50:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe -> be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe:
    boolean $assertionsDisabled -> $assertionsDisabled
    be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel this$0 -> this$0
    165:165:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel) -> <init>
    168:180:void removeReadOp() -> removeReadOp
    184:184:java.nio.channels.SelectableChannel ch() -> ch
    190:244:void connect(java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    247:265:void fulfillConnectPromise(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,boolean) -> fulfillConnectPromise
    268:276:void fulfillConnectPromise(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,java.lang.Throwable) -> fulfillConnectPromise
    283:305:void finishConnect() -> finishConnect
    312:316:void flush0() -> flush0
    321:322:void forceFlush() -> forceFlush
    325:326:boolean isFlushPending() -> isFlushPending
    165:165:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1 -> be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1:
    java.net.SocketAddress val$remoteAddress -> val$remoteAddress
    be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe this$1 -> this$1
    209:209:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe,java.net.SocketAddress) -> <init>
    212:218:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$2 -> be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$2:
    be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe this$1 -> this$1
    222:222:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe) -> <init>
    225:232:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    222:222:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel$NioUnsafe -> be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel$NioUnsafe:
    java.nio.channels.SelectableChannel ch() -> ch
    void finishConnect() -> finishConnect
    void read() -> read
    void forceFlush() -> forceFlush
be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioMessageChannel -> be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioMessageChannel:
    39:40:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel,java.nio.channels.SelectableChannel,int) -> <init>
    44:44:be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe newUnsafe() -> newUnsafe
    129:167:void doWrite(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWrite
    173:173:boolean continueOnWriteError() -> continueOnWriteError
    int doReadMessages(java.util.List) -> doReadMessages
    boolean doWriteMessage(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWriteMessage
    33:33:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioMessageChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioMessageChannel$1:
be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe -> be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe:
    java.util.List readBuf -> readBuf
    boolean $assertionsDisabled -> $assertionsDisabled
    be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioMessageChannel this$0 -> this$0
    47:49:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioMessageChannel) -> <init>
    53:124:void read() -> read
    47:47:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioMessageChannel,be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioMessageChannel$1) -> <init>
    47:47:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.nio.NioEventLoop -> be.alexandre01.dnplugin.shaded.netty.channel.nio.NioEventLoop:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    int CLEANUP_INTERVAL -> CLEANUP_INTERVAL
    boolean DISABLE_KEYSET_OPTIMIZATION -> DISABLE_KEYSET_OPTIMIZATION
    int MIN_PREMATURE_SELECTOR_RETURNS -> MIN_PREMATURE_SELECTOR_RETURNS
    int SELECTOR_AUTO_REBUILD_THRESHOLD -> SELECTOR_AUTO_REBUILD_THRESHOLD
    java.nio.channels.Selector selector -> selector
    be.alexandre01.dnplugin.shaded.netty.channel.nio.SelectedSelectionKeySet selectedKeys -> selectedKeys
    java.nio.channels.spi.SelectorProvider provider -> provider
    java.util.concurrent.atomic.AtomicBoolean wakenUp -> wakenUp
    int ioRatio -> ioRatio
    int cancelledKeys -> cancelledKeys
    boolean needsToSelectAgain -> needsToSelectAgain
    108:121:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.nio.NioEventLoopGroup,java.util.concurrent.ThreadFactory,java.nio.channels.spi.SelectorProvider) -> <init>
    126:162:java.nio.channels.Selector openSelector() -> openSelector
    168:168:java.util.Queue newTaskQueue() -> newTaskQueue
    177:200:void register(java.nio.channels.SelectableChannel,int,be.alexandre01.dnplugin.shaded.netty.channel.nio.NioTask) -> register
    206:206:int getIoRatio() -> getIoRatio
    214:218:void setIoRatio(int) -> setIoRatio
    225:300:void rebuildSelector() -> rebuildSelector
    305:378:void run() -> run
    381:386:void processSelectedKeys() -> processSelectedKeys
    391:395:void cleanup() -> cleanup
    398:404:void cancel(java.nio.channels.SelectionKey) -> cancel
    408:412:java.lang.Runnable pollTask() -> pollTask
    419:453:void processSelectedKeysPlain(java.util.Set) -> processSelectedKeysPlain
    456:496:void processSelectedKeysOptimized(java.nio.channels.SelectionKey[]) -> processSelectedKeysOptimized
    499:533:void processSelectedKey(java.nio.channels.SelectionKey,be.alexandre01.dnplugin.shaded.netty.channel.nio.AbstractNioChannel) -> processSelectedKey
    536:557:void processSelectedKey(java.nio.channels.SelectionKey,be.alexandre01.dnplugin.shaded.netty.channel.nio.NioTask) -> processSelectedKey
    560:578:void closeAll() -> closeAll
    582:586:void invokeChannelUnregistered(be.alexandre01.dnplugin.shaded.netty.channel.nio.NioTask,java.nio.channels.SelectionKey,java.lang.Throwable) -> invokeChannelUnregistered
    590:593:void wakeup(boolean) -> wakeup
    597:604:void selectNow() -> selectNow
    607:682:void select(boolean) -> select
    685:691:void selectAgain() -> selectAgain
    53:92:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.nio.NioEventLoop$1 -> be.alexandre01.dnplugin.shaded.netty.channel.nio.NioEventLoop$1:
    be.alexandre01.dnplugin.shaded.netty.channel.nio.NioEventLoop this$0 -> this$0
    226:226:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.nio.NioEventLoop) -> <init>
    229:230:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.nio.NioEventLoopGroup -> be.alexandre01.dnplugin.shaded.netty.channel.nio.NioEventLoopGroup:
    36:37:void <init>() -> <init>
    44:45:void <init>(int) -> <init>
    52:53:void <init>(int,java.util.concurrent.ThreadFactory) -> <init>
    61:62:void <init>(int,java.util.concurrent.ThreadFactory,java.nio.channels.spi.SelectorProvider) -> <init>
    69:72:void setIoRatio(int) -> setIoRatio
    79:82:void rebuildSelectors() -> rebuildSelectors
    87:87:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor newChild(java.util.concurrent.ThreadFactory,java.lang.Object[]) -> newChild
be.alexandre01.dnplugin.shaded.netty.channel.nio.NioTask -> be.alexandre01.dnplugin.shaded.netty.channel.nio.NioTask:
    void channelReady(java.nio.channels.SelectableChannel,java.nio.channels.SelectionKey) -> channelReady
    void channelUnregistered(java.nio.channels.SelectableChannel,java.lang.Throwable) -> channelUnregistered
be.alexandre01.dnplugin.shaded.netty.channel.nio.SelectedSelectionKeySet -> be.alexandre01.dnplugin.shaded.netty.channel.nio.SelectedSelectionKeySet:
    java.nio.channels.SelectionKey[] keysA -> keysA
    int keysASize -> keysASize
    java.nio.channels.SelectionKey[] keysB -> keysB
    int keysBSize -> keysBSize
    boolean isA -> isA
    29:34:void <init>() -> <init>
    38:58:boolean add(java.nio.channels.SelectionKey) -> add
    62:65:void doubleCapacityA() -> doubleCapacityA
    68:71:void doubleCapacityB() -> doubleCapacityB
    74:83:java.nio.channels.SelectionKey[] flip() -> flip
    89:92:int size() -> size
    98:98:boolean remove(java.lang.Object) -> remove
    103:103:boolean contains(java.lang.Object) -> contains
    108:108:java.util.Iterator iterator() -> iterator
    23:23:boolean add(java.lang.Object) -> add
be.alexandre01.dnplugin.shaded.netty.channel.oio.AbstractOioByteChannel -> be.alexandre01.dnplugin.shaded.netty.channel.oio.AbstractOioByteChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata METADATA -> METADATA
    java.lang.String EXPECTED_TYPES -> EXPECTED_TYPES
    be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator$Handle allocHandle -> allocHandle
    boolean inputShutdown -> inputShutdown
    49:50:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> <init>
    53:53:boolean isInputShutdown() -> isInputShutdown
    58:58:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    66:74:boolean checkInputShutdown() -> checkInputShutdown
    79:188:void doRead() -> doRead
    193:219:void doWrite(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWrite
    223:227:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    int available() -> available
    int doReadBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> doReadBytes
    void doWriteBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> doWriteBytes
    void doWriteFileRegion(be.alexandre01.dnplugin.shaded.netty.channel.FileRegion) -> doWriteFileRegion
    37:38:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.oio.AbstractOioChannel -> be.alexandre01.dnplugin.shaded.netty.channel.oio.AbstractOioChannel:
    int SO_TIMEOUT -> SO_TIMEOUT
    boolean readPending -> readPending
    java.lang.Runnable readTask -> readTask
    36:54:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> <init>
    58:58:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    91:91:boolean isCompatible(be.alexandre01.dnplugin.shaded.netty.channel.EventLoop) -> isCompatible
    void doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    102:108:void doBeginRead() -> doBeginRead
    void doRead() -> doRead
    113:113:boolean isReadPending() -> isReadPending
    117:118:void setReadPending(boolean) -> setReadPending
be.alexandre01.dnplugin.shaded.netty.channel.oio.AbstractOioChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.oio.AbstractOioChannel$1:
    be.alexandre01.dnplugin.shaded.netty.channel.oio.AbstractOioChannel this$0 -> this$0
    36:36:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.oio.AbstractOioChannel) -> <init>
    39:46:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.oio.AbstractOioChannel$DefaultOioUnsafe -> be.alexandre01.dnplugin.shaded.netty.channel.oio.AbstractOioChannel$DefaultOioUnsafe:
    be.alexandre01.dnplugin.shaded.netty.channel.oio.AbstractOioChannel this$0 -> this$0
    61:61:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.oio.AbstractOioChannel) -> <init>
    66:86:void connect(java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    61:61:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.oio.AbstractOioChannel,be.alexandre01.dnplugin.shaded.netty.channel.oio.AbstractOioChannel$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.oio.AbstractOioMessageChannel -> be.alexandre01.dnplugin.shaded.netty.channel.oio.AbstractOioMessageChannel:
    java.util.List readBuf -> readBuf
    31:35:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> <init>
    39:93:void doRead() -> doRead
    int doReadMessages(java.util.List) -> doReadMessages
be.alexandre01.dnplugin.shaded.netty.channel.oio.OioByteStreamChannel -> be.alexandre01.dnplugin.shaded.netty.channel.oio.OioByteStreamChannel:
    java.io.InputStream CLOSED_IN -> CLOSED_IN
    java.io.OutputStream CLOSED_OUT -> CLOSED_OUT
    java.io.InputStream is -> is
    java.io.OutputStream os -> os
    java.nio.channels.WritableByteChannel outChannel -> outChannel
    61:62:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> <init>
    68:82:void activate(java.io.InputStream,java.io.OutputStream) -> activate
    86:92:boolean isActive() -> isActive
    98:100:int available() -> available
    106:107:int doReadBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> doReadBytes
    112:117:void doWriteBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> doWriteBytes
    121:141:void doWriteFileRegion(be.alexandre01.dnplugin.shaded.netty.channel.FileRegion) -> doWriteFileRegion
    145:149:void checkEOF(be.alexandre01.dnplugin.shaded.netty.channel.FileRegion) -> checkEOF
    153:167:void doClose() -> doClose
    36:43:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.oio.OioByteStreamChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.oio.OioByteStreamChannel$1:
    36:36:void <init>() -> <init>
    39:39:int read() -> read
be.alexandre01.dnplugin.shaded.netty.channel.oio.OioByteStreamChannel$2 -> be.alexandre01.dnplugin.shaded.netty.channel.oio.OioByteStreamChannel$2:
    43:43:void <init>() -> <init>
    46:46:void write(int) -> write
be.alexandre01.dnplugin.shaded.netty.channel.oio.OioEventLoopGroup -> be.alexandre01.dnplugin.shaded.netty.channel.oio.OioEventLoopGroup:
    39:40:void <init>() -> <init>
    52:53:void <init>(int) -> <init>
    67:68:void <init>(int,java.util.concurrent.ThreadFactory) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.rxtx.DefaultRxtxChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.rxtx.DefaultRxtxChannelConfig:
    int baudrate -> baudrate
    boolean dtr -> dtr
    boolean rts -> rts
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Stopbits stopbits -> stopbits
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Databits databits -> databits
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Paritybit paritybit -> paritybit
    int waitTime -> waitTime
    int readTimeout -> readTimeout
    33:44:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannel) -> <init>
    48:48:java.util.Map getOptions() -> getOptions
    54:78:java.lang.Object getOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption) -> getOption
    83:104:boolean setOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption,java.lang.Object) -> setOption
    109:110:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setBaudrate(int) -> setBaudrate
    115:116:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setStopbits(be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Stopbits) -> setStopbits
    121:122:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setDatabits(be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Databits) -> setDatabits
    127:128:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setParitybit(be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Paritybit) -> setParitybit
    133:133:int getBaudrate() -> getBaudrate
    138:138:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Stopbits getStopbits() -> getStopbits
    143:143:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Databits getDatabits() -> getDatabits
    148:148:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Paritybit getParitybit() -> getParitybit
    153:153:boolean isDtr() -> isDtr
    158:159:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setDtr(boolean) -> setDtr
    164:164:boolean isRts() -> isRts
    169:170:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setRts(boolean) -> setRts
    175:175:int getWaitTimeMillis() -> getWaitTimeMillis
    180:184:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setWaitTimeMillis(int) -> setWaitTimeMillis
    189:193:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setReadTimeout(int) -> setReadTimeout
    198:198:int getReadTimeout() -> getReadTimeout
    203:204:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    209:210:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    215:216:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    221:222:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    227:228:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    233:234:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setAutoRead(boolean) -> setAutoRead
    239:240:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setAutoClose(boolean) -> setAutoClose
    245:246:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    251:252:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    257:258:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    31:31:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    31:31:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    31:31:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    31:31:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    31:31:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    31:31:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    31:31:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    31:31:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    31:31:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    31:31:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannel -> be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxDeviceAddress LOCAL_ADDRESS -> LOCAL_ADDRESS
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig config -> config
    boolean open -> open
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxDeviceAddress deviceAddress -> deviceAddress
    gnu.io.SerialPort serialPort -> serialPort
    38:46:void <init>() -> <init>
    50:50:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig config() -> config
    55:55:boolean isOpen() -> isOpen
    60:60:be.alexandre01.dnplugin.shaded.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    65:72:void doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    75:85:void doInit() -> doInit
    89:89:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxDeviceAddress localAddress() -> localAddress
    94:94:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxDeviceAddress remoteAddress() -> remoteAddress
    99:99:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxDeviceAddress localAddress0() -> localAddress0
    104:104:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxDeviceAddress remoteAddress0() -> remoteAddress0
    109:109:void doBind(java.net.SocketAddress) -> doBind
    114:115:void doDisconnect() -> doDisconnect
    119:129:void doClose() -> doClose
    32:32:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    32:32:java.net.SocketAddress localAddress0() -> localAddress0
    32:32:java.net.SocketAddress remoteAddress() -> remoteAddress
    32:32:java.net.SocketAddress localAddress() -> localAddress
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    34:34:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannel$1:
be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannel$RxtxUnsafe -> be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannel$RxtxUnsafe:
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannel this$0 -> this$0
    131:131:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannel) -> <init>
    136:172:void connect(java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    131:131:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannel,be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannel$1) -> <init>
    131:131:void access$100(be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannel$RxtxUnsafe,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> access$100
    131:131:void access$200(be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannel$RxtxUnsafe,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,java.lang.Throwable) -> access$200
    131:131:void access$300(be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannel$RxtxUnsafe) -> access$300
be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannel$RxtxUnsafe$1 -> be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannel$RxtxUnsafe$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    boolean val$wasActive -> val$wasActive
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannel$RxtxUnsafe this$1 -> this$1
    146:146:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannel$RxtxUnsafe,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,boolean) -> <init>
    150:159:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig:
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setBaudrate(int) -> setBaudrate
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setStopbits(be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Stopbits) -> setStopbits
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setDatabits(be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Databits) -> setDatabits
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setParitybit(be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Paritybit) -> setParitybit
    int getBaudrate() -> getBaudrate
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Stopbits getStopbits() -> getStopbits
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Databits getDatabits() -> getDatabits
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Paritybit getParitybit() -> getParitybit
    boolean isDtr() -> isDtr
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setDtr(boolean) -> setDtr
    boolean isRts() -> isRts
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setRts(boolean) -> setRts
    int getWaitTimeMillis() -> getWaitTimeMillis
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setWaitTimeMillis(int) -> setWaitTimeMillis
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setReadTimeout(int) -> setReadTimeout
    int getReadTimeout() -> getReadTimeout
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setAutoRead(boolean) -> setAutoRead
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setAutoClose(boolean) -> setAutoClose
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Databits -> be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Databits:
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Databits DATABITS_5 -> DATABITS_5
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Databits DATABITS_6 -> DATABITS_6
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Databits DATABITS_7 -> DATABITS_7
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Databits DATABITS_8 -> DATABITS_8
    int value -> value
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Databits[] $VALUES -> $VALUES
    87:87:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Databits[] values() -> values
    87:87:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Databits valueOf(java.lang.String) -> valueOf
    107:109:void <init>(java.lang.String,int,int) -> <init>
    112:112:int value() -> value
    116:121:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Databits valueOf(int) -> valueOf
    87:103:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Paritybit -> be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Paritybit:
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Paritybit NONE -> NONE
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Paritybit ODD -> ODD
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Paritybit EVEN -> EVEN
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Paritybit MARK -> MARK
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Paritybit SPACE -> SPACE
    int value -> value
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Paritybit[] $VALUES -> $VALUES
    125:125:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Paritybit[] values() -> values
    125:125:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Paritybit valueOf(java.lang.String) -> valueOf
    151:153:void <init>(java.lang.String,int,int) -> <init>
    156:156:int value() -> value
    160:165:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Paritybit valueOf(int) -> valueOf
    125:147:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Stopbits -> be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Stopbits:
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Stopbits STOPBITS_1 -> STOPBITS_1
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Stopbits STOPBITS_2 -> STOPBITS_2
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Stopbits STOPBITS_1_5 -> STOPBITS_1_5
    int value -> value
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Stopbits[] $VALUES -> $VALUES
    53:53:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Stopbits[] values() -> values
    53:53:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Stopbits valueOf(java.lang.String) -> valueOf
    69:71:void <init>(java.lang.String,int,int) -> <init>
    74:74:int value() -> value
    78:83:be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelConfig$Stopbits valueOf(int) -> valueOf
    53:65:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelOption -> be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelOption:
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelOption BAUD_RATE -> BAUD_RATE
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelOption DTR -> DTR
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelOption RTS -> RTS
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelOption STOP_BITS -> STOP_BITS
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelOption DATA_BITS -> DATA_BITS
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelOption PARITY_BIT -> PARITY_BIT
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelOption WAIT_TIME -> WAIT_TIME
    be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxChannelOption READ_TIMEOUT -> READ_TIMEOUT
    53:54:void <init>(java.lang.String) -> <init>
    27:48:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxDeviceAddress -> be.alexandre01.dnplugin.shaded.netty.channel.rxtx.RxtxDeviceAddress:
    long serialVersionUID -> serialVersionUID
    java.lang.String value -> value
    35:37:void <init>(java.lang.String) -> <init>
    43:43:java.lang.String value() -> value
be.alexandre01.dnplugin.shaded.netty.channel.sctp.DefaultSctpChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.DefaultSctpChannelConfig:
    com.sun.nio.sctp.SctpChannel javaChannel -> javaChannel
    42:56:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannel,com.sun.nio.sctp.SctpChannel) -> <init>
    60:60:java.util.Map getOptions() -> getOptions
    68:77:java.lang.Object getOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption) -> getOption
    82:96:boolean setOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption,java.lang.Object) -> setOption
    102:104:boolean isSctpNoDelay() -> isSctpNoDelay
    111:115:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setSctpNoDelay(boolean) -> setSctpNoDelay
    121:123:int getSendBufferSize() -> getSendBufferSize
    130:134:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setSendBufferSize(int) -> setSendBufferSize
    140:142:int getReceiveBufferSize() -> getReceiveBufferSize
    149:153:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    159:161:com.sun.nio.sctp.SctpStandardSocketOptions$InitMaxStreams getInitMaxStreams() -> getInitMaxStreams
    168:172:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setInitMaxStreams(com.sun.nio.sctp.SctpStandardSocketOptions$InitMaxStreams) -> setInitMaxStreams
    177:178:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    183:184:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    189:190:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    195:196:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    201:202:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    207:208:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setAutoRead(boolean) -> setAutoRead
    213:214:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setAutoClose(boolean) -> setAutoClose
    219:220:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    225:226:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    231:232:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    37:37:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    37:37:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    37:37:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    37:37:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    37:37:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    37:37:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    37:37:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    37:37:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    37:37:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    37:37:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
be.alexandre01.dnplugin.shaded.netty.channel.sctp.DefaultSctpServerChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.DefaultSctpServerChannelConfig:
    com.sun.nio.sctp.SctpServerChannel javaChannel -> javaChannel
    int backlog -> backlog
    38:50:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannel,com.sun.nio.sctp.SctpServerChannel) -> <init>
    54:54:java.util.Map getOptions() -> getOptions
    62:68:java.lang.Object getOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption) -> getOption
    73:85:boolean setOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption,java.lang.Object) -> setOption
    91:93:int getSendBufferSize() -> getSendBufferSize
    100:104:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setSendBufferSize(int) -> setSendBufferSize
    110:112:int getReceiveBufferSize() -> getReceiveBufferSize
    119:123:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    129:131:com.sun.nio.sctp.SctpStandardSocketOptions$InitMaxStreams getInitMaxStreams() -> getInitMaxStreams
    138:142:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setInitMaxStreams(com.sun.nio.sctp.SctpStandardSocketOptions$InitMaxStreams) -> setInitMaxStreams
    147:147:int getBacklog() -> getBacklog
    152:156:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setBacklog(int) -> setBacklog
    161:162:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    167:168:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    173:174:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    179:180:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    185:186:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    191:192:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setAutoRead(boolean) -> setAutoRead
    197:198:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setAutoClose(boolean) -> setAutoClose
    203:204:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    209:210:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    215:216:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannel -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannel parent() -> parent
    com.sun.nio.sctp.Association association() -> association
    java.net.InetSocketAddress localAddress() -> localAddress
    java.util.Set allLocalAddresses() -> allLocalAddresses
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig config() -> config
    java.net.InetSocketAddress remoteAddress() -> remoteAddress
    java.util.Set allRemoteAddresses() -> allRemoteAddresses
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bindAddress(java.net.InetAddress) -> bindAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bindAddress(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bindAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture unbindAddress(java.net.InetAddress) -> unbindAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture unbindAddress(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> unbindAddress
be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig:
    boolean isSctpNoDelay() -> isSctpNoDelay
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setSctpNoDelay(boolean) -> setSctpNoDelay
    int getSendBufferSize() -> getSendBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setSendBufferSize(int) -> setSendBufferSize
    int getReceiveBufferSize() -> getReceiveBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    com.sun.nio.sctp.SctpStandardSocketOptions$InitMaxStreams getInitMaxStreams() -> getInitMaxStreams
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setInitMaxStreams(com.sun.nio.sctp.SctpStandardSocketOptions$InitMaxStreams) -> setInitMaxStreams
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setAutoRead(boolean) -> setAutoRead
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setAutoClose(boolean) -> setAutoClose
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelOption -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelOption:
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelOption SCTP_DISABLE_FRAGMENTS -> SCTP_DISABLE_FRAGMENTS
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelOption SCTP_EXPLICIT_COMPLETE -> SCTP_EXPLICIT_COMPLETE
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelOption SCTP_FRAGMENT_INTERLEAVE -> SCTP_FRAGMENT_INTERLEAVE
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelOption SCTP_INIT_MAXSTREAMS -> SCTP_INIT_MAXSTREAMS
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelOption SCTP_NODELAY -> SCTP_NODELAY
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelOption SCTP_PRIMARY_ADDR -> SCTP_PRIMARY_ADDR
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelOption SCTP_SET_PEER_PRIMARY_ADDR -> SCTP_SET_PEER_PRIMARY_ADDR
    49:50:void <init>(java.lang.String) -> <init>
    28:41:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpMessage -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpMessage:
    int streamIdentifier -> streamIdentifier
    int protocolIdentifier -> protocolIdentifier
    com.sun.nio.sctp.MessageInfo msgInfo -> msgInfo
    39:43:void <init>(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    51:58:void <init>(com.sun.nio.sctp.MessageInfo,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    64:64:int streamIdentifier() -> streamIdentifier
    71:71:int protocolIdentifier() -> protocolIdentifier
    79:79:com.sun.nio.sctp.MessageInfo messageInfo() -> messageInfo
    86:90:boolean isComplete() -> isComplete
    96:118:boolean equals(java.lang.Object) -> equals
    123:126:int hashCode() -> hashCode
    131:134:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpMessage copy() -> copy
    140:143:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpMessage duplicate() -> duplicate
    149:150:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpMessage retain() -> retain
    155:156:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpMessage retain(int) -> retain
    161:166:java.lang.String toString() -> toString
    26:26:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    26:26:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    26:26:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    26:26:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    26:26:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    26:26:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpNotificationHandler -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpNotificationHandler:
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannel sctpChannel -> sctpChannel
    37:42:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannel) -> <init>
    46:47:com.sun.nio.sctp.HandlerResult handleNotification(com.sun.nio.sctp.AssociationChangeNotification,java.lang.Object) -> handleNotification
    52:53:com.sun.nio.sctp.HandlerResult handleNotification(com.sun.nio.sctp.PeerAddressChangeNotification,java.lang.Object) -> handleNotification
    58:59:com.sun.nio.sctp.HandlerResult handleNotification(com.sun.nio.sctp.SendFailedNotification,java.lang.Object) -> handleNotification
    64:66:com.sun.nio.sctp.HandlerResult handleNotification(com.sun.nio.sctp.ShutdownNotification,java.lang.Object) -> handleNotification
    70:71:void fireEvent(com.sun.nio.sctp.Notification) -> fireEvent
be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannel -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig config() -> config
    java.net.InetSocketAddress localAddress() -> localAddress
    java.util.Set allLocalAddresses() -> allLocalAddresses
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bindAddress(java.net.InetAddress) -> bindAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bindAddress(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bindAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture unbindAddress(java.net.InetAddress) -> unbindAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture unbindAddress(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> unbindAddress
be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig:
    int getBacklog() -> getBacklog
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setBacklog(int) -> setBacklog
    int getSendBufferSize() -> getSendBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setSendBufferSize(int) -> setSendBufferSize
    int getReceiveBufferSize() -> getReceiveBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    com.sun.nio.sctp.SctpStandardSocketOptions$InitMaxStreams getInitMaxStreams() -> getInitMaxStreams
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setInitMaxStreams(com.sun.nio.sctp.SctpStandardSocketOptions$InitMaxStreams) -> setInitMaxStreams
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setAutoRead(boolean) -> setAutoRead
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setAutoClose(boolean) -> setAutoClose
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata METADATA -> METADATA
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig config -> config
    com.sun.nio.sctp.NotificationHandler notificationHandler -> notificationHandler
    be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator$Handle allocHandle -> allocHandle
    75:77:com.sun.nio.sctp.SctpChannel newSctpChannel() -> newSctpChannel
    85:86:void <init>() -> <init>
    92:93:void <init>(com.sun.nio.sctp.SctpChannel) -> <init>
    103:120:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel,com.sun.nio.sctp.SctpChannel) -> <init>
    124:124:java.net.InetSocketAddress localAddress() -> localAddress
    129:129:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    134:134:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannel parent() -> parent
    139:139:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    145:147:com.sun.nio.sctp.Association association() -> association
    154:161:java.util.Set allLocalAddresses() -> allLocalAddresses
    167:167:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig config() -> config
    173:180:java.util.Set allRemoteAddresses() -> allRemoteAddresses
    186:186:com.sun.nio.sctp.SctpChannel javaChannel() -> javaChannel
    191:192:boolean isActive() -> isActive
    198:205:java.net.SocketAddress localAddress0() -> localAddress0
    211:218:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    223:224:void doBind(java.net.SocketAddress) -> doBind
    228:242:boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    249:252:void doFinishConnect() -> doFinishConnect
    256:257:void doDisconnect() -> doDisconnect
    261:262:void doClose() -> doClose
    266:294:int doReadMessages(java.util.List) -> doReadMessages
    299:325:boolean doWriteMessage(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWriteMessage
    330:340:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    347:347:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bindAddress(java.net.InetAddress) -> bindAddress
    352:367:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bindAddress(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bindAddress
    372:372:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture unbindAddress(java.net.InetAddress) -> unbindAddress
    377:392:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture unbindAddress(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> unbindAddress
    62:62:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    62:62:java.net.SocketAddress remoteAddress() -> remoteAddress
    62:62:java.net.SocketAddress localAddress() -> localAddress
    62:62:be.alexandre01.dnplugin.shaded.netty.channel.Channel parent() -> parent
    62:62:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    62:62:void access$100(be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel,boolean) -> access$100
    63:65:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel$1:
    java.net.InetAddress val$localAddress -> val$localAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel this$0 -> this$0
    360:360:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    363:364:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel$2 -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel$2:
    java.net.InetAddress val$localAddress -> val$localAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel this$0 -> this$0
    385:385:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    388:389:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel$NioSctpChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel$NioSctpChannelConfig:
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel this$0 -> this$0
    396:398:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel,be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel,com.sun.nio.sctp.SctpChannel) -> <init>
    402:403:void autoReadCleared() -> autoReadCleared
    395:395:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel,be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel,com.sun.nio.sctp.SctpChannel,be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpChannel$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata METADATA -> METADATA
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig config -> config
    53:55:com.sun.nio.sctp.SctpServerChannel newSocket() -> newSocket
    66:68:void <init>() -> <init>
    72:72:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    78:85:java.util.Set allLocalAddresses() -> allLocalAddresses
    91:91:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig config() -> config
    96:96:boolean isActive() -> isActive
    101:101:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    106:106:java.net.InetSocketAddress localAddress() -> localAddress
    111:111:com.sun.nio.sctp.SctpServerChannel javaChannel() -> javaChannel
    117:124:java.net.SocketAddress localAddress0() -> localAddress0
    129:130:void doBind(java.net.SocketAddress) -> doBind
    134:135:void doClose() -> doClose
    139:144:int doReadMessages(java.util.List) -> doReadMessages
    149:149:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bindAddress(java.net.InetAddress) -> bindAddress
    154:169:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bindAddress(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bindAddress
    174:174:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture unbindAddress(java.net.InetAddress) -> unbindAddress
    179:194:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture unbindAddress(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> unbindAddress
    201:201:boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    206:206:void doFinishConnect() -> doFinishConnect
    211:211:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    216:216:void doDisconnect() -> doDisconnect
    221:221:boolean doWriteMessage(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWriteMessage
    226:226:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    47:47:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    47:47:java.net.SocketAddress remoteAddress() -> remoteAddress
    47:47:java.net.SocketAddress localAddress() -> localAddress
    47:47:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    47:47:void access$100(be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel,boolean) -> access$100
    49:49:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel$1:
    java.net.InetAddress val$localAddress -> val$localAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel this$0 -> this$0
    162:162:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    165:166:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel$2 -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel$2:
    java.net.InetAddress val$localAddress -> val$localAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel this$0 -> this$0
    187:187:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    190:191:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel$NioSctpServerChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel$NioSctpServerChannelConfig:
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel this$0 -> this$0
    230:232:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel,be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel,com.sun.nio.sctp.SctpServerChannel) -> <init>
    236:237:void autoReadCleared() -> autoReadCleared
    229:229:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel,be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel,com.sun.nio.sctp.SctpServerChannel,be.alexandre01.dnplugin.shaded.netty.channel.sctp.nio.NioSctpServerChannel$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata METADATA -> METADATA
    java.lang.String EXPECTED_TYPE -> EXPECTED_TYPE
    com.sun.nio.sctp.SctpChannel ch -> ch
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig config -> config
    java.nio.channels.Selector readSelector -> readSelector
    java.nio.channels.Selector writeSelector -> writeSelector
    java.nio.channels.Selector connectSelector -> connectSelector
    com.sun.nio.sctp.NotificationHandler notificationHandler -> notificationHandler
    be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator$Handle allocHandle -> allocHandle
    83:85:com.sun.nio.sctp.SctpChannel openChannel() -> openChannel
    93:94:void <init>() -> <init>
    102:103:void <init>(com.sun.nio.sctp.SctpChannel) -> <init>
    113:140:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel,com.sun.nio.sctp.SctpChannel) -> <init>
    144:144:java.net.InetSocketAddress localAddress() -> localAddress
    149:149:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    154:154:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannel parent() -> parent
    159:159:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    164:164:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpChannelConfig config() -> config
    169:169:boolean isOpen() -> isOpen
    174:221:int doReadMessages(java.util.List) -> doReadMessages
    226:276:void doWrite(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWrite
    280:284:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    291:293:com.sun.nio.sctp.Association association() -> association
    299:299:boolean isActive() -> isActive
    305:312:java.net.SocketAddress localAddress0() -> localAddress0
    318:325:java.util.Set allLocalAddresses() -> allLocalAddresses
    332:339:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    345:352:java.util.Set allRemoteAddresses() -> allRemoteAddresses
    358:359:void doBind(java.net.SocketAddress) -> doBind
    364:391:void doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    395:396:void doDisconnect() -> doDisconnect
    400:404:void doClose() -> doClose
    408:412:void closeSelector(java.lang.String,java.nio.channels.Selector) -> closeSelector
    416:416:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bindAddress(java.net.InetAddress) -> bindAddress
    421:436:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bindAddress(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bindAddress
    441:441:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture unbindAddress(java.net.InetAddress) -> unbindAddress
    446:461:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture unbindAddress(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> unbindAddress
    61:61:java.net.SocketAddress remoteAddress() -> remoteAddress
    61:61:java.net.SocketAddress localAddress() -> localAddress
    61:61:be.alexandre01.dnplugin.shaded.netty.channel.Channel parent() -> parent
    61:61:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    61:61:void access$100(be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel,boolean) -> access$100
    64:68:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel$1:
    java.net.InetAddress val$localAddress -> val$localAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel this$0 -> this$0
    429:429:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    432:433:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel$2 -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel$2:
    java.net.InetAddress val$localAddress -> val$localAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel this$0 -> this$0
    454:454:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    457:458:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel$OioSctpChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel$OioSctpChannelConfig:
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel this$0 -> this$0
    465:467:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel,be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel,com.sun.nio.sctp.SctpChannel) -> <init>
    471:472:void autoReadCleared() -> autoReadCleared
    464:464:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel,be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel,com.sun.nio.sctp.SctpChannel,be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpChannel$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata METADATA -> METADATA
    com.sun.nio.sctp.SctpServerChannel sch -> sch
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig config -> config
    java.nio.channels.Selector selector -> selector
    60:62:com.sun.nio.sctp.SctpServerChannel newServerSocket() -> newServerSocket
    74:75:void <init>() -> <init>
    83:107:void <init>(com.sun.nio.sctp.SctpServerChannel) -> <init>
    111:111:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    116:116:be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpServerChannelConfig config() -> config
    121:121:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    126:126:java.net.InetSocketAddress localAddress() -> localAddress
    131:131:boolean isOpen() -> isOpen
    137:144:java.net.SocketAddress localAddress0() -> localAddress0
    150:157:java.util.Set allLocalAddresses() -> allLocalAddresses
    163:163:boolean isActive() -> isActive
    168:169:void doBind(java.net.SocketAddress) -> doBind
    174:179:void doClose() -> doClose
    183:219:int doReadMessages(java.util.List) -> doReadMessages
    224:224:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bindAddress(java.net.InetAddress) -> bindAddress
    229:244:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture bindAddress(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bindAddress
    249:249:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture unbindAddress(java.net.InetAddress) -> unbindAddress
    254:269:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture unbindAddress(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> unbindAddress
    275:275:void doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    280:280:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    285:285:void doDisconnect() -> doDisconnect
    290:290:void doWrite(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWrite
    295:295:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    50:50:java.net.SocketAddress remoteAddress() -> remoteAddress
    50:50:java.net.SocketAddress localAddress() -> localAddress
    50:50:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    50:50:void access$100(be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel,boolean) -> access$100
    53:56:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel$1:
    java.net.InetAddress val$localAddress -> val$localAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel this$0 -> this$0
    237:237:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    240:241:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel$2 -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel$2:
    java.net.InetAddress val$localAddress -> val$localAddress
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel this$0 -> this$0
    262:262:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    265:266:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel$OioSctpServerChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel$OioSctpServerChannelConfig:
    be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel this$0 -> this$0
    299:301:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel,be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel,com.sun.nio.sctp.SctpServerChannel) -> <init>
    305:306:void autoReadCleared() -> autoReadCleared
    298:298:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel,be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel,com.sun.nio.sctp.SctpServerChannel,be.alexandre01.dnplugin.shaded.netty.channel.sctp.oio.OioSctpServerChannel$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.socket.ChannelInputShutdownEvent -> be.alexandre01.dnplugin.shaded.netty.channel.socket.ChannelInputShutdownEvent:
    be.alexandre01.dnplugin.shaded.netty.channel.socket.ChannelInputShutdownEvent INSTANCE -> INSTANCE
    35:35:void <init>() -> <init>
    33:33:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannel -> be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig config() -> config
    java.net.InetSocketAddress localAddress() -> localAddress
    java.net.InetSocketAddress remoteAddress() -> remoteAddress
    boolean isConnected() -> isConnected
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetAddress) -> joinGroup
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> joinGroup
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface) -> joinGroup
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> joinGroup
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> joinGroup
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> joinGroup
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress) -> leaveGroup
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> leaveGroup
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetSocketAddress,java.net.NetworkInterface) -> leaveGroup
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetSocketAddress,java.net.NetworkInterface,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> leaveGroup
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> leaveGroup
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> leaveGroup
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> block
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> block
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.InetAddress) -> block
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> block
be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig:
    int getSendBufferSize() -> getSendBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setSendBufferSize(int) -> setSendBufferSize
    int getReceiveBufferSize() -> getReceiveBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    int getTrafficClass() -> getTrafficClass
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setTrafficClass(int) -> setTrafficClass
    boolean isReuseAddress() -> isReuseAddress
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setReuseAddress(boolean) -> setReuseAddress
    boolean isBroadcast() -> isBroadcast
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setBroadcast(boolean) -> setBroadcast
    boolean isLoopbackModeDisabled() -> isLoopbackModeDisabled
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setLoopbackModeDisabled(boolean) -> setLoopbackModeDisabled
    int getTimeToLive() -> getTimeToLive
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setTimeToLive(int) -> setTimeToLive
    java.net.InetAddress getInterface() -> getInterface
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setInterface(java.net.InetAddress) -> setInterface
    java.net.NetworkInterface getNetworkInterface() -> getNetworkInterface
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setNetworkInterface(java.net.NetworkInterface) -> setNetworkInterface
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setAutoRead(boolean) -> setAutoRead
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setAutoClose(boolean) -> setAutoClose
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramPacket -> be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramPacket:
    34:35:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.net.InetSocketAddress) -> <init>
    42:43:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.net.InetSocketAddress,java.net.InetSocketAddress) -> <init>
    47:47:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramPacket copy() -> copy
    52:52:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramPacket duplicate() -> duplicate
    57:58:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramPacket retain() -> retain
    63:64:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramPacket retain(int) -> retain
    27:27:be.alexandre01.dnplugin.shaded.netty.channel.AddressedEnvelope retain(int) -> retain
    27:27:be.alexandre01.dnplugin.shaded.netty.channel.AddressedEnvelope retain() -> retain
    27:27:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    27:27:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    27:27:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    27:27:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    27:27:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    27:27:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    27:27:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf content() -> content
be.alexandre01.dnplugin.shaded.netty.channel.socket.DefaultDatagramChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.socket.DefaultDatagramChannelConfig:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator DEFAULT_RCVBUF_ALLOCATOR -> DEFAULT_RCVBUF_ALLOCATOR
    java.net.DatagramSocket javaSocket -> javaSocket
    boolean activeOnOpen -> activeOnOpen
    55:61:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannel,java.net.DatagramSocket) -> <init>
    66:66:java.util.Map getOptions() -> getOptions
    75:105:java.lang.Object getOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption) -> getOption
    111:137:boolean setOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption,java.lang.Object) -> setOption
    141:145:void setActiveOnOpen(boolean) -> setActiveOnOpen
    149:151:boolean isBroadcast() -> isBroadcast
    159:175:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setBroadcast(boolean) -> setBroadcast
    180:187:java.net.InetAddress getInterface() -> getInterface
    193:202:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setInterface(java.net.InetAddress) -> setInterface
    207:214:boolean isLoopbackModeDisabled() -> isLoopbackModeDisabled
    220:229:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setLoopbackModeDisabled(boolean) -> setLoopbackModeDisabled
    234:241:java.net.NetworkInterface getNetworkInterface() -> getNetworkInterface
    247:256:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setNetworkInterface(java.net.NetworkInterface) -> setNetworkInterface
    262:264:boolean isReuseAddress() -> isReuseAddress
    271:275:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setReuseAddress(boolean) -> setReuseAddress
    281:283:int getReceiveBufferSize() -> getReceiveBufferSize
    290:294:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    300:302:int getSendBufferSize() -> getSendBufferSize
    309:313:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setSendBufferSize(int) -> setSendBufferSize
    318:325:int getTimeToLive() -> getTimeToLive
    331:340:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setTimeToLive(int) -> setTimeToLive
    346:348:int getTrafficClass() -> getTrafficClass
    355:359:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setTrafficClass(int) -> setTrafficClass
    364:365:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    370:371:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    376:377:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    382:383:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    388:389:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    394:395:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setAutoRead(boolean) -> setAutoRead
    400:401:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setAutoClose(boolean) -> setAutoClose
    406:407:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    412:413:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    418:419:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    42:42:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    42:42:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    42:42:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    42:42:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    42:42:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    42:42:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    42:42:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    42:42:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    42:42:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    42:42:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    44:46:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.socket.DefaultServerSocketChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.socket.DefaultServerSocketChannelConfig:
    java.net.ServerSocket javaSocket -> javaSocket
    int backlog -> backlog
    39:50:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannel,java.net.ServerSocket) -> <init>
    54:54:java.util.Map getOptions() -> getOptions
    60:70:java.lang.Object getOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption) -> getOption
    75:87:boolean setOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption,java.lang.Object) -> setOption
    93:95:boolean isReuseAddress() -> isReuseAddress
    102:106:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    112:114:int getReceiveBufferSize() -> getReceiveBufferSize
    121:125:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    130:131:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    136:136:int getBacklog() -> getBacklog
    141:145:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setBacklog(int) -> setBacklog
    150:151:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    156:157:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    162:163:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    168:169:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    174:175:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    180:181:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    186:187:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    192:193:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    198:199:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
be.alexandre01.dnplugin.shaded.netty.channel.socket.DefaultSocketChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.socket.DefaultSocketChannelConfig:
    java.net.Socket javaSocket -> javaSocket
    boolean allowHalfClosure -> allowHalfClosure
    45:59:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannel,java.net.Socket) -> <init>
    63:63:java.util.Map getOptions() -> getOptions
    72:97:java.lang.Object getOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption) -> getOption
    102:124:boolean setOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption,java.lang.Object) -> setOption
    130:132:int getReceiveBufferSize() -> getReceiveBufferSize
    139:141:int getSendBufferSize() -> getSendBufferSize
    148:150:int getSoLinger() -> getSoLinger
    157:159:int getTrafficClass() -> getTrafficClass
    166:168:boolean isKeepAlive() -> isKeepAlive
    175:177:boolean isReuseAddress() -> isReuseAddress
    184:186:boolean isTcpNoDelay() -> isTcpNoDelay
    193:197:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setKeepAlive(boolean) -> setKeepAlive
    203:204:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    210:214:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    220:224:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    230:234:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setSendBufferSize(int) -> setSendBufferSize
    240:248:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setSoLinger(int) -> setSoLinger
    254:258:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setTcpNoDelay(boolean) -> setTcpNoDelay
    264:268:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setTrafficClass(int) -> setTrafficClass
    273:273:boolean isAllowHalfClosure() -> isAllowHalfClosure
    278:279:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setAllowHalfClosure(boolean) -> setAllowHalfClosure
    284:285:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    290:291:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    296:297:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    302:303:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    308:309:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    314:315:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setAutoRead(boolean) -> setAutoRead
    320:321:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setAutoClose(boolean) -> setAutoClose
    326:327:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    332:333:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    338:339:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
be.alexandre01.dnplugin.shaded.netty.channel.socket.InternetProtocolFamily -> be.alexandre01.dnplugin.shaded.netty.channel.socket.InternetProtocolFamily:
    be.alexandre01.dnplugin.shaded.netty.channel.socket.InternetProtocolFamily IPv4 -> IPv4
    be.alexandre01.dnplugin.shaded.netty.channel.socket.InternetProtocolFamily IPv6 -> IPv6
    be.alexandre01.dnplugin.shaded.netty.channel.socket.InternetProtocolFamily[] $VALUES -> $VALUES
    21:21:be.alexandre01.dnplugin.shaded.netty.channel.socket.InternetProtocolFamily[] values() -> values
    21:21:be.alexandre01.dnplugin.shaded.netty.channel.socket.InternetProtocolFamily valueOf(java.lang.String) -> valueOf
    21:21:void <init>(java.lang.String,int) -> <init>
    21:23:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannel -> be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig config() -> config
    java.net.InetSocketAddress localAddress() -> localAddress
    java.net.InetSocketAddress remoteAddress() -> remoteAddress
be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig:
    int getBacklog() -> getBacklog
    be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setBacklog(int) -> setBacklog
    boolean isReuseAddress() -> isReuseAddress
    be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    int getReceiveBufferSize() -> getReceiveBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannel -> be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannel parent() -> parent
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig config() -> config
    java.net.InetSocketAddress localAddress() -> localAddress
    java.net.InetSocketAddress remoteAddress() -> remoteAddress
    boolean isInputShutdown() -> isInputShutdown
    boolean isOutputShutdown() -> isOutputShutdown
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture shutdownOutput() -> shutdownOutput
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture shutdownOutput(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> shutdownOutput
be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig:
    boolean isTcpNoDelay() -> isTcpNoDelay
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setTcpNoDelay(boolean) -> setTcpNoDelay
    int getSoLinger() -> getSoLinger
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setSoLinger(int) -> setSoLinger
    int getSendBufferSize() -> getSendBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setSendBufferSize(int) -> setSendBufferSize
    int getReceiveBufferSize() -> getReceiveBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    boolean isKeepAlive() -> isKeepAlive
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setKeepAlive(boolean) -> setKeepAlive
    int getTrafficClass() -> getTrafficClass
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setTrafficClass(int) -> setTrafficClass
    boolean isReuseAddress() -> isReuseAddress
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    boolean isAllowHalfClosure() -> isAllowHalfClosure
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setAllowHalfClosure(boolean) -> setAllowHalfClosure
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setAutoRead(boolean) -> setAutoRead
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setAutoClose(boolean) -> setAutoClose
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioDatagramChannel -> be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioDatagramChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata METADATA -> METADATA
    java.nio.channels.spi.SelectorProvider DEFAULT_SELECTOR_PROVIDER -> DEFAULT_SELECTOR_PROVIDER
    java.lang.String EXPECTED_TYPES -> EXPECTED_TYPES
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig config -> config
    java.util.Map memberships -> memberships
    be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator$Handle allocHandle -> allocHandle
    85:87:java.nio.channels.DatagramChannel newSocket(java.nio.channels.spi.SelectorProvider) -> newSocket
    92:101:java.nio.channels.DatagramChannel newSocket(java.nio.channels.spi.SelectorProvider,be.alexandre01.dnplugin.shaded.netty.channel.socket.InternetProtocolFamily) -> newSocket
    106:109:void checkJavaVersion() -> checkJavaVersion
    115:116:void <init>() -> <init>
    123:124:void <init>(java.nio.channels.spi.SelectorProvider) -> <init>
    131:132:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.socket.InternetProtocolFamily) -> <init>
    140:141:void <init>(java.nio.channels.spi.SelectorProvider,be.alexandre01.dnplugin.shaded.netty.channel.socket.InternetProtocolFamily) -> <init>
    147:149:void <init>(java.nio.channels.DatagramChannel) -> <init>
    153:153:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    158:158:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig config() -> config
    164:165:boolean isActive() -> isActive
    172:172:boolean isConnected() -> isConnected
    177:177:java.nio.channels.DatagramChannel javaChannel() -> javaChannel
    182:182:java.net.SocketAddress localAddress0() -> localAddress0
    187:187:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    192:193:void doBind(java.net.SocketAddress) -> doBind
    198:209:boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    216:216:void doFinishConnect() -> doFinishConnect
    221:222:void doDisconnect() -> doDisconnect
    226:227:void doClose() -> doClose
    231:259:int doReadMessages(java.util.List) -> doReadMessages
    268:290:boolean doWriteMessage(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWriteMessage
    295:324:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    333:333:boolean isSingleDirectBuffer(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> isSingleDirectBuffer
    341:341:boolean continueOnWriteError() -> continueOnWriteError
    346:346:java.net.InetSocketAddress localAddress() -> localAddress
    351:351:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    356:356:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetAddress) -> joinGroup
    362:369:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> joinGroup
    375:375:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface) -> joinGroup
    382:382:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> joinGroup
    388:388:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> joinGroup
    396:433:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> joinGroup
    438:438:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress) -> leaveGroup
    444:449:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> leaveGroup
    455:455:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetSocketAddress,java.net.NetworkInterface) -> leaveGroup
    462:462:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetSocketAddress,java.net.NetworkInterface,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> leaveGroup
    468:468:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> leaveGroup
    475:508:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> leaveGroup
    518:518:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> block
    528:555:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> block
    564:564:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.InetAddress) -> block
    575:582:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> block
    587:588:void setReadPending(boolean) -> setReadPending
    60:60:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    60:60:java.net.SocketAddress remoteAddress() -> remoteAddress
    60:60:java.net.SocketAddress localAddress() -> localAddress
    60:60:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    63:65:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioDatagramChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioDatagramChannelConfig:
    java.lang.Object IP_MULTICAST_TTL -> IP_MULTICAST_TTL
    java.lang.Object IP_MULTICAST_IF -> IP_MULTICAST_IF
    java.lang.Object IP_MULTICAST_LOOP -> IP_MULTICAST_LOOP
    java.lang.reflect.Method GET_OPTION -> GET_OPTION
    java.lang.reflect.Method SET_OPTION -> SET_OPTION
    java.nio.channels.DatagramChannel javaChannel -> javaChannel
    103:105:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioDatagramChannel,java.nio.channels.DatagramChannel) -> <init>
    109:109:int getTimeToLive() -> getTimeToLive
    114:115:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setTimeToLive(int) -> setTimeToLive
    120:128:java.net.InetAddress getInterface() -> getInterface
    135:139:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setInterface(java.net.InetAddress) -> setInterface
    144:144:java.net.NetworkInterface getNetworkInterface() -> getNetworkInterface
    149:150:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setNetworkInterface(java.net.NetworkInterface) -> setNetworkInterface
    155:155:boolean isLoopbackModeDisabled() -> isLoopbackModeDisabled
    160:161:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setLoopbackModeDisabled(boolean) -> setLoopbackModeDisabled
    166:167:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig setAutoRead(boolean) -> setAutoRead
    172:173:void autoReadCleared() -> autoReadCleared
    176:182:java.lang.Object getOption0(java.lang.Object) -> getOption0
    188:197:void setOption0(java.lang.Object,java.lang.Object) -> setOption0
    34:34:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    43:98:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioServerSocketChannel -> be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioServerSocketChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata METADATA -> METADATA
    java.nio.channels.spi.SelectorProvider DEFAULT_SELECTOR_PROVIDER -> DEFAULT_SELECTOR_PROVIDER
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig config -> config
    57:59:java.nio.channels.ServerSocketChannel newSocket(java.nio.channels.spi.SelectorProvider) -> newSocket
    70:71:void <init>() -> <init>
    77:78:void <init>(java.nio.channels.spi.SelectorProvider) -> <init>
    84:86:void <init>(java.nio.channels.ServerSocketChannel) -> <init>
    90:90:java.net.InetSocketAddress localAddress() -> localAddress
    95:95:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    100:100:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig config() -> config
    105:105:boolean isActive() -> isActive
    110:110:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    115:115:java.nio.channels.ServerSocketChannel javaChannel() -> javaChannel
    120:120:java.net.SocketAddress localAddress0() -> localAddress0
    125:126:void doBind(java.net.SocketAddress) -> doBind
    130:131:void doClose() -> doClose
    135:152:int doReadMessages(java.util.List) -> doReadMessages
    159:159:boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    164:164:void doFinishConnect() -> doFinishConnect
    169:169:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    174:174:void doDisconnect() -> doDisconnect
    179:179:boolean doWriteMessage(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWriteMessage
    184:184:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    41:41:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    41:41:java.net.SocketAddress remoteAddress() -> remoteAddress
    41:41:java.net.SocketAddress localAddress() -> localAddress
    41:41:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    41:41:void access$100(be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioServerSocketChannel,boolean) -> access$100
    44:47:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioServerSocketChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioServerSocketChannel$1:
be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioServerSocketChannel$NioServerSocketChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioServerSocketChannel$NioServerSocketChannelConfig:
    be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioServerSocketChannel this$0 -> this$0
    188:190:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioServerSocketChannel,be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioServerSocketChannel,java.net.ServerSocket) -> <init>
    194:195:void autoReadCleared() -> autoReadCleared
    187:187:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioServerSocketChannel,be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioServerSocketChannel,java.net.ServerSocket,be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioServerSocketChannel$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioSocketChannel -> be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioSocketChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata METADATA -> METADATA
    java.nio.channels.spi.SelectorProvider DEFAULT_SELECTOR_PROVIDER -> DEFAULT_SELECTOR_PROVIDER
    be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig config -> config
    58:60:java.nio.channels.SocketChannel newSocket(java.nio.channels.spi.SelectorProvider) -> newSocket
    70:71:void <init>() -> <init>
    77:78:void <init>(java.nio.channels.spi.SelectorProvider) -> <init>
    84:85:void <init>(java.nio.channels.SocketChannel) -> <init>
    94:96:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel,java.nio.channels.SocketChannel) -> <init>
    100:100:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannel parent() -> parent
    105:105:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    110:110:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig config() -> config
    115:115:java.nio.channels.SocketChannel javaChannel() -> javaChannel
    120:121:boolean isActive() -> isActive
    126:126:boolean isInputShutdown() -> isInputShutdown
    131:131:java.net.InetSocketAddress localAddress() -> localAddress
    136:136:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    141:141:boolean isOutputShutdown() -> isOutputShutdown
    146:146:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture shutdownOutput() -> shutdownOutput
    151:167:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture shutdownOutput(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> shutdownOutput
    172:172:java.net.SocketAddress localAddress0() -> localAddress0
    177:177:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    182:183:void doBind(java.net.SocketAddress) -> doBind
    187:201:boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    208:211:void doFinishConnect() -> doFinishConnect
    215:216:void doDisconnect() -> doDisconnect
    220:221:void doClose() -> doClose
    225:225:int doReadBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> doReadBytes
    230:231:int doWriteBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> doWriteBytes
    236:237:long doWriteFileRegion(be.alexandre01.dnplugin.shaded.netty.channel.FileRegion) -> doWriteFileRegion
    243:309:void doWrite(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWrite
    45:45:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    45:45:java.net.SocketAddress remoteAddress() -> remoteAddress
    45:45:java.net.SocketAddress localAddress() -> localAddress
    45:45:be.alexandre01.dnplugin.shaded.netty.channel.Channel parent() -> parent
    45:45:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    45:45:void access$100(be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioSocketChannel,boolean) -> access$100
    47:48:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioSocketChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioSocketChannel$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioSocketChannel this$0 -> this$0
    160:160:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioSocketChannel,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    163:164:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig:
    be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioSocketChannel this$0 -> this$0
    312:314:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioSocketChannel,be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioSocketChannel,java.net.Socket) -> <init>
    318:319:void autoReadCleared() -> autoReadCleared
    311:311:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioSocketChannel,be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioSocketChannel,java.net.Socket,be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.NioSocketChannel$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.ProtocolFamilyConverter -> be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.ProtocolFamilyConverter:
    28:30:void <init>() -> <init>
    36:42:java.net.ProtocolFamily convert(be.alexandre01.dnplugin.shaded.netty.channel.socket.InternetProtocolFamily) -> convert
be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.ProtocolFamilyConverter$1 -> be.alexandre01.dnplugin.shaded.netty.channel.socket.nio.ProtocolFamilyConverter$1:
    int[] $SwitchMap$io$netty$channel$socket$InternetProtocolFamily -> $SwitchMap$io$netty$channel$socket$InternetProtocolFamily
    36:36:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.DefaultOioServerSocketChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.DefaultOioServerSocketChannelConfig:
    40:41:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannel,java.net.ServerSocket) -> <init>
    44:45:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannel,java.net.ServerSocket) -> <init>
    49:49:java.util.Map getOptions() -> getOptions
    56:59:java.lang.Object getOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption) -> getOption
    64:71:boolean setOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption,java.lang.Object) -> setOption
    77:81:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setSoTimeout(int) -> setSoTimeout
    87:89:int getSoTimeout() -> getSoTimeout
    95:96:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setBacklog(int) -> setBacklog
    101:102:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    107:108:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    113:114:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    119:120:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    125:126:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    131:132:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    137:138:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    143:144:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    149:150:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    155:158:void autoReadCleared() -> autoReadCleared
    162:163:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setAutoClose(boolean) -> setAutoClose
    168:169:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    174:175:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    180:181:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setBacklog(int) -> setBacklog
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.DefaultOioSocketChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.DefaultOioSocketChannelConfig:
    38:39:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannel,java.net.Socket) -> <init>
    42:43:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannel,java.net.Socket) -> <init>
    47:47:java.util.Map getOptions() -> getOptions
    54:57:java.lang.Object getOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption) -> getOption
    62:69:boolean setOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption,java.lang.Object) -> setOption
    75:79:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setSoTimeout(int) -> setSoTimeout
    85:87:int getSoTimeout() -> getSoTimeout
    93:94:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setTcpNoDelay(boolean) -> setTcpNoDelay
    99:100:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setSoLinger(int) -> setSoLinger
    105:106:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setSendBufferSize(int) -> setSendBufferSize
    111:112:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    117:118:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setKeepAlive(boolean) -> setKeepAlive
    123:124:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setTrafficClass(int) -> setTrafficClass
    129:130:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    135:136:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    141:142:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setAllowHalfClosure(boolean) -> setAllowHalfClosure
    147:148:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    153:154:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    159:160:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    165:166:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    171:172:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    177:178:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    183:186:void autoReadCleared() -> autoReadCleared
    190:191:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setAutoClose(boolean) -> setAutoClose
    196:197:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    202:203:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    208:209:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setAutoClose(boolean) -> setAutoClose
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setAutoRead(boolean) -> setAutoRead
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setAllowHalfClosure(boolean) -> setAllowHalfClosure
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setTrafficClass(int) -> setTrafficClass
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setTcpNoDelay(boolean) -> setTcpNoDelay
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setSoLinger(int) -> setSoLinger
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setSendBufferSize(int) -> setSendBufferSize
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig setKeepAlive(boolean) -> setKeepAlive
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioDatagramChannel -> be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioDatagramChannel:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata METADATA -> METADATA
    java.lang.String EXPECTED_TYPES -> EXPECTED_TYPES
    java.net.MulticastSocket socket -> socket
    be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig config -> config
    java.net.DatagramPacket tmpPacket -> tmpPacket
    be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator$Handle allocHandle -> allocHandle
    78:80:java.net.MulticastSocket newSocket() -> newSocket
    88:89:void <init>() -> <init>
    72:115:void <init>(java.net.MulticastSocket) -> <init>
    119:119:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    124:124:be.alexandre01.dnplugin.shaded.netty.channel.socket.DatagramChannelConfig config() -> config
    129:129:boolean isOpen() -> isOpen
    135:135:boolean isActive() -> isActive
    142:142:boolean isConnected() -> isConnected
    147:147:java.net.SocketAddress localAddress0() -> localAddress0
    152:152:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    157:158:void doBind(java.net.SocketAddress) -> doBind
    162:162:java.net.InetSocketAddress localAddress() -> localAddress
    167:167:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    173:190:void doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    194:195:void doDisconnect() -> doDisconnect
    199:200:void doClose() -> doClose
    204:236:int doReadMessages(java.util.List) -> doReadMessages
    244:282:void doWrite(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWrite
    286:298:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    304:304:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetAddress) -> joinGroup
    309:316:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> joinGroup
    321:321:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface) -> joinGroup
    328:335:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> joinGroup
    341:341:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> joinGroup
    348:349:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> joinGroup
    353:358:void ensureBound() -> ensureBound
    362:362:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress) -> leaveGroup
    368:373:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> leaveGroup
    379:379:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetSocketAddress,java.net.NetworkInterface) -> leaveGroup
    387:392:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetSocketAddress,java.net.NetworkInterface,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> leaveGroup
    398:398:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> leaveGroup
    405:406:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> leaveGroup
    412:412:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> block
    419:420:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> block
    426:426:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.InetAddress) -> block
    432:433:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.InetAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> block
    57:57:java.net.SocketAddress remoteAddress() -> remoteAddress
    57:57:java.net.SocketAddress localAddress() -> localAddress
    57:57:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    60:63:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannel -> be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannel:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata METADATA -> METADATA
    java.net.ServerSocket socket -> socket
    java.util.concurrent.locks.Lock shutdownLock -> shutdownLock
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig config -> config
    51:53:java.net.ServerSocket newServerSocket() -> newServerSocket
    65:66:void <init>() -> <init>
    58:100:void <init>(java.net.ServerSocket) -> <init>
    104:104:java.net.InetSocketAddress localAddress() -> localAddress
    109:109:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    114:114:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig config() -> config
    119:119:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    124:124:boolean isOpen() -> isOpen
    129:129:boolean isActive() -> isActive
    134:134:java.net.SocketAddress localAddress0() -> localAddress0
    139:140:void doBind(java.net.SocketAddress) -> doBind
    144:145:void doClose() -> doClose
    149:169:int doReadMessages(java.util.List) -> doReadMessages
    174:174:void doWrite(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWrite
    179:179:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    185:185:void doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    190:190:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    195:195:void doDisconnect() -> doDisconnect
    200:201:void setReadPending(boolean) -> setReadPending
    41:41:java.net.SocketAddress remoteAddress() -> remoteAddress
    41:41:java.net.SocketAddress localAddress() -> localAddress
    41:41:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    41:41:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannelConfig config() -> config
    44:47:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig:
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setSoTimeout(int) -> setSoTimeout
    int getSoTimeout() -> getSoTimeout
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setBacklog(int) -> setBacklog
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setAutoClose(boolean) -> setAutoClose
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioServerSocketChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannel -> be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannel:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.net.Socket socket -> socket
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig config -> config
    53:54:void <init>() -> <init>
    62:63:void <init>(java.net.Socket) -> <init>
    73:95:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel,java.net.Socket) -> <init>
    99:99:be.alexandre01.dnplugin.shaded.netty.channel.socket.ServerSocketChannel parent() -> parent
    104:104:be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig config() -> config
    109:109:boolean isOpen() -> isOpen
    114:114:boolean isActive() -> isActive
    119:119:boolean isInputShutdown() -> isInputShutdown
    124:124:boolean isOutputShutdown() -> isOutputShutdown
    129:129:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture shutdownOutput() -> shutdownOutput
    134:140:int doReadBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> doReadBytes
    146:162:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture shutdownOutput(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> shutdownOutput
    167:167:java.net.InetSocketAddress localAddress() -> localAddress
    172:172:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    177:177:java.net.SocketAddress localAddress0() -> localAddress0
    182:182:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    187:188:void doBind(java.net.SocketAddress) -> doBind
    193:211:void doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    215:216:void doDisconnect() -> doDisconnect
    220:221:void doClose() -> doClose
    225:233:boolean checkInputShutdown() -> checkInputShutdown
    238:239:void setReadPending(boolean) -> setReadPending
    40:40:java.net.SocketAddress remoteAddress() -> remoteAddress
    40:40:java.net.SocketAddress localAddress() -> localAddress
    40:40:be.alexandre01.dnplugin.shaded.netty.channel.Channel parent() -> parent
    40:40:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    40:40:be.alexandre01.dnplugin.shaded.netty.channel.socket.SocketChannelConfig config() -> config
    43:43:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannel$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$future -> val$future
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannel this$0 -> this$0
    155:155:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannel,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    158:159:void run() -> run
be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig:
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setSoTimeout(int) -> setSoTimeout
    int getSoTimeout() -> getSoTimeout
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setTcpNoDelay(boolean) -> setTcpNoDelay
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setSoLinger(int) -> setSoLinger
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setSendBufferSize(int) -> setSendBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setKeepAlive(boolean) -> setKeepAlive
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setTrafficClass(int) -> setTrafficClass
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setAllowHalfClosure(boolean) -> setAllowHalfClosure
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setAutoClose(boolean) -> setAutoClose
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    be.alexandre01.dnplugin.shaded.netty.channel.socket.oio.OioSocketChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
be.alexandre01.dnplugin.shaded.netty.channel.udt.DefaultUdtChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.udt.DefaultUdtChannelConfig:
    int K -> K
    int M -> M
    int protocolReceiveBuferSize -> protocolReceiveBuferSize
    int protocolSendBuferSize -> protocolSendBuferSize
    int systemReceiveBufferSize -> systemReceiveBufferSize
    int systemSendBuferSize -> systemSendBuferSize
    int allocatorReceiveBufferSize -> allocatorReceiveBufferSize
    int allocatorSendBufferSize -> allocatorSendBufferSize
    int soLinger -> soLinger
    boolean reuseAddress -> reuseAddress
    41:61:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannel,com.barchart.udt.nio.ChannelUDT,boolean) -> <init>
    64:80:void apply(com.barchart.udt.nio.ChannelUDT) -> apply
    84:84:int getProtocolReceiveBufferSize() -> getProtocolReceiveBufferSize
    90:114:java.lang.Object getOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption) -> getOption
    119:119:java.util.Map getOptions() -> getOptions
    127:127:int getReceiveBufferSize() -> getReceiveBufferSize
    132:132:int getSendBufferSize() -> getSendBufferSize
    137:137:int getSoLinger() -> getSoLinger
    142:142:boolean isReuseAddress() -> isReuseAddress
    147:148:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setProtocolReceiveBufferSize(int) -> setProtocolReceiveBufferSize
    153:173:boolean setOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption,java.lang.Object) -> setOption
    178:179:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    184:185:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setReuseAddress(boolean) -> setReuseAddress
    190:191:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setSendBufferSize(int) -> setSendBufferSize
    196:197:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setSoLinger(int) -> setSoLinger
    202:202:int getSystemReceiveBufferSize() -> getSystemReceiveBufferSize
    208:209:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setSystemSendBufferSize(int) -> setSystemSendBufferSize
    214:214:int getProtocolSendBufferSize() -> getProtocolSendBufferSize
    220:221:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setProtocolSendBufferSize(int) -> setProtocolSendBufferSize
    227:228:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setSystemReceiveBufferSize(int) -> setSystemReceiveBufferSize
    233:233:int getSystemSendBufferSize() -> getSystemSendBufferSize
    238:239:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    244:245:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    250:251:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    256:257:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    262:263:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    268:269:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setAutoRead(boolean) -> setAutoRead
    274:275:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setAutoClose(boolean) -> setAutoClose
    280:281:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    286:287:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    292:293:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
be.alexandre01.dnplugin.shaded.netty.channel.udt.DefaultUdtServerChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.udt.DefaultUdtServerChannelConfig:
    int backlog -> backlog
    35:43:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannel,com.barchart.udt.nio.ChannelUDT,boolean) -> <init>
    48:48:void apply(com.barchart.udt.nio.ChannelUDT) -> apply
    52:52:int getBacklog() -> getBacklog
    58:61:java.lang.Object getOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption) -> getOption
    66:66:java.util.Map getOptions() -> getOptions
    71:72:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setBacklog(int) -> setBacklog
    77:83:boolean setOption(be.alexandre01.dnplugin.shaded.netty.channel.ChannelOption,java.lang.Object) -> setOption
    89:90:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setProtocolReceiveBufferSize(int) -> setProtocolReceiveBufferSize
    96:97:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setProtocolSendBufferSize(int) -> setProtocolSendBufferSize
    103:104:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    109:110:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setReuseAddress(boolean) -> setReuseAddress
    115:116:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setSendBufferSize(int) -> setSendBufferSize
    121:122:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setSoLinger(int) -> setSoLinger
    128:129:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setSystemReceiveBufferSize(int) -> setSystemReceiveBufferSize
    135:136:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setSystemSendBufferSize(int) -> setSystemSendBufferSize
    141:142:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    147:148:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    153:154:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    159:160:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    165:166:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    171:172:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setAutoRead(boolean) -> setAutoRead
    177:178:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setAutoClose(boolean) -> setAutoClose
    183:184:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    189:190:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    195:196:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setAutoClose(boolean) -> setAutoClose
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setAutoRead(boolean) -> setAutoRead
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setSystemReceiveBufferSize(int) -> setSystemReceiveBufferSize
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setProtocolSendBufferSize(int) -> setProtocolSendBufferSize
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setSystemSendBufferSize(int) -> setSystemSendBufferSize
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setSoLinger(int) -> setSoLinger
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setSendBufferSize(int) -> setSendBufferSize
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setReuseAddress(boolean) -> setReuseAddress
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setProtocolReceiveBufferSize(int) -> setProtocolReceiveBufferSize
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    32:32:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannel -> be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig config() -> config
    java.net.InetSocketAddress localAddress() -> localAddress
    java.net.InetSocketAddress remoteAddress() -> remoteAddress
be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig:
    int getProtocolReceiveBufferSize() -> getProtocolReceiveBufferSize
    int getProtocolSendBufferSize() -> getProtocolSendBufferSize
    int getReceiveBufferSize() -> getReceiveBufferSize
    int getSendBufferSize() -> getSendBufferSize
    int getSoLinger() -> getSoLinger
    int getSystemReceiveBufferSize() -> getSystemReceiveBufferSize
    int getSystemSendBufferSize() -> getSystemSendBufferSize
    boolean isReuseAddress() -> isReuseAddress
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setAutoRead(boolean) -> setAutoRead
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setAutoClose(boolean) -> setAutoClose
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setProtocolReceiveBufferSize(int) -> setProtocolReceiveBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setProtocolSendBufferSize(int) -> setProtocolSendBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setReuseAddress(boolean) -> setReuseAddress
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setSendBufferSize(int) -> setSendBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setSoLinger(int) -> setSoLinger
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setSystemReceiveBufferSize(int) -> setSystemReceiveBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig setSystemSendBufferSize(int) -> setSystemSendBufferSize
be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelOption -> be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelOption:
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelOption PROTOCOL_RECEIVE_BUFFER_SIZE -> PROTOCOL_RECEIVE_BUFFER_SIZE
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelOption PROTOCOL_SEND_BUFFER_SIZE -> PROTOCOL_SEND_BUFFER_SIZE
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelOption SYSTEM_RECEIVE_BUFFER_SIZE -> SYSTEM_RECEIVE_BUFFER_SIZE
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelOption SYSTEM_SEND_BUFFER_SIZE -> SYSTEM_SEND_BUFFER_SIZE
    52:53:void <init>(java.lang.String) -> <init>
    29:47:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtMessage -> be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtMessage:
    31:32:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    36:36:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtMessage copy() -> copy
    41:41:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtMessage duplicate() -> duplicate
    46:47:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtMessage retain() -> retain
    52:53:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtMessage retain(int) -> retain
    28:28:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    28:28:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    28:28:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    28:28:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    28:28:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    28:28:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannel -> be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannel:
be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig -> be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig:
    int getBacklog() -> getBacklog
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setBacklog(int) -> setBacklog
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setAllocator(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> setAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setRecvByteBufAllocator(be.alexandre01.dnplugin.shaded.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setAutoRead(boolean) -> setAutoRead
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setAutoClose(boolean) -> setAutoClose
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setProtocolReceiveBufferSize(int) -> setProtocolReceiveBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setProtocolSendBufferSize(int) -> setProtocolSendBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setReuseAddress(boolean) -> setReuseAddress
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setSendBufferSize(int) -> setSendBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setSoLinger(int) -> setSoLinger
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setSystemReceiveBufferSize(int) -> setSystemReceiveBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setSystemSendBufferSize(int) -> setSystemSendBufferSize
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig setMessageSizeEstimator(be.alexandre01.dnplugin.shaded.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtAcceptorChannel -> be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtAcceptorChannel:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig config -> config
    45:59:void <init>(com.barchart.udt.nio.ServerSocketChannelUDT) -> <init>
    62:63:void <init>(com.barchart.udt.TypeUDT) -> <init>
    67:67:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtServerChannelConfig config() -> config
    72:73:void doBind(java.net.SocketAddress) -> doBind
    77:78:void doClose() -> doClose
    83:83:boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    88:88:void doDisconnect() -> doDisconnect
    93:93:void doFinishConnect() -> doFinishConnect
    98:98:boolean doWriteMessage(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWriteMessage
    103:103:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    108:108:boolean isActive() -> isActive
    113:113:com.barchart.udt.nio.ServerSocketChannelUDT javaChannel() -> javaChannel
    118:118:java.net.SocketAddress localAddress0() -> localAddress0
    122:122:java.net.InetSocketAddress localAddress() -> localAddress
    127:127:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    132:132:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    37:37:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    37:37:java.net.SocketAddress remoteAddress() -> remoteAddress
    37:37:java.net.SocketAddress localAddress() -> localAddress
    37:37:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    37:37:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig config() -> config
    39:39:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtByteAcceptorChannel -> be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtByteAcceptorChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata METADATA -> METADATA
    32:33:void <init>() -> <init>
    37:42:int doReadMessages(java.util.List) -> doReadMessages
    48:48:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    29:29:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtByteConnectorChannel -> be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtByteConnectorChannel:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata METADATA -> METADATA
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig config -> config
    50:51:void <init>() -> <init>
    54:76:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel,com.barchart.udt.nio.SocketChannelUDT) -> <init>
    79:80:void <init>(com.barchart.udt.nio.SocketChannelUDT) -> <init>
    83:84:void <init>(com.barchart.udt.TypeUDT) -> <init>
    88:88:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig config() -> config
    93:94:void doBind(java.net.SocketAddress) -> doBind
    98:99:void doClose() -> doClose
    104:116:boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    123:124:void doDisconnect() -> doDisconnect
    128:135:void doFinishConnect() -> doFinishConnect
    139:139:int doReadBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> doReadBytes
    144:145:int doWriteBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> doWriteBytes
    150:150:long doWriteFileRegion(be.alexandre01.dnplugin.shaded.netty.channel.FileRegion) -> doWriteFileRegion
    155:156:boolean isActive() -> isActive
    161:161:com.barchart.udt.nio.SocketChannelUDT javaChannel() -> javaChannel
    166:166:java.net.SocketAddress localAddress0() -> localAddress0
    171:171:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    176:176:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    181:181:java.net.InetSocketAddress localAddress() -> localAddress
    186:186:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    40:40:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    40:40:java.net.SocketAddress remoteAddress() -> remoteAddress
    40:40:java.net.SocketAddress localAddress() -> localAddress
    40:40:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    42:45:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtByteConnectorChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtByteConnectorChannel$1:
    int[] $SwitchMap$com$barchart$udt$StatusUDT -> $SwitchMap$com$barchart$udt$StatusUDT
    57:57:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtByteRendezvousChannel -> be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtByteRendezvousChannel:
    26:27:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtMessageAcceptorChannel -> be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtMessageAcceptorChannel:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata METADATA -> METADATA
    32:33:void <init>() -> <init>
    37:42:int doReadMessages(java.util.List) -> doReadMessages
    48:48:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    29:29:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtMessageConnectorChannel -> be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtMessageConnectorChannel:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata METADATA -> METADATA
    java.lang.String EXPECTED_TYPE -> EXPECTED_TYPE
    be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig config -> config
    56:57:void <init>() -> <init>
    60:82:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.Channel,com.barchart.udt.nio.SocketChannelUDT) -> <init>
    85:86:void <init>(com.barchart.udt.nio.SocketChannelUDT) -> <init>
    89:90:void <init>(com.barchart.udt.TypeUDT) -> <init>
    94:94:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannelConfig config() -> config
    99:100:void doBind(java.net.SocketAddress) -> doBind
    104:105:void doClose() -> doClose
    110:122:boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    129:130:void doDisconnect() -> doDisconnect
    134:141:void doFinishConnect() -> doFinishConnect
    146:168:int doReadMessages(java.util.List) -> doReadMessages
    174:198:boolean doWriteMessage(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelOutboundBuffer) -> doWriteMessage
    203:207:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    213:214:boolean isActive() -> isActive
    219:219:com.barchart.udt.nio.SocketChannelUDT javaChannel() -> javaChannel
    224:224:java.net.SocketAddress localAddress0() -> localAddress0
    229:229:be.alexandre01.dnplugin.shaded.netty.channel.ChannelMetadata metadata() -> metadata
    234:234:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    239:239:java.net.InetSocketAddress localAddress() -> localAddress
    244:244:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    45:45:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    45:45:java.net.SocketAddress remoteAddress() -> remoteAddress
    45:45:java.net.SocketAddress localAddress() -> localAddress
    45:45:be.alexandre01.dnplugin.shaded.netty.channel.ChannelConfig config() -> config
    47:51:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtMessageConnectorChannel$1 -> be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtMessageConnectorChannel$1:
    int[] $SwitchMap$com$barchart$udt$StatusUDT -> $SwitchMap$com$barchart$udt$StatusUDT
    63:63:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtMessageRendezvousChannel -> be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtMessageRendezvousChannel:
    30:31:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtProvider -> be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtProvider:
    be.alexandre01.dnplugin.shaded.netty.bootstrap.ChannelFactory BYTE_ACCEPTOR -> BYTE_ACCEPTOR
    be.alexandre01.dnplugin.shaded.netty.bootstrap.ChannelFactory BYTE_CONNECTOR -> BYTE_CONNECTOR
    java.nio.channels.spi.SelectorProvider BYTE_PROVIDER -> BYTE_PROVIDER
    be.alexandre01.dnplugin.shaded.netty.bootstrap.ChannelFactory BYTE_RENDEZVOUS -> BYTE_RENDEZVOUS
    be.alexandre01.dnplugin.shaded.netty.bootstrap.ChannelFactory MESSAGE_ACCEPTOR -> MESSAGE_ACCEPTOR
    be.alexandre01.dnplugin.shaded.netty.bootstrap.ChannelFactory MESSAGE_CONNECTOR -> MESSAGE_CONNECTOR
    java.nio.channels.spi.SelectorProvider MESSAGE_PROVIDER -> MESSAGE_PROVIDER
    be.alexandre01.dnplugin.shaded.netty.bootstrap.ChannelFactory MESSAGE_RENDEZVOUS -> MESSAGE_RENDEZVOUS
    com.barchart.udt.nio.KindUDT kind -> kind
    com.barchart.udt.TypeUDT type -> type
    106:125:com.barchart.udt.nio.ChannelUDT channelUDT(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> channelUDT
    134:136:com.barchart.udt.nio.ServerSocketChannelUDT newAcceptorChannelUDT(com.barchart.udt.TypeUDT) -> newAcceptorChannelUDT
    145:147:com.barchart.udt.nio.SocketChannelUDT newConnectorChannelUDT(com.barchart.udt.TypeUDT) -> newConnectorChannelUDT
    157:159:com.barchart.udt.nio.RendezvousChannelUDT newRendezvousChannelUDT(com.barchart.udt.TypeUDT) -> newRendezvousChannelUDT
    170:174:com.barchart.udt.SocketUDT socketUDT(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> socketUDT
    184:187:void <init>(com.barchart.udt.TypeUDT,com.barchart.udt.nio.KindUDT) -> <init>
    193:193:com.barchart.udt.nio.KindUDT kind() -> kind
    203:232:be.alexandre01.dnplugin.shaded.netty.channel.udt.UdtChannel newChannel() -> newChannel
    240:240:com.barchart.udt.TypeUDT type() -> type
    42:42:be.alexandre01.dnplugin.shaded.netty.channel.Channel newChannel() -> newChannel
    48:95:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtProvider$1 -> be.alexandre01.dnplugin.shaded.netty.channel.udt.nio.NioUdtProvider$1:
    int[] $SwitchMap$com$barchart$udt$TypeUDT -> $SwitchMap$com$barchart$udt$TypeUDT
    int[] $SwitchMap$com$barchart$udt$nio$KindUDT -> $SwitchMap$com$barchart$udt$nio$KindUDT
    203:205:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.ByteToMessageCodec -> be.alexandre01.dnplugin.shaded.netty.handler.codec.ByteToMessageCodec:
    be.alexandre01.dnplugin.shaded.netty.util.internal.TypeParameterMatcher outboundMsgMatcher -> outboundMsgMatcher
    be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToByteEncoder encoder -> encoder
    be.alexandre01.dnplugin.shaded.netty.handler.codec.ByteToMessageDecoder decoder -> decoder
    55:56:void <init>() -> <init>
    62:63:void <init>(java.lang.Class) -> <init>
    39:75:void <init>(boolean) -> <init>
    39:89:void <init>(java.lang.Class,boolean) -> <init>
    92:95:void checkForSharableAnnotation() -> checkForSharableAnnotation
    103:103:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    108:109:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    113:114:void write(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    130:131:void decodeLast(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decodeLast
be.alexandre01.dnplugin.shaded.netty.handler.codec.ByteToMessageCodec$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.ByteToMessageCodec$1:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.ByteToMessageCodec this$0 -> this$0
    39:39:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.ByteToMessageCodec) -> <init>
    42:43:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    47:48:void decodeLast(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decodeLast
be.alexandre01.dnplugin.shaded.netty.handler.codec.ByteToMessageCodec$Encoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.ByteToMessageCodec$Encoder:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.ByteToMessageCodec this$0 -> this$0
    134:136:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.ByteToMessageCodec,boolean) -> <init>
    140:140:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    145:146:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
be.alexandre01.dnplugin.shaded.netty.handler.codec.ByteToMessageDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.ByteToMessageDecoder:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf cumulation -> cumulation
    boolean singleDecode -> singleDecode
    boolean decodeWasNull -> decodeWasNull
    boolean first -> first
    54:58:void <init>() -> <init>
    67:68:void setSingleDecode(boolean) -> setSingleDecode
    77:77:boolean isSingleDecode() -> isSingleDecode
    87:87:int actualReadableBytes() -> actualReadableBytes
    96:99:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf internalBuffer() -> internalBuffer
    105:117:void handlerRemoved(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerRemoved
    123:123:void handlerRemoved0(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerRemoved0
    127:170:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    173:177:void expandCumulation(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,int) -> expandCumulation
    181:198:void channelReadComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelReadComplete
    202:234:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    246:282:void callDecode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> callDecode
    void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    304:305:void decodeLast(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decodeLast
be.alexandre01.dnplugin.shaded.netty.handler.codec.CodecException -> be.alexandre01.dnplugin.shaded.netty.handler.codec.CodecException:
    long serialVersionUID -> serialVersionUID
    28:29:void <init>() -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    42:43:void <init>(java.lang.String) -> <init>
    49:50:void <init>(java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.CorruptedFrameException -> be.alexandre01.dnplugin.shaded.netty.handler.codec.CorruptedFrameException:
    long serialVersionUID -> serialVersionUID
    29:30:void <init>() -> <init>
    36:37:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    43:44:void <init>(java.lang.String) -> <init>
    50:51:void <init>(java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderException -> be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderException:
    long serialVersionUID -> serialVersionUID
    28:29:void <init>() -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    42:43:void <init>(java.lang.String) -> <init>
    49:50:void <init>(java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult -> be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult:
    be.alexandre01.dnplugin.shaded.netty.util.Signal SIGNAL_UNFINISHED -> SIGNAL_UNFINISHED
    be.alexandre01.dnplugin.shaded.netty.util.Signal SIGNAL_SUCCESS -> SIGNAL_SUCCESS
    be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult UNFINISHED -> UNFINISHED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult SUCCESS -> SUCCESS
    java.lang.Throwable cause -> cause
    29:32:be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult failure(java.lang.Throwable) -> failure
    37:42:void <init>(java.lang.Throwable) -> <init>
    45:45:boolean isFinished() -> isFinished
    49:49:boolean isSuccess() -> isSuccess
    53:53:boolean isFailure() -> isFailure
    57:60:java.lang.Throwable cause() -> cause
    66:79:java.lang.String toString() -> toString
    22:26:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.DelimiterBasedFrameDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.DelimiterBasedFrameDecoder:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf[] delimiters -> delimiters
    int maxFrameLength -> maxFrameLength
    boolean stripDelimiter -> stripDelimiter
    boolean failFast -> failFast
    boolean discardingTooLongFrame -> discardingTooLongFrame
    int tooLongFrameLength -> tooLongFrameLength
    be.alexandre01.dnplugin.shaded.netty.handler.codec.LineBasedFrameDecoder lineBasedDecoder -> lineBasedDecoder
    78:79:void <init>(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    93:94:void <init>(int,boolean,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    116:118:void <init>(int,boolean,boolean,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    129:130:void <init>(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf[]) -> <init>
    144:145:void <init>(int,boolean,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf[]) -> <init>
    165:189:void <init>(int,boolean,boolean,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf[]) -> <init>
    193:202:boolean isLineBased(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf[]) -> isLineBased
    211:211:boolean isSubclass() -> isSubclass
    216:220:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    231:294:java.lang.Object decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> decode
    299:304:void fail(long) -> fail
    316:336:int indexOf(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> indexOf
    340:346:void validateDelimiter(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> validateDelimiter
    349:354:void validateMaxFrameLength(int) -> validateMaxFrameLength
be.alexandre01.dnplugin.shaded.netty.handler.codec.Delimiters -> be.alexandre01.dnplugin.shaded.netty.handler.codec.Delimiters:
    31:31:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf[] nulDelimiter() -> nulDelimiter
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf[] lineDelimiter() -> lineDelimiter
    46:48:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.EncoderException -> be.alexandre01.dnplugin.shaded.netty.handler.codec.EncoderException:
    long serialVersionUID -> serialVersionUID
    28:29:void <init>() -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    42:43:void <init>(java.lang.String) -> <init>
    49:50:void <init>(java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.FixedLengthFrameDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.FixedLengthFrameDecoder:
    int frameLength -> frameLength
    48:54:void <init>(int) -> <init>
    58:62:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    74:77:java.lang.Object decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.LengthFieldBasedFrameDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.LengthFieldBasedFrameDecoder:
    java.nio.ByteOrder byteOrder -> byteOrder
    int maxFrameLength -> maxFrameLength
    int lengthFieldOffset -> lengthFieldOffset
    int lengthFieldLength -> lengthFieldLength
    int lengthFieldEndOffset -> lengthFieldEndOffset
    int lengthAdjustment -> lengthAdjustment
    int initialBytesToStrip -> initialBytesToStrip
    boolean failFast -> failFast
    boolean discardingTooLongFrame -> discardingTooLongFrame
    long tooLongFrameLength -> tooLongFrameLength
    long bytesToDiscard -> bytesToDiscard
    213:214:void <init>(int,int,int) -> <init>
    236:240:void <init>(int,int,int,int,int) -> <init>
    268:271:void <init>(int,int,int,int,int,boolean) -> <init>
    300:339:void <init>(java.nio.ByteOrder,int,int,int,int,int,boolean) -> <init>
    343:347:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    358:426:java.lang.Object decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> decode
    438:460:long getUnadjustedFrameLength(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int,java.nio.ByteOrder) -> getUnadjustedFrameLength
    464:480:void failIfNecessary(boolean) -> failIfNecessary
    494:496:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf extractFrame(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> extractFrame
    500:505:void fail(long) -> fail
be.alexandre01.dnplugin.shaded.netty.handler.codec.LengthFieldPrepender -> be.alexandre01.dnplugin.shaded.netty.handler.codec.LengthFieldPrepender:
    int lengthFieldLength -> lengthFieldLength
    boolean lengthIncludesLengthFieldLength -> lengthIncludesLengthFieldLength
    int lengthAdjustment -> lengthAdjustment
    66:67:void <init>(int) -> <init>
    83:84:void <init>(int,boolean) -> <init>
    98:99:void <init>(int,int) -> <init>
    116:128:void <init>(int,int,boolean) -> <init>
    132:175:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    49:49:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
be.alexandre01.dnplugin.shaded.netty.handler.codec.LineBasedFrameDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.LineBasedFrameDecoder:
    int maxLength -> maxLength
    boolean failFast -> failFast
    boolean stripDelimiter -> stripDelimiter
    boolean discarding -> discarding
    int discardedBytes -> discardedBytes
    48:49:void <init>(int) -> <init>
    66:70:void <init>(int,boolean,boolean) -> <init>
    74:78:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    89:136:java.lang.Object decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> decode
    141:142:void fail(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,int) -> fail
    145:148:void fail(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.String) -> fail
    155:164:int findEndOfLine(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> findEndOfLine
be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToByteEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToByteEncoder:
    be.alexandre01.dnplugin.shaded.netty.util.internal.TypeParameterMatcher matcher -> matcher
    boolean preferDirect -> preferDirect
    55:56:void <init>() -> <init>
    62:63:void <init>(java.lang.Class) -> <init>
    72:75:void <init>(boolean) -> <init>
    85:88:void <init>(java.lang.Class,boolean) -> <init>
    95:95:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    100:131:void write(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    139:142:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf allocateBuffer(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,boolean) -> allocateBuffer
    void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToMessageCodec -> be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToMessageCodec:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToMessageEncoder encoder -> encoder
    be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToMessageDecoder decoder -> decoder
    be.alexandre01.dnplugin.shaded.netty.util.internal.TypeParameterMatcher inboundMsgMatcher -> inboundMsgMatcher
    be.alexandre01.dnplugin.shaded.netty.util.internal.TypeParameterMatcher outboundMsgMatcher -> outboundMsgMatcher
    57:95:void <init>() -> <init>
    57:107:void <init>(java.lang.Class,java.lang.Class) -> <init>
    111:112:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    116:117:void write(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    125:125:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    134:134:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToMessageCodec$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToMessageCodec$1:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToMessageCodec this$0 -> this$0
    57:57:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToMessageCodec) -> <init>
    61:61:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    67:68:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToMessageCodec$2 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToMessageCodec$2:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToMessageCodec this$0 -> this$0
    71:71:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToMessageCodec) -> <init>
    75:75:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    81:82:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToMessageDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToMessageDecoder:
    be.alexandre01.dnplugin.shaded.netty.util.internal.TypeParameterMatcher matcher -> matcher
    60:62:void <init>() -> <init>
    69:71:void <init>(java.lang.Class) -> <init>
    78:78:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    83:107:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToMessageEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.MessageToMessageEncoder:
    be.alexandre01.dnplugin.shaded.netty.util.internal.TypeParameterMatcher matcher -> matcher
    59:61:void <init>() -> <init>
    68:70:void <init>(java.lang.Class) -> <init>
    77:77:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    82:132:void write(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
be.alexandre01.dnplugin.shaded.netty.handler.codec.PrematureChannelClosureException -> be.alexandre01.dnplugin.shaded.netty.handler.codec.PrematureChannelClosureException:
    long serialVersionUID -> serialVersionUID
    32:32:void <init>() -> <init>
    38:39:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    45:46:void <init>(java.lang.String) -> <init>
    52:53:void <init>(java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.ReplayingDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.ReplayingDecoder:
    be.alexandre01.dnplugin.shaded.netty.util.Signal REPLAY -> REPLAY
    be.alexandre01.dnplugin.shaded.netty.handler.codec.ReplayingDecoderBuffer replayable -> replayable
    java.lang.Object state -> state
    int checkpoint -> checkpoint
    280:281:void <init>() -> <init>
    272:288:void <init>(java.lang.Object) -> <init>
    294:295:void checkpoint() -> checkpoint
    302:304:void checkpoint(java.lang.Object) -> checkpoint
    311:311:java.lang.Object state() -> state
    319:321:java.lang.Object state(java.lang.Object) -> state
    326:358:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    362:427:void callDecode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> callDecode
    270:270:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.ReplayingDecoderBuffer -> be.alexandre01.dnplugin.shaded.netty.handler.codec.ReplayingDecoderBuffer:
    be.alexandre01.dnplugin.shaded.netty.util.Signal REPLAY -> REPLAY
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer -> buffer
    boolean terminated -> terminated
    be.alexandre01.dnplugin.shaded.netty.buffer.SwappedByteBuf swapped -> swapped
    be.alexandre01.dnplugin.shaded.netty.handler.codec.ReplayingDecoderBuffer EMPTY_BUFFER -> EMPTY_BUFFER
    51:51:void <init>() -> <init>
    53:55:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    58:59:void setCumulation(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setCumulation
    62:63:void terminate() -> terminate
    67:70:int capacity() -> capacity
    76:77:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf capacity(int) -> capacity
    82:82:int maxCapacity() -> maxCapacity
    87:87:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc() -> alloc
    92:92:boolean isDirect() -> isDirect
    97:97:boolean hasArray() -> hasArray
    102:102:byte[] array() -> array
    107:107:int arrayOffset() -> arrayOffset
    112:112:boolean hasMemoryAddress() -> hasMemoryAddress
    117:117:long memoryAddress() -> memoryAddress
    122:123:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf clear() -> clear
    128:128:boolean equals(java.lang.Object) -> equals
    133:134:int compareTo(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> compareTo
    139:140:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy() -> copy
    145:146:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf copy(int,int) -> copy
    151:152:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    157:158:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    163:164:int ensureWritable(int,boolean) -> ensureWritable
    169:170:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf duplicate() -> duplicate
    175:176:boolean getBoolean(int) -> getBoolean
    181:182:byte getByte(int) -> getByte
    187:188:short getUnsignedByte(int) -> getUnsignedByte
    193:195:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    200:202:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    207:208:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    213:215:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> getBytes
    220:221:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> getBytes
    226:227:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> getBytes
    232:233:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    238:239:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    244:245:int getInt(int) -> getInt
    250:251:long getUnsignedInt(int) -> getUnsignedInt
    256:257:long getLong(int) -> getLong
    262:263:int getMedium(int) -> getMedium
    268:269:int getUnsignedMedium(int) -> getUnsignedMedium
    274:275:short getShort(int) -> getShort
    280:281:int getUnsignedShort(int) -> getUnsignedShort
    286:287:char getChar(int) -> getChar
    292:293:float getFloat(int) -> getFloat
    298:299:double getDouble(int) -> getDouble
    304:305:int hashCode() -> hashCode
    310:318:int indexOf(int,int,byte) -> indexOf
    323:327:int bytesBefore(byte) -> bytesBefore
    332:333:int bytesBefore(int,byte) -> bytesBefore
    338:351:int bytesBefore(int,int,byte) -> bytesBefore
    357:361:int forEachByte(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByte
    367:380:int forEachByte(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByte
    386:390:int forEachByteDesc(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteDesc
    396:400:int forEachByteDesc(int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufProcessor) -> forEachByteDesc
    405:406:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    411:412:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf markWriterIndex() -> markWriterIndex
    417:417:java.nio.ByteOrder order() -> order
    422:433:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    438:438:boolean isReadable() -> isReadable
    443:443:boolean isReadable(int) -> isReadable
    448:451:int readableBytes() -> readableBytes
    457:458:boolean readBoolean() -> readBoolean
    463:464:byte readByte() -> readByte
    469:470:short readUnsignedByte() -> readUnsignedByte
    475:477:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    482:484:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    489:490:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    495:497:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> readBytes
    502:503:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> readBytes
    508:510:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readBytes
    515:516:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    521:522:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(int) -> readBytes
    527:528:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readSlice(int) -> readSlice
    533:534:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    539:539:int readerIndex() -> readerIndex
    544:545:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    550:551:int readInt() -> readInt
    556:557:long readUnsignedInt() -> readUnsignedInt
    562:563:long readLong() -> readLong
    568:569:int readMedium() -> readMedium
    574:575:int readUnsignedMedium() -> readUnsignedMedium
    580:581:short readShort() -> readShort
    586:587:int readUnsignedShort() -> readUnsignedShort
    592:593:char readChar() -> readChar
    598:599:float readFloat() -> readFloat
    604:605:double readDouble() -> readDouble
    610:611:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    616:617:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf resetWriterIndex() -> resetWriterIndex
    622:623:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBoolean(int,boolean) -> setBoolean
    628:629:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setByte(int,int) -> setByte
    634:635:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    640:641:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    646:647:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    652:653:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setBytes
    658:659:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> setBytes
    664:665:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setBytes(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setBytes
    670:671:int setBytes(int,java.io.InputStream,int) -> setBytes
    676:677:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setZero(int,int) -> setZero
    682:683:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    688:689:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    694:695:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setInt(int,int) -> setInt
    700:701:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setLong(int,long) -> setLong
    706:707:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    712:713:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setShort(int,int) -> setShort
    718:719:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setChar(int,int) -> setChar
    724:725:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    730:731:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    736:738:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    743:744:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice() -> slice
    749:750:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf slice(int,int) -> slice
    755:755:int nioBufferCount() -> nioBufferCount
    760:761:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    766:767:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    772:773:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    778:779:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    784:785:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    790:791:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    796:797:java.lang.String toString(java.nio.charset.Charset) -> toString
    802:802:java.lang.String toString() -> toString
    813:813:boolean isWritable() -> isWritable
    818:818:boolean isWritable(int) -> isWritable
    823:823:int writableBytes() -> writableBytes
    828:828:int maxWritableBytes() -> maxWritableBytes
    833:834:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBoolean(boolean) -> writeBoolean
    839:840:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeByte(int) -> writeByte
    845:846:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    851:852:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    857:858:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    863:864:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> writeBytes
    869:870:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> writeBytes
    875:876:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeBytes(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> writeBytes
    881:882:int writeBytes(java.io.InputStream,int) -> writeBytes
    887:888:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    893:894:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeInt(int) -> writeInt
    899:900:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeLong(long) -> writeLong
    905:906:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    911:912:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeZero(int) -> writeZero
    917:917:int writerIndex() -> writerIndex
    922:923:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    928:929:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeShort(int) -> writeShort
    934:935:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeChar(int) -> writeChar
    940:941:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    946:947:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    951:954:void checkIndex(int,int) -> checkIndex
    957:960:void checkReadableBytes(int) -> checkReadableBytes
    964:965:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    970:970:int refCnt() -> refCnt
    975:976:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain() -> retain
    981:982:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf retain(int) -> retain
    987:988:boolean release() -> release
    993:994:boolean release(int) -> release
    999:1000:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf unwrap() -> unwrap
    1004:1004:void reject() -> reject
    37:37:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    37:37:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    37:37:int compareTo(java.lang.Object) -> compareTo
    39:49:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.TooLongFrameException -> be.alexandre01.dnplugin.shaded.netty.handler.codec.TooLongFrameException:
    long serialVersionUID -> serialVersionUID
    29:30:void <init>() -> <init>
    36:37:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    43:44:void <init>(java.lang.String) -> <init>
    50:51:void <init>(java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.UnsupportedMessageTypeException -> be.alexandre01.dnplugin.shaded.netty.handler.codec.UnsupportedMessageTypeException:
    long serialVersionUID -> serialVersionUID
    27:29:void <init>(java.lang.Object,java.lang.Class[]) -> <init>
    31:31:void <init>() -> <init>
    34:35:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    38:39:void <init>(java.lang.String) -> <init>
    42:43:void <init>(java.lang.Throwable) -> <init>
    47:61:java.lang.String message(java.lang.String,java.lang.Class[]) -> message
be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64:
    int MAX_LINE_LENGTH -> MAX_LINE_LENGTH
    byte EQUALS_SIGN -> EQUALS_SIGN
    byte NEW_LINE -> NEW_LINE
    byte WHITE_SPACE_ENC -> WHITE_SPACE_ENC
    byte EQUALS_SIGN_ENC -> EQUALS_SIGN_ENC
    49:52:byte[] alphabet(be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect) -> alphabet
    56:59:byte[] decodabet(be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect) -> decodabet
    63:66:boolean breakLines(be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect) -> breakLines
    70:70:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    74:74:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect) -> encode
    78:78:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,boolean) -> encode
    83:89:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,boolean,be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect) -> encode
    93:93:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> encode
    97:97:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int,be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect) -> encode
    102:102:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int,boolean) -> encode
    108:140:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int,boolean,be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect) -> encode
    147:185:void encode3to4(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect) -> encode3to4
    188:188:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf decode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> decode
    193:199:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf decode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect) -> decode
    204:204:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf decode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> decode
    210:253:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf decode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int,be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect) -> decode
    260:296:int decode4to3(byte[],int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect) -> decode4to3
    300:302:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Decoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Decoder:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect dialect -> dialect
    52:53:void <init>() -> <init>
    55:60:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect) -> <init>
    64:65:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    46:46:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect -> be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect STANDARD -> STANDARD
    be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect URL_SAFE -> URL_SAFE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect ORDERED -> ORDERED
    byte[] alphabet -> alphabet
    byte[] decodabet -> decodabet
    boolean breakLinesByDefault -> breakLinesByDefault
    be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect[] $VALUES -> $VALUES
    29:29:be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect[] values() -> values
    29:29:be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect valueOf(java.lang.String) -> valueOf
    202:206:void <init>(java.lang.String,int,byte[],byte[],boolean) -> <init>
    29:145:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Encoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Encoder:
    boolean breakLines -> breakLines
    be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect dialect -> dialect
    49:50:void <init>() -> <init>
    53:54:void <init>(boolean) -> <init>
    56:63:void <init>(boolean,be.alexandre01.dnplugin.shaded.netty.handler.codec.base64.Base64Dialect) -> <init>
    67:68:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> encode
    42:42:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
be.alexandre01.dnplugin.shaded.netty.handler.codec.bytes.ByteArrayDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.bytes.ByteArrayDecoder:
    51:51:void <init>() -> <init>
    55:59:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    51:51:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.bytes.ByteArrayEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.bytes.ByteArrayEncoder:
    54:54:void <init>() -> <init>
    57:58:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,byte[],java.util.List) -> encode
    53:53:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.CompressionException -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.CompressionException:
    long serialVersionUID -> serialVersionUID
    30:31:void <init>() -> <init>
    37:38:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    44:45:void <init>(java.lang.String) -> <init>
    51:52:void <init>(java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Crc32c -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Crc32c:
    int[] CRC_TABLE -> CRC_TABLE
    long LONG_MASK -> LONG_MASK
    int BYTE_MASK -> BYTE_MASK
    int crc -> crc
    28:99:void <init>() -> <init>
    103:104:void update(int) -> update
    108:111:void update(byte[],int,int) -> update
    115:115:long getValue() -> getValue
    120:121:void reset() -> reset
    124:124:int crc32c(int,int) -> crc32c
    29:29:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.DecompressionException -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.DecompressionException:
    long serialVersionUID -> serialVersionUID
    30:31:void <init>() -> <init>
    37:38:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    44:45:void <init>(java.lang.String) -> <init>
    51:52:void <init>(java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JZlibDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JZlibDecoder:
    com.jcraft.jzlib.Inflater z -> z
    byte[] dictionary -> dictionary
    boolean finished -> finished
    37:38:void <init>() -> <init>
    27:54:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper) -> <init>
    27:74:void <init>(byte[]) -> <init>
    82:82:boolean isClosed() -> isClosed
    87:173:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JZlibEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JZlibEncoder:
    int wrapperOverhead -> wrapperOverhead
    com.jcraft.jzlib.Deflater z -> z
    boolean finished -> finished
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext ctx -> ctx
    50:51:void <init>() -> <init>
    66:67:void <init>(int) -> <init>
    77:78:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper) -> <init>
    93:94:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper,int) -> <init>
    38:150:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper,int,int,int) -> <init>
    164:165:void <init>(byte[]) -> <init>
    183:184:void <init>(int,byte[]) -> <init>
    38:240:void <init>(int,int,int,byte[]) -> <init>
    244:244:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close() -> close
    249:262:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    267:271:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext ctx() -> ctx
    276:276:boolean isClosed() -> isClosed
    281:333:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    339:356:void close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    359:398:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture finishEncode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> finishEncode
    403:404:void handlerAdded(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerAdded
    35:35:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext access$000(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JZlibEncoder) -> access$000
    35:35:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture access$100(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JZlibEncoder,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> access$100
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JZlibEncoder$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JZlibEncoder$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$p -> val$p
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JZlibEncoder this$0 -> this$0
    255:255:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JZlibEncoder,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    258:260:void run() -> run
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JZlibEncoder$2 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JZlibEncoder$2:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JZlibEncoder this$0 -> this$0
    340:340:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JZlibEncoder,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    343:344:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    340:340:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JZlibEncoder$3 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JZlibEncoder$3:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JZlibEncoder this$0 -> this$0
    349:349:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JZlibEncoder,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    352:353:void run() -> run
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibDecoder:
    int FHCRC -> FHCRC
    int FEXTRA -> FEXTRA
    int FNAME -> FNAME
    int FCOMMENT -> FCOMMENT
    int FRESERVED -> FRESERVED
    java.util.zip.Inflater inflater -> inflater
    byte[] dictionary -> dictionary
    java.util.zip.CRC32 crc -> crc
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibDecoder$GzipState gzipState -> gzipState
    int flags -> flags
    int xlen -> xlen
    boolean finished -> finished
    boolean decideZlibOrNone -> decideZlibOrNone
    66:67:void <init>() -> <init>
    75:76:void <init>(byte[]) -> <init>
    84:85:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper) -> <init>
    54:113:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper,byte[]) -> <init>
    117:117:boolean isClosed() -> isClosed
    122:230:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    234:238:void handlerRemoved0(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerRemoved0
    241:344:boolean readGZIPHeader(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readGZIPHeader
    349:365:boolean readGZIPFooter(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readGZIPFooter
    369:378:void verifyCrc(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> verifyCrc
    388:388:boolean looksLikeZlib(short) -> looksLikeZlib
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibDecoder$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper -> $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper
    int[] $SwitchMap$io$netty$handler$codec$compression$JdkZlibDecoder$GzipState -> $SwitchMap$io$netty$handler$codec$compression$JdkZlibDecoder$GzipState
    91:144:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibDecoder$GzipState -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibDecoder$GzipState:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibDecoder$GzipState HEADER_START -> HEADER_START
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibDecoder$GzipState HEADER_END -> HEADER_END
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibDecoder$GzipState FLG_READ -> FLG_READ
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibDecoder$GzipState XLEN_READ -> XLEN_READ
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibDecoder$GzipState SKIP_FNAME -> SKIP_FNAME
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibDecoder$GzipState SKIP_COMMENT -> SKIP_COMMENT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibDecoder$GzipState PROCESS_FHCRC -> PROCESS_FHCRC
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibDecoder$GzipState FOOTER_START -> FOOTER_START
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibDecoder$GzipState[] $VALUES -> $VALUES
    43:43:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibDecoder$GzipState[] values() -> values
    43:43:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibDecoder$GzipState valueOf(java.lang.String) -> valueOf
    43:43:void <init>(java.lang.String,int) -> <init>
    43:51:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibEncoder:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper wrapper -> wrapper
    java.util.zip.Deflater deflater -> deflater
    boolean finished -> finished
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext ctx -> ctx
    java.util.zip.CRC32 crc -> crc
    byte[] gzipHeader -> gzipHeader
    boolean writeHeader -> writeHeader
    54:55:void <init>() -> <init>
    69:70:void <init>(int) -> <init>
    79:80:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper) -> <init>
    43:109:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper,int) -> <init>
    122:123:void <init>(byte[]) -> <init>
    43:151:void <init>(int,byte[]) -> <init>
    155:155:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close() -> close
    160:173:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    178:182:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext ctx() -> ctx
    187:187:boolean isClosed() -> isClosed
    192:227:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    232:243:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf allocateBuffer(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,boolean) -> allocateBuffer
    248:265:void close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    268:304:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture finishEncode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> finishEncode
    310:315:void deflate(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> deflate
    319:320:void handlerAdded(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerAdded
    33:33:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    33:33:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf allocateBuffer(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,boolean) -> allocateBuffer
    33:33:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext access$000(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibEncoder) -> access$000
    33:33:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture access$100(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibEncoder,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> access$100
    44:44:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibEncoder$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibEncoder$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$p -> val$p
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibEncoder this$0 -> this$0
    166:166:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibEncoder,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    169:171:void run() -> run
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibEncoder$2 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibEncoder$2:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibEncoder this$0 -> this$0
    249:249:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibEncoder,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    252:253:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    249:249:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibEncoder$3 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibEncoder$3:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibEncoder this$0 -> this$0
    258:258:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibEncoder,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    261:262:void run() -> run
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibEncoder$4 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.JdkZlibEncoder$4:
    int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper -> $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper
    234:234:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Snappy -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Snappy:
    int MAX_HT_SIZE -> MAX_HT_SIZE
    int MIN_COMPRESSIBLE_BYTES -> MIN_COMPRESSIBLE_BYTES
    int PREAMBLE_NOT_FULL -> PREAMBLE_NOT_FULL
    int NOT_ENOUGH_INPUT -> NOT_ENOUGH_INPUT
    int LITERAL -> LITERAL
    int COPY_1_BYTE_OFFSET -> COPY_1_BYTE_OFFSET
    int COPY_2_BYTE_OFFSET -> COPY_2_BYTE_OFFSET
    int COPY_4_BYTE_OFFSET -> COPY_4_BYTE_OFFSET
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Snappy$State state -> state
    byte tag -> tag
    int written -> written
    27:46:void <init>() -> <init>
    55:58:void reset() -> reset
    62:139:void encode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> encode
    152:152:int hash(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> hash
    162:174:short[] getHashTable(int) -> getHashTable
    189:202:int findMatchingLength(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int,int) -> findMatchingLength
    214:220:int bitsToEncode(int) -> bitsToEncode
    233:245:void encodeLiteral(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> encodeLiteral
    248:256:void encodeCopyWithOffset(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> encodeCopyWithOffset
    266:277:void encodeCopy(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> encodeCopy
    280:359:void decode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> decode
    371:385:int readPreamble(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readPreamble
    400:438:int decodeLiteral(byte,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> decodeLiteral
    455:482:int decodeCopyWith1ByteOffset(byte,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> decodeCopyWith1ByteOffset
    499:526:int decodeCopyWith2ByteOffset(byte,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> decodeCopyWith2ByteOffset
    543:570:int decodeCopyWith4ByteOffset(byte,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> decodeCopyWith4ByteOffset
    583:594:void validateOffset(int,int) -> validateOffset
    603:603:int calculateChecksum(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> calculateChecksum
    613:625:int calculateChecksum(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> calculateChecksum
    639:640:void validateChecksum(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> validateChecksum
    652:658:void validateChecksum(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> validateChecksum
    672:672:int maskChecksum(int) -> maskChecksum
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Snappy$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Snappy$1:
    int[] $SwitchMap$io$netty$handler$codec$compression$Snappy$State -> $SwitchMap$io$netty$handler$codec$compression$Snappy$State
    281:281:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Snappy$State -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Snappy$State:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Snappy$State READY -> READY
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Snappy$State READING_PREAMBLE -> READING_PREAMBLE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Snappy$State READING_TAG -> READING_TAG
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Snappy$State READING_LITERAL -> READING_LITERAL
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Snappy$State READING_COPY -> READING_COPY
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Snappy$State[] $VALUES -> $VALUES
    46:46:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Snappy$State[] values() -> values
    46:46:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Snappy$State valueOf(java.lang.String) -> valueOf
    46:46:void <init>(java.lang.String,int) -> <init>
    46:51:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.SnappyFramedDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.SnappyFramedDecoder:
    byte[] SNAPPY -> SNAPPY
    int MAX_UNCOMPRESSED_DATA_SIZE -> MAX_UNCOMPRESSED_DATA_SIZE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Snappy snappy -> snappy
    boolean validateChecksums -> validateChecksums
    boolean started -> started
    boolean corrupted -> corrupted
    63:64:void <init>() -> <init>
    51:77:void <init>(boolean) -> <init>
    81:190:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    199:208:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.SnappyFramedDecoder$ChunkType mapChunkType(byte) -> mapChunkType
    48:48:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.SnappyFramedDecoder$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.SnappyFramedDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$compression$SnappyFramedDecoder$ChunkType -> $SwitchMap$io$netty$handler$codec$compression$SnappyFramedDecoder$ChunkType
    99:99:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.SnappyFramedDecoder$ChunkType -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.SnappyFramedDecoder$ChunkType:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.SnappyFramedDecoder$ChunkType STREAM_IDENTIFIER -> STREAM_IDENTIFIER
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.SnappyFramedDecoder$ChunkType COMPRESSED_DATA -> COMPRESSED_DATA
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.SnappyFramedDecoder$ChunkType UNCOMPRESSED_DATA -> UNCOMPRESSED_DATA
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.SnappyFramedDecoder$ChunkType RESERVED_UNSKIPPABLE -> RESERVED_UNSKIPPABLE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.SnappyFramedDecoder$ChunkType RESERVED_SKIPPABLE -> RESERVED_SKIPPABLE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.SnappyFramedDecoder$ChunkType[] $VALUES -> $VALUES
    40:40:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.SnappyFramedDecoder$ChunkType[] values() -> values
    40:40:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.SnappyFramedDecoder$ChunkType valueOf(java.lang.String) -> valueOf
    40:40:void <init>(java.lang.String,int) -> <init>
    40:45:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.SnappyFramedEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.SnappyFramedEncoder:
    int MIN_COMPRESSIBLE_LENGTH -> MIN_COMPRESSIBLE_LENGTH
    byte[] STREAM_START -> STREAM_START
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.Snappy snappy -> snappy
    boolean started -> started
    30:46:void <init>() -> <init>
    51:88:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    91:95:void writeUnencodedChunk(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> writeUnencodedChunk
    98:103:void setChunkLength(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> setChunkLength
    112:113:void writeChunkLength(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> writeChunkLength
    122:123:void calculateAndWriteChecksum(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> calculateAndWriteChecksum
    30:30:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    42:42:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibCodecFactory -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibCodecFactory:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    boolean noJdkZlibDecoder -> noJdkZlibDecoder
    37:40:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(int) -> newZlibEncoder
    45:48:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper) -> newZlibEncoder
    53:56:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper,int) -> newZlibEncoder
    61:64:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper,int,int,int) -> newZlibEncoder
    69:72:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(byte[]) -> newZlibEncoder
    77:80:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(int,byte[]) -> newZlibEncoder
    85:88:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(int,int,int,byte[]) -> newZlibEncoder
    93:96:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibDecoder newZlibDecoder() -> newZlibDecoder
    101:104:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibDecoder newZlibDecoder(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper) -> newZlibDecoder
    109:112:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibDecoder newZlibDecoder(byte[]) -> newZlibDecoder
    116:118:void <init>() -> <init>
    27:34:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibDecoder:
    24:24:void <init>() -> <init>
    boolean isClosed() -> isClosed
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibEncoder:
    29:30:void <init>() -> <init>
    boolean isClosed() -> isClosed
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close() -> close
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibUtil -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibUtil:
    28:28:void fail(com.jcraft.jzlib.Inflater,java.lang.String,int) -> fail
    32:32:void fail(com.jcraft.jzlib.Deflater,java.lang.String,int) -> fail
    36:36:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.DecompressionException inflaterException(com.jcraft.jzlib.Inflater,java.lang.String,int) -> inflaterException
    40:40:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.CompressionException deflaterException(com.jcraft.jzlib.Deflater,java.lang.String,int) -> deflaterException
    45:61:com.jcraft.jzlib.JZlib$WrapperType convertWrapperType(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper) -> convertWrapperType
    66:80:int wrapperOverhead(be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper) -> wrapperOverhead
    83:84:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibUtil$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibUtil$1:
    int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper -> $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper
    45:45:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper -> be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper ZLIB -> ZLIB
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper GZIP -> GZIP
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper NONE -> NONE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper ZLIB_OR_NONE -> ZLIB_OR_NONE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper[] $VALUES -> $VALUES
    22:22:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper[] values() -> values
    22:22:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    22:39:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.ClientCookieEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.ClientCookieEncoder:
    37:37:java.lang.String encode(java.lang.String,java.lang.String) -> encode
    41:47:java.lang.String encode(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.Cookie) -> encode
    51:63:java.lang.String encode(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.Cookie[]) -> encode
    67:79:java.lang.String encode(java.lang.Iterable) -> encode
    83:112:void encode(java.lang.StringBuilder,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.Cookie) -> encode
    114:116:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.ComposedLastHttpContent -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.ComposedLastHttpContent:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders trailingHeaders -> trailingHeaders
    be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult result -> result
    27:29:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders) -> <init>
    32:32:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    37:39:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent copy() -> copy
    44:44:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    49:49:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain() -> retain
    54:54:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    59:59:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf content() -> content
    64:64:be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    69:70:void setDecoderResult(be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult) -> setDecoderResult
    74:74:int refCnt() -> refCnt
    79:79:boolean release() -> release
    84:84:boolean release(int) -> release
    23:23:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain(int) -> retain
    23:23:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain() -> retain
    23:23:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent copy() -> copy
    23:23:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    23:23:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    23:23:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    23:23:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    23:23:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    23:23:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.Cookie -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.Cookie:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.String getDomain() -> getDomain
    void setDomain(java.lang.String) -> setDomain
    java.lang.String getPath() -> getPath
    void setPath(java.lang.String) -> setPath
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    long getMaxAge() -> getMaxAge
    void setMaxAge(long) -> setMaxAge
    int getVersion() -> getVersion
    void setVersion(int) -> setVersion
    boolean isSecure() -> isSecure
    void setSecure(boolean) -> setSecure
    boolean isHttpOnly() -> isHttpOnly
    void setHttpOnly(boolean) -> setHttpOnly
    java.lang.String getCommentUrl() -> getCommentUrl
    void setCommentUrl(java.lang.String) -> setCommentUrl
    boolean isDiscard() -> isDiscard
    void setDiscard(boolean) -> setDiscard
    java.util.Set getPorts() -> getPorts
    void setPorts(int[]) -> setPorts
    void setPorts(java.lang.Iterable) -> setPorts
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.CookieDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.CookieDecoder:
    char COMMA -> COMMA
    50:163:java.util.Set decode(java.lang.String) -> decode
    169:288:void extractKeyValuePairs(java.lang.String,java.util.List,java.util.List) -> extractKeyValuePairs
    290:292:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.CookieEncoderUtil -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.CookieEncoderUtil:
    24:24:java.lang.StringBuilder stringBuilder() -> stringBuilder
    28:31:java.lang.String stripTrailingSeparator(java.lang.StringBuilder) -> stripTrailingSeparator
    35:53:void add(java.lang.StringBuilder,java.lang.String,java.lang.String) -> add
    56:61:void addUnquoted(java.lang.StringBuilder,java.lang.String,java.lang.String) -> addUnquoted
    64:75:void addQuoted(java.lang.StringBuilder,java.lang.String,java.lang.String) -> addQuoted
    78:83:void add(java.lang.StringBuilder,java.lang.String,long) -> add
    85:87:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.CookieHeaderNames -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.CookieHeaderNames:
    java.lang.String PATH -> PATH
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String MAX_AGE -> MAX_AGE
    java.lang.String DOMAIN -> DOMAIN
    java.lang.String SECURE -> SECURE
    java.lang.String HTTPONLY -> HTTPONLY
    java.lang.String COMMENT -> COMMENT
    java.lang.String COMMENTURL -> COMMENTURL
    java.lang.String DISCARD -> DISCARD
    java.lang.String PORT -> PORT
    java.lang.String VERSION -> VERSION
    41:43:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultCookie -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultCookie:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String domain -> domain
    java.lang.String path -> path
    java.lang.String comment -> comment
    java.lang.String commentUrl -> commentUrl
    boolean discard -> discard
    java.util.Set ports -> ports
    java.util.Set unmodifiablePorts -> unmodifiablePorts
    long maxAge -> maxAge
    int version -> version
    boolean secure -> secure
    boolean httpOnly -> httpOnly
    36:78:void <init>(java.lang.String,java.lang.String) -> <init>
    82:82:java.lang.String getName() -> getName
    87:87:java.lang.String getValue() -> getValue
    92:96:void setValue(java.lang.String) -> setValue
    100:100:java.lang.String getDomain() -> getDomain
    105:106:void setDomain(java.lang.String) -> setDomain
    110:110:java.lang.String getPath() -> getPath
    115:116:void setPath(java.lang.String) -> setPath
    120:120:java.lang.String getComment() -> getComment
    125:126:void setComment(java.lang.String) -> setComment
    130:130:java.lang.String getCommentUrl() -> getCommentUrl
    135:136:void setCommentUrl(java.lang.String) -> setCommentUrl
    140:140:boolean isDiscard() -> isDiscard
    145:146:void setDiscard(boolean) -> setDiscard
    150:153:java.util.Set getPorts() -> getPorts
    158:176:void setPorts(int[]) -> setPorts
    180:193:void setPorts(java.lang.Iterable) -> setPorts
    197:197:long getMaxAge() -> getMaxAge
    202:203:void setMaxAge(long) -> setMaxAge
    207:207:int getVersion() -> getVersion
    212:213:void setVersion(int) -> setVersion
    217:217:boolean isSecure() -> isSecure
    222:223:void setSecure(boolean) -> setSecure
    227:227:boolean isHttpOnly() -> isHttpOnly
    232:233:void setHttpOnly(boolean) -> setHttpOnly
    237:237:int hashCode() -> hashCode
    242:271:boolean equals(java.lang.Object) -> equals
    277:306:int compareTo(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.Cookie) -> compareTo
    311:338:java.lang.String toString() -> toString
    342:358:java.lang.String validateValue(java.lang.String,java.lang.String) -> validateValue
    27:27:int compareTo(java.lang.Object) -> compareTo
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultFullHttpRequest -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultFullHttpRequest:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf content -> content
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders trailingHeader -> trailingHeader
    boolean validateHeaders -> validateHeaders
    30:31:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod,java.lang.String) -> <init>
    34:35:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod,java.lang.String,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    39:46:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod,java.lang.String,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,boolean) -> <init>
    50:50:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    55:55:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf content() -> content
    60:60:int refCnt() -> refCnt
    65:66:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest retain() -> retain
    71:72:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest retain(int) -> retain
    77:77:boolean release() -> release
    82:82:boolean release(int) -> release
    87:88:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    93:94:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest setMethod(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod) -> setMethod
    99:100:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest setUri(java.lang.String) -> setUri
    105:109:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest copy() -> copy
    114:118:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest duplicate() -> duplicate
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest setMethod(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod) -> setMethod
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage retain() -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage copy() -> copy
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain() -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent copy() -> copy
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain() -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent copy() -> copy
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    24:24:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultFullHttpResponse -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultFullHttpResponse:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf content -> content
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders trailingHeaders -> trailingHeaders
    boolean validateHeaders -> validateHeaders
    32:33:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus) -> <init>
    36:37:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    41:48:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,boolean) -> <init>
    52:52:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    57:57:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf content() -> content
    62:62:int refCnt() -> refCnt
    67:68:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse retain() -> retain
    73:74:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse retain(int) -> retain
    79:79:boolean release() -> release
    84:84:boolean release(int) -> release
    89:90:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    95:96:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse setStatus(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    101:105:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse copy() -> copy
    110:114:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse duplicate() -> duplicate
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse setStatus(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage retain() -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage copy() -> copy
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain() -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent copy() -> copy
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain(int) -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain() -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent copy() -> copy
    25:25:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    25:25:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    25:25:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpContent -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpContent:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf content -> content
    31:36:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    40:40:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf content() -> content
    45:45:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent copy() -> copy
    50:50:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    55:55:int refCnt() -> refCnt
    60:61:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain() -> retain
    66:67:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain(int) -> retain
    72:72:boolean release() -> release
    77:77:boolean release(int) -> release
    82:82:java.lang.String toString() -> toString
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    24:24:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders:
    int BUCKET_SIZE -> BUCKET_SIZE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry[] entries -> entries
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry head -> head
    boolean validate -> validate
    37:37:int index(int) -> index
    45:46:void <init>() -> <init>
    40:51:void <init>(boolean) -> <init>
    54:55:void validateHeaderName0(java.lang.CharSequence) -> validateHeaderName0
    59:68:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders add(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders) -> add
    74:84:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders set(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders) -> set
    90:90:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object) -> add
    96:106:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object) -> add
    111:111:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Iterable) -> add
    116:128:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Iterable) -> add
    133:140:void add0(int,int,java.lang.CharSequence,java.lang.CharSequence) -> add0
    144:144:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders remove(java.lang.String) -> remove
    149:155:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence) -> remove
    159:192:void remove0(int,int,java.lang.CharSequence) -> remove0
    196:196:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object) -> set
    202:213:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object) -> set
    218:218:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable) -> set
    223:245:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Iterable) -> set
    250:252:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders clear() -> clear
    257:257:java.lang.String get(java.lang.String) -> get
    262:281:java.lang.String get(java.lang.CharSequence) -> get
    286:286:java.util.List getAll(java.lang.String) -> getAll
    291:306:java.util.List getAll(java.lang.CharSequence) -> getAll
    311:319:java.util.List entries() -> entries
    324:324:java.util.Iterator iterator() -> iterator
    329:329:boolean contains(java.lang.String) -> contains
    334:334:boolean contains(java.lang.CharSequence) -> contains
    339:339:boolean isEmpty() -> isEmpty
    344:344:boolean contains(java.lang.String,java.lang.String,boolean) -> contains
    349:370:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contains
    375:381:java.util.Set names() -> names
    385:400:java.lang.CharSequence toCharSequence(java.lang.Object) -> toCharSequence
    404:409:void encode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    32:32:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry access$100(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders) -> access$100
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders$1:
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry:
    int hash -> hash
    java.lang.CharSequence key -> key
    java.lang.CharSequence value -> value
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry next -> next
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry before -> before
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry after -> after
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders this$0 -> this$0
    444:448:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders,int,java.lang.CharSequence,java.lang.CharSequence) -> <init>
    450:454:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders) -> <init>
    457:459:void remove() -> remove
    462:466:void addBefore(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry) -> addBefore
    470:470:java.lang.String getKey() -> getKey
    475:475:java.lang.String getValue() -> getValue
    480:486:java.lang.String setValue(java.lang.String) -> setValue
    491:491:java.lang.String toString() -> toString
    495:496:void encode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    437:437:java.lang.Object setValue(java.lang.Object) -> setValue
    437:437:java.lang.Object getValue() -> getValue
    437:437:java.lang.Object getKey() -> getKey
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders$HeaderIterator -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders$HeaderIterator:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry current -> current
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders this$0 -> this$0
    411:413:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders) -> <init>
    417:417:boolean hasNext() -> hasNext
    422:428:java.util.Map$Entry next() -> next
    433:433:void remove() -> remove
    411:411:java.lang.Object next() -> next
    411:411:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpHeaders$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpMessage -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpMessage:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion version -> version
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders headers -> headers
    34:35:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> <init>
    37:43:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion,boolean) -> <init>
    47:47:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders headers() -> headers
    52:52:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    57:69:java.lang.String toString() -> toString
    74:78:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    82:88:void appendHeaders(java.lang.StringBuilder) -> appendHeaders
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpObject -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpObject:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult decoderResult -> decoderResult
    22:26:void <init>() -> <init>
    30:30:be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    35:39:void setDecoderResult(be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult) -> setDecoderResult
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpRequest -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpRequest:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod method -> method
    java.lang.String uri -> uri
    36:37:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod,java.lang.String) -> <init>
    48:57:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod,java.lang.String,boolean) -> <init>
    61:61:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod getMethod() -> getMethod
    66:66:java.lang.String getUri() -> getUri
    71:75:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest setMethod(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod) -> setMethod
    80:84:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    89:90:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    95:111:java.lang.String toString() -> toString
    23:23:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpResponse -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultHttpResponse:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus status -> status
    34:35:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus) -> <init>
    45:50:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus,boolean) -> <init>
    54:54:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus getStatus() -> getStatus
    59:63:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse setStatus(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    68:69:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    74:88:java.lang.String toString() -> toString
    23:23:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultLastHttpContent -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultLastHttpContent:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders trailingHeaders -> trailingHeaders
    boolean validateHeaders -> validateHeaders
    33:34:void <init>() -> <init>
    37:38:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    41:44:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,boolean) -> <init>
    48:50:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent copy() -> copy
    55:57:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent duplicate() -> duplicate
    62:63:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    68:69:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain() -> retain
    74:74:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    79:85:java.lang.String toString() -> toString
    89:95:void appendHeaders(java.lang.StringBuilder) -> appendHeaders
    27:27:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain(int) -> retain
    27:27:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain() -> retain
    27:27:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    27:27:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent copy() -> copy
    27:27:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    27:27:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    27:27:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    27:27:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    27:27:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    27:27:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultLastHttpContent$TrailingHeaders -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.DefaultLastHttpContent$TrailingHeaders:
    99:100:void <init>(boolean) -> <init>
    104:111:void validateHeaderName0(java.lang.CharSequence) -> validateHeaderName0
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage copy() -> copy
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage retain() -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest copy() -> copy
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest retain(int) -> retain
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest retain() -> retain
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest setMethod(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod) -> setMethod
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest setUri(java.lang.String) -> setUri
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse copy() -> copy
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse retain(int) -> retain
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse retain() -> retain
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse setStatus(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus) -> setStatus
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpChunkedInput -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpChunkedInput:
    be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedInput input -> input
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent lastHttpContent -> lastHttpContent
    boolean sentLastChunk -> sentLastChunk
    52:55:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedInput) -> <init>
    64:67:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedInput,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent) -> <init>
    71:75:boolean isEndOfInput() -> isEndOfInput
    81:82:void close() -> close
    86:96:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent readChunk(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> readChunk
    42:42:java.lang.Object readChunk(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> readChunk
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec:
    java.util.Queue queue -> queue
    boolean done -> done
    java.util.concurrent.atomic.AtomicLong requestResponseCounter -> requestResponseCounter
    boolean failOnMissingResponse -> failOnMissingResponse
    61:62:void <init>() -> <init>
    65:66:void setSingleDecode(boolean) -> setSingleDecode
    69:69:boolean isSingleDecode() -> isSingleDecode
    76:77:void <init>(int,int,int) -> <init>
    84:85:void <init>(int,int,int,boolean) -> <init>
    47:95:void <init>(int,int,int,boolean,boolean) -> <init>
    43:43:boolean access$100(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec) -> access$100
    43:43:java.util.Queue access$200(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec) -> access$200
    43:43:boolean access$300(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec) -> access$300
    43:43:java.util.concurrent.atomic.AtomicLong access$400(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec) -> access$400
    43:43:boolean access$102(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec,boolean) -> access$102
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec$1:
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec$Decoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec$Decoder:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec this$0 -> this$0
    119:121:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec,int,int,int,boolean) -> <init>
    126:144:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    147:155:void decrement(java.lang.Object) -> decrement
    159:206:boolean isContentAlwaysEmpty(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
    212:222:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec$Encoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec$Encoder:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec this$0 -> this$0
    97:97:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec) -> <init>
    102:115:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    97:97:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpClientCodec$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpConstants -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpConstants:
    byte SP -> SP
    byte HT -> HT
    byte CR -> CR
    byte EQUALS -> EQUALS
    byte LF -> LF
    byte COLON -> COLON
    byte SEMICOLON -> SEMICOLON
    byte COMMA -> COMMA
    byte DOUBLE_QUOTE -> DOUBLE_QUOTE
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
    74:76:void <init>() -> <init>
    72:72:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent copy() -> copy
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain() -> retain
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain(int) -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentCompressor -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentCompressor:
    int compressionLevel -> compressionLevel
    int windowBits -> windowBits
    int memLevel -> memLevel
    41:42:void <init>() -> <init>
    54:55:void <init>(int) -> <init>
    76:93:void <init>(int,int,int) -> <init>
    97:120:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentEncoder$Result beginEncode(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse,java.lang.String) -> beginEncode
    128:165:be.alexandre01.dnplugin.shaded.netty.handler.codec.compression.ZlibWrapper determineWrapper(java.lang.String) -> determineWrapper
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentCompressor$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentCompressor$1:
    int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper -> $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper
    109:109:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentDecoder:
    be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel decoder -> decoder
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage message -> message
    boolean decodeStarted -> decodeStarted
    boolean continueResponse -> continueResponse
    boolean $assertionsDisabled -> $assertionsDisabled
    45:45:void <init>() -> <init>
    54:146:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObject,java.util.List) -> decode
    149:166:void decodeContent(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent,java.util.List) -> decodeContent
    be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel newContentDecoder(java.lang.String) -> newContentDecoder
    189:189:java.lang.String getTargetContentEncoding(java.lang.String) -> getTargetContentEncoding
    194:196:void handlerRemoved(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerRemoved
    200:202:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    205:219:void cleanup() -> cleanup
    223:225:void decode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    228:233:void finishDecode(java.util.List) -> finishDecode
    237:247:void fetchDecoderOutput(java.util.List) -> fetchDecoderOutput
    45:45:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    45:45:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentDecompressor -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentDecompressor:
    boolean strict -> strict
    35:36:void <init>() -> <init>
    44:46:void <init>(boolean) -> <init>
    50:65:be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel newContentDecoder(java.lang.String) -> newContentDecoder
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentEncoder:
    java.util.Queue acceptEncodingQueue -> acceptEncodingQueue
    java.lang.String acceptEncoding -> acceptEncoding
    be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel encoder -> encoder
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentEncoder$State state -> state
    boolean $assertionsDisabled -> $assertionsDisabled
    53:290:void <init>() -> <init>
    68:68:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    74:80:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,java.util.List) -> decode
    84:177:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObject,java.util.List) -> encode
    180:185:void ensureHeaders(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObject) -> ensureHeaders
    188:193:void ensureContent(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObject) -> ensureContent
    196:214:boolean encodeContent(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent,java.util.List) -> encodeContent
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentEncoder$Result beginEncode(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse,java.lang.String) -> beginEncode
    235:237:void handlerRemoved(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerRemoved
    241:243:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    246:261:void cleanup() -> cleanup
    265:267:void encode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> encode
    270:274:void finishEncode(java.util.List) -> finishEncode
    278:288:void fetchEncoderOutput(java.util.List) -> fetchEncoderOutput
    53:53:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    53:53:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    53:53:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentEncoder$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentEncoder$1:
    int[] $SwitchMap$io$netty$handler$codec$http$HttpContentEncoder$State -> $SwitchMap$io$netty$handler$codec$http$HttpContentEncoder$State
    85:85:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentEncoder$Result -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentEncoder$Result:
    java.lang.String targetContentEncoding -> targetContentEncoding
    be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel contentEncoder -> contentEncoder
    294:304:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel) -> <init>
    307:307:java.lang.String targetContentEncoding() -> targetContentEncoding
    311:311:be.alexandre01.dnplugin.shaded.netty.channel.embedded.EmbeddedChannel contentEncoder() -> contentEncoder
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentEncoder$State -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentEncoder$State:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentEncoder$State PASS_THROUGH -> PASS_THROUGH
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentEncoder$State AWAIT_HEADERS -> AWAIT_HEADERS
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentEncoder$State AWAIT_CONTENT -> AWAIT_CONTENT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentEncoder$State[] $VALUES -> $VALUES
    55:55:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentEncoder$State[] values() -> values
    55:55:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContentEncoder$State valueOf(java.lang.String) -> valueOf
    55:55:void <init>(java.lang.String,int) -> <init>
    55:58:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaderDateFormat -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaderDateFormat:
    long serialVersionUID -> serialVersionUID
    java.text.SimpleDateFormat format1 -> format1
    java.text.SimpleDateFormat format2 -> format2
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.FastThreadLocal dateFormatThreadLocal -> dateFormatThreadLocal
    51:51:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaderDateFormat get() -> get
    39:61:void <init>() -> <init>
    65:72:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    36:36:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaderDateFormat$1) -> <init>
    42:42:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaderDateFormat$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaderDateFormat$1:
    43:43:void <init>() -> <init>
    46:46:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaderDateFormat initialValue() -> initialValue
    43:43:java.lang.Object initialValue() -> initialValue
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaderDateFormat$HttpHeaderDateFormatObsolete1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaderDateFormat$HttpHeaderDateFormatObsolete1:
    long serialVersionUID -> serialVersionUID
    83:85:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaderDateFormat$HttpHeaderDateFormatObsolete2 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaderDateFormat$HttpHeaderDateFormatObsolete2:
    long serialVersionUID -> serialVersionUID
    97:99:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaderEntity -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaderEntity:
    java.lang.String name -> name
    int hash -> hash
    byte[] bytes -> bytes
    int separatorLen -> separatorLen
    29:30:void <init>(java.lang.String) -> <init>
    32:45:void <init>(java.lang.String,byte[]) -> <init>
    48:48:int hash() -> hash
    53:53:int length() -> length
    58:61:char charAt(int) -> charAt
    66:66:java.lang.CharSequence subSequence(int,int) -> subSequence
    71:71:java.lang.String toString() -> toString
    75:76:boolean encode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders:
    byte[] HEADER_SEPERATOR -> HEADER_SEPERATOR
    byte[] CRLF -> CRLF
    java.lang.CharSequence CONTENT_LENGTH_ENTITY -> CONTENT_LENGTH_ENTITY
    java.lang.CharSequence CONNECTION_ENTITY -> CONNECTION_ENTITY
    java.lang.CharSequence CLOSE_ENTITY -> CLOSE_ENTITY
    java.lang.CharSequence KEEP_ALIVE_ENTITY -> KEEP_ALIVE_ENTITY
    java.lang.CharSequence HOST_ENTITY -> HOST_ENTITY
    java.lang.CharSequence DATE_ENTITY -> DATE_ENTITY
    java.lang.CharSequence EXPECT_ENTITY -> EXPECT_ENTITY
    java.lang.CharSequence CONTINUE_ENTITY -> CONTINUE_ENTITY
    java.lang.CharSequence TRANSFER_ENCODING_ENTITY -> TRANSFER_ENCODING_ENTITY
    java.lang.CharSequence CHUNKED_ENTITY -> CHUNKED_ENTITY
    java.lang.CharSequence SEC_WEBSOCKET_KEY1_ENTITY -> SEC_WEBSOCKET_KEY1_ENTITY
    java.lang.CharSequence SEC_WEBSOCKET_KEY2_ENTITY -> SEC_WEBSOCKET_KEY2_ENTITY
    java.lang.CharSequence SEC_WEBSOCKET_ORIGIN_ENTITY -> SEC_WEBSOCKET_ORIGIN_ENTITY
    java.lang.CharSequence SEC_WEBSOCKET_LOCATION_ENTITY -> SEC_WEBSOCKET_LOCATION_ENTITY
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders EMPTY_HEADERS -> EMPTY_HEADERS
    568:576:boolean isKeepAlive(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> isKeepAlive
    600:614:void setKeepAlive(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,boolean) -> setKeepAlive
    620:620:java.lang.String getHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String) -> getHeader
    631:631:java.lang.String getHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.CharSequence) -> getHeader
    638:638:java.lang.String getHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String,java.lang.String) -> getHeader
    650:654:java.lang.String getHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.lang.String) -> getHeader
    661:662:void setHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String,java.lang.Object) -> setHeader
    673:674:void setHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.lang.Object) -> setHeader
    681:682:void setHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String,java.lang.Iterable) -> setHeader
    699:700:void setHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.lang.Iterable) -> setHeader
    706:707:void addHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String,java.lang.Object) -> addHeader
    717:718:void addHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.lang.Object) -> addHeader
    724:725:void removeHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String) -> removeHeader
    731:732:void removeHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.CharSequence) -> removeHeader
    738:739:void clearHeaders(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> clearHeaders
    745:745:int getIntHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String) -> getIntHeader
    758:762:int getIntHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.CharSequence) -> getIntHeader
    769:769:int getIntHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String,int) -> getIntHeader
    781:789:int getIntHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,int) -> getIntHeader
    797:798:void setIntHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String,int) -> setIntHeader
    805:806:void setIntHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,int) -> setIntHeader
    812:813:void setIntHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String,java.lang.Iterable) -> setIntHeader
    820:821:void setIntHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.lang.Iterable) -> setIntHeader
    828:829:void addIntHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String,int) -> addIntHeader
    835:836:void addIntHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,int) -> addIntHeader
    842:842:java.util.Date getDateHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String) -> getDateHeader
    855:859:java.util.Date getDateHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.CharSequence) -> getDateHeader
    866:866:java.util.Date getDateHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String,java.util.Date) -> getDateHeader
    878:886:java.util.Date getDateHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.util.Date) -> getDateHeader
    894:895:void setDateHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String,java.util.Date) -> setDateHeader
    904:909:void setDateHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.util.Date) -> setDateHeader
    915:916:void setDateHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String,java.lang.Iterable) -> setDateHeader
    925:926:void setDateHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.lang.Iterable) -> setDateHeader
    932:933:void addDateHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String,java.util.Date) -> addDateHeader
    941:942:void addDateHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.util.Date) -> addDateHeader
    957:970:long getContentLength(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> getContentLength
    984:1001:long getContentLength(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,long) -> getContentLength
    1010:1028:int getWebSocketContentLength(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> getWebSocketContentLength
    1035:1036:void setContentLength(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,long) -> setContentLength
    1042:1042:java.lang.String getHost(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> getHost
    1050:1050:java.lang.String getHost(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String) -> getHost
    1057:1058:void setHost(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String) -> setHost
    1064:1065:void setHost(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.CharSequence) -> setHost
    1074:1074:java.util.Date getDate(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> getDate
    1083:1083:java.util.Date getDate(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.util.Date) -> getDate
    1090:1095:void setDate(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.util.Date) -> setDate
    1103:1122:boolean is100ContinueExpected(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> is100ContinueExpected
    1131:1132:void set100ContinueExpected(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> set100ContinueExpected
    1142:1147:void set100ContinueExpected(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,boolean) -> set100ContinueExpected
    1156:1179:void validateHeaderName(java.lang.CharSequence) -> validateHeaderName
    1188:1256:void validateHeaderValue(java.lang.CharSequence) -> validateHeaderValue
    1265:1265:boolean isTransferEncodingChunked(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> isTransferEncodingChunked
    1269:1285:void removeTransferEncodingChunked(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> removeTransferEncodingChunked
    1288:1290:void setTransferEncodingChunked(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> setTransferEncodingChunked
    1293:1293:boolean isContentLengthSet(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> isContentLengthSet
    1301:1329:boolean equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> equalsIgnoreCase
    1333:1350:int hash(java.lang.CharSequence) -> hash
    1355:1362:void encode(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    1366:1372:void encode(java.lang.CharSequence,java.lang.CharSequence,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    1375:1379:boolean encodeAscii(java.lang.CharSequence,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encodeAscii
    1384:1388:void encodeAscii0(java.lang.CharSequence,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encodeAscii0
    1395:1398:java.lang.CharSequence newEntity(java.lang.String) -> newEntity
    1406:1409:java.lang.CharSequence newNameEntity(java.lang.String) -> newNameEntity
    1417:1420:java.lang.CharSequence newValueEntity(java.lang.String) -> newValueEntity
    1423:1423:void <init>() -> <init>
    java.lang.String get(java.lang.String) -> get
    1438:1438:java.lang.String get(java.lang.CharSequence) -> get
    java.util.List getAll(java.lang.String) -> getAll
    1454:1454:java.util.List getAll(java.lang.CharSequence) -> getAll
    java.util.List entries() -> entries
    boolean contains(java.lang.String) -> contains
    1476:1476:boolean contains(java.lang.CharSequence) -> contains
    boolean isEmpty() -> isEmpty
    java.util.Set names() -> names
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object) -> add
    1510:1510:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object) -> add
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Iterable) -> add
    1536:1536:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Iterable) -> add
    1545:1551:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders add(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders) -> add
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object) -> set
    1573:1573:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object) -> set
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable) -> set
    1601:1601:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Iterable) -> set
    1610:1617:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders set(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders) -> set
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders remove(java.lang.String) -> remove
    1632:1632:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence) -> remove
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders clear() -> clear
    1646:1662:boolean contains(java.lang.String,java.lang.String,boolean) -> contains
    1674:1674:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contains
    38:55:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders$1:
    55:55:void <init>() -> <init>
    58:58:java.lang.String get(java.lang.String) -> get
    63:63:java.util.List getAll(java.lang.String) -> getAll
    68:68:java.util.List entries() -> entries
    73:73:boolean contains(java.lang.String) -> contains
    78:78:boolean isEmpty() -> isEmpty
    83:83:java.util.Set names() -> names
    88:88:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object) -> add
    93:93:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Iterable) -> add
    98:98:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object) -> set
    103:103:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable) -> set
    108:108:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders remove(java.lang.String) -> remove
    113:113:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders clear() -> clear
    118:118:java.util.Iterator iterator() -> iterator
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders$Names -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders$Names:
    java.lang.String ACCEPT -> ACCEPT
    java.lang.String ACCEPT_CHARSET -> ACCEPT_CHARSET
    java.lang.String ACCEPT_ENCODING -> ACCEPT_ENCODING
    java.lang.String ACCEPT_LANGUAGE -> ACCEPT_LANGUAGE
    java.lang.String ACCEPT_RANGES -> ACCEPT_RANGES
    java.lang.String ACCEPT_PATCH -> ACCEPT_PATCH
    java.lang.String ACCESS_CONTROL_ALLOW_CREDENTIALS -> ACCESS_CONTROL_ALLOW_CREDENTIALS
    java.lang.String ACCESS_CONTROL_ALLOW_HEADERS -> ACCESS_CONTROL_ALLOW_HEADERS
    java.lang.String ACCESS_CONTROL_ALLOW_METHODS -> ACCESS_CONTROL_ALLOW_METHODS
    java.lang.String ACCESS_CONTROL_ALLOW_ORIGIN -> ACCESS_CONTROL_ALLOW_ORIGIN
    java.lang.String ACCESS_CONTROL_EXPOSE_HEADERS -> ACCESS_CONTROL_EXPOSE_HEADERS
    java.lang.String ACCESS_CONTROL_MAX_AGE -> ACCESS_CONTROL_MAX_AGE
    java.lang.String ACCESS_CONTROL_REQUEST_HEADERS -> ACCESS_CONTROL_REQUEST_HEADERS
    java.lang.String ACCESS_CONTROL_REQUEST_METHOD -> ACCESS_CONTROL_REQUEST_METHOD
    java.lang.String AGE -> AGE
    java.lang.String ALLOW -> ALLOW
    java.lang.String AUTHORIZATION -> AUTHORIZATION
    java.lang.String CACHE_CONTROL -> CACHE_CONTROL
    java.lang.String CONNECTION -> CONNECTION
    java.lang.String CONTENT_BASE -> CONTENT_BASE
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LANGUAGE -> CONTENT_LANGUAGE
    java.lang.String CONTENT_LENGTH -> CONTENT_LENGTH
    java.lang.String CONTENT_LOCATION -> CONTENT_LOCATION
    java.lang.String CONTENT_TRANSFER_ENCODING -> CONTENT_TRANSFER_ENCODING
    java.lang.String CONTENT_MD5 -> CONTENT_MD5
    java.lang.String CONTENT_RANGE -> CONTENT_RANGE
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String COOKIE -> COOKIE
    java.lang.String DATE -> DATE
    java.lang.String ETAG -> ETAG
    java.lang.String EXPECT -> EXPECT
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String FROM -> FROM
    java.lang.String HOST -> HOST
    java.lang.String IF_MATCH -> IF_MATCH
    java.lang.String IF_MODIFIED_SINCE -> IF_MODIFIED_SINCE
    java.lang.String IF_NONE_MATCH -> IF_NONE_MATCH
    java.lang.String IF_RANGE -> IF_RANGE
    java.lang.String IF_UNMODIFIED_SINCE -> IF_UNMODIFIED_SINCE
    java.lang.String LAST_MODIFIED -> LAST_MODIFIED
    java.lang.String LOCATION -> LOCATION
    java.lang.String MAX_FORWARDS -> MAX_FORWARDS
    java.lang.String ORIGIN -> ORIGIN
    java.lang.String PRAGMA -> PRAGMA
    java.lang.String PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    java.lang.String PROXY_AUTHORIZATION -> PROXY_AUTHORIZATION
    java.lang.String RANGE -> RANGE
    java.lang.String REFERER -> REFERER
    java.lang.String RETRY_AFTER -> RETRY_AFTER
    java.lang.String SEC_WEBSOCKET_KEY1 -> SEC_WEBSOCKET_KEY1
    java.lang.String SEC_WEBSOCKET_KEY2 -> SEC_WEBSOCKET_KEY2
    java.lang.String SEC_WEBSOCKET_LOCATION -> SEC_WEBSOCKET_LOCATION
    java.lang.String SEC_WEBSOCKET_ORIGIN -> SEC_WEBSOCKET_ORIGIN
    java.lang.String SEC_WEBSOCKET_PROTOCOL -> SEC_WEBSOCKET_PROTOCOL
    java.lang.String SEC_WEBSOCKET_VERSION -> SEC_WEBSOCKET_VERSION
    java.lang.String SEC_WEBSOCKET_KEY -> SEC_WEBSOCKET_KEY
    java.lang.String SEC_WEBSOCKET_ACCEPT -> SEC_WEBSOCKET_ACCEPT
    java.lang.String SERVER -> SERVER
    java.lang.String SET_COOKIE -> SET_COOKIE
    java.lang.String SET_COOKIE2 -> SET_COOKIE2
    java.lang.String TE -> TE
    java.lang.String TRAILER -> TRAILER
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String UPGRADE -> UPGRADE
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String VARY -> VARY
    java.lang.String VIA -> VIA
    java.lang.String WARNING -> WARNING
    java.lang.String WEBSOCKET_LOCATION -> WEBSOCKET_LOCATION
    java.lang.String WEBSOCKET_ORIGIN -> WEBSOCKET_ORIGIN
    java.lang.String WEBSOCKET_PROTOCOL -> WEBSOCKET_PROTOCOL
    java.lang.String WWW_AUTHENTICATE -> WWW_AUTHENTICATE
    419:420:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders$Values -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders$Values:
    java.lang.String APPLICATION_X_WWW_FORM_URLENCODED -> APPLICATION_X_WWW_FORM_URLENCODED
    java.lang.String BASE64 -> BASE64
    java.lang.String BINARY -> BINARY
    java.lang.String BOUNDARY -> BOUNDARY
    java.lang.String BYTES -> BYTES
    java.lang.String CHARSET -> CHARSET
    java.lang.String CHUNKED -> CHUNKED
    java.lang.String CLOSE -> CLOSE
    java.lang.String COMPRESS -> COMPRESS
    java.lang.String CONTINUE -> CONTINUE
    java.lang.String DEFLATE -> DEFLATE
    java.lang.String GZIP -> GZIP
    java.lang.String IDENTITY -> IDENTITY
    java.lang.String KEEP_ALIVE -> KEEP_ALIVE
    java.lang.String MAX_AGE -> MAX_AGE
    java.lang.String MAX_STALE -> MAX_STALE
    java.lang.String MIN_FRESH -> MIN_FRESH
    java.lang.String MULTIPART_FORM_DATA -> MULTIPART_FORM_DATA
    java.lang.String MUST_REVALIDATE -> MUST_REVALIDATE
    java.lang.String NO_CACHE -> NO_CACHE
    java.lang.String NO_STORE -> NO_STORE
    java.lang.String NO_TRANSFORM -> NO_TRANSFORM
    java.lang.String NONE -> NONE
    java.lang.String ONLY_IF_CACHED -> ONLY_IF_CACHED
    java.lang.String PRIVATE -> PRIVATE
    java.lang.String PROXY_REVALIDATE -> PROXY_REVALIDATE
    java.lang.String PUBLIC -> PUBLIC
    java.lang.String QUOTED_PRINTABLE -> QUOTED_PRINTABLE
    java.lang.String S_MAXAGE -> S_MAXAGE
    java.lang.String TRAILERS -> TRAILERS
    java.lang.String UPGRADE -> UPGRADE
    java.lang.String WEBSOCKET -> WEBSOCKET
    557:558:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders headers() -> headers
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod OPTIONS -> OPTIONS
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod GET -> GET
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod HEAD -> HEAD
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod POST -> POST
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod PUT -> PUT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod PATCH -> PATCH
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod DELETE -> DELETE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod TRACE -> TRACE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod CONNECT -> CONNECT
    java.util.Map methodMap -> methodMap
    java.lang.String name -> name
    byte[] bytes -> bytes
    110:123:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod valueOf(java.lang.String) -> valueOf
    138:139:void <init>(java.lang.String) -> <init>
    141:164:void <init>(java.lang.String,boolean) -> <init>
    170:170:java.lang.String name() -> name
    175:175:int hashCode() -> hashCode
    180:185:boolean equals(java.lang.Object) -> equals
    190:190:java.lang.String toString() -> toString
    195:195:int compareTo(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod) -> compareTo
    199:204:void encode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    29:29:int compareTo(java.lang.Object) -> compareTo
    37:102:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObject -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObject:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    void setDecoderResult(be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult) -> setDecoderResult
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectAggregator -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectAggregator:
    int DEFAULT_MAX_COMPOSITEBUFFER_COMPONENTS -> DEFAULT_MAX_COMPOSITEBUFFER_COMPONENTS
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse CONTINUE -> CONTINUE
    int maxContentLength -> maxContentLength
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage currentMessage -> currentMessage
    boolean tooLongFrameFound -> tooLongFrameFound
    int maxCumulationBufferComponents -> maxCumulationBufferComponents
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext ctx -> ctx
    boolean $assertionsDisabled -> $assertionsDisabled
    63:81:void <init>(int) -> <init>
    90:90:int getMaxCumulationBufferComponents() -> getMaxCumulationBufferComponents
    101:113:void setMaxCumulationBufferComponents(int) -> setMaxCumulationBufferComponents
    117:226:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObject,java.util.List) -> decode
    230:237:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    241:242:void handlerAdded(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerAdded
    246:253:void handlerRemoved(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerRemoved
    256:271:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage toFullMessage(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> toFullMessage
    54:54:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    54:56:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectAggregator$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectAggregator$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectAggregator this$0 -> this$0
    131:131:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectAggregator,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> <init>
    134:137:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    131:131:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage message -> message
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders trailingHeaders -> trailingHeaders
    279:282:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders) -> <init>
    285:285:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    289:290:void setTrailingHeaders(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders) -> setTrailingHeaders
    294:294:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    299:300:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    305:305:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders headers() -> headers
    310:310:be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    315:316:void setDecoderResult(be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult) -> setDecoderResult
    320:321:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    326:327:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage retain() -> retain
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage copy() -> copy
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage duplicate() -> duplicate
    274:274:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    274:274:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    274:274:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    274:274:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    274:274:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    274:274:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    274:274:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    274:274:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain() -> retain
    274:274:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    274:274:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent copy() -> copy
    274:274:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain(int) -> retain
    274:274:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain() -> retain
    274:274:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    274:274:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent copy() -> copy
    274:274:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectAggregator$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:
    340:341:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders) -> <init>
    345:349:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest copy() -> copy
    354:358:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest duplicate() -> duplicate
    363:364:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest retain(int) -> retain
    369:370:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest retain() -> retain
    375:376:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest setMethod(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod) -> setMethod
    381:382:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest setUri(java.lang.String) -> setUri
    387:387:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod getMethod() -> getMethod
    392:392:java.lang.String getUri() -> getUri
    397:398:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    337:337:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage duplicate() -> duplicate
    337:337:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage copy() -> copy
    337:337:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage retain() -> retain
    337:337:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    337:337:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    337:337:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    337:337:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain() -> retain
    337:337:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    337:337:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent copy() -> copy
    337:337:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain(int) -> retain
    337:337:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain() -> retain
    337:337:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    337:337:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent copy() -> copy
    337:337:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    337:337:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    337:337:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    337:337:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    337:337:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    337:337:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    337:337:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    337:337:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    337:337:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest setMethod(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod) -> setMethod
    337:337:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectAggregator$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse:
    405:406:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders) -> <init>
    410:414:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse copy() -> copy
    419:423:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse duplicate() -> duplicate
    428:429:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse setStatus(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    434:434:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus getStatus() -> getStatus
    439:440:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    445:446:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse retain(int) -> retain
    451:452:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse retain() -> retain
    402:402:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage duplicate() -> duplicate
    402:402:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage copy() -> copy
    402:402:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage retain() -> retain
    402:402:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    402:402:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    402:402:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    402:402:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain() -> retain
    402:402:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    402:402:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent copy() -> copy
    402:402:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain(int) -> retain
    402:402:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain() -> retain
    402:402:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    402:402:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent copy() -> copy
    402:402:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    402:402:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    402:402:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    402:402:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    402:402:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    402:402:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    402:402:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    402:402:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse setStatus(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    402:402:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectAggregator$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder:
    int maxInitialLineLength -> maxInitialLineLength
    int maxHeaderSize -> maxHeaderSize
    int maxChunkSize -> maxChunkSize
    boolean chunkedSupported -> chunkedSupported
    boolean validateHeaders -> validateHeaders
    be.alexandre01.dnplugin.shaded.netty.util.internal.AppendableCharSequence seq -> seq
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$HeaderParser headerParser -> headerParser
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$LineParser lineParser -> lineParser
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage message -> message
    long chunkSize -> chunkSize
    int headerSize -> headerSize
    long contentLength -> contentLength
    boolean $assertionsDisabled -> $assertionsDisabled
    144:145:void <init>() -> <init>
    152:153:void <init>(int,int,int,boolean) -> <init>
    111:184:void <init>(int,int,int,boolean,boolean) -> <init>
    188:377:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    381:403:void decodeLast(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decodeLast
    406:425:boolean isContentAlwaysEmpty(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
    429:441:void reset() -> reset
    444:454:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage invalidMessage(java.lang.Exception) -> invalidMessage
    458:462:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent invalidChunk(java.lang.Exception) -> invalidChunk
    467:474:void skipControlCharacters(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> skipControlCharacters
    477:520:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$State readHeaders(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readHeaders
    524:527:long contentLength() -> contentLength
    531:564:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent readTrailingHeaders(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readTrailingHeaders
    boolean isDecodingRequest() -> isDecodingRequest
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage createMessage(java.lang.String[]) -> createMessage
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage createInvalidMessage() -> createInvalidMessage
    572:581:int getChunkSize(java.lang.String) -> getChunkSize
    592:601:java.lang.String[] splitInitialLine(be.alexandre01.dnplugin.shaded.netty.util.internal.AppendableCharSequence) -> splitInitialLine
    608:639:java.lang.String[] splitHeader(be.alexandre01.dnplugin.shaded.netty.util.internal.AppendableCharSequence) -> splitHeader
    647:652:int findNonWhitespace(java.lang.CharSequence,int) -> findNonWhitespace
    657:662:int findWhitespace(java.lang.CharSequence,int) -> findWhitespace
    667:672:int findEndOfString(java.lang.CharSequence) -> findEndOfString
    104:104:int access$002(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder,int) -> access$002
    104:104:int access$008(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder) -> access$008
    104:104:int access$000(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder) -> access$000
    104:104:int access$100(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder) -> access$100
    104:104:int access$200(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder) -> access$200
    104:104:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$http$HttpObjectDecoder$State -> $SwitchMap$io$netty$handler$codec$http$HttpObjectDecoder$State
    188:188:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$HeaderParser -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$HeaderParser:
    be.alexandre01.dnplugin.shaded.netty.util.internal.AppendableCharSequence seq -> seq
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder this$0 -> this$0
    678:680:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder,be.alexandre01.dnplugin.shaded.netty.util.internal.AppendableCharSequence) -> <init>
    683:687:be.alexandre01.dnplugin.shaded.netty.util.internal.AppendableCharSequence parse(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> parse
    692:713:boolean process(byte) -> process
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$LineParser -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$LineParser:
    be.alexandre01.dnplugin.shaded.netty.util.internal.AppendableCharSequence seq -> seq
    int size -> size
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder this$0 -> this$0
    721:723:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder,be.alexandre01.dnplugin.shaded.netty.util.internal.AppendableCharSequence) -> <init>
    726:730:be.alexandre01.dnplugin.shaded.netty.util.internal.AppendableCharSequence parse(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> parse
    735:752:boolean process(byte) -> process
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$State -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$State:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$State SKIP_CONTROL_CHARS -> SKIP_CONTROL_CHARS
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$State READ_INITIAL -> READ_INITIAL
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$State READ_HEADER -> READ_HEADER
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$State READ_VARIABLE_LENGTH_CONTENT -> READ_VARIABLE_LENGTH_CONTENT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$State READ_FIXED_LENGTH_CONTENT -> READ_FIXED_LENGTH_CONTENT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$State READ_CHUNK_SIZE -> READ_CHUNK_SIZE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$State READ_CHUNKED_CONTENT -> READ_CHUNKED_CONTENT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$State READ_CHUNK_DELIMITER -> READ_CHUNK_DELIMITER
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$State READ_CHUNK_FOOTER -> READ_CHUNK_FOOTER
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$State BAD_MESSAGE -> BAD_MESSAGE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$State UPGRADED -> UPGRADED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$State[] $VALUES -> $VALUES
    124:124:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$State[] values() -> values
    124:124:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectDecoder$State valueOf(java.lang.String) -> valueOf
    124:124:void <init>(java.lang.String,int) -> <init>
    124:135:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObjectEncoder:
    byte[] CRLF -> CRLF
    byte[] ZERO_CRLF -> ZERO_CRLF
    byte[] ZERO_CRLF_CRLF -> ZERO_CRLF_CRLF
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf CRLF_BUF -> CRLF_BUF
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf ZERO_CRLF_CRLF_BUF -> ZERO_CRLF_CRLF_BUF
    int ST_INIT -> ST_INIT
    int ST_CONTENT_NON_CHUNK -> ST_CONTENT_NON_CHUNK
    int ST_CONTENT_CHUNK -> ST_CONTENT_CHUNK
    int state -> state
    43:55:void <init>() -> <init>
    60:120:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    123:153:void encodeChunkedContent(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,long,java.util.List) -> encodeChunkedContent
    157:157:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    161:170:java.lang.Object encodeAndRetain(java.lang.Object) -> encodeAndRetain
    174:183:long contentLength(java.lang.Object) -> contentLength
    188:189:void encodeAscii(java.lang.String,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encodeAscii
    void encodeInitialLine(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> encodeInitialLine
    44:48:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod getMethod() -> getMethod
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest setMethod(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod) -> setMethod
    java.lang.String getUri() -> getUri
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequestDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequestDecoder:
    62:63:void <init>() -> <init>
    70:71:void <init>(int,int,int) -> <init>
    75:76:void <init>(int,int,int,boolean) -> <init>
    80:80:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage createMessage(java.lang.String[]) -> createMessage
    87:87:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage createInvalidMessage() -> createInvalidMessage
    92:92:boolean isDecodingRequest() -> isDecodingRequest
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequestEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequestEncoder:
    char SLASH -> SLASH
    char QUESTION_MARK -> QUESTION_MARK
    byte[] CRLF -> CRLF
    27:27:void <init>() -> <init>
    34:34:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    39:77:void encodeInitialLine(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest) -> encodeInitialLine
    27:27:void encodeInitialLine(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> encodeInitialLine
    30:30:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus getStatus() -> getStatus
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse setStatus(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseDecoder:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus UNKNOWN_STATUS -> UNKNOWN_STATUS
    93:94:void <init>() -> <init>
    101:102:void <init>(int,int,int) -> <init>
    106:107:void <init>(int,int,int,boolean) -> <init>
    111:111:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage createMessage(java.lang.String[]) -> createMessage
    118:118:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage createInvalidMessage() -> createInvalidMessage
    123:123:boolean isDecodingRequest() -> isDecodingRequest
    86:86:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseEncoder:
    byte[] CRLF -> CRLF
    26:26:void <init>() -> <init>
    31:31:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    36:40:void encodeInitialLine(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse) -> encodeInitialLine
    26:26:void encodeInitialLine(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> encodeInitialLine
    27:27:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus CONTINUE -> CONTINUE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus SWITCHING_PROTOCOLS -> SWITCHING_PROTOCOLS
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus PROCESSING -> PROCESSING
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus OK -> OK
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus CREATED -> CREATED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus ACCEPTED -> ACCEPTED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus NON_AUTHORITATIVE_INFORMATION -> NON_AUTHORITATIVE_INFORMATION
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus NO_CONTENT -> NO_CONTENT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus RESET_CONTENT -> RESET_CONTENT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus PARTIAL_CONTENT -> PARTIAL_CONTENT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus MULTI_STATUS -> MULTI_STATUS
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus MULTIPLE_CHOICES -> MULTIPLE_CHOICES
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus MOVED_PERMANENTLY -> MOVED_PERMANENTLY
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus FOUND -> FOUND
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus SEE_OTHER -> SEE_OTHER
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus NOT_MODIFIED -> NOT_MODIFIED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus USE_PROXY -> USE_PROXY
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus TEMPORARY_REDIRECT -> TEMPORARY_REDIRECT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus BAD_REQUEST -> BAD_REQUEST
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus UNAUTHORIZED -> UNAUTHORIZED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus PAYMENT_REQUIRED -> PAYMENT_REQUIRED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus FORBIDDEN -> FORBIDDEN
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus NOT_FOUND -> NOT_FOUND
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus METHOD_NOT_ALLOWED -> METHOD_NOT_ALLOWED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus NOT_ACCEPTABLE -> NOT_ACCEPTABLE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus PROXY_AUTHENTICATION_REQUIRED -> PROXY_AUTHENTICATION_REQUIRED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus REQUEST_TIMEOUT -> REQUEST_TIMEOUT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus CONFLICT -> CONFLICT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus GONE -> GONE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus LENGTH_REQUIRED -> LENGTH_REQUIRED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus PRECONDITION_FAILED -> PRECONDITION_FAILED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus REQUEST_ENTITY_TOO_LARGE -> REQUEST_ENTITY_TOO_LARGE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus REQUEST_URI_TOO_LONG -> REQUEST_URI_TOO_LONG
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus UNSUPPORTED_MEDIA_TYPE -> UNSUPPORTED_MEDIA_TYPE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus REQUESTED_RANGE_NOT_SATISFIABLE -> REQUESTED_RANGE_NOT_SATISFIABLE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus EXPECTATION_FAILED -> EXPECTATION_FAILED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus UNPROCESSABLE_ENTITY -> UNPROCESSABLE_ENTITY
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus LOCKED -> LOCKED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus FAILED_DEPENDENCY -> FAILED_DEPENDENCY
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus UNORDERED_COLLECTION -> UNORDERED_COLLECTION
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus UPGRADE_REQUIRED -> UPGRADE_REQUIRED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus PRECONDITION_REQUIRED -> PRECONDITION_REQUIRED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus TOO_MANY_REQUESTS -> TOO_MANY_REQUESTS
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus REQUEST_HEADER_FIELDS_TOO_LARGE -> REQUEST_HEADER_FIELDS_TOO_LARGE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus INTERNAL_SERVER_ERROR -> INTERNAL_SERVER_ERROR
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus NOT_IMPLEMENTED -> NOT_IMPLEMENTED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus BAD_GATEWAY -> BAD_GATEWAY
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus SERVICE_UNAVAILABLE -> SERVICE_UNAVAILABLE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus GATEWAY_TIMEOUT -> GATEWAY_TIMEOUT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus HTTP_VERSION_NOT_SUPPORTED -> HTTP_VERSION_NOT_SUPPORTED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus VARIANT_ALSO_NEGOTIATES -> VARIANT_ALSO_NEGOTIATES
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus INSUFFICIENT_STORAGE -> INSUFFICIENT_STORAGE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus NOT_EXTENDED -> NOT_EXTENDED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus NETWORK_AUTHENTICATION_REQUIRED -> NETWORK_AUTHENTICATION_REQUIRED
    int code -> code
    java.lang.String reasonPhrase -> reasonPhrase
    byte[] bytes -> bytes
    326:455:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus valueOf(int) -> valueOf
    468:469:void <init>(int,java.lang.String) -> <init>
    471:499:void <init>(int,java.lang.String,boolean) -> <init>
    505:505:int code() -> code
    512:512:java.lang.String reasonPhrase() -> reasonPhrase
    517:517:int hashCode() -> hashCode
    526:530:boolean equals(java.lang.Object) -> equals
    539:539:int compareTo(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus) -> compareTo
    544:548:java.lang.String toString() -> toString
    552:559:void encode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    28:28:int compareTo(java.lang.Object) -> compareTo
    33:317:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpServerCodec -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpServerCodec:
    36:37:void <init>() -> <init>
    43:44:void <init>(int,int,int) -> <init>
    50:52:void <init>(int,int,int,boolean) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion:
    java.util.regex.Pattern VERSION_PATTERN -> VERSION_PATTERN
    java.lang.String HTTP_1_0_STRING -> HTTP_1_0_STRING
    java.lang.String HTTP_1_1_STRING -> HTTP_1_1_STRING
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion HTTP_1_0 -> HTTP_1_0
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion HTTP_1_1 -> HTTP_1_1
    java.lang.String protocolName -> protocolName
    int majorVersion -> majorVersion
    int minorVersion -> minorVersion
    java.lang.String text -> text
    boolean keepAliveDefault -> keepAliveDefault
    byte[] bytes -> bytes
    56:87:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion valueOf(java.lang.String) -> valueOf
    91:97:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion version0(java.lang.String) -> version0
    118:139:void <init>(java.lang.String,boolean) -> <init>
    155:156:void <init>(java.lang.String,int,int,boolean) -> <init>
    160:195:void <init>(java.lang.String,int,int,boolean,boolean) -> <init>
    201:201:java.lang.String protocolName() -> protocolName
    208:208:int majorVersion() -> majorVersion
    215:215:int minorVersion() -> minorVersion
    222:222:java.lang.String text() -> text
    230:230:boolean isKeepAliveDefault() -> isKeepAliveDefault
    238:238:java.lang.String toString() -> toString
    243:243:int hashCode() -> hashCode
    249:254:boolean equals(java.lang.Object) -> equals
    261:271:int compareTo(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> compareTo
    275:280:void encode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    29:29:int compareTo(java.lang.Object) -> compareTo
    31:45:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent EMPTY_LAST_CONTENT -> EMPTY_LAST_CONTENT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent copy() -> copy
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain() -> retain
    30:30:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent$1:
    30:30:void <init>() -> <init>
    34:34:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf content() -> content
    39:39:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent copy() -> copy
    44:44:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent duplicate() -> duplicate
    49:49:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    54:54:be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    59:59:void setDecoderResult(be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult) -> setDecoderResult
    64:64:int refCnt() -> refCnt
    69:69:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain() -> retain
    74:74:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    79:79:boolean release() -> release
    84:84:boolean release(int) -> release
    89:89:java.lang.String toString() -> toString
    30:30:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain(int) -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain() -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    30:30:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent copy() -> copy
    30:30:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    30:30:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    30:30:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.QueryStringDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.QueryStringDecoder:
    int DEFAULT_MAX_PARAMS -> DEFAULT_MAX_PARAMS
    java.nio.charset.Charset charset -> charset
    java.lang.String uri -> uri
    boolean hasPath -> hasPath
    int maxParams -> maxParams
    java.lang.String path -> path
    java.util.Map params -> params
    int nParams -> nParams
    73:74:void <init>(java.lang.String) -> <init>
    81:82:void <init>(java.lang.String,boolean) -> <init>
    89:90:void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    97:98:void <init>(java.lang.String,java.nio.charset.Charset,boolean) -> <init>
    104:120:void <init>(java.lang.String,java.nio.charset.Charset,boolean,int) -> <init>
    127:128:void <init>(java.net.URI) -> <init>
    135:136:void <init>(java.net.URI,java.nio.charset.Charset) -> <init>
    142:166:void <init>(java.net.URI,java.nio.charset.Charset,int) -> <init>
    172:184:java.lang.String path() -> path
    191:205:java.util.Map parameters() -> parameters
    209:250:void decodeParams(java.lang.String) -> decodeParams
    253:264:boolean addParam(java.util.Map,java.lang.String,java.lang.String) -> addParam
    279:279:java.lang.String decodeComponent(java.lang.String) -> decodeComponent
    305:357:java.lang.String decodeComponent(java.lang.String,java.nio.charset.Charset) -> decodeComponent
    368:375:char decodeHexNibble(char) -> decodeHexNibble
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.QueryStringEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.QueryStringEncoder:
    java.nio.charset.Charset charset -> charset
    java.lang.String uri -> uri
    java.util.List params -> params
    49:50:void <init>(java.lang.String) -> <init>
    42:66:void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    72:76:void addParam(java.lang.String,java.lang.String) -> addParam
    84:84:java.net.URI toUri() -> toUri
    94:109:java.lang.String toString() -> toString
    116:118:java.lang.String encodeComponent(java.lang.String,java.nio.charset.Charset) -> encodeComponent
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.QueryStringEncoder$Param -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.QueryStringEncoder$Param:
    java.lang.String name -> name
    java.lang.String value -> value
    127:130:void <init>(java.lang.String,java.lang.String) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.ServerCookieEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.ServerCookieEncoder:
    42:42:java.lang.String encode(java.lang.String,java.lang.String) -> encode
    46:120:java.lang.String encode(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.Cookie) -> encode
    124:135:java.util.List encode(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.Cookie[]) -> encode
    139:150:java.util.List encode(java.util.Collection) -> encode
    154:165:java.util.List encode(java.lang.Iterable) -> encode
    168:170:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig:
    java.util.Set origins -> origins
    boolean anyOrigin -> anyOrigin
    boolean enabled -> enabled
    java.util.Set exposeHeaders -> exposeHeaders
    boolean allowCredentials -> allowCredentials
    long maxAge -> maxAge
    java.util.Set allowedRequestMethods -> allowedRequestMethods
    java.util.Set allowedRequestHeaders -> allowedRequestHeaders
    boolean allowNullOrigin -> allowNullOrigin
    java.util.Map preflightHeaders -> preflightHeaders
    boolean shortCurcuit -> shortCurcuit
    52:64:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder) -> <init>
    72:72:boolean isCorsSupportEnabled() -> isCorsSupportEnabled
    81:81:boolean isAnyOriginSupported() -> isAnyOriginSupported
    90:90:java.lang.String origin() -> origin
    99:99:java.util.Set origins() -> origins
    112:112:boolean isNullOriginAllowed() -> isNullOriginAllowed
    138:138:java.util.Set exposedHeaders() -> exposedHeaders
    159:159:boolean isCredentialsAllowed() -> isCredentialsAllowed
    173:173:long maxAge() -> maxAge
    183:183:java.util.Set allowedRequestMethods() -> allowedRequestMethods
    195:195:java.util.Set allowedRequestHeaders() -> allowedRequestHeaders
    204:216:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders preflightResponseHeaders() -> preflightResponseHeaders
    230:230:boolean isShortCurcuit() -> isShortCurcuit
    235:237:java.lang.Object getValue(java.util.concurrent.Callable) -> getValue
    243:243:java.lang.String toString() -> toString
    260:260:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder withAnyOrigin() -> withAnyOrigin
    269:272:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder withOrigin(java.lang.String) -> withOrigin
    281:281:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder withOrigins(java.lang.String[]) -> withOrigins
    38:38:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$1:
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder:
    java.util.Set origins -> origins
    boolean anyOrigin -> anyOrigin
    boolean allowNullOrigin -> allowNullOrigin
    boolean enabled -> enabled
    boolean allowCredentials -> allowCredentials
    java.util.Set exposeHeaders -> exposeHeaders
    long maxAge -> maxAge
    java.util.Set requestMethods -> requestMethods
    java.util.Set requestHeaders -> requestHeaders
    java.util.Map preflightHeaders -> preflightHeaders
    boolean noPreflightHeaders -> noPreflightHeaders
    boolean shortCurcuit -> shortCurcuit
    292:310:void <init>(java.lang.String[]) -> <init>
    292:320:void <init>() -> <init>
    330:331:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder allowNullOrigin() -> allowNullOrigin
    340:341:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder disable() -> disable
    370:371:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder exposeHeaders(java.lang.String[]) -> exposeHeaders
    390:391:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder allowCredentials() -> allowCredentials
    404:405:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder maxAge(long) -> maxAge
    416:417:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder allowedRequestMethods(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod[]) -> allowedRequestMethods
    437:438:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder allowedRequestHeaders(java.lang.String[]) -> allowedRequestHeaders
    452:457:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder preflightResponseHeader(java.lang.CharSequence,java.lang.Object[]) -> preflightResponseHeader
    472:473:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder preflightResponseHeader(java.lang.CharSequence,java.lang.Iterable) -> preflightResponseHeader
    492:493:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder preflightResponseHeader(java.lang.String,java.util.concurrent.Callable) -> preflightResponseHeader
    502:503:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder noPreflightResponseHeaders() -> noPreflightResponseHeaders
    512:516:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig build() -> build
    530:531:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder shortCurcuit() -> shortCurcuit
    287:287:java.util.Set access$000(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder) -> access$000
    287:287:boolean access$100(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder) -> access$100
    287:287:boolean access$200(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder) -> access$200
    287:287:java.util.Set access$300(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder) -> access$300
    287:287:boolean access$400(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder) -> access$400
    287:287:long access$500(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder) -> access$500
    287:287:java.util.Set access$600(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder) -> access$600
    287:287:java.util.Set access$700(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder) -> access$700
    287:287:boolean access$800(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder) -> access$800
    287:287:java.util.Map access$900(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder) -> access$900
    287:287:boolean access$1000(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$Builder) -> access$1000
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$ConstantValueGenerator -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$ConstantValueGenerator:
    java.lang.Object value -> value
    549:554:void <init>(java.lang.Object) -> <init>
    558:558:java.lang.Object call() -> call
    540:540:void <init>(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$DateValueGenerator -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig$DateValueGenerator:
    567:567:void <init>() -> <init>
    571:571:java.util.Date call() -> call
    567:567:java.lang.Object call() -> call
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsHandler -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsHandler:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig config -> config
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest request -> request
    46:48:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.cors.CorsConfig) -> <init>
    52:64:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    67:76:void handlePreflight(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest) -> handlePreflight
    85:86:void setPreflightHeaders(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse) -> setPreflightHeaders
    89:111:boolean setOrigin(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse) -> setOrigin
    115:129:boolean validateOrigin() -> validateOrigin
    133:134:void echoRequestOrigin(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse) -> echoRequestOrigin
    137:138:void setVaryHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse) -> setVaryHeader
    141:142:void setAnyOrigin(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse) -> setAnyOrigin
    145:146:void setOrigin(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse,java.lang.String) -> setOrigin
    149:152:void setAllowCredentials(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse) -> setAllowCredentials
    155:156:boolean isPreflightRequest(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest) -> isPreflightRequest
    162:165:void setExposeHeaders(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse) -> setExposeHeaders
    168:169:void setAllowMethods(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse) -> setAllowMethods
    172:173:void setAllowHeaders(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse) -> setAllowHeaders
    176:177:void setMaxAge(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse) -> setMaxAge
    182:191:void write(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    195:197:void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    200:202:void forbidden(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest) -> forbidden
    41:41:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.AbstractDiskHttpData -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.AbstractDiskHttpData:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.io.File file -> file
    boolean isRenamed -> isRenamed
    java.nio.channels.FileChannel fileChannel -> fileChannel
    47:48:void <init>(java.lang.String,java.nio.charset.Charset,long) -> <init>
    java.lang.String getDiskFilename() -> getDiskFilename
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getBaseDirectory() -> getBaseDirectory
    java.lang.String getPostfix() -> getPostfix
    boolean deleteOnExit() -> deleteOnExit
    81:98:java.io.File tempFile() -> tempFile
    103:136:void setContent(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setContent
    141:185:void addContent(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,boolean) -> addContent
    189:196:void setContent(java.io.File) -> setContent
    200:228:void setContent(java.io.InputStream) -> setContent
    232:247:void delete() -> delete
    251:254:byte[] get() -> get
    259:263:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    268:294:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getChunk(int) -> getChunk
    299:299:java.lang.String getString() -> getString
    304:312:java.lang.String getString(java.nio.charset.Charset) -> getString
    317:317:boolean isInMemory() -> isInMemory
    322:356:boolean renameTo(java.io.File) -> renameTo
    364:378:byte[] readFrom(java.io.File) -> readFrom
    383:383:java.io.File getFile() -> getFile
    40:40:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.AbstractHttpData -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.AbstractHttpData:
    java.util.regex.Pattern STRIP_PATTERN -> STRIP_PATTERN
    java.util.regex.Pattern REPLACE_PATTERN -> REPLACE_PATTERN
    java.lang.String name -> name
    long definedSize -> definedSize
    long size -> size
    java.nio.charset.Charset charset -> charset
    boolean completed -> completed
    38:58:void <init>(java.lang.String,java.nio.charset.Charset,long) -> <init>
    62:62:java.lang.String getName() -> getName
    67:67:boolean isCompleted() -> isCompleted
    72:72:java.nio.charset.Charset getCharset() -> getCharset
    77:81:void setCharset(java.nio.charset.Charset) -> setCharset
    85:85:long length() -> length
    91:93:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf content() -> content
    99:100:void deallocate() -> deallocate
    104:105:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData retain() -> retain
    110:111:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    32:33:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.AbstractMemoryHttpData -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.AbstractMemoryHttpData:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf byteBuf -> byteBuf
    int chunkPosition -> chunkPosition
    boolean isRenamed -> isRenamed
    43:44:void <init>(java.lang.String,java.nio.charset.Charset,long) -> <init>
    48:62:void setContent(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setContent
    66:87:void setContent(java.io.InputStream) -> setContent
    92:119:void addContent(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,boolean) -> addContent
    123:148:void setContent(java.io.File) -> setContent
    152:156:void delete() -> delete
    160:165:byte[] get() -> get
    170:170:java.lang.String getString() -> getString
    175:181:java.lang.String getString(java.nio.charset.Charset) -> getString
    191:191:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    196:211:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getChunk(int) -> getChunk
    216:216:boolean isInMemory() -> isInMemory
    221:250:boolean renameTo(java.io.File) -> renameTo
    255:255:java.io.File getFile() -> getFile
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute:
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute copy() -> copy
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute duplicate() -> duplicate
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute retain() -> retain
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute retain(int) -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.CaseIgnoringComparator -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.CaseIgnoringComparator:
    long serialVersionUID -> serialVersionUID
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.CaseIgnoringComparator INSTANCE -> INSTANCE
    27:28:void <init>() -> <init>
    32:50:int compare(java.lang.CharSequence,java.lang.CharSequence) -> compare
    54:54:java.lang.Object readResolve() -> readResolve
    21:21:int compare(java.lang.Object,java.lang.Object) -> compare
    25:25:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.DefaultHttpDataFactory -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.DefaultHttpDataFactory:
    long MINSIZE -> MINSIZE
    boolean useDisk -> useDisk
    boolean checkSize -> checkSize
    long minSize -> minSize
    java.util.Map requestFileDeleteMap -> requestFileDeleteMap
    52:62:void <init>() -> <init>
    52:70:void <init>(boolean) -> <init>
    52:80:void <init>(long) -> <init>
    86:91:java.util.List getList(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest) -> getList
    96:108:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute createAttribute(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,java.lang.String) -> createAttribute
    113:134:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute createAttribute(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String) -> createAttribute
    142:156:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload createFileUpload(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> createFileUpload
    162:166:void removeHttpDataFromClean(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData) -> removeHttpDataFromClean
    170:177:void cleanRequestHttpDatas(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest) -> cleanRequestHttpDatas
    181:194:void cleanAllHttpDatas() -> cleanAllHttpDatas
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.DiskAttribute -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.DiskAttribute:
    java.lang.String baseDirectory -> baseDirectory
    boolean deleteOnExitTemporaryFile -> deleteOnExitTemporaryFile
    java.lang.String prefix -> prefix
    java.lang.String postfix -> postfix
    42:43:void <init>(java.lang.String) -> <init>
    46:48:void <init>(java.lang.String,java.lang.String) -> <init>
    52:52:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    57:58:java.lang.String getValue() -> getValue
    63:72:void setValue(java.lang.String) -> setValue
    76:81:void addContent(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,boolean) -> addContent
    84:84:int hashCode() -> hashCode
    89:93:boolean equals(java.lang.Object) -> equals
    98:102:int compareTo(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    106:106:int compareTo(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute) -> compareTo
    112:114:java.lang.String toString() -> toString
    120:120:boolean deleteOnExit() -> deleteOnExit
    125:125:java.lang.String getBaseDirectory() -> getBaseDirectory
    130:130:java.lang.String getDiskFilename() -> getDiskFilename
    135:135:java.lang.String getPostfix() -> getPostfix
    140:140:java.lang.String getPrefix() -> getPrefix
    145:155:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute copy() -> copy
    160:170:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute duplicate() -> duplicate
    175:176:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute retain(int) -> retain
    181:182:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute retain() -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData retain() -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData duplicate() -> duplicate
    29:29:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData copy() -> copy
    29:29:int compareTo(java.lang.Object) -> compareTo
    29:29:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    29:29:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    32:32:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.DiskFileUpload -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.DiskFileUpload:
    java.lang.String baseDirectory -> baseDirectory
    boolean deleteOnExitTemporaryFile -> deleteOnExitTemporaryFile
    java.lang.String prefix -> prefix
    java.lang.String postfix -> postfix
    java.lang.String filename -> filename
    java.lang.String contentType -> contentType
    java.lang.String contentTransferEncoding -> contentTransferEncoding
    46:50:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> <init>
    54:54:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    59:59:java.lang.String getFilename() -> getFilename
    64:68:void setFilename(java.lang.String) -> setFilename
    72:72:int hashCode() -> hashCode
    77:81:boolean equals(java.lang.Object) -> equals
    86:90:int compareTo(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    95:100:int compareTo(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload) -> compareTo
    105:109:void setContentType(java.lang.String) -> setContentType
    113:113:java.lang.String getContentType() -> getContentType
    118:118:java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    123:124:void setContentTransferEncoding(java.lang.String) -> setContentTransferEncoding
    128:128:java.lang.String toString() -> toString
    142:142:boolean deleteOnExit() -> deleteOnExit
    147:147:java.lang.String getBaseDirectory() -> getBaseDirectory
    152:153:java.lang.String getDiskFilename() -> getDiskFilename
    158:158:java.lang.String getPostfix() -> getPostfix
    163:163:java.lang.String getPrefix() -> getPrefix
    168:178:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload copy() -> copy
    183:193:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload duplicate() -> duplicate
    198:199:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload retain(int) -> retain
    204:205:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload retain() -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData retain() -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData duplicate() -> duplicate
    29:29:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData copy() -> copy
    29:29:int compareTo(java.lang.Object) -> compareTo
    29:29:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    29:29:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    32:32:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload:
    java.lang.String getFilename() -> getFilename
    void setFilename(java.lang.String) -> setFilename
    void setContentType(java.lang.String) -> setContentType
    java.lang.String getContentType() -> getContentType
    void setContentTransferEncoding(java.lang.String) -> setContentTransferEncoding
    java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload copy() -> copy
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload duplicate() -> duplicate
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload retain() -> retain
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload retain(int) -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData:
    void setContent(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setContent
    void addContent(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,boolean) -> addContent
    void setContent(java.io.File) -> setContent
    void setContent(java.io.InputStream) -> setContent
    boolean isCompleted() -> isCompleted
    long length() -> length
    void delete() -> delete
    byte[] get() -> get
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getChunk(int) -> getChunk
    java.lang.String getString() -> getString
    java.lang.String getString(java.nio.charset.Charset) -> getString
    void setCharset(java.nio.charset.Charset) -> setCharset
    java.nio.charset.Charset getCharset() -> getCharset
    boolean renameTo(java.io.File) -> renameTo
    boolean isInMemory() -> isInMemory
    java.io.File getFile() -> getFile
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData copy() -> copy
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData duplicate() -> duplicate
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData retain() -> retain
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpDataFactory -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpDataFactory:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute createAttribute(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,java.lang.String) -> createAttribute
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute createAttribute(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String) -> createAttribute
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload createFileUpload(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> createFileUpload
    void removeHttpDataFromClean(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData) -> removeHttpDataFromClean
    void cleanRequestHttpDatas(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest) -> cleanRequestHttpDatas
    void cleanAllHttpDatas() -> cleanAllHttpDatas
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostBodyUtil -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostBodyUtil:
    int chunkSize -> chunkSize
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String NAME -> NAME
    java.lang.String FILENAME -> FILENAME
    java.lang.String FORM_DATA -> FORM_DATA
    java.lang.String ATTACHMENT -> ATTACHMENT
    java.lang.String FILE -> FILE
    java.lang.String MULTIPART_MIXED -> MULTIPART_MIXED
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.lang.String DEFAULT_BINARY_CONTENT_TYPE -> DEFAULT_BINARY_CONTENT_TYPE
    java.lang.String DEFAULT_TEXT_CONTENT_TYPE -> DEFAULT_TEXT_CONTENT_TYPE
    120:121:void <init>() -> <init>
    188:193:int findNonWhitespace(java.lang.String,int) -> findNonWhitespace
    202:207:int findWhitespace(java.lang.String,int) -> findWhitespace
    216:221:int findEndOfString(java.lang.String) -> findEndOfString
    61:66:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadNoBackArrayException -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadNoBackArrayException:
    long serialVersionUID -> serialVersionUID
    126:126:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize:
    byte[] bytes -> bytes
    int readerIndex -> readerIndex
    int pos -> pos
    int origPos -> origPos
    int limit -> limit
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer -> buffer
    142:151:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    159:162:void setReadPosition(int) -> setReadPosition
    170:170:int getReadPosition(int) -> getReadPosition
    174:179:void clear() -> clear
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism BIT7 -> BIT7
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism BIT8 -> BIT8
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism BINARY -> BINARY
    java.lang.String value -> value
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism[] $VALUES -> $VALUES
    86:86:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism[] values() -> values
    86:86:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism valueOf(java.lang.String) -> valueOf
    102:104:void <init>(java.lang.String,int,java.lang.String) -> <init>
    106:108:void <init>(java.lang.String,int) -> <init>
    111:111:java.lang.String value() -> value
    116:116:java.lang.String toString() -> toString
    86:98:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder:
    int DEFAULT_DISCARD_THRESHOLD -> DEFAULT_DISCARD_THRESHOLD
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpDataFactory factory -> factory
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest request -> request
    java.nio.charset.Charset charset -> charset
    boolean bodyToDecode -> bodyToDecode
    boolean isLastChunk -> isLastChunk
    java.util.List bodyListHttpData -> bodyListHttpData
    java.util.Map bodyMapHttpData -> bodyMapHttpData
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf undecodedChunk -> undecodedChunk
    boolean isMultipart -> isMultipart
    int bodyListHttpDataRank -> bodyListHttpDataRank
    java.lang.String multipartDataBoundary -> multipartDataBoundary
    java.lang.String multipartMixedBoundary -> multipartMixedBoundary
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus currentStatus -> currentStatus
    java.util.Map currentFieldAttributes -> currentFieldAttributes
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload currentFileUpload -> currentFileUpload
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute currentAttribute -> currentAttribute
    boolean destroyed -> destroyed
    int discardThreshold -> discardThreshold
    150:151:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest) -> <init>
    169:170:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpDataFactory,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest) -> <init>
    78:225:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpDataFactory,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset) -> <init>
    268:288:void checkMultipart(java.lang.String) -> checkMultipart
    291:294:void checkDestroyed() -> checkDestroyed
    302:303:boolean isMultipart() -> isMultipart
    312:316:void setDiscardThreshold(int) -> setDiscardThreshold
    322:322:int getDiscardThreshold() -> getDiscardThreshold
    336:341:java.util.List getBodyHttpDatas() -> getBodyHttpDatas
    356:361:java.util.List getBodyHttpDatas(java.lang.String) -> getBodyHttpDatas
    377:386:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData getBodyHttpData(java.lang.String) -> getBodyHttpData
    399:417:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder offer(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent) -> offer
    431:439:boolean hasNext() -> hasNext
    455:460:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData next() -> next
    471:482:void parseBody() -> parseBody
    488:498:void addHttpData(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData) -> addHttpData
    509:614:void parseBodyAttributesStandard() -> parseBodyAttributesStandard
    627:746:void parseBodyAttributes() -> parseBodyAttributes
    749:754:void setFinalBuffer(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setFinalBuffer
    763:765:java.lang.String decodeAttribute(java.lang.String,java.nio.charset.Charset) -> decodeAttribute
    777:789:void parseBodyMultipart() -> parseBodyMultipart
    808:893:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData decodeMultipart(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus) -> decodeMultipart
    905:922:void skipControlCharacters() -> skipControlCharacters
    927:933:void skipControlCharactersStandard() -> skipControlCharactersStandard
    950:981:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData findMultipartDelimiter(java.lang.String,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus) -> findMultipartDelimiter
    991:1127:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData findMultipartDisposition() -> findMultipartDisposition
    1143:1228:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData getFileUpload(java.lang.String) -> getFileUpload
    1236:1249:void destroy() -> destroy
    1255:1258:void cleanFiles() -> cleanFiles
    1264:1267:void removeHttpDataFromClean(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData) -> removeHttpDataFromClean
    1274:1279:void cleanMixedAttributes() -> cleanMixedAttributes
    1290:1318:java.lang.String readLineStandard() -> readLineStandard
    1332:1368:java.lang.String readLine() -> readLine
    1387:1463:java.lang.String readDelimiterStandard(java.lang.String) -> readDelimiterStandard
    1483:1589:java.lang.String readDelimiter(java.lang.String) -> readDelimiter
    1604:1698:void readFileUploadByteMultipartStandard(java.lang.String) -> readFileUploadByteMultipartStandard
    1714:1816:void readFileUploadByteMultipart(java.lang.String) -> readFileUploadByteMultipart
    1827:1924:void loadFieldMultipartStandard(java.lang.String) -> loadFieldMultipartStandard
    1936:2037:void loadFieldMultipart(java.lang.String) -> loadFieldMultipart
    2045:2064:java.lang.String cleanString(java.lang.String) -> cleanString
    2073:2093:boolean skipOneLine() -> skipOneLine
    2106:2116:java.lang.String[] splitHeaderContentType(java.lang.String) -> splitHeaderContentType
    2126:2162:java.lang.String[] splitMultipartHeader(java.lang.String) -> splitMultipartHeader
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$http$multipart$HttpPostRequestDecoder$MultiPartStatus -> $SwitchMap$io$netty$handler$codec$http$multipart$HttpPostRequestDecoder$MultiPartStatus
    521:521:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$EndOfDataDecoderException -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$EndOfDataDecoderException:
    long serialVersionUID -> serialVersionUID
    2191:2191:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$ErrorDataDecoderException -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$ErrorDataDecoderException:
    long serialVersionUID -> serialVersionUID
    2201:2202:void <init>() -> <init>
    2205:2206:void <init>(java.lang.String) -> <init>
    2209:2210:void <init>(java.lang.Throwable) -> <init>
    2213:2214:void <init>(java.lang.String,java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$IncompatibleDataDecoderException -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$IncompatibleDataDecoderException:
    long serialVersionUID -> serialVersionUID
    2223:2224:void <init>() -> <init>
    2227:2228:void <init>(java.lang.String) -> <init>
    2231:2232:void <init>(java.lang.Throwable) -> <init>
    2235:2236:void <init>(java.lang.String,java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus NOTSTARTED -> NOTSTARTED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus PREAMBLE -> PREAMBLE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus HEADERDELIMITER -> HEADERDELIMITER
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus DISPOSITION -> DISPOSITION
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus FIELD -> FIELD
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus FILEUPLOAD -> FILEUPLOAD
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDPREAMBLE -> MIXEDPREAMBLE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDDELIMITER -> MIXEDDELIMITER
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDDISPOSITION -> MIXEDDISPOSITION
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDFILEUPLOAD -> MIXEDFILEUPLOAD
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDCLOSEDELIMITER -> MIXEDCLOSEDELIMITER
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus CLOSEDELIMITER -> CLOSEDELIMITER
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus PREEPILOGUE -> PREEPILOGUE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus EPILOGUE -> EPILOGUE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus[] $VALUES -> $VALUES
    257:257:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus[] values() -> values
    257:257:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus valueOf(java.lang.String) -> valueOf
    257:257:void <init>(java.lang.String,int) -> <init>
    257:259:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$NotEnoughDataDecoderException -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestDecoder$NotEnoughDataDecoderException:
    long serialVersionUID -> serialVersionUID
    2172:2173:void <init>() -> <init>
    2176:2177:void <init>(java.lang.String) -> <init>
    2180:2181:void <init>(java.lang.Throwable) -> <init>
    2184:2185:void <init>(java.lang.String,java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder:
    java.util.Map percentEncodings -> percentEncodings
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpDataFactory factory -> factory
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest request -> request
    java.nio.charset.Charset charset -> charset
    boolean isChunked -> isChunked
    java.util.List bodyListDatas -> bodyListDatas
    java.util.List multipartHttpDatas -> multipartHttpDatas
    boolean isMultipart -> isMultipart
    java.lang.String multipartDataBoundary -> multipartDataBoundary
    java.lang.String multipartMixedBoundary -> multipartMixedBoundary
    boolean headerFinalized -> headerFinalized
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode encoderMode -> encoderMode
    boolean isLastChunk -> isLastChunk
    boolean isLastChunkSent -> isLastChunkSent
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload currentFileUpload -> currentFileUpload
    boolean duringMixedMode -> duringMixedMode
    long globalBodySize -> globalBodySize
    java.util.ListIterator iterator -> iterator
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf currentBuffer -> currentBuffer
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData currentData -> currentData
    boolean isKey -> isKey
    139:141:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,boolean) -> <init>
    158:159:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpDataFactory,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,boolean) -> <init>
    181:801:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpDataFactory,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,boolean,java.nio.charset.Charset,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode) -> <init>
    214:215:void cleanFiles() -> cleanFiles
    245:245:boolean isMultipart() -> isMultipart
    252:253:void initDataMultipart() -> initDataMultipart
    259:260:void initMixedMultipart() -> initMixedMultipart
    268:268:java.lang.String getNewMultipartDelimiter() -> getNewMultipartDelimiter
    277:277:java.util.List getBodyListAttributes() -> getBodyListAttributes
    289:300:void setBodyHttpDatas(java.util.List) -> setBodyHttpDatas
    315:324:void addBodyAttribute(java.lang.String,java.lang.String) -> addBodyAttribute
    344:370:void addBodyFileUpload(java.lang.String,java.io.File,java.lang.String,boolean) -> addBodyFileUpload
    390:396:void addBodyFileUploads(java.lang.String,java.io.File[],java.lang.String[],boolean[]) -> addBodyFileUploads
    407:655:void addBodyHttpData(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData) -> addBodyHttpData
    674:753:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest finalizeRequest() -> finalizeRequest
    762:762:boolean isChunked() -> isChunked
    773:786:java.lang.String encodeAttribute(java.lang.String,java.nio.charset.Charset) -> encodeAttribute
    808:817:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf fillByteBuf() -> fillByteBuf
    832:869:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent encodeNextChunkMultipart(int) -> encodeNextChunkMultipart
    883:963:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent encodeNextChunkUrlEncoded(int) -> encodeNextChunkUrlEncoded
    970:970:void close() -> close
    982:985:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent readChunk(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> readChunk
    998:1063:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent nextChunk() -> nextChunk
    1068:1068:boolean isEndOfInput() -> isEndOfInput
    51:51:java.lang.Object readChunk(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> readChunk
    69:75:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder$1:
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode RFC1738 -> RFC1738
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode RFC3986 -> RFC3986
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode[] $VALUES -> $VALUES
    56:56:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode[] values() -> values
    56:56:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode valueOf(java.lang.String) -> valueOf
    56:56:void <init>(java.lang.String,int) -> <init>
    56:66:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder$ErrorDataEncoderException -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder$ErrorDataEncoderException:
    long serialVersionUID -> serialVersionUID
    1077:1078:void <init>() -> <init>
    1081:1082:void <init>(java.lang.String) -> <init>
    1085:1086:void <init>(java.lang.Throwable) -> <init>
    1089:1090:void <init>(java.lang.String,java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder$WrappedFullHttpRequest -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder$WrappedFullHttpRequest:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent content -> content
    1151:1153:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent) -> <init>
    1157:1158:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    1163:1164:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest setMethod(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod) -> setMethod
    1169:1170:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest setUri(java.lang.String) -> setUri
    1175:1179:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest copy() -> copy
    1184:1188:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest duplicate() -> duplicate
    1193:1194:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest retain(int) -> retain
    1199:1200:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest retain() -> retain
    1205:1205:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf content() -> content
    1210:1213:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    1219:1219:int refCnt() -> refCnt
    1224:1224:boolean release() -> release
    1229:1229:boolean release(int) -> release
    1148:1148:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    1148:1148:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest setMethod(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod) -> setMethod
    1148:1148:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    1148:1148:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    1148:1148:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage retain() -> retain
    1148:1148:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    1148:1148:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage copy() -> copy
    1148:1148:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain() -> retain
    1148:1148:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    1148:1148:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.LastHttpContent copy() -> copy
    1148:1148:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain(int) -> retain
    1148:1148:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent retain() -> retain
    1148:1148:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    1148:1148:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent copy() -> copy
    1148:1148:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    1148:1148:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    1148:1148:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    1148:1148:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    1148:1148:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    1148:1148:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    1148:1148:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpContent,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder$WrappedHttpRequest -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpPostRequestEncoder$WrappedHttpRequest:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest request -> request
    1095:1097:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest) -> <init>
    1101:1102:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    1107:1108:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest setMethod(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod) -> setMethod
    1113:1114:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    1119:1119:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod getMethod() -> getMethod
    1124:1124:java.lang.String getUri() -> getUri
    1129:1129:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    1134:1134:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders headers() -> headers
    1139:1139:be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    1144:1145:void setDecoderResult(be.alexandre01.dnplugin.shaded.netty.handler.codec.DecoderResult) -> setDecoderResult
    1093:1093:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage setProtocolVersion(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData:
    java.lang.String getName() -> getName
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType Attribute -> Attribute
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType FileUpload -> FileUpload
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType InternalAttribute -> InternalAttribute
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType[] $VALUES -> $VALUES
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType[] values() -> values
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:25:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InternalAttribute -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InternalAttribute:
    java.util.List value -> value
    java.nio.charset.Charset charset -> charset
    int size -> size
    31:37:void <init>(java.nio.charset.Charset) -> <init>
    41:41:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    45:51:void addValue(java.lang.String) -> addValue
    54:60:void addValue(java.lang.String,int) -> addValue
    63:73:void setValue(java.lang.String,int) -> setValue
    77:77:int hashCode() -> hashCode
    82:86:boolean equals(java.lang.Object) -> equals
    91:95:int compareTo(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    99:99:int compareTo(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InternalAttribute) -> compareTo
    104:108:java.lang.String toString() -> toString
    112:112:int size() -> size
    116:116:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf toByteBuf() -> toByteBuf
    121:121:java.lang.String getName() -> getName
    127:127:void deallocate() -> deallocate
    30:30:int compareTo(java.lang.Object) -> compareTo
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.MemoryAttribute -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.MemoryAttribute:
    32:33:void <init>(java.lang.String) -> <init>
    36:38:void <init>(java.lang.String,java.lang.String) -> <init>
    42:42:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    47:47:java.lang.String getValue() -> getValue
    52:61:void setValue(java.lang.String) -> setValue
    65:70:void addContent(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,boolean) -> addContent
    74:74:int hashCode() -> hashCode
    79:83:boolean equals(java.lang.Object) -> equals
    88:92:int compareTo(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    96:96:int compareTo(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute) -> compareTo
    101:101:java.lang.String toString() -> toString
    106:116:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute copy() -> copy
    121:131:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute duplicate() -> duplicate
    136:137:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute retain() -> retain
    142:143:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute retain(int) -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData retain() -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData duplicate() -> duplicate
    29:29:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData copy() -> copy
    29:29:int compareTo(java.lang.Object) -> compareTo
    29:29:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    29:29:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    29:29:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.MemoryFileUpload -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.MemoryFileUpload:
    java.lang.String filename -> filename
    java.lang.String contentType -> contentType
    java.lang.String contentTransferEncoding -> contentTransferEncoding
    40:44:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> <init>
    48:48:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    53:53:java.lang.String getFilename() -> getFilename
    58:62:void setFilename(java.lang.String) -> setFilename
    66:66:int hashCode() -> hashCode
    71:75:boolean equals(java.lang.Object) -> equals
    80:84:int compareTo(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    89:94:int compareTo(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload) -> compareTo
    99:103:void setContentType(java.lang.String) -> setContentType
    107:107:java.lang.String getContentType() -> getContentType
    112:112:java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    117:118:void setContentTransferEncoding(java.lang.String) -> setContentTransferEncoding
    122:122:java.lang.String toString() -> toString
    134:145:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload copy() -> copy
    150:161:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload duplicate() -> duplicate
    165:166:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload retain() -> retain
    171:172:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload retain(int) -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData retain() -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData duplicate() -> duplicate
    30:30:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData copy() -> copy
    30:30:int compareTo(java.lang.Object) -> compareTo
    30:30:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    30:30:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    30:30:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.MixedAttribute -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.MixedAttribute:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute attribute -> attribute
    long limitSize -> limitSize
    33:36:void <init>(java.lang.String,long) -> <init>
    38:58:void <init>(java.lang.String,java.lang.String,long) -> <init>
    62:74:void addContent(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,boolean) -> addContent
    78:79:void delete() -> delete
    83:83:byte[] get() -> get
    88:88:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    93:93:java.nio.charset.Charset getCharset() -> getCharset
    98:98:java.lang.String getString() -> getString
    103:103:java.lang.String getString(java.nio.charset.Charset) -> getString
    108:108:boolean isCompleted() -> isCompleted
    113:113:boolean isInMemory() -> isInMemory
    118:118:long length() -> length
    123:123:boolean renameTo(java.io.File) -> renameTo
    128:129:void setCharset(java.nio.charset.Charset) -> setCharset
    133:140:void setContent(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setContent
    144:151:void setContent(java.io.File) -> setContent
    155:160:void setContent(java.io.InputStream) -> setContent
    164:164:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    169:169:java.lang.String getName() -> getName
    174:174:int compareTo(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    179:179:java.lang.String toString() -> toString
    184:184:java.lang.String getValue() -> getValue
    189:190:void setValue(java.lang.String) -> setValue
    194:194:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getChunk(int) -> getChunk
    199:199:java.io.File getFile() -> getFile
    204:204:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute copy() -> copy
    209:209:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute duplicate() -> duplicate
    214:214:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf content() -> content
    219:219:int refCnt() -> refCnt
    224:225:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute retain() -> retain
    230:231:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.Attribute retain(int) -> retain
    236:236:boolean release() -> release
    241:241:boolean release(int) -> release
    28:28:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    28:28:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData retain() -> retain
    28:28:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData duplicate() -> duplicate
    28:28:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData copy() -> copy
    28:28:int compareTo(java.lang.Object) -> compareTo
    28:28:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    28:28:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    28:28:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    28:28:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    28:28:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    28:28:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.MixedFileUpload -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.MixedFileUpload:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload fileUpload -> fileUpload
    long limitSize -> limitSize
    long definedSize -> definedSize
    38:48:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long,long) -> <init>
    53:72:void addContent(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,boolean) -> addContent
    76:77:void delete() -> delete
    81:81:byte[] get() -> get
    86:86:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    91:91:java.nio.charset.Charset getCharset() -> getCharset
    96:96:java.lang.String getContentType() -> getContentType
    101:101:java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    106:106:java.lang.String getFilename() -> getFilename
    111:111:java.lang.String getString() -> getString
    116:116:java.lang.String getString(java.nio.charset.Charset) -> getString
    121:121:boolean isCompleted() -> isCompleted
    126:126:boolean isInMemory() -> isInMemory
    131:131:long length() -> length
    136:136:boolean renameTo(java.io.File) -> renameTo
    141:142:void setCharset(java.nio.charset.Charset) -> setCharset
    146:161:void setContent(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setContent
    165:181:void setContent(java.io.File) -> setContent
    185:199:void setContent(java.io.InputStream) -> setContent
    203:204:void setContentType(java.lang.String) -> setContentType
    208:209:void setContentTransferEncoding(java.lang.String) -> setContentTransferEncoding
    213:214:void setFilename(java.lang.String) -> setFilename
    218:218:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    223:223:java.lang.String getName() -> getName
    228:228:int compareTo(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    233:233:java.lang.String toString() -> toString
    238:238:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getChunk(int) -> getChunk
    243:243:java.io.File getFile() -> getFile
    248:248:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload copy() -> copy
    253:253:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload duplicate() -> duplicate
    258:258:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf content() -> content
    263:263:int refCnt() -> refCnt
    268:269:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload retain() -> retain
    274:275:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.FileUpload retain(int) -> retain
    280:280:boolean release() -> release
    285:285:boolean release(int) -> release
    28:28:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    28:28:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData retain() -> retain
    28:28:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData duplicate() -> duplicate
    28:28:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.multipart.HttpData copy() -> copy
    28:28:int compareTo(java.lang.Object) -> compareTo
    28:28:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    28:28:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    28:28:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    28:28:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    28:28:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    28:28:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.BinaryWebSocketFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.BinaryWebSocketFrame:
    30:31:void <init>() -> <init>
    40:41:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    54:55:void <init>(boolean,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    59:59:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.BinaryWebSocketFrame copy() -> copy
    64:64:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.BinaryWebSocketFrame duplicate() -> duplicate
    69:70:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.BinaryWebSocketFrame retain() -> retain
    75:76:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.BinaryWebSocketFrame retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    24:24:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.CloseWebSocketFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.CloseWebSocketFrame:
    32:33:void <init>() -> <init>
    45:46:void <init>(int,java.lang.String) -> <init>
    57:58:void <init>(boolean,int) -> <init>
    74:75:void <init>(boolean,int,int,java.lang.String) -> <init>
    78:90:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf newBinaryData(int,java.lang.String) -> newBinaryData
    104:105:void <init>(boolean,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    112:121:int statusCode() -> statusCode
    129:138:java.lang.String reasonText() -> reasonText
    143:143:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.CloseWebSocketFrame copy() -> copy
    148:148:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.CloseWebSocketFrame duplicate() -> duplicate
    153:154:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.CloseWebSocketFrame retain() -> retain
    159:160:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.CloseWebSocketFrame retain(int) -> retain
    26:26:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    26:26:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    26:26:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    26:26:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    26:26:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    26:26:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    26:26:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    26:26:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    26:26:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    26:26:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame:
    32:33:void <init>() -> <init>
    42:43:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    56:57:void <init>(boolean,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    70:71:void <init>(boolean,int,java.lang.String) -> <init>
    77:77:java.lang.String text() -> text
    87:90:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf fromText(java.lang.String) -> fromText
    96:96:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame copy() -> copy
    101:101:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame duplicate() -> duplicate
    106:107:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame retain() -> retain
    112:113:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame retain(int) -> retain
    26:26:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    26:26:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    26:26:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    26:26:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    26:26:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    26:26:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    26:26:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    26:26:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    26:26:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    26:26:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.PingWebSocketFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.PingWebSocketFrame:
    30:31:void <init>() -> <init>
    40:41:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    54:55:void <init>(boolean,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    59:59:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.PingWebSocketFrame copy() -> copy
    64:64:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.PingWebSocketFrame duplicate() -> duplicate
    69:70:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.PingWebSocketFrame retain() -> retain
    75:76:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.PingWebSocketFrame retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    24:24:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.PongWebSocketFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.PongWebSocketFrame:
    30:31:void <init>() -> <init>
    40:41:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    54:55:void <init>(boolean,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    59:59:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.PongWebSocketFrame copy() -> copy
    64:64:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.PongWebSocketFrame duplicate() -> duplicate
    69:70:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.PongWebSocketFrame retain() -> retain
    75:76:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.PongWebSocketFrame retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    24:24:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    24:24:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    24:24:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.TextWebSocketFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.TextWebSocketFrame:
    31:32:void <init>() -> <init>
    41:42:void <init>(java.lang.String) -> <init>
    51:52:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    65:66:void <init>(boolean,int,java.lang.String) -> <init>
    69:72:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf fromText(java.lang.String) -> fromText
    87:88:void <init>(boolean,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    94:94:java.lang.String text() -> text
    99:99:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.TextWebSocketFrame copy() -> copy
    104:104:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.TextWebSocketFrame duplicate() -> duplicate
    109:110:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.TextWebSocketFrame retain() -> retain
    115:116:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.TextWebSocketFrame retain(int) -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    25:25:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    25:25:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    25:25:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.Utf8Validator -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.Utf8Validator:
    int UTF8_ACCEPT -> UTF8_ACCEPT
    int UTF8_REJECT -> UTF8_REJECT
    byte[] TYPES -> TYPES
    byte[] STATES -> STATES
    int state -> state
    int codep -> codep
    boolean checking -> checking
    45:67:void <init>() -> <init>
    73:75:void check(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> check
    78:84:void finish() -> finish
    88:98:boolean process(byte) -> process
    102:102:boolean isChecking() -> isChecking
    49:60:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket00FrameDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket00FrameDecoder:
    int DEFAULT_MAX_FRAME_SIZE -> DEFAULT_MAX_FRAME_SIZE
    long maxFrameSize -> maxFrameSize
    boolean receivedClosingHandshake -> receivedClosingHandshake
    39:40:void <init>() -> <init>
    49:51:void <init>(int) -> <init>
    56:75:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    78:101:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame decodeBinaryFrame(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,byte,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> decodeBinaryFrame
    105:133:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame decodeTextFrame(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> decodeTextFrame
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf _0X00 -> _0X00
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf _0XFF -> _0XFF
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf _0XFF_0X00 -> _0XFF_0X00
    33:33:void <init>() -> <init>
    43:100:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> encode
    32:32:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    34:38:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket07FrameDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket07FrameDecoder:
    74:75:void <init>(boolean,boolean,int) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket07FrameEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket07FrameEncoder:
    71:72:void <init>(boolean) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    byte OPCODE_CONT -> OPCODE_CONT
    byte OPCODE_TEXT -> OPCODE_TEXT
    byte OPCODE_BINARY -> OPCODE_BINARY
    byte OPCODE_CLOSE -> OPCODE_CLOSE
    byte OPCODE_PING -> OPCODE_PING
    byte OPCODE_PONG -> OPCODE_PONG
    int fragmentedFramesCount -> fragmentedFramesCount
    long maxFramePayloadLength -> maxFramePayloadLength
    boolean frameFinalFlag -> frameFinalFlag
    int frameRsv -> frameRsv
    int frameOpcode -> frameOpcode
    long framePayloadLength -> framePayloadLength
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf framePayload -> framePayload
    int framePayloadBytesRead -> framePayloadBytesRead
    byte[] maskingKey -> maskingKey
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf payloadBuffer -> payloadBuffer
    boolean allowExtensions -> allowExtensions
    boolean maskedPayload -> maskedPayload
    boolean receivedClosingHandshake -> receivedClosingHandshake
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.Utf8Validator utf8Validator -> utf8Validator
    116:120:void <init>(boolean,boolean,int) -> <init>
    126:400:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    405:408:void unmask(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> unmask
    411:412:void protocolViolation(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.String) -> protocolViolation
    415:419:void protocolViolation(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.CorruptedFrameException) -> protocolViolation
    423:426:int toFrameLength(long) -> toFrameLength
    432:439:void checkUTF8String(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> checkUTF8String
    444:473:void checkCloseFrameBody(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> checkCloseFrameBody
    477:487:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    75:75:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$http$websocketx$WebSocket08FrameDecoder$State -> $SwitchMap$io$netty$handler$codec$http$websocketx$WebSocket08FrameDecoder$State
    132:132:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State FRAME_START -> FRAME_START
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State MASKING_KEY -> MASKING_KEY
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State PAYLOAD -> PAYLOAD
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State CORRUPT -> CORRUPT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State[] $VALUES -> $VALUES
    99:99:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State[] values() -> values
    99:99:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State valueOf(java.lang.String) -> valueOf
    99:99:void <init>(java.lang.String,int) -> <init>
    99:100:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket08FrameEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket08FrameEncoder:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    byte OPCODE_CONT -> OPCODE_CONT
    byte OPCODE_TEXT -> OPCODE_TEXT
    byte OPCODE_BINARY -> OPCODE_BINARY
    byte OPCODE_CLOSE -> OPCODE_CLOSE
    byte OPCODE_PING -> OPCODE_PING
    byte OPCODE_PONG -> OPCODE_PONG
    boolean maskPayload -> maskPayload
    92:94:void <init>(boolean) -> <init>
    98:198:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> encode
    72:72:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    74:74:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket13FrameDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket13FrameDecoder:
    74:75:void <init>(boolean,boolean,int) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket13FrameEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocket13FrameEncoder:
    71:72:void <init>(boolean) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker:
    java.net.URI uri -> uri
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion version -> version
    boolean handshakeComplete -> handshakeComplete
    java.lang.String expectedSubprotocol -> expectedSubprotocol
    java.lang.String actualSubprotocol -> actualSubprotocol
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders customHeaders -> customHeaders
    int maxFramePayloadLength -> maxFramePayloadLength
    69:75:void <init>(java.net.URI,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders,int) -> <init>
    81:81:java.net.URI uri() -> uri
    88:88:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion version() -> version
    95:95:int maxFramePayloadLength() -> maxFramePayloadLength
    102:102:boolean isHandshakeComplete() -> isHandshakeComplete
    106:107:void setHandshakeComplete() -> setHandshakeComplete
    113:113:java.lang.String expectedSubprotocol() -> expectedSubprotocol
    121:121:java.lang.String actualSubprotocol() -> actualSubprotocol
    125:126:void setActualSubprotocol(java.lang.String) -> setActualSubprotocol
    135:138:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture handshake(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> handshake
    150:184:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture handshake(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> handshake
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> newHandshakeRequest
    201:227:void finishHandshake(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse) -> finishHandshake
    void verify(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse) -> verify
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    253:256:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.CloseWebSocketFrame) -> close
    270:273:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.CloseWebSocketFrame,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker this$0 -> this$0
    162:162:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    165:182:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    162:162:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf expectedChallengeResponseBytes -> expectedChallengeResponseBytes
    64:65:void <init>(java.net.URI,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders,int) -> <init>
    88:167:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> newHandshakeRequest
    192:216:void verify(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse) -> verify
    219:238:java.lang.String insertRandomCharacters(java.lang.String) -> insertRandomCharacters
    242:249:java.lang.String insertSpaces(java.lang.String,int) -> insertSpaces
    254:254:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    259:259:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String MAGIC_GUID -> MAGIC_GUID
    java.lang.String expectedChallengeResponseString -> expectedChallengeResponseString
    boolean allowExtensions -> allowExtensions
    69:71:void <init>(java.net.URI,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders,int) -> <init>
    94:146:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> newHandshakeRequest
    168:190:void verify(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse) -> verify
    194:194:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    199:199:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    42:42:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker08 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker08:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String MAGIC_GUID -> MAGIC_GUID
    java.lang.String expectedChallengeResponseString -> expectedChallengeResponseString
    boolean allowExtensions -> allowExtensions
    69:71:void <init>(java.net.URI,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders,int) -> <init>
    94:146:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> newHandshakeRequest
    168:190:void verify(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse) -> verify
    194:194:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    199:199:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    42:42:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String MAGIC_GUID -> MAGIC_GUID
    java.lang.String expectedChallengeResponseString -> expectedChallengeResponseString
    boolean allowExtensions -> allowExtensions
    69:71:void <init>(java.net.URI,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders,int) -> <init>
    94:156:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> newHandshakeRequest
    178:200:void verify(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse) -> verify
    204:204:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    209:209:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    42:42:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshakerFactory -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshakerFactory:
    32:33:void <init>() -> <init>
    53:53:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker newHandshaker(java.net.URI,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders) -> newHandshaker
    77:94:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker newHandshaker(java.net.URI,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders,int) -> newHandshaker
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker handshaker -> handshaker
    boolean handleCloseFrames -> handleCloseFrames
    80:82:void <init>(java.net.URI,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders,int,boolean) -> <init>
    102:104:void <init>(java.net.URI,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders,int) -> <init>
    115:118:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,boolean) -> <init>
    128:129:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker) -> <init>
    133:138:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> decode
    142:148:void handlerAdded(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerAdded
    40:40:void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    40:40:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler$ClientHandshakeStateEvent -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler$ClientHandshakeStateEvent:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler$ClientHandshakeStateEvent HANDSHAKE_ISSUED -> HANDSHAKE_ISSUED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler$ClientHandshakeStateEvent HANDSHAKE_COMPLETE -> HANDSHAKE_COMPLETE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler$ClientHandshakeStateEvent[] $VALUES -> $VALUES
    48:48:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler$ClientHandshakeStateEvent[] values() -> values
    48:48:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler$ClientHandshakeStateEvent valueOf(java.lang.String) -> valueOf
    48:48:void <init>(java.lang.String,int) -> <init>
    48:57:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker handshaker -> handshaker
    27:29:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientHandshaker) -> <init>
    33:45:void channelActive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelActive
    49:61:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler this$0 -> this$0
    34:34:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> <init>
    37:43:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    34:34:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame:
    boolean finalFragment -> finalFragment
    int rsv -> rsv
    39:40:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    43:46:void <init>(boolean,int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    53:53:boolean isFinalFragment() -> isFinalFragment
    60:60:int rsv() -> rsv
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    71:71:java.lang.String toString() -> toString
    76:77:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    82:83:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    25:25:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    25:25:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    25:25:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameAggregator -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameAggregator:
    int maxFrameSize -> maxFrameSize
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame currentFrame -> currentFrame
    boolean tooLongFrameFound -> tooLongFrameFound
    43:48:void <init>(int) -> <init>
    52:103:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> decode
    107:113:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    117:124:void handlerRemoved(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerRemoved
    32:32:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameDecoder:
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameEncoder:
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketHandshakeException -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketHandshakeException:
    long serialVersionUID -> serialVersionUID
    26:27:void <init>(java.lang.String) -> <init>
    30:31:void <init>(java.lang.String,java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketProtocolHandler -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketProtocolHandler:
    24:24:void <init>() -> <init>
    27:38:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> decode
    42:43:void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    24:24:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshaker -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshaker:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String uri -> uri
    java.lang.String[] subprotocols -> subprotocols
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion version -> version
    int maxFramePayloadLength -> maxFramePayloadLength
    java.lang.String selectedSubprotocol -> selectedSubprotocol
    java.lang.String SUB_PROTOCOL_WILDCARD -> SUB_PROTOCOL_WILDCARD
    77:90:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,java.lang.String,int) -> <init>
    96:96:java.lang.String uri() -> uri
    103:105:java.util.Set subprotocols() -> subprotocols
    112:112:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion version() -> version
    121:121:int maxFramePayloadLength() -> maxFramePayloadLength
    136:136:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture handshake(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest) -> handshake
    158:200:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture handshake(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> handshake
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders) -> newHandshakeResponse
    217:220:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.CloseWebSocketFrame) -> close
    234:237:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.CloseWebSocketFrame,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    248:266:java.lang.String selectSubprotocol(java.lang.String) -> selectSubprotocol
    276:276:java.lang.String selectedSubprotocol() -> selectedSubprotocol
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    45:45:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$1:
    java.lang.String val$encoderName -> val$encoderName
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshaker this$0 -> this$0
    188:188:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,java.lang.String,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    191:198:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    188:188:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00:
    java.util.regex.Pattern BEGINNING_DIGIT -> BEGINNING_DIGIT
    java.util.regex.Pattern BEGINNING_SPACE -> BEGINNING_SPACE
    65:66:void <init>(java.lang.String,java.lang.String,int) -> <init>
    112:169:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders) -> newHandshakeResponse
    182:182:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.CloseWebSocketFrame,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    187:187:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    192:192:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    49:50:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshaker07 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshaker07:
    java.lang.String WEBSOCKET_07_ACCEPT_GUID -> WEBSOCKET_07_ACCEPT_GUID
    boolean allowExtensions -> allowExtensions
    58:60:void <init>(java.lang.String,java.lang.String,boolean,int) -> <init>
    98:131:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders) -> newHandshakeResponse
    136:136:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    141:141:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshaker08 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshaker08:
    java.lang.String WEBSOCKET_08_ACCEPT_GUID -> WEBSOCKET_08_ACCEPT_GUID
    boolean allowExtensions -> allowExtensions
    58:60:void <init>(java.lang.String,java.lang.String,boolean,int) -> <init>
    98:130:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders) -> newHandshakeResponse
    135:135:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    140:140:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13:
    java.lang.String WEBSOCKET_13_ACCEPT_GUID -> WEBSOCKET_13_ACCEPT_GUID
    boolean allowExtensions -> allowExtensions
    57:59:void <init>(java.lang.String,java.lang.String,boolean,int) -> <init>
    97:128:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpHeaders) -> newHandshakeResponse
    133:133:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    138:138:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory:
    java.lang.String webSocketURL -> webSocketURL
    java.lang.String subprotocols -> subprotocols
    boolean allowExtensions -> allowExtensions
    int maxFramePayloadLength -> maxFramePayloadLength
    55:56:void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    74:79:void <init>(java.lang.String,java.lang.String,boolean,int) -> <init>
    89:108:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshaker newHandshaker(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest) -> newHandshaker
    117:118:void sendUnsupportedWebSocketVersionResponse(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> sendUnsupportedWebSocketVersionResponse
    124:124:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture sendUnsupportedVersionResponse(be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> sendUnsupportedVersionResponse
    131:135:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture sendUnsupportedVersionResponse(be.alexandre01.dnplugin.shaded.netty.channel.Channel,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> sendUnsupportedVersionResponse
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler:
    be.alexandre01.dnplugin.shaded.netty.util.AttributeKey HANDSHAKER_ATTR_KEY -> HANDSHAKER_ATTR_KEY
    java.lang.String websocketPath -> websocketPath
    java.lang.String subprotocols -> subprotocols
    boolean allowExtensions -> allowExtensions
    int maxFramePayloadLength -> maxFramePayloadLength
    72:73:void <init>(java.lang.String) -> <init>
    76:77:void <init>(java.lang.String,java.lang.String) -> <init>
    80:81:void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    84:89:void <init>(java.lang.String,java.lang.String,boolean,int) -> <init>
    93:100:void handlerAdded(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerAdded
    104:115:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> decode
    119:126:void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    129:129:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshaker getHandshaker(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> getHandshaker
    133:134:void setHandshaker(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerHandshaker) -> setHandshaker
    137:137:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandler forbiddenHttpRequestResponder() -> forbiddenHttpRequestResponder
    51:51:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    63:63:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$1:
    137:137:void <init>() -> <init>
    140:148:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent HANDSHAKE_COMPLETE -> HANDSHAKE_COMPLETE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent[] $VALUES -> $VALUES
    56:56:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent[] values() -> values
    56:56:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent valueOf(java.lang.String) -> valueOf
    56:56:void <init>(java.lang.String,int) -> <init>
    56:60:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler:
    java.lang.String websocketPath -> websocketPath
    java.lang.String subprotocols -> subprotocols
    boolean allowExtensions -> allowExtensions
    int maxFramePayloadSize -> maxFramePayloadSize
    46:51:void <init>(java.lang.String,java.lang.String,boolean,int) -> <init>
    55:88:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    91:95:void sendHttpResponse(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse) -> sendHttpResponse
    98:103:java.lang.String getWebSocketLocation(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPipeline,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest,java.lang.String) -> getWebSocketLocation
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler this$0 -> this$0
    70:70:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> <init>
    73:79:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    70:70:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketUtil -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketUtil:
    39:44:byte[] md5(byte[]) -> md5
    57:62:byte[] sha1(byte[]) -> sha1
    73:77:java.lang.String base64(byte[]) -> base64
    87:93:byte[] randomBytes(int) -> randomBytes
    104:104:int randomNumber(int,int) -> randomNumber
    110:112:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion -> be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion UNKNOWN -> UNKNOWN
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion V00 -> V00
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion V07 -> V07
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion V08 -> V08
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion V13 -> V13
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion[] $VALUES -> $VALUES
    27:27:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion[] values() -> values
    27:27:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.websocketx.WebSocketVersion valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    59:71:java.lang.String toHttpHeaderValue() -> toHttpHeaderValue
    27:53:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.ChannelBufferByteInput -> be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.ChannelBufferByteInput:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer -> buffer
    30:32:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    37:37:void close() -> close
    41:41:int available() -> available
    46:49:int read() -> read
    54:54:int read(byte[]) -> read
    59:66:int read(byte[],int,int) -> read
    71:76:long skip(long) -> skip
be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.ChannelBufferByteOutput -> be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.ChannelBufferByteOutput:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf buffer -> buffer
    35:37:void <init>(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    42:42:void close() -> close
    47:47:void flush() -> flush
    51:52:void write(int) -> write
    56:57:void write(byte[]) -> write
    61:62:void write(byte[],int,int) -> write
    69:69:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf getBuffer() -> getBuffer
be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.CompatibleMarshallingDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.CompatibleMarshallingDecoder:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.UnmarshallerProvider provider -> provider
    int maxObjectSize -> maxObjectSize
    boolean discardingTooLongFrame -> discardingTooLongFrame
    52:55:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.UnmarshallerProvider,int) -> <init>
    59:83:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    87:99:void decodeLast(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decodeLast
    103:108:void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.CompatibleMarshallingEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.CompatibleMarshallingEncoder:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.MarshallerProvider provider -> provider
    46:48:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.MarshallerProvider) -> <init>
    52:57:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.ContextBoundUnmarshallerProvider -> be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.ContextBoundUnmarshallerProvider:
    be.alexandre01.dnplugin.shaded.netty.util.AttributeKey UNMARSHALLER -> UNMARSHALLER
    41:42:void <init>(org.jboss.marshalling.MarshallerFactory,org.jboss.marshalling.MarshallingConfiguration) -> <init>
    46:52:org.jboss.marshalling.Unmarshaller getUnmarshaller(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> getUnmarshaller
    37:37:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.DefaultMarshallerProvider -> be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.DefaultMarshallerProvider:
    org.jboss.marshalling.MarshallerFactory factory -> factory
    org.jboss.marshalling.MarshallingConfiguration config -> config
    39:42:void <init>(org.jboss.marshalling.MarshallerFactory,org.jboss.marshalling.MarshallingConfiguration) -> <init>
    46:46:org.jboss.marshalling.Marshaller getMarshaller(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> getMarshaller
be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.DefaultUnmarshallerProvider -> be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.DefaultUnmarshallerProvider:
    org.jboss.marshalling.MarshallerFactory factory -> factory
    org.jboss.marshalling.MarshallingConfiguration config -> config
    40:43:void <init>(org.jboss.marshalling.MarshallerFactory,org.jboss.marshalling.MarshallingConfiguration) -> <init>
    47:47:org.jboss.marshalling.Unmarshaller getUnmarshaller(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> getUnmarshaller
be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.LimitingByteInput -> be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.LimitingByteInput:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException EXCEPTION -> EXCEPTION
    org.jboss.marshalling.ByteInput input -> input
    long limit -> limit
    long read -> read
    35:41:void <init>(org.jboss.marshalling.ByteInput,long) -> <init>
    46:46:void close() -> close
    50:50:int available() -> available
    55:61:int read() -> read
    67:67:int read(byte[]) -> read
    72:78:int read(byte[],int,int) -> read
    84:90:long skip(long) -> skip
    95:95:int readable(int) -> readable
    29:29:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException -> be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException:
    long serialVersionUID -> serialVersionUID
    102:102:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.MarshallerProvider -> be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.MarshallerProvider:
    org.jboss.marshalling.Marshaller getMarshaller(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> getMarshaller
be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.MarshallingDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.MarshallingDecoder:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.UnmarshallerProvider provider -> provider
    45:46:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.UnmarshallerProvider) -> <init>
    57:59:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.UnmarshallerProvider,int) -> <init>
    63:79:java.lang.Object decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> decode
    85:85:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf extractFrame(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> extractFrame
be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.MarshallingEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.MarshallingEncoder:
    byte[] LENGTH_PLACEHOLDER -> LENGTH_PLACEHOLDER
    be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.MarshallerProvider provider -> provider
    48:50:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.MarshallerProvider) -> <init>
    54:64:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    40:40:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.ThreadLocalMarshallerProvider -> be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.ThreadLocalMarshallerProvider:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.FastThreadLocal marshallers -> marshallers
    org.jboss.marshalling.MarshallerFactory factory -> factory
    org.jboss.marshalling.MarshallingConfiguration config -> config
    31:45:void <init>(org.jboss.marshalling.MarshallerFactory,org.jboss.marshalling.MarshallingConfiguration) -> <init>
    49:54:org.jboss.marshalling.Marshaller getMarshaller(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> getMarshaller
be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.ThreadLocalUnmarshallerProvider -> be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.ThreadLocalUnmarshallerProvider:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.FastThreadLocal unmarshallers -> unmarshallers
    org.jboss.marshalling.MarshallerFactory factory -> factory
    org.jboss.marshalling.MarshallingConfiguration config -> config
    31:45:void <init>(org.jboss.marshalling.MarshallerFactory,org.jboss.marshalling.MarshallingConfiguration) -> <init>
    49:54:org.jboss.marshalling.Unmarshaller getUnmarshaller(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> getUnmarshaller
be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.UnmarshallerProvider -> be.alexandre01.dnplugin.shaded.netty.handler.codec.marshalling.UnmarshallerProvider:
    org.jboss.marshalling.Unmarshaller getUnmarshaller(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> getUnmarshaller
be.alexandre01.dnplugin.shaded.netty.handler.codec.protobuf.ProtobufDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.protobuf.ProtobufDecoder:
    boolean HAS_PARSER -> HAS_PARSER
    com.google.protobuf.MessageLite prototype -> prototype
    com.google.protobuf.ExtensionRegistry extensionRegistry -> extensionRegistry
    87:88:void <init>(com.google.protobuf.MessageLite) -> <init>
    90:96:void <init>(com.google.protobuf.MessageLite,com.google.protobuf.ExtensionRegistry) -> <init>
    102:125:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    62:62:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    68:78:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.protobuf.ProtobufEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.protobuf.ProtobufEncoder:
    61:61:void <init>() -> <init>
    65:72:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,com.google.protobuf.MessageLiteOrBuilder,java.util.List) -> encode
    60:60:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
be.alexandre01.dnplugin.shaded.netty.handler.codec.protobuf.ProtobufVarint32FrameDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.protobuf.ProtobufVarint32FrameDecoder:
    42:42:void <init>() -> <init>
    49:75:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender -> be.alexandre01.dnplugin.shaded.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender:
    40:40:void <init>() -> <init>
    45:55:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    39:39:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspHeaders -> be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspHeaders:
    387:387:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspHeaders$Names -> be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspHeaders$Names:
    java.lang.String ACCEPT -> ACCEPT
    java.lang.String ACCEPT_ENCODING -> ACCEPT_ENCODING
    java.lang.String ACCEPT_LANGUAGE -> ACCEPT_LANGUAGE
    java.lang.String ALLOW -> ALLOW
    java.lang.String AUTHORIZATION -> AUTHORIZATION
    java.lang.String BANDWIDTH -> BANDWIDTH
    java.lang.String BLOCKSIZE -> BLOCKSIZE
    java.lang.String CACHE_CONTROL -> CACHE_CONTROL
    java.lang.String CONFERENCE -> CONFERENCE
    java.lang.String CONNECTION -> CONNECTION
    java.lang.String CONTENT_BASE -> CONTENT_BASE
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LANGUAGE -> CONTENT_LANGUAGE
    java.lang.String CONTENT_LENGTH -> CONTENT_LENGTH
    java.lang.String CONTENT_LOCATION -> CONTENT_LOCATION
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CSEQ -> CSEQ
    java.lang.String DATE -> DATE
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String FROM -> FROM
    java.lang.String HOST -> HOST
    java.lang.String IF_MATCH -> IF_MATCH
    java.lang.String IF_MODIFIED_SINCE -> IF_MODIFIED_SINCE
    java.lang.String KEYMGMT -> KEYMGMT
    java.lang.String LAST_MODIFIED -> LAST_MODIFIED
    java.lang.String PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    java.lang.String PROXY_REQUIRE -> PROXY_REQUIRE
    java.lang.String PUBLIC -> PUBLIC
    java.lang.String RANGE -> RANGE
    java.lang.String REFERER -> REFERER
    java.lang.String REQUIRE -> REQUIRE
    java.lang.String RETRT_AFTER -> RETRT_AFTER
    java.lang.String RTP_INFO -> RTP_INFO
    java.lang.String SCALE -> SCALE
    java.lang.String SESSION -> SESSION
    java.lang.String SERVER -> SERVER
    java.lang.String SPEED -> SPEED
    java.lang.String TIMESTAMP -> TIMESTAMP
    java.lang.String TRANSPORT -> TRANSPORT
    java.lang.String UNSUPPORTED -> UNSUPPORTED
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String VARY -> VARY
    java.lang.String VIA -> VIA
    java.lang.String WWW_AUTHENTICATE -> WWW_AUTHENTICATE
    207:208:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspHeaders$Values -> be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspHeaders$Values:
    java.lang.String APPEND -> APPEND
    java.lang.String AVP -> AVP
    java.lang.String BYTES -> BYTES
    java.lang.String CHARSET -> CHARSET
    java.lang.String CLIENT_PORT -> CLIENT_PORT
    java.lang.String CLOCK -> CLOCK
    java.lang.String CLOSE -> CLOSE
    java.lang.String COMPRESS -> COMPRESS
    java.lang.String CONTINUE -> CONTINUE
    java.lang.String DEFLATE -> DEFLATE
    java.lang.String DESTINATION -> DESTINATION
    java.lang.String GZIP -> GZIP
    java.lang.String IDENTITY -> IDENTITY
    java.lang.String INTERLEAVED -> INTERLEAVED
    java.lang.String KEEP_ALIVE -> KEEP_ALIVE
    java.lang.String LAYERS -> LAYERS
    java.lang.String MAX_AGE -> MAX_AGE
    java.lang.String MAX_STALE -> MAX_STALE
    java.lang.String MIN_FRESH -> MIN_FRESH
    java.lang.String MODE -> MODE
    java.lang.String MULTICAST -> MULTICAST
    java.lang.String MUST_REVALIDATE -> MUST_REVALIDATE
    java.lang.String NONE -> NONE
    java.lang.String NO_CACHE -> NO_CACHE
    java.lang.String NO_TRANSFORM -> NO_TRANSFORM
    java.lang.String ONLY_IF_CACHED -> ONLY_IF_CACHED
    java.lang.String PORT -> PORT
    java.lang.String PRIVATE -> PRIVATE
    java.lang.String PROXY_REVALIDATE -> PROXY_REVALIDATE
    java.lang.String PUBLIC -> PUBLIC
    java.lang.String RTP -> RTP
    java.lang.String RTPTIME -> RTPTIME
    java.lang.String SEQ -> SEQ
    java.lang.String SERVER_PORT -> SERVER_PORT
    java.lang.String SSRC -> SSRC
    java.lang.String TCP -> TCP
    java.lang.String TIME -> TIME
    java.lang.String TIMEOUT -> TIMEOUT
    java.lang.String TTL -> TTL
    java.lang.String UDP -> UDP
    java.lang.String UNICAST -> UNICAST
    java.lang.String URL -> URL
    384:384:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspMethods -> be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspMethods:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod OPTIONS -> OPTIONS
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod DESCRIBE -> DESCRIBE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod ANNOUNCE -> ANNOUNCE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod SETUP -> SETUP
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod PLAY -> PLAY
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod PAUSE -> PAUSE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod TEARDOWN -> TEARDOWN
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod GET_PARAMETER -> GET_PARAMETER
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod SET_PARAMETER -> SET_PARAMETER
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod REDIRECT -> REDIRECT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod RECORD -> RECORD
    java.util.Map methodMap -> methodMap
    120:133:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod valueOf(java.lang.String) -> valueOf
    137:138:void <init>() -> <init>
    35:112:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspObjectDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspObjectDecoder:
    59:60:void <init>() -> <init>
    66:67:void <init>(int,int,int) -> <init>
    71:72:void <init>(int,int,int,boolean) -> <init>
    78:85:boolean isContentAlwaysEmpty(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspObjectEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspObjectEncoder:
    34:35:void <init>() -> <init>
    39:39:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspRequestDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspRequestDecoder:
    58:59:void <init>() -> <init>
    65:66:void <init>(int,int,int) -> <init>
    70:71:void <init>(int,int,int,boolean) -> <init>
    75:75:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage createMessage(java.lang.String[]) -> createMessage
    81:81:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage createInvalidMessage() -> createInvalidMessage
    86:86:boolean isDecodingRequest() -> isDecodingRequest
be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspRequestEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspRequestEncoder:
    byte[] CRLF -> CRLF
    31:31:void <init>() -> <init>
    36:36:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    42:48:void encodeInitialLine(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpRequest) -> encodeInitialLine
    31:31:void encodeInitialLine(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> encodeInitialLine
    32:32:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspResponseDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspResponseDecoder:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus UNKNOWN_STATUS -> UNKNOWN_STATUS
    61:62:void <init>() -> <init>
    69:70:void <init>(int,int,int) -> <init>
    74:75:void <init>(int,int,int,boolean) -> <init>
    79:79:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage createMessage(java.lang.String[]) -> createMessage
    86:86:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage createInvalidMessage() -> createInvalidMessage
    91:91:boolean isDecodingRequest() -> isDecodingRequest
    54:54:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspResponseEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspResponseEncoder:
    byte[] CRLF -> CRLF
    30:30:void <init>() -> <init>
    35:35:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    41:47:void encodeInitialLine(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse) -> encodeInitialLine
    30:30:void encodeInitialLine(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> encodeInitialLine
    31:31:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspResponseStatuses -> be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspResponseStatuses:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus CONTINUE -> CONTINUE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus OK -> OK
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus CREATED -> CREATED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus LOW_STORAGE_SPACE -> LOW_STORAGE_SPACE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus MULTIPLE_CHOICES -> MULTIPLE_CHOICES
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus MOVED_PERMANENTLY -> MOVED_PERMANENTLY
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus MOVED_TEMPORARILY -> MOVED_TEMPORARILY
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus NOT_MODIFIED -> NOT_MODIFIED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus USE_PROXY -> USE_PROXY
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus BAD_REQUEST -> BAD_REQUEST
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus UNAUTHORIZED -> UNAUTHORIZED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus PAYMENT_REQUIRED -> PAYMENT_REQUIRED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus FORBIDDEN -> FORBIDDEN
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus NOT_FOUND -> NOT_FOUND
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus METHOD_NOT_ALLOWED -> METHOD_NOT_ALLOWED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus NOT_ACCEPTABLE -> NOT_ACCEPTABLE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus PROXY_AUTHENTICATION_REQUIRED -> PROXY_AUTHENTICATION_REQUIRED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus REQUEST_TIMEOUT -> REQUEST_TIMEOUT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus GONE -> GONE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus LENGTH_REQUIRED -> LENGTH_REQUIRED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus PRECONDITION_FAILED -> PRECONDITION_FAILED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus REQUEST_ENTITY_TOO_LARGE -> REQUEST_ENTITY_TOO_LARGE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus REQUEST_URI_TOO_LONG -> REQUEST_URI_TOO_LONG
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus UNSUPPORTED_MEDIA_TYPE -> UNSUPPORTED_MEDIA_TYPE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus PARAMETER_NOT_UNDERSTOOD -> PARAMETER_NOT_UNDERSTOOD
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus CONFERENCE_NOT_FOUND -> CONFERENCE_NOT_FOUND
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus NOT_ENOUGH_BANDWIDTH -> NOT_ENOUGH_BANDWIDTH
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus SESSION_NOT_FOUND -> SESSION_NOT_FOUND
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus METHOD_NOT_VALID -> METHOD_NOT_VALID
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus HEADER_FIELD_NOT_VALID -> HEADER_FIELD_NOT_VALID
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus INVALID_RANGE -> INVALID_RANGE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus PARAMETER_IS_READONLY -> PARAMETER_IS_READONLY
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus AGGREGATE_OPERATION_NOT_ALLOWED -> AGGREGATE_OPERATION_NOT_ALLOWED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus ONLY_AGGREGATE_OPERATION_ALLOWED -> ONLY_AGGREGATE_OPERATION_ALLOWED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus UNSUPPORTED_TRANSPORT -> UNSUPPORTED_TRANSPORT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus DESTINATION_UNREACHABLE -> DESTINATION_UNREACHABLE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus KEY_MANAGEMENT_FAILURE -> KEY_MANAGEMENT_FAILURE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus INTERNAL_SERVER_ERROR -> INTERNAL_SERVER_ERROR
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus NOT_IMPLEMENTED -> NOT_IMPLEMENTED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus BAD_GATEWAY -> BAD_GATEWAY
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus SERVICE_UNAVAILABLE -> SERVICE_UNAVAILABLE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus GATEWAY_TIMEOUT -> GATEWAY_TIMEOUT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus RTSP_VERSION_NOT_SUPPORTED -> RTSP_VERSION_NOT_SUPPORTED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus OPTION_NOT_SUPPORTED -> OPTION_NOT_SUPPORTED
    268:286:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus valueOf(int) -> valueOf
    290:291:void <init>() -> <init>
    28:259:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspVersions -> be.alexandre01.dnplugin.shaded.netty.handler.codec.rtsp.RtspVersions:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion RTSP_1_0 -> RTSP_1_0
    37:46:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion valueOf(java.lang.String) -> valueOf
    49:50:void <init>() -> <init>
    28:28:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.sctp.SctpInboundByteStreamHandler -> be.alexandre01.dnplugin.shaded.netty.handler.codec.sctp.SctpInboundByteStreamHandler:
    int protocolIdentifier -> protocolIdentifier
    int streamIdentifier -> streamIdentifier
    39:42:void <init>(int,int) -> <init>
    46:49:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    53:53:boolean acceptInboundMessage(be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpMessage) -> acceptInboundMessage
    58:63:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpMessage,java.util.List) -> decode
    31:31:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.sctp.SctpMessageCompletionHandler -> be.alexandre01.dnplugin.shaded.netty.handler.codec.sctp.SctpMessageCompletionHandler:
    java.util.Map fragments -> fragments
    35:36:void <init>() -> <init>
    40:71:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.sctp.SctpMessage,java.util.List) -> decode
    35:35:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.sctp.SctpMessageToMessageDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.sctp.SctpMessageToMessageDecoder:
    23:23:void <init>() -> <init>
    27:36:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
be.alexandre01.dnplugin.shaded.netty.handler.codec.sctp.SctpOutboundByteStreamHandler -> be.alexandre01.dnplugin.shaded.netty.handler.codec.sctp.SctpOutboundByteStreamHandler:
    int streamIdentifier -> streamIdentifier
    int protocolIdentifier -> protocolIdentifier
    38:41:void <init>(int,int) -> <init>
    45:46:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> encode
    30:30:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.CachingClassResolver -> be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.CachingClassResolver:
    java.util.Map classCache -> classCache
    be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassResolver delegate -> delegate
    25:28:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassResolver,java.util.Map) -> <init>
    34:43:java.lang.Class resolve(java.lang.String) -> resolve
be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassLoaderClassResolver -> be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassLoaderClassResolver:
    java.lang.ClassLoader classLoader -> classLoader
    22:24:void <init>(java.lang.ClassLoader) -> <init>
    29:31:java.lang.Class resolve(java.lang.String) -> resolve
be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassResolver -> be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassResolver:
    java.lang.Class resolve(java.lang.String) -> resolve
be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassResolvers -> be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassResolvers:
    31:31:be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassResolver cacheDisabled(java.lang.ClassLoader) -> cacheDisabled
    42:42:be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassResolver weakCachingResolver(java.lang.ClassLoader) -> weakCachingResolver
    55:55:be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassResolver softCachingResolver(java.lang.ClassLoader) -> softCachingResolver
    68:68:be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassResolver weakCachingConcurrentResolver(java.lang.ClassLoader) -> weakCachingConcurrentResolver
    82:82:be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassResolver softCachingConcurrentResolver(java.lang.ClassLoader) -> softCachingConcurrentResolver
    89:98:java.lang.ClassLoader defaultClassLoader(java.lang.ClassLoader) -> defaultClassLoader
    101:103:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.CompactObjectInputStream -> be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.CompactObjectInputStream:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassResolver classResolver -> classResolver
    30:32:void <init>(java.io.InputStream,be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassResolver) -> <init>
    36:41:void readStreamHeader() -> readStreamHeader
    46:58:java.io.ObjectStreamClass readClassDescriptor() -> readClassDescriptor
    67:72:java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.CompactObjectOutputStream -> be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.CompactObjectOutputStream:
    int TYPE_FAT_DESCRIPTOR -> TYPE_FAT_DESCRIPTOR
    int TYPE_THIN_DESCRIPTOR -> TYPE_THIN_DESCRIPTOR
    29:30:void <init>(java.io.OutputStream) -> <init>
    34:35:void writeStreamHeader() -> writeStreamHeader
    39:48:void writeClassDescriptor(java.io.ObjectStreamClass) -> writeClassDescriptor
be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.CompatibleObjectEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.CompatibleObjectEncoder:
    be.alexandre01.dnplugin.shaded.netty.util.AttributeKey OOS -> OOS
    int resetInterval -> resetInterval
    int writtenObjects -> writtenObjects
    49:50:void <init>() -> <init>
    61:67:void <init>(int) -> <init>
    75:75:java.io.ObjectOutputStream newObjectOutputStream(java.io.OutputStream) -> newObjectOutputStream
    80:102:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.io.Serializable,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    37:37:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    39:39:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ObjectDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ObjectDecoder:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassResolver classResolver -> classResolver
    49:50:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassResolver) -> <init>
    63:65:void <init>(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassResolver) -> <init>
    69:77:java.lang.Object decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> decode
    82:82:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf extractFrame(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> extractFrame
be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ObjectDecoderInputStream -> be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ObjectDecoderInputStream:
    java.io.DataInputStream in -> in
    int maxObjectSize -> maxObjectSize
    be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ClassResolver classResolver -> classResolver
    44:45:void <init>(java.io.InputStream) -> <init>
    58:59:void <init>(java.io.InputStream,java.lang.ClassLoader) -> <init>
    73:74:void <init>(java.io.InputStream,int) -> <init>
    90:104:void <init>(java.io.InputStream,java.lang.ClassLoader,int) -> <init>
    108:117:java.lang.Object readObject() -> readObject
    122:122:int available() -> available
    127:128:void close() -> close
    132:133:void mark(int) -> mark
    137:137:boolean markSupported() -> markSupported
    142:142:int read() -> read
    147:147:int read(byte[],int,int) -> read
    152:152:int read(byte[]) -> read
    157:157:boolean readBoolean() -> readBoolean
    162:162:byte readByte() -> readByte
    167:167:char readChar() -> readChar
    172:172:double readDouble() -> readDouble
    177:177:float readFloat() -> readFloat
    182:183:void readFully(byte[],int,int) -> readFully
    187:188:void readFully(byte[]) -> readFully
    192:192:int readInt() -> readInt
    201:201:java.lang.String readLine() -> readLine
    206:206:long readLong() -> readLong
    211:211:short readShort() -> readShort
    216:216:int readUnsignedByte() -> readUnsignedByte
    221:221:int readUnsignedShort() -> readUnsignedShort
    226:226:java.lang.String readUTF() -> readUTF
    231:232:void reset() -> reset
    236:236:long skip(long) -> skip
    241:241:int skipBytes(int) -> skipBytes
be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ObjectEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ObjectEncoder:
    byte[] LENGTH_PLACEHOLDER -> LENGTH_PLACEHOLDER
    37:37:void <init>() -> <init>
    42:54:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.io.Serializable,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    36:36:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    38:38:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ObjectEncoderOutputStream -> be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ObjectEncoderOutputStream:
    java.io.DataOutputStream out -> out
    int estimatedLength -> estimatedLength
    47:48:void <init>(java.io.OutputStream) -> <init>
    65:79:void <init>(java.io.OutputStream,int) -> <init>
    83:93:void writeObject(java.lang.Object) -> writeObject
    97:98:void write(int) -> write
    102:103:void close() -> close
    107:108:void flush() -> flush
    111:111:int size() -> size
    116:117:void write(byte[],int,int) -> write
    121:122:void write(byte[]) -> write
    126:127:void writeBoolean(boolean) -> writeBoolean
    131:132:void writeByte(int) -> writeByte
    136:137:void writeBytes(java.lang.String) -> writeBytes
    141:142:void writeChar(int) -> writeChar
    146:147:void writeChars(java.lang.String) -> writeChars
    151:152:void writeDouble(double) -> writeDouble
    156:157:void writeFloat(float) -> writeFloat
    161:162:void writeInt(int) -> writeInt
    166:167:void writeLong(long) -> writeLong
    171:172:void writeShort(int) -> writeShort
    176:177:void writeUTF(java.lang.String) -> writeUTF
be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ReferenceMap -> be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.ReferenceMap:
    java.util.Map delegate -> delegate
    27:29:void <init>(java.util.Map) -> <init>
    java.lang.ref.Reference fold(java.lang.Object) -> fold
    34:38:java.lang.Object unfold(java.lang.ref.Reference) -> unfold
    43:43:int size() -> size
    48:48:boolean isEmpty() -> isEmpty
    53:53:boolean containsKey(java.lang.Object) -> containsKey
    58:58:boolean containsValue(java.lang.Object) -> containsValue
    63:63:java.lang.Object get(java.lang.Object) -> get
    68:68:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    73:73:java.lang.Object remove(java.lang.Object) -> remove
    78:81:void putAll(java.util.Map) -> putAll
    85:86:void clear() -> clear
    90:90:java.util.Set keySet() -> keySet
    95:95:java.util.Collection values() -> values
    100:100:java.util.Set entrySet() -> entrySet
be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.SoftReferenceMap -> be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.SoftReferenceMap:
    25:26:void <init>(java.util.Map) -> <init>
    30:30:java.lang.ref.Reference fold(java.lang.Object) -> fold
be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.WeakReferenceMap -> be.alexandre01.dnplugin.shaded.netty.handler.codec.serialization.WeakReferenceMap:
    25:26:void <init>(java.util.Map) -> <init>
    30:30:java.lang.ref.Reference fold(java.lang.Object) -> fold
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType IPv4 -> IPv4
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType DOMAIN -> DOMAIN
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType IPv6 -> IPv6
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType UNKNOWN -> UNKNOWN
    byte b -> b
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType[] $VALUES -> $VALUES
    19:19:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType[] values() -> values
    19:19:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType valueOf(java.lang.String) -> valueOf
    27:29:void <init>(java.lang.String,int,byte) -> <init>
    36:36:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType fromByte(byte) -> fromByte
    40:45:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType valueOf(byte) -> valueOf
    49:49:byte byteValue() -> byteValue
    19:23:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthRequest -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthRequest:
    java.nio.charset.CharsetEncoder asciiEncoder -> asciiEncoder
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksSubnegotiationVersion SUBNEGOTIATION_VERSION -> SUBNEGOTIATION_VERSION
    java.lang.String username -> username
    java.lang.String password -> password
    36:55:void <init>(java.lang.String,java.lang.String) -> <init>
    63:63:java.lang.String username() -> username
    72:72:java.lang.String password() -> password
    77:82:void encodeAsByteBuf(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encodeAsByteBuf
    30:31:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthRequestDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthRequestDecoder:
    java.lang.String name -> name
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksSubnegotiationVersion version -> version
    int fieldLength -> fieldLength
    java.lang.String username -> username
    java.lang.String password -> password
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksRequest msg -> msg
    38:38:java.lang.String getName() -> getName
    45:49:void <init>() -> <init>
    53:74:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthRequestDecoder$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthRequestDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$socks$SocksAuthRequestDecoder$State -> $SwitchMap$io$netty$handler$codec$socks$SocksAuthRequestDecoder$State
    53:53:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthRequestDecoder$State -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthRequestDecoder$State:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthRequestDecoder$State CHECK_PROTOCOL_VERSION -> CHECK_PROTOCOL_VERSION
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthRequestDecoder$State READ_USERNAME -> READ_USERNAME
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthRequestDecoder$State READ_PASSWORD -> READ_PASSWORD
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthRequestDecoder$State[] $VALUES -> $VALUES
    76:76:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthRequestDecoder$State[] values() -> values
    76:76:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthRequestDecoder$State valueOf(java.lang.String) -> valueOf
    76:76:void <init>(java.lang.String,int) -> <init>
    76:79:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthResponse -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthResponse:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksSubnegotiationVersion SUBNEGOTIATION_VERSION -> SUBNEGOTIATION_VERSION
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthStatus authStatus -> authStatus
    31:36:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthStatus) -> <init>
    44:44:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthStatus authStatus() -> authStatus
    49:51:void encodeAsByteBuf(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encodeAsByteBuf
    27:27:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthResponseDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthResponseDecoder:
    java.lang.String name -> name
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksSubnegotiationVersion version -> version
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthStatus authStatus -> authStatus
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksResponse msg -> msg
    37:37:java.lang.String getName() -> getName
    42:46:void <init>() -> <init>
    51:66:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthResponseDecoder$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthResponseDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$socks$SocksAuthResponseDecoder$State -> $SwitchMap$io$netty$handler$codec$socks$SocksAuthResponseDecoder$State
    51:51:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthResponseDecoder$State -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthResponseDecoder$State:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthResponseDecoder$State CHECK_PROTOCOL_VERSION -> CHECK_PROTOCOL_VERSION
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthResponseDecoder$State READ_AUTH_RESPONSE -> READ_AUTH_RESPONSE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthResponseDecoder$State[] $VALUES -> $VALUES
    68:68:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthResponseDecoder$State[] values() -> values
    68:68:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthResponseDecoder$State valueOf(java.lang.String) -> valueOf
    68:68:void <init>(java.lang.String,int) -> <init>
    68:70:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthScheme -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthScheme:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthScheme NO_AUTH -> NO_AUTH
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthScheme AUTH_GSSAPI -> AUTH_GSSAPI
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthScheme AUTH_PASSWORD -> AUTH_PASSWORD
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthScheme UNKNOWN -> UNKNOWN
    byte b -> b
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthScheme[] $VALUES -> $VALUES
    19:19:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthScheme[] values() -> values
    19:19:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthScheme valueOf(java.lang.String) -> valueOf
    27:29:void <init>(java.lang.String,int,byte) -> <init>
    36:36:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthScheme fromByte(byte) -> fromByte
    40:45:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthScheme valueOf(byte) -> valueOf
    49:49:byte byteValue() -> byteValue
    19:23:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthStatus -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthStatus:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthStatus SUCCESS -> SUCCESS
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthStatus FAILURE -> FAILURE
    byte b -> b
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthStatus[] $VALUES -> $VALUES
    19:19:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthStatus[] values() -> values
    19:19:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthStatus valueOf(java.lang.String) -> valueOf
    25:27:void <init>(java.lang.String,int,byte) -> <init>
    34:34:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthStatus fromByte(byte) -> fromByte
    38:43:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthStatus valueOf(byte) -> valueOf
    47:47:byte byteValue() -> byteValue
    19:21:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdRequest -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdRequest:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdType cmdType -> cmdType
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType addressType -> addressType
    java.lang.String host -> host
    int port -> port
    37:73:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdType,be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType,java.lang.String,int) -> <init>
    81:81:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdType cmdType() -> cmdType
    90:90:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType addressType() -> addressType
    99:99:java.lang.String host() -> host
    108:108:int port() -> port
    113:137:void encodeAsByteBuf(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encodeAsByteBuf
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdRequest$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdRequest$1:
    int[] $SwitchMap$io$netty$handler$codec$socks$SocksAddressType -> $SwitchMap$io$netty$handler$codec$socks$SocksAddressType
    47:47:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdRequestDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdRequestDecoder:
    java.lang.String name -> name
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksProtocolVersion version -> version
    int fieldLength -> fieldLength
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdType cmdType -> cmdType
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType addressType -> addressType
    byte reserved -> reserved
    java.lang.String host -> host
    int port -> port
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksRequest msg -> msg
    38:38:java.lang.String getName() -> getName
    49:53:void <init>() -> <init>
    57:99:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdRequestDecoder$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdRequestDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$socks$SocksAddressType -> $SwitchMap$io$netty$handler$codec$socks$SocksAddressType
    int[] $SwitchMap$io$netty$handler$codec$socks$SocksCmdRequestDecoder$State -> $SwitchMap$io$netty$handler$codec$socks$SocksCmdRequestDecoder$State
    57:72:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdRequestDecoder$State -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdRequestDecoder$State:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdRequestDecoder$State CHECK_PROTOCOL_VERSION -> CHECK_PROTOCOL_VERSION
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdRequestDecoder$State READ_CMD_HEADER -> READ_CMD_HEADER
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdRequestDecoder$State READ_CMD_ADDRESS -> READ_CMD_ADDRESS
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdRequestDecoder$State[] $VALUES -> $VALUES
    101:101:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdRequestDecoder$State[] values() -> values
    101:101:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdRequestDecoder$State valueOf(java.lang.String) -> valueOf
    101:101:void <init>(java.lang.String,int) -> <init>
    101:104:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdResponse -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdResponse:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus cmdStatus -> cmdStatus
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType addressType -> addressType
    java.lang.String host -> host
    int port -> port
    byte[] DOMAIN_ZEROED -> DOMAIN_ZEROED
    byte[] IPv4_HOSTNAME_ZEROED -> IPv4_HOSTNAME_ZEROED
    byte[] IPv6_HOSTNAME_ZEROED -> IPv6_HOSTNAME_ZEROED
    46:47:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus,be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType) -> <init>
    63:100:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus,be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType,java.lang.String,int) -> <init>
    108:108:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus cmdStatus() -> cmdStatus
    117:117:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType addressType() -> addressType
    129:132:java.lang.String host() -> host
    143:143:int port() -> port
    148:176:void encodeAsByteBuf(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encodeAsByteBuf
    38:40:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdResponse$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdResponse$1:
    int[] $SwitchMap$io$netty$handler$codec$socks$SocksAddressType -> $SwitchMap$io$netty$handler$codec$socks$SocksAddressType
    71:71:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdResponseDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdResponseDecoder:
    java.lang.String name -> name
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksProtocolVersion version -> version
    int fieldLength -> fieldLength
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus cmdStatus -> cmdStatus
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAddressType addressType -> addressType
    byte reserved -> reserved
    java.lang.String host -> host
    int port -> port
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksResponse msg -> msg
    38:38:java.lang.String getName() -> getName
    48:52:void <init>() -> <init>
    56:98:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdResponseDecoder$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdResponseDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$socks$SocksAddressType -> $SwitchMap$io$netty$handler$codec$socks$SocksAddressType
    int[] $SwitchMap$io$netty$handler$codec$socks$SocksCmdResponseDecoder$State -> $SwitchMap$io$netty$handler$codec$socks$SocksCmdResponseDecoder$State
    56:71:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdResponseDecoder$State -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdResponseDecoder$State:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdResponseDecoder$State CHECK_PROTOCOL_VERSION -> CHECK_PROTOCOL_VERSION
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdResponseDecoder$State READ_CMD_HEADER -> READ_CMD_HEADER
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdResponseDecoder$State READ_CMD_ADDRESS -> READ_CMD_ADDRESS
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdResponseDecoder$State[] $VALUES -> $VALUES
    100:100:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdResponseDecoder$State[] values() -> values
    100:100:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdResponseDecoder$State valueOf(java.lang.String) -> valueOf
    100:100:void <init>(java.lang.String,int) -> <init>
    100:103:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus SUCCESS -> SUCCESS
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus FAILURE -> FAILURE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus FORBIDDEN -> FORBIDDEN
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus NETWORK_UNREACHABLE -> NETWORK_UNREACHABLE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus HOST_UNREACHABLE -> HOST_UNREACHABLE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus REFUSED -> REFUSED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus TTL_EXPIRED -> TTL_EXPIRED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus COMMAND_NOT_SUPPORTED -> COMMAND_NOT_SUPPORTED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus ADDRESS_NOT_SUPPORTED -> ADDRESS_NOT_SUPPORTED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus UNASSIGNED -> UNASSIGNED
    byte b -> b
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus[] $VALUES -> $VALUES
    19:19:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus[] values() -> values
    19:19:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus valueOf(java.lang.String) -> valueOf
    33:35:void <init>(java.lang.String,int,byte) -> <init>
    42:42:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus fromByte(byte) -> fromByte
    46:51:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdStatus valueOf(byte) -> valueOf
    55:55:byte byteValue() -> byteValue
    19:29:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdType -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdType:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdType CONNECT -> CONNECT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdType BIND -> BIND
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdType UDP -> UDP
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdType UNKNOWN -> UNKNOWN
    byte b -> b
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdType[] $VALUES -> $VALUES
    19:19:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdType[] values() -> values
    19:19:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdType valueOf(java.lang.String) -> valueOf
    27:29:void <init>(java.lang.String,int,byte) -> <init>
    36:36:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdType fromByte(byte) -> fromByte
    40:45:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCmdType valueOf(byte) -> valueOf
    49:49:byte byteValue() -> byteValue
    19:23:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCommonUtils -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksCommonUtils:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksRequest UNKNOWN_SOCKS_REQUEST -> UNKNOWN_SOCKS_REQUEST
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksResponse UNKNOWN_SOCKS_RESPONSE -> UNKNOWN_SOCKS_RESPONSE
    int SECOND_ADDRESS_OCTET_SHIFT -> SECOND_ADDRESS_OCTET_SHIFT
    int FIRST_ADDRESS_OCTET_SHIFT -> FIRST_ADDRESS_OCTET_SHIFT
    int THIRD_ADDRESS_OCTET_SHIFT -> THIRD_ADDRESS_OCTET_SHIFT
    int XOR_DEFAULT_VALUE -> XOR_DEFAULT_VALUE
    char[] ipv6conseqZeroFiller -> ipv6conseqZeroFiller
    char ipv6hextetSeparator -> ipv6hextetSeparator
    boolean $assertionsDisabled -> $assertionsDisabled
    32:34:void <init>() -> <init>
    37:37:java.lang.String intToIp(int) -> intToIp
    51:79:java.lang.String ipv6toCompressedForm(byte[]) -> ipv6toCompressedForm
    86:89:java.lang.String ipv6toStr(byte[]) -> ipv6toStr
    94:101:void ipv6toStr(java.lang.StringBuilder,byte[],int,int) -> ipv6toStr
    104:105:void appendHextet(java.lang.StringBuilder,byte[],int) -> appendHextet
    20:43:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitRequest -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitRequest:
    java.util.List authSchemes -> authSchemes
    33:38:void <init>(java.util.List) -> <init>
    46:46:java.util.List authSchemes() -> authSchemes
    51:56:void encodeAsByteBuf(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encodeAsByteBuf
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitRequestDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitRequestDecoder:
    java.lang.String name -> name
    java.util.List authSchemes -> authSchemes
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksProtocolVersion version -> version
    byte authSchemeNum -> authSchemeNum
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksRequest msg -> msg
    38:38:java.lang.String getName() -> getName
    41:48:void <init>() -> <init>
    52:72:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitRequestDecoder$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitRequestDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$socks$SocksInitRequestDecoder$State -> $SwitchMap$io$netty$handler$codec$socks$SocksInitRequestDecoder$State
    52:52:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitRequestDecoder$State -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitRequestDecoder$State:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitRequestDecoder$State CHECK_PROTOCOL_VERSION -> CHECK_PROTOCOL_VERSION
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitRequestDecoder$State READ_AUTH_SCHEMES -> READ_AUTH_SCHEMES
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitRequestDecoder$State[] $VALUES -> $VALUES
    74:74:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitRequestDecoder$State[] values() -> values
    74:74:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitRequestDecoder$State valueOf(java.lang.String) -> valueOf
    74:74:void <init>(java.lang.String,int) -> <init>
    74:76:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitResponse -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitResponse:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthScheme authScheme -> authScheme
    30:35:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthScheme) -> <init>
    43:43:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthScheme authScheme() -> authScheme
    48:50:void encodeAsByteBuf(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encodeAsByteBuf
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitResponseDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitResponseDecoder:
    java.lang.String name -> name
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksProtocolVersion version -> version
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksAuthScheme authScheme -> authScheme
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksResponse msg -> msg
    37:37:java.lang.String getName() -> getName
    43:47:void <init>() -> <init>
    51:67:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitResponseDecoder$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitResponseDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$socks$SocksInitResponseDecoder$State -> $SwitchMap$io$netty$handler$codec$socks$SocksInitResponseDecoder$State
    51:51:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitResponseDecoder$State -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitResponseDecoder$State:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitResponseDecoder$State CHECK_PROTOCOL_VERSION -> CHECK_PROTOCOL_VERSION
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitResponseDecoder$State READ_PREFFERED_AUTH_TYPE -> READ_PREFFERED_AUTH_TYPE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitResponseDecoder$State[] $VALUES -> $VALUES
    69:69:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitResponseDecoder$State[] values() -> values
    69:69:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksInitResponseDecoder$State valueOf(java.lang.String) -> valueOf
    69:69:void <init>(java.lang.String,int) -> <init>
    69:71:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksMessage -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksMessage:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksMessageType type -> type
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksProtocolVersion protocolVersion -> protocolVersion
    30:37:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksMessageType) -> <init>
    45:45:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksMessageType type() -> type
    54:54:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksProtocolVersion protocolVersion() -> protocolVersion
    void encodeAsByteBuf(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encodeAsByteBuf
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksMessageEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksMessageEncoder:
    java.lang.String name -> name
    30:30:void <init>() -> <init>
    38:38:java.lang.String getName() -> getName
    44:45:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksMessage,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    29:29:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksMessageType -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksMessageType:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksMessageType REQUEST -> REQUEST
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksMessageType RESPONSE -> RESPONSE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksMessageType UNKNOWN -> UNKNOWN
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksMessageType[] $VALUES -> $VALUES
    19:19:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksMessageType[] values() -> values
    19:19:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksMessageType valueOf(java.lang.String) -> valueOf
    19:19:void <init>(java.lang.String,int) -> <init>
    19:22:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksProtocolVersion -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksProtocolVersion:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksProtocolVersion SOCKS4a -> SOCKS4a
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksProtocolVersion SOCKS5 -> SOCKS5
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksProtocolVersion UNKNOWN -> UNKNOWN
    byte b -> b
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksProtocolVersion[] $VALUES -> $VALUES
    19:19:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksProtocolVersion[] values() -> values
    19:19:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksProtocolVersion valueOf(java.lang.String) -> valueOf
    26:28:void <init>(java.lang.String,int,byte) -> <init>
    35:35:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksProtocolVersion fromByte(byte) -> fromByte
    39:44:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksProtocolVersion valueOf(byte) -> valueOf
    48:48:byte byteValue() -> byteValue
    19:22:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksRequest -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksRequest:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksRequestType requestType -> requestType
    31:36:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksRequestType) -> <init>
    44:44:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksRequestType requestType() -> requestType
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksRequestType -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksRequestType:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksRequestType INIT -> INIT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksRequestType AUTH -> AUTH
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksRequestType CMD -> CMD
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksRequestType UNKNOWN -> UNKNOWN
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksRequestType[] $VALUES -> $VALUES
    22:22:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksRequestType[] values() -> values
    22:22:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksRequestType valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    22:26:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksResponse -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksResponse:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksResponseType responseType -> responseType
    31:36:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksResponseType) -> <init>
    44:44:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksResponseType responseType() -> responseType
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksResponseType -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksResponseType:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksResponseType INIT -> INIT
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksResponseType AUTH -> AUTH
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksResponseType CMD -> CMD
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksResponseType UNKNOWN -> UNKNOWN
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksResponseType[] $VALUES -> $VALUES
    22:22:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksResponseType[] values() -> values
    22:22:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksResponseType valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    22:26:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksSubnegotiationVersion -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksSubnegotiationVersion:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksSubnegotiationVersion AUTH_PASSWORD -> AUTH_PASSWORD
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksSubnegotiationVersion UNKNOWN -> UNKNOWN
    byte b -> b
    be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksSubnegotiationVersion[] $VALUES -> $VALUES
    19:19:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksSubnegotiationVersion[] values() -> values
    19:19:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksSubnegotiationVersion valueOf(java.lang.String) -> valueOf
    25:27:void <init>(java.lang.String,int,byte) -> <init>
    34:34:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksSubnegotiationVersion fromByte(byte) -> fromByte
    38:43:be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.SocksSubnegotiationVersion valueOf(byte) -> valueOf
    47:47:byte byteValue() -> byteValue
    19:21:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.UnknownSocksRequest -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.UnknownSocksRequest:
    30:31:void <init>() -> <init>
    36:36:void encodeAsByteBuf(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encodeAsByteBuf
be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.UnknownSocksResponse -> be.alexandre01.dnplugin.shaded.netty.handler.codec.socks.UnknownSocksResponse:
    30:31:void <init>() -> <init>
    36:36:void encodeAsByteBuf(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encodeAsByteBuf
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyDataFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyDataFrame:
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf data -> data
    36:37:void <init>(int) -> <init>
    46:51:void <init>(int,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> <init>
    54:58:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf validate(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> validate
    63:64:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyDataFrame setStreamId(int) -> setStreamId
    69:70:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyDataFrame setLast(boolean) -> setLast
    75:78:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf content() -> content
    83:85:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyDataFrame copy() -> copy
    90:92:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyDataFrame duplicate() -> duplicate
    97:97:int refCnt() -> refCnt
    102:103:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyDataFrame retain() -> retain
    108:109:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyDataFrame retain(int) -> retain
    114:114:boolean release() -> release
    119:119:boolean release(int) -> release
    124:139:java.lang.String toString() -> toString
    26:26:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamFrame setLast(boolean) -> setLast
    26:26:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamFrame setStreamId(int) -> setStreamId
    26:26:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain(int) -> retain
    26:26:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder retain() -> retain
    26:26:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder duplicate() -> duplicate
    26:26:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder copy() -> copy
    26:26:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    26:26:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyGoAwayFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyGoAwayFrame:
    int lastGoodStreamId -> lastGoodStreamId
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionStatus status -> status
    34:35:void <init>(int) -> <init>
    44:45:void <init>(int,int) -> <init>
    53:56:void <init>(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionStatus) -> <init>
    60:60:int lastGoodStreamId() -> lastGoodStreamId
    65:70:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyGoAwayFrame setLastGoodStreamId(int) -> setLastGoodStreamId
    75:75:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionStatus status() -> status
    80:81:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyGoAwayFrame setStatus(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionStatus) -> setStatus
    86:94:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders:
    int BUCKET_SIZE -> BUCKET_SIZE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderEntry[] entries -> entries
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderEntry head -> head
    33:47:int hash(java.lang.String) -> hash
    52:72:boolean eq(java.lang.String,java.lang.String) -> eq
    76:76:int index(int) -> index
    79:84:void <init>() -> <init>
    88:95:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders add(java.lang.String,java.lang.Object) -> add
    100:107:void add0(int,int,java.lang.String,java.lang.String) -> add0
    111:118:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders remove(java.lang.String) -> remove
    122:155:void remove0(int,int,java.lang.String) -> remove0
    159:167:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders set(java.lang.String,java.lang.Object) -> set
    172:191:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders set(java.lang.String,java.lang.Iterable) -> set
    196:200:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders clear() -> clear
    205:219:java.lang.String get(java.lang.String) -> get
    224:239:java.util.List getAll(java.lang.String) -> getAll
    244:252:java.util.List entries() -> entries
    257:257:java.util.Iterator iterator() -> iterator
    262:262:boolean contains(java.lang.String) -> contains
    267:274:java.util.Set names() -> names
    279:287:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders add(java.lang.String,java.lang.Iterable) -> add
    292:292:boolean isEmpty() -> isEmpty
    296:299:java.lang.String toString(java.lang.Object) -> toString
    28:28:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderEntry access$100(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders) -> access$100
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders$1:
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderEntry -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderEntry:
    int hash -> hash
    java.lang.String key -> key
    java.lang.String value -> value
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderEntry next -> next
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderEntry before -> before
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderEntry after -> after
    335:339:void <init>(int,java.lang.String,java.lang.String) -> <init>
    342:344:void remove() -> remove
    347:351:void addBefore(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderEntry) -> addBefore
    355:355:java.lang.String getKey() -> getKey
    360:360:java.lang.String getValue() -> getValue
    365:371:java.lang.String setValue(java.lang.String) -> setValue
    376:376:java.lang.String toString() -> toString
    328:328:java.lang.Object setValue(java.lang.Object) -> setValue
    328:328:java.lang.Object getValue() -> getValue
    328:328:java.lang.Object getKey() -> getKey
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderIterator -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderIterator:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderEntry current -> current
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders this$0 -> this$0
    302:304:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders) -> <init>
    308:308:boolean hasNext() -> hasNext
    313:319:java.util.Map$Entry next() -> next
    324:324:void remove() -> remove
    302:302:java.lang.Object next() -> next
    302:302:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeaders$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeadersFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyHeadersFrame:
    boolean invalid -> invalid
    boolean truncated -> truncated
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders headers -> headers
    30:39:void <init>(int) -> <init>
    43:44:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame setStreamId(int) -> setStreamId
    49:50:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame setLast(boolean) -> setLast
    55:55:boolean isInvalid() -> isInvalid
    60:61:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame setInvalid() -> setInvalid
    66:66:boolean isTruncated() -> isTruncated
    71:72:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame setTruncated() -> setTruncated
    77:77:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders headers() -> headers
    82:97:java.lang.String toString() -> toString
    101:108:void appendHeaders(java.lang.StringBuilder) -> appendHeaders
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamFrame setLast(boolean) -> setLast
    25:25:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamFrame setStreamId(int) -> setStreamId
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyPingFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyPingFrame:
    int id -> id
    32:34:void <init>(int) -> <init>
    38:38:int id() -> id
    43:44:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyPingFrame setId(int) -> setId
    49:54:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus status -> status
    35:36:void <init>(int,int) -> <init>
    45:47:void <init>(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus) -> <init>
    51:52:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyRstStreamFrame setStreamId(int) -> setStreamId
    57:58:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyRstStreamFrame setLast(boolean) -> setLast
    63:63:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus status() -> status
    68:69:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyRstStreamFrame setStatus(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus) -> setStatus
    74:82:java.lang.String toString() -> toString
    23:23:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamFrame setLast(boolean) -> setLast
    23:23:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamFrame setStreamId(int) -> setStreamId
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdySettingsFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdySettingsFrame:
    boolean clear -> clear
    java.util.Map settingsMap -> settingsMap
    27:163:void <init>() -> <init>
    34:34:java.util.Set ids() -> ids
    39:40:boolean isSet(int) -> isSet
    45:49:int getValue(int) -> getValue
    55:55:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySettingsFrame setValue(int,int) -> setValue
    60:72:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySettingsFrame setValue(int,int,boolean,boolean) -> setValue
    77:81:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySettingsFrame removeValue(int) -> removeValue
    86:90:boolean isPersistValue(int) -> isPersistValue
    96:100:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySettingsFrame setPersistValue(int,boolean) -> setPersistValue
    105:109:boolean isPersisted(int) -> isPersisted
    115:119:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySettingsFrame setPersisted(int,boolean) -> setPersisted
    124:124:boolean clearPreviouslyPersistedSettings() -> clearPreviouslyPersistedSettings
    129:130:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySettingsFrame setClearPreviouslyPersistedSettings(boolean) -> setClearPreviouslyPersistedSettings
    134:134:java.util.Set getSettings() -> getSettings
    138:151:void appendSettings(java.lang.StringBuilder) -> appendSettings
    155:160:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdySettingsFrame$Setting -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdySettingsFrame$Setting:
    int value -> value
    boolean persist -> persist
    boolean persisted -> persisted
    169:173:void <init>(int,boolean,boolean) -> <init>
    176:176:int getValue() -> getValue
    180:181:void setValue(int) -> setValue
    184:184:boolean isPersist() -> isPersist
    188:189:void setPersist(boolean) -> setPersist
    192:192:boolean isPersisted() -> isPersisted
    196:197:void setPersisted(boolean) -> setPersisted
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyStreamFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyStreamFrame:
    int streamId -> streamId
    boolean last -> last
    31:33:void <init>(int) -> <init>
    37:37:int streamId() -> streamId
    42:47:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamFrame setStreamId(int) -> setStreamId
    52:52:boolean isLast() -> isLast
    57:58:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamFrame setLast(boolean) -> setLast
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdySynReplyFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdySynReplyFrame:
    32:33:void <init>(int) -> <init>
    37:38:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynReplyFrame setStreamId(int) -> setStreamId
    43:44:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynReplyFrame setLast(boolean) -> setLast
    49:50:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynReplyFrame setInvalid() -> setInvalid
    55:70:java.lang.String toString() -> toString
    23:23:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame setInvalid() -> setInvalid
    23:23:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame setLast(boolean) -> setLast
    23:23:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame setStreamId(int) -> setStreamId
    23:23:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamFrame setLast(boolean) -> setLast
    23:23:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamFrame setStreamId(int) -> setStreamId
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdySynStreamFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdySynStreamFrame:
    int associatedStreamId -> associatedStreamId
    byte priority -> priority
    boolean unidirectional -> unidirectional
    38:41:void <init>(int,int,byte) -> <init>
    45:46:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynStreamFrame setStreamId(int) -> setStreamId
    51:52:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynStreamFrame setLast(boolean) -> setLast
    57:58:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynStreamFrame setInvalid() -> setInvalid
    63:63:int associatedStreamId() -> associatedStreamId
    68:74:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynStreamFrame setAssociatedStreamId(int) -> setAssociatedStreamId
    79:79:byte priority() -> priority
    84:89:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynStreamFrame setPriority(byte) -> setPriority
    94:94:boolean isUnidirectional() -> isUnidirectional
    99:100:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynStreamFrame setUnidirectional(boolean) -> setUnidirectional
    105:130:java.lang.String toString() -> toString
    23:23:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame setInvalid() -> setInvalid
    23:23:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame setLast(boolean) -> setLast
    23:23:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame setStreamId(int) -> setStreamId
    23:23:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamFrame setLast(boolean) -> setLast
    23:23:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamFrame setStreamId(int) -> setStreamId
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyWindowUpdateFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.DefaultSpdyWindowUpdateFrame:
    int streamId -> streamId
    int deltaWindowSize -> deltaWindowSize
    34:37:void <init>(int,int) -> <init>
    41:41:int streamId() -> streamId
    46:51:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyWindowUpdateFrame setStreamId(int) -> setStreamId
    56:56:int deltaWindowSize() -> deltaWindowSize
    61:67:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyWindowUpdateFrame setDeltaWindowSize(int) -> setDeltaWindowSize
    72:80:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyCodecUtil -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyCodecUtil:
    int SPDY_SESSION_STREAM_ID -> SPDY_SESSION_STREAM_ID
    int SPDY_HEADER_TYPE_OFFSET -> SPDY_HEADER_TYPE_OFFSET
    int SPDY_HEADER_FLAGS_OFFSET -> SPDY_HEADER_FLAGS_OFFSET
    int SPDY_HEADER_LENGTH_OFFSET -> SPDY_HEADER_LENGTH_OFFSET
    int SPDY_HEADER_SIZE -> SPDY_HEADER_SIZE
    int SPDY_MAX_LENGTH -> SPDY_MAX_LENGTH
    byte SPDY_DATA_FLAG_FIN -> SPDY_DATA_FLAG_FIN
    int SPDY_DATA_FRAME -> SPDY_DATA_FRAME
    int SPDY_SYN_STREAM_FRAME -> SPDY_SYN_STREAM_FRAME
    int SPDY_SYN_REPLY_FRAME -> SPDY_SYN_REPLY_FRAME
    int SPDY_RST_STREAM_FRAME -> SPDY_RST_STREAM_FRAME
    int SPDY_SETTINGS_FRAME -> SPDY_SETTINGS_FRAME
    int SPDY_PUSH_PROMISE_FRAME -> SPDY_PUSH_PROMISE_FRAME
    int SPDY_PING_FRAME -> SPDY_PING_FRAME
    int SPDY_GOAWAY_FRAME -> SPDY_GOAWAY_FRAME
    int SPDY_HEADERS_FRAME -> SPDY_HEADERS_FRAME
    int SPDY_WINDOW_UPDATE_FRAME -> SPDY_WINDOW_UPDATE_FRAME
    byte SPDY_FLAG_FIN -> SPDY_FLAG_FIN
    byte SPDY_FLAG_UNIDIRECTIONAL -> SPDY_FLAG_UNIDIRECTIONAL
    byte SPDY_SETTINGS_CLEAR -> SPDY_SETTINGS_CLEAR
    byte SPDY_SETTINGS_PERSIST_VALUE -> SPDY_SETTINGS_PERSIST_VALUE
    byte SPDY_SETTINGS_PERSISTED -> SPDY_SETTINGS_PERSISTED
    int SPDY_SETTINGS_MAX_ID -> SPDY_SETTINGS_MAX_ID
    int SPDY_MAX_NV_LENGTH -> SPDY_MAX_NV_LENGTH
    byte[] SPDY_DICT -> SPDY_DICT
    238:239:void <init>() -> <init>
    245:245:int getUnsignedShort(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> getUnsignedShort
    253:253:int getUnsignedMedium(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> getUnsignedMedium
    262:262:int getUnsignedInt(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> getUnsignedInt
    272:272:int getSignedInt(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> getSignedInt
    283:283:boolean isServerId(int) -> isServerId
    290:314:void validateHeaderName(java.lang.String) -> validateHeaderName
    320:330:void validateHeaderValue(java.lang.String) -> validateHeaderValue
    57:57:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyDataFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyDataFrame:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyDataFrame setStreamId(int) -> setStreamId
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyDataFrame setLast(boolean) -> setLast
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf content() -> content
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyDataFrame copy() -> copy
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyDataFrame duplicate() -> duplicate
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyDataFrame retain() -> retain
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyDataFrame retain(int) -> retain
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrame:
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameCodec -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameCodec:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyProtocolException INVALID_FRAME -> INVALID_FRAME
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder spdyFrameDecoder -> spdyFrameDecoder
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameEncoder spdyFrameEncoder -> spdyFrameEncoder
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockDecoder spdyHeaderBlockDecoder -> spdyHeaderBlockDecoder
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockEncoder spdyHeaderBlockEncoder -> spdyHeaderBlockEncoder
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame spdyHeadersFrame -> spdyHeadersFrame
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySettingsFrame spdySettingsFrame -> spdySettingsFrame
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext ctx -> ctx
    58:59:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion) -> <init>
    67:70:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion,int,int,int,int,int) -> <init>
    73:78:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion,int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockDecoder,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockEncoder) -> <init>
    82:91:void handlerAdded(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerAdded
    95:96:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    100:101:void bind(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bind
    106:107:void connect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    111:112:void disconnect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> disconnect
    116:117:void close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    121:122:void deregister(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> deregister
    126:127:void read(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> read
    131:132:void flush(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> flush
    138:251:void write(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    255:258:void readDataFrame(int,boolean,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readDataFrame
    263:267:void readSynStreamFrame(int,int,byte,boolean,boolean) -> readSynStreamFrame
    271:274:void readSynReplyFrame(int,boolean) -> readSynReplyFrame
    278:280:void readRstStreamFrame(int,int) -> readRstStreamFrame
    284:286:void readSettingsFrame(boolean) -> readSettingsFrame
    290:291:void readSetting(int,int,boolean,boolean) -> readSetting
    295:298:void readSettingsEnd() -> readSettingsEnd
    302:304:void readPingFrame(int) -> readPingFrame
    308:310:void readGoAwayFrame(int,int) -> readGoAwayFrame
    314:316:void readHeadersFrame(int,boolean) -> readHeadersFrame
    320:322:void readWindowUpdateFrame(int,int) -> readWindowUpdateFrame
    327:333:void readHeaderBlock(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readHeaderBlock
    337:348:void readHeaderBlockEnd() -> readHeaderBlockEnd
    352:353:void readFrameError(java.lang.String) -> readFrameError
    34:34:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockDecoder access$000(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameCodec) -> access$000
    34:34:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockEncoder access$100(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameCodec) -> access$100
    37:37:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameCodec$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameCodec$1:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameCodec this$0 -> this$0
    84:84:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameCodec) -> <init>
    87:89:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    84:84:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder:
    int spdyVersion -> spdyVersion
    int maxChunkSize -> maxChunkSize
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoderDelegate delegate -> delegate
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State state -> state
    byte flags -> flags
    int length -> length
    int streamId -> streamId
    int numSettings -> numSettings
    85:86:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoderDelegate) -> <init>
    91:106:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoderDelegate,int) -> <init>
    113:385:void decode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> decode
    391:391:boolean hasFlag(byte,byte) -> hasFlag
    395:427:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State getNextState(int,int) -> getNextState
    433:462:boolean isValidFrameHeader(int,int,byte,int) -> isValidFrameHeader
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$spdy$SpdyFrameDecoder$State -> $SwitchMap$io$netty$handler$codec$spdy$SpdyFrameDecoder$State
    113:113:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_COMMON_HEADER -> READ_COMMON_HEADER
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_DATA_FRAME -> READ_DATA_FRAME
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_SYN_STREAM_FRAME -> READ_SYN_STREAM_FRAME
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_SYN_REPLY_FRAME -> READ_SYN_REPLY_FRAME
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_RST_STREAM_FRAME -> READ_RST_STREAM_FRAME
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_SETTINGS_FRAME -> READ_SETTINGS_FRAME
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_SETTING -> READ_SETTING
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_PING_FRAME -> READ_PING_FRAME
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_GOAWAY_FRAME -> READ_GOAWAY_FRAME
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_HEADERS_FRAME -> READ_HEADERS_FRAME
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_WINDOW_UPDATE_FRAME -> READ_WINDOW_UPDATE_FRAME
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_HEADER_BLOCK -> READ_HEADER_BLOCK
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State DISCARD_FRAME -> DISCARD_FRAME
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State FRAME_ERROR -> FRAME_ERROR
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State[] $VALUES -> $VALUES
    63:63:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State[] values() -> values
    63:63:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoder$State valueOf(java.lang.String) -> valueOf
    63:63:void <init>(java.lang.String,int) -> <init>
    63:77:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoderDelegate -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameDecoderDelegate:
    void readDataFrame(int,boolean,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readDataFrame
    void readSynStreamFrame(int,int,byte,boolean,boolean) -> readSynStreamFrame
    void readSynReplyFrame(int,boolean) -> readSynReplyFrame
    void readRstStreamFrame(int,int) -> readRstStreamFrame
    void readSettingsFrame(boolean) -> readSettingsFrame
    void readSetting(int,int,boolean,boolean) -> readSetting
    void readSettingsEnd() -> readSettingsEnd
    void readPingFrame(int) -> readPingFrame
    void readGoAwayFrame(int,int) -> readGoAwayFrame
    void readHeadersFrame(int,boolean) -> readHeadersFrame
    void readWindowUpdateFrame(int,int) -> readWindowUpdateFrame
    void readHeaderBlock(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readHeaderBlock
    void readHeaderBlockEnd() -> readHeaderBlockEnd
    void readFrameError(java.lang.String) -> readFrameError
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrameEncoder:
    int version -> version
    36:41:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion) -> <init>
    44:48:void writeControlFrameHeader(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,byte,int) -> writeControlFrameHeader
    51:58:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encodeDataFrame(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,int,boolean,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encodeDataFrame
    63:75:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encodeSynStreamFrame(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,int,int,byte,boolean,boolean,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encodeSynStreamFrame
    79:86:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encodeSynReplyFrame(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,int,boolean,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encodeSynReplyFrame
    90:96:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encodeRstStreamFrame(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,int,int) -> encodeRstStreamFrame
    100:121:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encodeSettingsFrame(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySettingsFrame) -> encodeSettingsFrame
    125:130:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encodePingFrame(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,int) -> encodePingFrame
    134:140:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encodeGoAwayFrame(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,int,int) -> encodeGoAwayFrame
    144:151:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encodeHeadersFrame(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,int,boolean,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encodeHeadersFrame
    155:161:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encodeWindowUpdateFrame(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,int,int) -> encodeWindowUpdateFrame
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyGoAwayFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyGoAwayFrame:
    int lastGoodStreamId() -> lastGoodStreamId
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyGoAwayFrame setLastGoodStreamId(int) -> setLastGoodStreamId
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionStatus status() -> status
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyGoAwayFrame setStatus(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionStatus) -> setStatus
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockDecoder:
    20:20:void <init>() -> <init>
    23:23:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockDecoder newInstance(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion,int) -> newInstance
    void decode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> decode
    void endHeaderBlock(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> endHeaderBlock
    void end() -> end
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockEncoder:
    21:21:void <init>() -> <init>
    26:30:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockEncoder newInstance(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion,int,int,int) -> newInstance
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encode(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> encode
    void end() -> end
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockJZlibEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockJZlibEncoder:
    com.jcraft.jzlib.Deflater z -> z
    boolean finished -> finished
    28:60:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion,int,int,int) -> <init>
    63:68:void setInput(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setInput
    72:93:void encode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    97:113:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encode(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> encode
    118:125:void end() -> end
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder:
    int LENGTH_FIELD_SIZE -> LENGTH_FIELD_SIZE
    int maxHeaderSize -> maxHeaderSize
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state -> state
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf cumulation -> cumulation
    int headerSize -> headerSize
    int numHeaders -> numHeaders
    int length -> length
    java.lang.String name -> name
    49:55:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion,int) -> <init>
    58:60:int readLengthField(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> readLengthField
    65:87:void decode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> decode
    91:283:void decodeHeaderBlock(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> decodeHeaderBlock
    287:297:void endHeaderBlock(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> endHeaderBlock
    301:302:void end() -> end
    305:309:void releaseBuffer() -> releaseBuffer
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$1:
    int[] $SwitchMap$io$netty$handler$codec$spdy$SpdyHeaderBlockRawDecoder$State -> $SwitchMap$io$netty$handler$codec$spdy$SpdyHeaderBlockRawDecoder$State
    92:92:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NUM_HEADERS -> READ_NUM_HEADERS
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NAME_LENGTH -> READ_NAME_LENGTH
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NAME -> READ_NAME
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State SKIP_NAME -> SKIP_NAME
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_VALUE_LENGTH -> READ_VALUE_LENGTH
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_VALUE -> READ_VALUE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State SKIP_VALUE -> SKIP_VALUE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State END_HEADER_BLOCK -> END_HEADER_BLOCK
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State ERROR -> ERROR
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State[] $VALUES -> $VALUES
    37:37:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State[] values() -> values
    37:37:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State valueOf(java.lang.String) -> valueOf
    37:37:void <init>(java.lang.String,int) -> <init>
    37:46:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockRawEncoder:
    int version -> version
    29:34:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion) -> <init>
    37:38:void setLengthField(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int,int) -> setLengthField
    41:42:void writeLengthField(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> writeLengthField
    46:84:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encode(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> encode
    89:89:void end() -> end
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder:
    int DEFAULT_BUFFER_CAPACITY -> DEFAULT_BUFFER_CAPACITY
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyProtocolException INVALID_HEADER_BLOCK -> INVALID_HEADER_BLOCK
    java.util.zip.Inflater decompressor -> decompressor
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf decompressed -> decompressed
    32:38:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion,int) -> <init>
    42:57:void decode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> decode
    60:70:int setInput(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setInput
    74:95:int decompress(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> decompress
    100:104:void ensureBuffer(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> ensureBuffer
    108:110:void endHeaderBlock(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> endHeaderBlock
    114:117:void end() -> end
    120:124:void releaseBuffer() -> releaseBuffer
    29:29:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockZlibEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaderBlockZlibEncoder:
    java.util.zip.Deflater compressor -> compressor
    boolean finished -> finished
    32:39:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion,int) -> <init>
    42:52:int setInput(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> setInput
    56:60:void encode(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> encode
    63:68:boolean compressInto(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> compressInto
    73:91:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf encode(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> encode
    96:102:void end() -> end
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders EMPTY_HEADERS -> EMPTY_HEADERS
    32:105:void <init>() -> <init>
    142:142:java.lang.String getHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame,java.lang.String) -> getHeader
    154:158:java.lang.String getHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame,java.lang.String,java.lang.String) -> getHeader
    166:167:void setHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame,java.lang.String,java.lang.Object) -> setHeader
    174:175:void setHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame,java.lang.String,java.lang.Iterable) -> setHeader
    181:182:void addHeader(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame,java.lang.String,java.lang.Object) -> addHeader
    188:189:void removeHost(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> removeHost
    195:195:java.lang.String getHost(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> getHost
    202:203:void setHost(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame,java.lang.String) -> setHost
    209:210:void removeMethod(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> removeMethod
    217:219:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod getMethod(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> getMethod
    227:228:void setMethod(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMethod) -> setMethod
    234:235:void removeScheme(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> removeScheme
    241:241:java.lang.String getScheme(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> getScheme
    248:249:void setScheme(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame,java.lang.String) -> setScheme
    255:256:void removeStatus(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> removeStatus
    263:278:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus getStatus(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> getStatus
    286:287:void setStatus(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    293:294:void removeUrl(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> removeUrl
    300:300:java.lang.String getUrl(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> getUrl
    307:308:void setUrl(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame,java.lang.String) -> setUrl
    314:315:void removeVersion(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> removeVersion
    322:324:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion getVersion(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> getVersion
    332:333:void setVersion(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpVersion) -> setVersion
    337:337:java.util.Iterator iterator() -> iterator
    java.lang.String get(java.lang.String) -> get
    java.util.List getAll(java.lang.String) -> getAll
    java.util.List entries() -> entries
    boolean contains(java.lang.String) -> contains
    java.util.Set names() -> names
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders add(java.lang.String,java.lang.Object) -> add
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders add(java.lang.String,java.lang.Iterable) -> add
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders set(java.lang.String,java.lang.Object) -> set
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders set(java.lang.String,java.lang.Iterable) -> set
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders remove(java.lang.String) -> remove
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders clear() -> clear
    boolean isEmpty() -> isEmpty
    34:34:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders$1:
    34:34:void <init>() -> <init>
    38:38:java.util.List getAll(java.lang.String) -> getAll
    43:43:java.util.List entries() -> entries
    48:48:boolean contains(java.lang.String) -> contains
    53:53:boolean isEmpty() -> isEmpty
    58:58:java.util.Set names() -> names
    63:63:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders add(java.lang.String,java.lang.Object) -> add
    68:68:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders add(java.lang.String,java.lang.Iterable) -> add
    73:73:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders set(java.lang.String,java.lang.Object) -> set
    78:78:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders set(java.lang.String,java.lang.Iterable) -> set
    83:83:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders remove(java.lang.String) -> remove
    88:88:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders clear() -> clear
    93:93:java.util.Iterator iterator() -> iterator
    98:98:java.lang.String get(java.lang.String) -> get
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders$HttpNames -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders$HttpNames:
    java.lang.String HOST -> HOST
    java.lang.String METHOD -> METHOD
    java.lang.String PATH -> PATH
    java.lang.String SCHEME -> SCHEME
    java.lang.String STATUS -> STATUS
    java.lang.String VERSION -> VERSION
    131:131:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame:
    boolean isInvalid() -> isInvalid
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame setInvalid() -> setInvalid
    boolean isTruncated() -> isTruncated
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame setTruncated() -> setTruncated
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeaders headers() -> headers
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame setStreamId(int) -> setStreamId
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame setLast(boolean) -> setLast
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHttpCodec -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHttpCodec:
    29:30:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion,int) -> <init>
    36:37:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion,int,boolean) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHttpDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHttpDecoder:
    boolean validateHeaders -> validateHeaders
    int spdyVersion -> spdyVersion
    int maxContentLength -> maxContentLength
    java.util.Map messageMap -> messageMap
    56:57:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion,int) -> <init>
    69:70:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion,int,boolean) -> <init>
    82:83:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion,int,java.util.Map) -> <init>
    96:108:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion,int,java.util.Map,boolean) -> <init>
    111:111:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage putMessage(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage) -> putMessage
    115:115:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage getMessage(int) -> getMessage
    119:119:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpMessage removeMessage(int) -> removeMessage
    125:320:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyFrame,java.util.List) -> decode
    325:353:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpRequest createHttpRequest(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame) -> createHttpRequest
    361:378:be.alexandre01.dnplugin.shaded.netty.handler.codec.http.FullHttpResponse createHttpResponse(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHeadersFrame,boolean) -> createHttpResponse
    40:40:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHttpEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHttpEncoder:
    int spdyVersion -> spdyVersion
    int currentStreamId -> currentStreamId
    133:138:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion) -> <init>
    143:203:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpObject,java.util.List) -> encode
    208:264:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynStreamFrame createSynStreamFrame(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> createSynStreamFrame
    270:294:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynReplyFrame createSynReplyFrame(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpResponse) -> createSynReplyFrame
    304:311:boolean isLast(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> isLast
    123:123:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHttpHeaders -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHttpHeaders:
    55:56:void <init>() -> <init>
    62:63:void removeStreamId(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> removeStreamId
    69:69:int getStreamId(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> getStreamId
    76:77:void setStreamId(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,int) -> setStreamId
    83:84:void removeAssociatedToStreamId(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> removeAssociatedToStreamId
    93:93:int getAssociatedToStreamId(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> getAssociatedToStreamId
    100:101:void setAssociatedToStreamId(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,int) -> setAssociatedToStreamId
    107:108:void removePriority(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> removePriority
    117:117:byte getPriority(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> getPriority
    124:125:void setPriority(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,byte) -> setPriority
    131:132:void removeUrl(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> removeUrl
    138:138:java.lang.String getUrl(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> getUrl
    145:146:void setUrl(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String) -> setUrl
    152:153:void removeScheme(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> removeScheme
    159:159:java.lang.String getScheme(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage) -> getScheme
    166:167:void setScheme(be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.lang.String) -> setScheme
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHttpHeaders$Names -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHttpHeaders$Names:
    java.lang.String STREAM_ID -> STREAM_ID
    java.lang.String ASSOCIATED_TO_STREAM_ID -> ASSOCIATED_TO_STREAM_ID
    java.lang.String PRIORITY -> PRIORITY
    java.lang.String URL -> URL
    java.lang.String SCHEME -> SCHEME
    52:52:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHttpResponseStreamIdHandler -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyHttpResponseStreamIdHandler:
    java.lang.Integer NO_ID -> NO_ID
    java.util.Queue ids -> ids
    32:35:void <init>() -> <init>
    39:39:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    44:50:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.http.HttpMessage,java.util.List) -> encode
    54:66:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    32:32:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    34:34:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyOrHttpChooser -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyOrHttpChooser:
    int maxSpdyContentLength -> maxSpdyContentLength
    int maxHttpContentLength -> maxHttpContentLength
    78:81:void <init>(int,int) -> <init>
    89:95:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyOrHttpChooser$SelectedProtocol getProtocol(javax.net.ssl.SSLEngine) -> getProtocol
    100:107:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    112:133:boolean initPipeline(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> initPipeline
    140:147:void addSpdyHandlers(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion) -> addSpdyHandlers
    153:158:void addHttpHandlers(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> addHttpHandlers
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelInboundHandler createHttpRequestHandlerForHttp() -> createHttpRequestHandlerForHttp
    175:175:be.alexandre01.dnplugin.shaded.netty.channel.ChannelInboundHandler createHttpRequestHandlerForSpdy() -> createHttpRequestHandlerForSpdy
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyOrHttpChooser$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyOrHttpChooser$1:
    int[] $SwitchMap$io$netty$handler$codec$spdy$SpdyOrHttpChooser$SelectedProtocol -> $SwitchMap$io$netty$handler$codec$spdy$SpdyOrHttpChooser$SelectedProtocol
    119:119:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyOrHttpChooser$SelectedProtocol -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyOrHttpChooser$SelectedProtocol:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyOrHttpChooser$SelectedProtocol SPDY_3_1 -> SPDY_3_1
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyOrHttpChooser$SelectedProtocol HTTP_1_1 -> HTTP_1_1
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyOrHttpChooser$SelectedProtocol HTTP_1_0 -> HTTP_1_0
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyOrHttpChooser$SelectedProtocol UNKNOWN -> UNKNOWN
    java.lang.String name -> name
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyOrHttpChooser$SelectedProtocol[] $VALUES -> $VALUES
    42:42:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyOrHttpChooser$SelectedProtocol[] values() -> values
    42:42:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyOrHttpChooser$SelectedProtocol valueOf(java.lang.String) -> valueOf
    50:52:void <init>(java.lang.String,int,java.lang.String) -> <init>
    55:55:java.lang.String protocolName() -> protocolName
    66:71:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyOrHttpChooser$SelectedProtocol protocol(java.lang.String) -> protocol
    42:46:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyPingFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyPingFrame:
    int id() -> id
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyPingFrame setId(int) -> setId
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyProtocolException -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyProtocolException:
    long serialVersionUID -> serialVersionUID
    25:25:void <init>() -> <init>
    31:32:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    38:39:void <init>(java.lang.String) -> <init>
    45:46:void <init>(java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyRstStreamFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyRstStreamFrame:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus status() -> status
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyRstStreamFrame setStatus(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus) -> setStatus
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyRstStreamFrame setStreamId(int) -> setStreamId
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyRstStreamFrame setLast(boolean) -> setLast
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession:
    java.util.concurrent.atomic.AtomicInteger activeLocalStreams -> activeLocalStreams
    java.util.concurrent.atomic.AtomicInteger activeRemoteStreams -> activeRemoteStreams
    java.util.Map activeStreams -> activeStreams
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession$StreamComparator streamComparator -> streamComparator
    java.util.concurrent.atomic.AtomicInteger sendWindowSize -> sendWindowSize
    java.util.concurrent.atomic.AtomicInteger receiveWindowSize -> receiveWindowSize
    33:43:void <init>(int,int) -> <init>
    46:49:int numActiveStreams(boolean) -> numActiveStreams
    54:54:boolean noActiveStreams() -> noActiveStreams
    58:58:boolean isActiveStream(int) -> isActiveStream
    63:65:java.util.Map activeStreams() -> activeStreams
    71:82:void acceptStream(int,byte,boolean,boolean,int,int,boolean) -> acceptStream
    85:93:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession$StreamState removeActiveStream(int,boolean) -> removeActiveStream
    97:101:void removeStream(int,java.lang.Throwable,boolean) -> removeStream
    104:105:boolean isRemoteSideClosed(int) -> isRemoteSideClosed
    109:116:void closeRemoteSide(int,boolean) -> closeRemoteSide
    119:120:boolean isLocalSideClosed(int) -> isLocalSideClosed
    124:131:void closeLocalSide(int,boolean) -> closeLocalSide
    138:139:boolean hasReceivedReply(int) -> hasReceivedReply
    143:147:void receivedReply(int) -> receivedReply
    150:155:int getSendWindowSize(int) -> getSendWindowSize
    159:164:int updateSendWindowSize(int,int) -> updateSendWindowSize
    168:179:int updateReceiveWindowSize(int,int) -> updateReceiveWindowSize
    183:188:int getReceiveWindowSizeLowerBound(int) -> getReceiveWindowSizeLowerBound
    192:195:void updateAllSendWindowSizes(int) -> updateAllSendWindowSizes
    198:204:void updateAllReceiveWindowSizes(int) -> updateAllReceiveWindowSizes
    207:208:boolean putPendingWrite(int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession$PendingWrite) -> putPendingWrite
    212:226:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession$PendingWrite getPendingWrite(int) -> getPendingWrite
    230:231:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession$PendingWrite removePendingWrite(int) -> removePendingWrite
    31:31:java.util.Map access$000(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession) -> access$000
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession$PendingWrite -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession$PendingWrite:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyDataFrame spdyDataFrame -> spdyDataFrame
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise promise -> promise
    350:353:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyDataFrame,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    356:358:void fail(java.lang.Throwable) -> fail
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession$StreamComparator -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession$StreamComparator:
    long serialVersionUID -> serialVersionUID
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession this$0 -> this$0
    330:330:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession) -> <init>
    334:342:int compare(java.lang.Integer,java.lang.Integer) -> compare
    326:326:int compare(java.lang.Object,java.lang.Object) -> compare
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession$StreamState -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession$StreamState:
    byte priority -> priority
    boolean remoteSideClosed -> remoteSideClosed
    boolean localSideClosed -> localSideClosed
    boolean receivedReply -> receivedReply
    java.util.concurrent.atomic.AtomicInteger sendWindowSize -> sendWindowSize
    java.util.concurrent.atomic.AtomicInteger receiveWindowSize -> receiveWindowSize
    int receiveWindowSizeLowerBound -> receiveWindowSizeLowerBound
    java.util.Queue pendingWriteQueue -> pendingWriteQueue
    243:253:void <init>(byte,boolean,boolean,int,int) -> <init>
    256:256:byte getPriority() -> getPriority
    260:260:boolean isRemoteSideClosed() -> isRemoteSideClosed
    264:265:void closeRemoteSide() -> closeRemoteSide
    268:268:boolean isLocalSideClosed() -> isLocalSideClosed
    272:273:void closeLocalSide() -> closeLocalSide
    276:276:boolean hasReceivedReply() -> hasReceivedReply
    280:281:void receivedReply() -> receivedReply
    284:284:int getSendWindowSize() -> getSendWindowSize
    288:288:int updateSendWindowSize(int) -> updateSendWindowSize
    292:292:int updateReceiveWindowSize(int) -> updateReceiveWindowSize
    296:296:int getReceiveWindowSizeLowerBound() -> getReceiveWindowSizeLowerBound
    300:301:void setReceiveWindowSizeLowerBound(int) -> setReceiveWindowSizeLowerBound
    304:304:boolean putPendingWrite(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession$PendingWrite) -> putPendingWrite
    308:308:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession$PendingWrite getPendingWrite() -> getPendingWrite
    312:312:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession$PendingWrite removePendingWrite() -> removePendingWrite
    317:323:void clearPendingWrites(java.lang.Throwable) -> clearPendingWrites
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyProtocolException PROTOCOL_EXCEPTION -> PROTOCOL_EXCEPTION
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyProtocolException STREAM_CLOSED -> STREAM_CLOSED
    int DEFAULT_WINDOW_SIZE -> DEFAULT_WINDOW_SIZE
    int initialSendWindowSize -> initialSendWindowSize
    int initialReceiveWindowSize -> initialReceiveWindowSize
    int initialSessionReceiveWindowSize -> initialSessionReceiveWindowSize
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySession spdySession -> spdySession
    int lastGoodStreamId -> lastGoodStreamId
    int DEFAULT_MAX_CONCURRENT_STREAMS -> DEFAULT_MAX_CONCURRENT_STREAMS
    int remoteConcurrentStreams -> remoteConcurrentStreams
    int localConcurrentStreams -> localConcurrentStreams
    java.util.concurrent.atomic.AtomicInteger pings -> pings
    boolean sentGoAwayFrame -> sentGoAwayFrame
    boolean receivedGoAwayFrame -> receivedGoAwayFrame
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelFutureListener closeSessionFutureListener -> closeSessionFutureListener
    boolean server -> server
    int minorVersion -> minorVersion
    44:80:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion,boolean) -> <init>
    83:93:void setSessionReceiveWindowSize(int) -> setSessionReceiveWindowSize
    97:418:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    422:426:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    430:435:void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    439:440:void close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    444:458:void write(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    461:653:void handleOutboundMessage(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> handleOutboundMessage
    667:668:void issueSessionError(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionStatus) -> issueSessionError
    682:691:void issueStreamError(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,int,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus) -> issueStreamError
    698:699:boolean isRemoteInitiatedId(int) -> isRemoteInitiatedId
    704:707:void updateInitialSendWindowSize(int) -> updateInitialSendWindowSize
    711:714:void updateInitialReceiveWindowSize(int) -> updateInitialReceiveWindowSize
    720:735:boolean acceptStream(int,byte,boolean,boolean) -> acceptStream
    739:747:void halfCloseStream(int,boolean,be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> halfCloseStream
    750:755:void removeStream(int,be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> removeStream
    758:817:void updateSendWindowSize(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,int,int) -> updateSendWindowSize
    822:834:void sendGoAwayFrame(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> sendGoAwayFrame
    838:843:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture sendGoAwayFrame(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionStatus) -> sendGoAwayFrame
    32:32:void access$000(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionStatus) -> access$000
    35:41:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler$1 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$context -> val$context
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler this$0 -> this$0
    510:510:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> <init>
    513:516:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    510:510:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler$2 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler$2:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$context -> val$context
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler this$0 -> this$0
    527:527:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> <init>
    530:533:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    527:527:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler$3 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler$3:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler this$0 -> this$0
    787:787:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> <init>
    790:793:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    787:787:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler$4 -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler$4:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler this$0 -> this$0
    808:808:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> <init>
    811:814:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    808:808:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler$ClosingChannelFutureListener -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionHandler$ClosingChannelFutureListener:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext ctx -> ctx
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise promise -> promise
    851:854:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    858:859:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    847:847:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionStatus -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionStatus:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionStatus OK -> OK
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionStatus PROTOCOL_ERROR -> PROTOCOL_ERROR
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionStatus INTERNAL_ERROR -> INTERNAL_ERROR
    int code -> code
    java.lang.String statusPhrase -> statusPhrase
    47:56:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionStatus valueOf(int) -> valueOf
    67:74:void <init>(int,java.lang.String) -> <init>
    80:80:int code() -> code
    87:87:java.lang.String statusPhrase() -> statusPhrase
    92:92:int hashCode() -> hashCode
    97:101:boolean equals(java.lang.Object) -> equals
    106:106:java.lang.String toString() -> toString
    111:111:int compareTo(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySessionStatus) -> compareTo
    21:21:int compareTo(java.lang.Object) -> compareTo
    26:38:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySettingsFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySettingsFrame:
    int SETTINGS_MINOR_VERSION -> SETTINGS_MINOR_VERSION
    int SETTINGS_UPLOAD_BANDWIDTH -> SETTINGS_UPLOAD_BANDWIDTH
    int SETTINGS_DOWNLOAD_BANDWIDTH -> SETTINGS_DOWNLOAD_BANDWIDTH
    int SETTINGS_ROUND_TRIP_TIME -> SETTINGS_ROUND_TRIP_TIME
    int SETTINGS_MAX_CONCURRENT_STREAMS -> SETTINGS_MAX_CONCURRENT_STREAMS
    int SETTINGS_CURRENT_CWND -> SETTINGS_CURRENT_CWND
    int SETTINGS_DOWNLOAD_RETRANS_RATE -> SETTINGS_DOWNLOAD_RETRANS_RATE
    int SETTINGS_INITIAL_WINDOW_SIZE -> SETTINGS_INITIAL_WINDOW_SIZE
    int SETTINGS_CLIENT_CERTIFICATE_VECTOR_SIZE -> SETTINGS_CLIENT_CERTIFICATE_VECTOR_SIZE
    java.util.Set ids() -> ids
    boolean isSet(int) -> isSet
    int getValue(int) -> getValue
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySettingsFrame setValue(int,int) -> setValue
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySettingsFrame setValue(int,int,boolean,boolean) -> setValue
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySettingsFrame removeValue(int) -> removeValue
    boolean isPersistValue(int) -> isPersistValue
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySettingsFrame setPersistValue(int,boolean) -> setPersistValue
    boolean isPersisted(int) -> isPersisted
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySettingsFrame setPersisted(int,boolean) -> setPersisted
    boolean clearPreviouslyPersistedSettings() -> clearPreviouslyPersistedSettings
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySettingsFrame setClearPreviouslyPersistedSettings(boolean) -> setClearPreviouslyPersistedSettings
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamFrame:
    int streamId() -> streamId
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamFrame setStreamId(int) -> setStreamId
    boolean isLast() -> isLast
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamFrame setLast(boolean) -> setLast
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus PROTOCOL_ERROR -> PROTOCOL_ERROR
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus INVALID_STREAM -> INVALID_STREAM
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus REFUSED_STREAM -> REFUSED_STREAM
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus UNSUPPORTED_VERSION -> UNSUPPORTED_VERSION
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus CANCEL -> CANCEL
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus INTERNAL_ERROR -> INTERNAL_ERROR
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus FLOW_CONTROL_ERROR -> FLOW_CONTROL_ERROR
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus STREAM_IN_USE -> STREAM_IN_USE
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus STREAM_ALREADY_CLOSED -> STREAM_ALREADY_CLOSED
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus INVALID_CREDENTIALS -> INVALID_CREDENTIALS
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus FRAME_TOO_LARGE -> FRAME_TOO_LARGE
    int code -> code
    java.lang.String statusPhrase -> statusPhrase
    95:125:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus valueOf(int) -> valueOf
    136:148:void <init>(int,java.lang.String) -> <init>
    154:154:int code() -> code
    161:161:java.lang.String statusPhrase() -> statusPhrase
    166:166:int hashCode() -> hashCode
    171:175:boolean equals(java.lang.Object) -> equals
    180:180:java.lang.String toString() -> toString
    185:185:int compareTo(be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyStreamStatus) -> compareTo
    21:21:int compareTo(java.lang.Object) -> compareTo
    26:86:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynReplyFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynReplyFrame:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynReplyFrame setStreamId(int) -> setStreamId
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynReplyFrame setLast(boolean) -> setLast
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynReplyFrame setInvalid() -> setInvalid
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynStreamFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynStreamFrame:
    int associatedStreamId() -> associatedStreamId
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynStreamFrame setAssociatedStreamId(int) -> setAssociatedStreamId
    byte priority() -> priority
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynStreamFrame setPriority(byte) -> setPriority
    boolean isUnidirectional() -> isUnidirectional
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynStreamFrame setUnidirectional(boolean) -> setUnidirectional
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynStreamFrame setStreamId(int) -> setStreamId
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynStreamFrame setLast(boolean) -> setLast
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdySynStreamFrame setInvalid() -> setInvalid
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion:
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion SPDY_3_1 -> SPDY_3_1
    int version -> version
    int minorVersion -> minorVersion
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion[] $VALUES -> $VALUES
    18:18:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion[] values() -> values
    18:18:be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyVersion valueOf(java.lang.String) -> valueOf
    24:27:void <init>(java.lang.String,int,int,int) -> <init>
    30:30:int getVersion() -> getVersion
    34:34:int getMinorVersion() -> getMinorVersion
    18:19:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyWindowUpdateFrame -> be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyWindowUpdateFrame:
    int streamId() -> streamId
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyWindowUpdateFrame setStreamId(int) -> setStreamId
    int deltaWindowSize() -> deltaWindowSize
    be.alexandre01.dnplugin.shaded.netty.handler.codec.spdy.SpdyWindowUpdateFrame setDeltaWindowSize(int) -> setDeltaWindowSize
be.alexandre01.dnplugin.shaded.netty.handler.codec.string.StringDecoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.string.StringDecoder:
    java.nio.charset.Charset charset -> charset
    64:65:void <init>() -> <init>
    70:75:void <init>(java.nio.charset.Charset) -> <init>
    79:80:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    54:54:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
be.alexandre01.dnplugin.shaded.netty.handler.codec.string.StringEncoder -> be.alexandre01.dnplugin.shaded.netty.handler.codec.string.StringEncoder:
    java.nio.charset.Charset charset -> charset
    61:62:void <init>() -> <init>
    67:72:void <init>(java.nio.charset.Charset) -> <init>
    76:81:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.CharSequence,java.util.List) -> encode
    51:51:void encode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
be.alexandre01.dnplugin.shaded.netty.handler.logging.LogLevel -> be.alexandre01.dnplugin.shaded.netty.handler.logging.LogLevel:
    be.alexandre01.dnplugin.shaded.netty.handler.logging.LogLevel TRACE -> TRACE
    be.alexandre01.dnplugin.shaded.netty.handler.logging.LogLevel DEBUG -> DEBUG
    be.alexandre01.dnplugin.shaded.netty.handler.logging.LogLevel INFO -> INFO
    be.alexandre01.dnplugin.shaded.netty.handler.logging.LogLevel WARN -> WARN
    be.alexandre01.dnplugin.shaded.netty.handler.logging.LogLevel ERROR -> ERROR
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel internalLevel -> internalLevel
    be.alexandre01.dnplugin.shaded.netty.handler.logging.LogLevel[] $VALUES -> $VALUES
    20:20:be.alexandre01.dnplugin.shaded.netty.handler.logging.LogLevel[] values() -> values
    20:20:be.alexandre01.dnplugin.shaded.netty.handler.logging.LogLevel valueOf(java.lang.String) -> valueOf
    29:31:void <init>(java.lang.String,int,be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel) -> <init>
    34:34:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel toInternalLevel() -> toInternalLevel
    20:25:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.logging.LoggingHandler -> be.alexandre01.dnplugin.shaded.netty.handler.logging.LoggingHandler:
    be.alexandre01.dnplugin.shaded.netty.handler.logging.LogLevel DEFAULT_LEVEL -> DEFAULT_LEVEL
    java.lang.String NEWLINE -> NEWLINE
    java.lang.String[] BYTE2HEX -> BYTE2HEX
    java.lang.String[] HEXPADDING -> HEXPADDING
    java.lang.String[] BYTEPADDING -> BYTEPADDING
    char[] BYTE2CHAR -> BYTE2CHAR
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel internalLevel -> internalLevel
    be.alexandre01.dnplugin.shaded.netty.handler.logging.LogLevel level -> level
    96:97:void <init>() -> <init>
    105:113:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.logging.LogLevel) -> <init>
    120:121:void <init>(java.lang.Class) -> <init>
    128:138:void <init>(java.lang.Class,be.alexandre01.dnplugin.shaded.netty.handler.logging.LogLevel) -> <init>
    144:145:void <init>(java.lang.String) -> <init>
    152:162:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.netty.handler.logging.LogLevel) -> <init>
    168:168:be.alexandre01.dnplugin.shaded.netty.handler.logging.LogLevel level() -> level
    172:177:java.lang.String format(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.String) -> format
    183:187:void channelRegistered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelRegistered
    192:196:void channelUnregistered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelUnregistered
    201:205:void channelActive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelActive
    210:214:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    219:223:void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    228:232:void userEventTriggered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    237:241:void bind(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bind
    247:251:void connect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    256:260:void disconnect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> disconnect
    265:269:void close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    274:278:void deregister(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> deregister
    282:284:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    288:290:void write(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    294:298:void flush(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> flush
    301:304:void logMessage(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.String,java.lang.Object) -> logMessage
    307:312:java.lang.String formatMessage(java.lang.String,java.lang.Object) -> formatMessage
    320:367:java.lang.String formatByteBuf(java.lang.String,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> formatByteBuf
    374:374:java.lang.String formatNonByteBuf(java.lang.String,java.lang.Object) -> formatNonByteBuf
    384:384:java.lang.String formatByteBufHolder(java.lang.String,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufHolder) -> formatByteBufHolder
    39:84:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.JdkSslClientContext -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.JdkSslClientContext:
    javax.net.ssl.SSLContext ctx -> ctx
    java.util.List nextProtocols -> nextProtocols
    48:49:void <init>() -> <init>
    58:59:void <init>(java.io.File) -> <init>
    69:70:void <init>(javax.net.ssl.TrustManagerFactory) -> <init>
    82:83:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory) -> <init>
    107:174:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,java.lang.Iterable,long,long) -> <init>
    178:178:boolean isClient() -> isClient
    183:183:java.util.List nextProtocols() -> nextProtocols
    188:188:javax.net.ssl.SSLContext context() -> context
be.alexandre01.dnplugin.shaded.netty.handler.ssl.JdkSslContext -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.JdkSslContext:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String PROTOCOL -> PROTOCOL
    java.lang.String[] PROTOCOLS -> PROTOCOLS
    java.util.List DEFAULT_CIPHERS -> DEFAULT_CIPHERS
    java.lang.String[] cipherSuites -> cipherSuites
    java.util.List unmodifiableCipherSuites -> unmodifiableCipherSuites
    101:109:void addIfSupported(java.lang.String[],java.util.List,java.lang.String[]) -> addIfSupported
    114:117:void <init>(java.lang.Iterable) -> <init>
    javax.net.ssl.SSLContext context() -> context
    128:131:javax.net.ssl.SSLSessionContext sessionContext() -> sessionContext
    137:137:java.util.List cipherSuites() -> cipherSuites
    142:142:long sessionCacheSize() -> sessionCacheSize
    147:147:long sessionTimeout() -> sessionTimeout
    152:156:javax.net.ssl.SSLEngine newEngine(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> newEngine
    161:165:javax.net.ssl.SSLEngine newEngine(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,java.lang.String,int) -> newEngine
    169:172:javax.net.ssl.SSLEngine wrapEngine(javax.net.ssl.SSLEngine) -> wrapEngine
    177:187:java.lang.String[] toCipherSuiteArray(java.lang.Iterable) -> toCipherSuiteArray
    36:98:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.JdkSslServerContext -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.JdkSslServerContext:
    javax.net.ssl.SSLContext ctx -> ctx
    java.util.List nextProtocols -> nextProtocols
    64:65:void <init>(java.io.File,java.io.File) -> <init>
    76:77:void <init>(java.io.File,java.io.File,java.lang.String) -> <init>
    100:189:void <init>(java.io.File,java.io.File,java.lang.String,java.lang.Iterable,java.lang.Iterable,long,long) -> <init>
    193:193:boolean isClient() -> isClient
    198:198:java.util.List nextProtocols() -> nextProtocols
    203:203:javax.net.ssl.SSLContext context() -> context
    226:238:java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[]) -> generateKeySpec
be.alexandre01.dnplugin.shaded.netty.handler.ssl.JettyNpnSslEngine -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.JettyNpnSslEngine:
    boolean available -> available
    javax.net.ssl.SSLEngine engine -> engine
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.JettyNpnSslSession session -> session
    boolean $assertionsDisabled -> $assertionsDisabled
    37:38:boolean isAvailable() -> isAvailable
    42:58:void updateAvailability() -> updateAvailability
    63:112:void <init>(javax.net.ssl.SSLEngine,java.util.List,boolean) -> <init>
    116:116:be.alexandre01.dnplugin.shaded.netty.handler.ssl.JettyNpnSslSession getSession() -> getSession
    121:123:void closeInbound() -> closeInbound
    127:129:void closeOutbound() -> closeOutbound
    133:133:java.lang.String getPeerHost() -> getPeerHost
    138:138:int getPeerPort() -> getPeerPort
    143:143:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> wrap
    148:148:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],java.nio.ByteBuffer) -> wrap
    153:153:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer) -> wrap
    158:158:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> unwrap
    163:163:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[]) -> unwrap
    168:168:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int) -> unwrap
    173:173:java.lang.Runnable getDelegatedTask() -> getDelegatedTask
    178:178:boolean isInboundDone() -> isInboundDone
    183:183:boolean isOutboundDone() -> isOutboundDone
    188:188:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    193:193:java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    198:199:void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    203:203:java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    208:208:java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    213:214:void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    218:218:javax.net.ssl.SSLSession getHandshakeSession() -> getHandshakeSession
    223:224:void beginHandshake() -> beginHandshake
    228:228:javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus() -> getHandshakeStatus
    233:234:void setUseClientMode(boolean) -> setUseClientMode
    238:238:boolean getUseClientMode() -> getUseClientMode
    243:244:void setNeedClientAuth(boolean) -> setNeedClientAuth
    248:248:boolean getNeedClientAuth() -> getNeedClientAuth
    253:254:void setWantClientAuth(boolean) -> setWantClientAuth
    258:258:boolean getWantClientAuth() -> getWantClientAuth
    263:264:void setEnableSessionCreation(boolean) -> setEnableSessionCreation
    268:268:boolean getEnableSessionCreation() -> getEnableSessionCreation
    273:273:javax.net.ssl.SSLParameters getSSLParameters() -> getSSLParameters
    278:279:void setSSLParameters(javax.net.ssl.SSLParameters) -> setSSLParameters
    32:32:javax.net.ssl.SSLSession getSession() -> getSession
    32:32:be.alexandre01.dnplugin.shaded.netty.handler.ssl.JettyNpnSslSession access$000(be.alexandre01.dnplugin.shaded.netty.handler.ssl.JettyNpnSslEngine) -> access$000
    32:32:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.JettyNpnSslEngine$1 -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.JettyNpnSslEngine$1:
    java.util.List val$nextProtocols -> val$nextProtocols
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.JettyNpnSslEngine this$0 -> this$0
    70:70:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.ssl.JettyNpnSslEngine,java.util.List) -> <init>
    73:74:void unsupported() -> unsupported
    78:78:java.util.List protocols() -> protocols
    83:84:void protocolSelected(java.lang.String) -> protocolSelected
be.alexandre01.dnplugin.shaded.netty.handler.ssl.JettyNpnSslEngine$2 -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.JettyNpnSslEngine$2:
    java.lang.String[] val$list -> val$list
    java.lang.String val$fallback -> val$fallback
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.JettyNpnSslEngine this$0 -> this$0
    90:90:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.ssl.JettyNpnSslEngine,java.lang.String[],java.lang.String) -> <init>
    93:93:boolean supports() -> supports
    98:99:void unsupported() -> unsupported
    103:108:java.lang.String selectProtocol(java.util.List) -> selectProtocol
be.alexandre01.dnplugin.shaded.netty.handler.ssl.JettyNpnSslSession -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.JettyNpnSslSession:
    javax.net.ssl.SSLEngine engine -> engine
    java.lang.String applicationProtocol -> applicationProtocol
    32:34:void <init>(javax.net.ssl.SSLEngine) -> <init>
    37:41:void setApplicationProtocol(java.lang.String) -> setApplicationProtocol
    45:64:java.lang.String getProtocol() -> getProtocol
    68:68:javax.net.ssl.SSLSession unwrap() -> unwrap
    73:73:byte[] getId() -> getId
    78:78:javax.net.ssl.SSLSessionContext getSessionContext() -> getSessionContext
    83:83:long getCreationTime() -> getCreationTime
    88:88:long getLastAccessedTime() -> getLastAccessedTime
    93:94:void invalidate() -> invalidate
    98:98:boolean isValid() -> isValid
    103:104:void putValue(java.lang.String,java.lang.Object) -> putValue
    108:108:java.lang.Object getValue(java.lang.String) -> getValue
    113:114:void removeValue(java.lang.String) -> removeValue
    118:118:java.lang.String[] getValueNames() -> getValueNames
    123:123:java.security.cert.Certificate[] getPeerCertificates() -> getPeerCertificates
    128:128:java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    133:133:javax.security.cert.X509Certificate[] getPeerCertificateChain() -> getPeerCertificateChain
    138:138:java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    143:143:java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    148:148:java.lang.String getCipherSuite() -> getCipherSuite
    153:153:java.lang.String getPeerHost() -> getPeerHost
    158:158:int getPeerPort() -> getPeerPort
    163:163:int getPacketBufferSize() -> getPacketBufferSize
    168:168:int getApplicationBufferSize() -> getApplicationBufferSize
be.alexandre01.dnplugin.shaded.netty.handler.ssl.NotSslRecordException -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.NotSslRecordException:
    long serialVersionUID -> serialVersionUID
    33:34:void <init>() -> <init>
    37:38:void <init>(java.lang.String) -> <init>
    41:42:void <init>(java.lang.Throwable) -> <init>
    45:46:void <init>(java.lang.String,java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.OpenSsl -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.OpenSsl:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.Throwable UNAVAILABILITY_CAUSE -> UNAVAILABILITY_CAUSE
    java.lang.String IGNORABLE_ERROR_PREFIX -> IGNORABLE_ERROR_PREFIX
    57:57:boolean isAvailable() -> isAvailable
    67:71:void ensureAvailability() -> ensureAvailability
    80:80:java.lang.Throwable unavailabilityCause() -> unavailabilityCause
    83:83:void <init>() -> <init>
    31:49:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.OpenSslEngine -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.OpenSslEngine:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.security.cert.Certificate[] EMPTY_CERTIFICATES -> EMPTY_CERTIFICATES
    javax.security.cert.X509Certificate[] EMPTY_X509_CERTIFICATES -> EMPTY_X509_CERTIFICATES
    javax.net.ssl.SSLException ENGINE_CLOSED -> ENGINE_CLOSED
    javax.net.ssl.SSLException RENEGOTIATION_UNSUPPORTED -> RENEGOTIATION_UNSUPPORTED
    javax.net.ssl.SSLException ENCRYPTED_PACKET_OVERSIZED -> ENCRYPTED_PACKET_OVERSIZED
    int MAX_PLAINTEXT_LENGTH -> MAX_PLAINTEXT_LENGTH
    int MAX_COMPRESSED_LENGTH -> MAX_COMPRESSED_LENGTH
    int MAX_CIPHERTEXT_LENGTH -> MAX_CIPHERTEXT_LENGTH
    int MAX_ENCRYPTED_PACKET_LENGTH -> MAX_ENCRYPTED_PACKET_LENGTH
    int MAX_ENCRYPTION_OVERHEAD_LENGTH -> MAX_ENCRYPTION_OVERHEAD_LENGTH
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater DESTROYED_UPDATER -> DESTROYED_UPDATER
    long ssl -> ssl
    long networkBIO -> networkBIO
    int accepted -> accepted
    boolean handshakeFinished -> handshakeFinished
    boolean receivedShutdown -> receivedShutdown
    int destroyed -> destroyed
    java.lang.String cipher -> cipher
    java.lang.String applicationProtocol -> applicationProtocol
    boolean isInboundDone -> isInboundDone
    boolean isOutboundDone -> isOutboundDone
    boolean engineClosed -> engineClosed
    int lastPrimingReadResult -> lastPrimingReadResult
    be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator alloc -> alloc
    java.lang.String fallbackApplicationProtocol -> fallbackApplicationProtocol
    javax.net.ssl.SSLSession session -> session
    107:120:void <init>(long,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,java.lang.String) -> <init>
    126:134:void shutdown() -> shutdown
    142:181:int writePlaintextData(java.nio.ByteBuffer) -> writePlaintextData
    188:223:int writeEncryptedData(java.nio.ByteBuffer) -> writeEncryptedData
    230:264:int readPlaintextData(java.nio.ByteBuffer) -> readPlaintextData
    271:302:int readEncryptedData(java.nio.ByteBuffer,int) -> readEncryptedData
    310:407:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer) -> wrap
    415:537:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int) -> unwrap
    545:545:java.lang.Runnable getDelegatedTask() -> getDelegatedTask
    550:567:void closeInbound() -> closeInbound
    571:571:boolean isInboundDone() -> isInboundDone
    576:592:void closeOutbound() -> closeOutbound
    596:596:boolean isOutboundDone() -> isOutboundDone
    601:601:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    606:606:java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    611:611:void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    616:616:java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    621:621:java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    626:626:void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    631:744:javax.net.ssl.SSLSession getSession() -> getSession
    749:772:void beginHandshake() -> beginHandshake
    775:783:void beginHandshakeImplicitly() -> beginHandshakeImplicitly
    786:786:javax.net.ssl.SSLEngineResult$Status getEngineStatus() -> getEngineStatus
    791:835:javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus() -> getHandshakeStatus
    840:843:void setUseClientMode(boolean) -> setUseClientMode
    847:847:boolean getUseClientMode() -> getUseClientMode
    852:855:void setNeedClientAuth(boolean) -> setNeedClientAuth
    859:859:boolean getNeedClientAuth() -> getNeedClientAuth
    864:867:void setWantClientAuth(boolean) -> setWantClientAuth
    871:871:boolean getWantClientAuth() -> getWantClientAuth
    876:879:void setEnableSessionCreation(boolean) -> setEnableSessionCreation
    883:883:boolean getEnableSessionCreation() -> getEnableSessionCreation
    45:45:long access$000(be.alexandre01.dnplugin.shaded.netty.handler.ssl.OpenSslEngine) -> access$000
    45:45:java.security.cert.Certificate[] access$100() -> access$100
    45:45:javax.security.cert.X509Certificate[] access$200() -> access$200
    45:45:java.lang.String access$300(be.alexandre01.dnplugin.shaded.netty.handler.ssl.OpenSslEngine) -> access$300
    45:45:java.lang.String access$400(be.alexandre01.dnplugin.shaded.netty.handler.ssl.OpenSslEngine) -> access$400
    47:71:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.OpenSslEngine$1 -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.OpenSslEngine$1:
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.OpenSslEngine this$0 -> this$0
    633:633:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.ssl.OpenSslEngine) -> <init>
    636:636:byte[] getId() -> getId
    641:641:javax.net.ssl.SSLSessionContext getSessionContext() -> getSessionContext
    646:646:long getCreationTime() -> getCreationTime
    651:651:long getLastAccessedTime() -> getLastAccessedTime
    656:656:void invalidate() -> invalidate
    660:660:boolean isValid() -> isValid
    665:665:void putValue(java.lang.String,java.lang.Object) -> putValue
    669:669:java.lang.Object getValue(java.lang.String) -> getValue
    674:674:void removeValue(java.lang.String) -> removeValue
    678:678:java.lang.String[] getValueNames() -> getValueNames
    683:683:java.security.cert.Certificate[] getPeerCertificates() -> getPeerCertificates
    688:688:java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    693:693:javax.security.cert.X509Certificate[] getPeerCertificateChain() -> getPeerCertificateChain
    698:698:java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    703:703:java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    708:708:java.lang.String getCipherSuite() -> getCipherSuite
    714:718:java.lang.String getProtocol() -> getProtocol
    724:724:java.lang.String getPeerHost() -> getPeerHost
    729:729:int getPeerPort() -> getPeerPort
    734:734:int getPacketBufferSize() -> getPacketBufferSize
    739:739:int getApplicationBufferSize() -> getApplicationBufferSize
be.alexandre01.dnplugin.shaded.netty.handler.ssl.OpenSslServerContext -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.OpenSslServerContext:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.List DEFAULT_CIPHERS -> DEFAULT_CIPHERS
    long aprPool -> aprPool
    java.util.List ciphers -> ciphers
    java.util.List unmodifiableCiphers -> unmodifiableCiphers
    long sessionCacheSize -> sessionCacheSize
    long sessionTimeout -> sessionTimeout
    java.util.List nextProtocols -> nextProtocols
    long ctx -> ctx
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.OpenSslSessionStats stats -> stats
    81:82:void <init>(java.io.File,java.io.File) -> <init>
    93:94:void <init>(java.io.File,java.io.File,java.lang.String) -> <init>
    64:263:void <init>(java.io.File,java.io.File,java.lang.String,java.lang.Iterable,java.lang.Iterable,long,long) -> <init>
    267:267:boolean isClient() -> isClient
    272:272:java.util.List cipherSuites() -> cipherSuites
    277:277:long sessionCacheSize() -> sessionCacheSize
    282:282:long sessionTimeout() -> sessionTimeout
    287:287:java.util.List nextProtocols() -> nextProtocols
    294:294:long context() -> context
    301:301:be.alexandre01.dnplugin.shaded.netty.handler.ssl.OpenSslSessionStats stats() -> stats
    309:312:javax.net.ssl.SSLEngine newEngine(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> newEngine
    318:318:javax.net.ssl.SSLEngine newEngine(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,java.lang.String,int) -> newEngine
    325:329:void setTicketKeys(byte[]) -> setTicketKeys
    334:342:void finalize() -> finalize
    345:348:void destroyPools() -> destroyPools
    37:60:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.OpenSslSessionStats -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.OpenSslSessionStats:
    long context -> context
    30:32:void <init>(long) -> <init>
    38:38:long number() -> number
    45:45:long connect() -> connect
    52:52:long connectGood() -> connectGood
    59:59:long connectRenegotiate() -> connectRenegotiate
    66:66:long accept() -> accept
    73:73:long acceptGood() -> acceptGood
    80:80:long acceptRenegotiate() -> acceptRenegotiate
    89:89:long hits() -> hits
    96:96:long cbHits() -> cbHits
    104:104:long misses() -> misses
    113:113:long timeouts() -> timeouts
    120:120:long cacheFull() -> cacheFull
be.alexandre01.dnplugin.shaded.netty.handler.ssl.PemReader -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.PemReader:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.regex.Pattern CERT_PATTERN -> CERT_PATTERN
    java.util.regex.Pattern KEY_PATTERN -> KEY_PATTERN
    61:86:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf[] readCertificates(java.io.File) -> readCertificates
    92:105:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readPrivateKey(java.io.File) -> readPrivateKey
    109:123:java.lang.String readContent(java.io.File) -> readContent
    129:133:void safeClose(java.io.InputStream) -> safeClose
    137:141:void safeClose(java.io.OutputStream) -> safeClose
    143:143:void <init>() -> <init>
    45:52:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext:
    61:64:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslProvider defaultServerProvider() -> defaultServerProvider
    74:74:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslProvider defaultClientProvider() -> defaultClientProvider
    85:85:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext newServerContext(java.io.File,java.io.File) -> newServerContext
    99:99:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext newServerContext(java.io.File,java.io.File,java.lang.String) -> newServerContext
    123:123:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext newServerContext(java.io.File,java.io.File,java.lang.String,java.lang.Iterable,java.lang.Iterable,long,long) -> newServerContext
    139:139:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext newServerContext(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslProvider,java.io.File,java.io.File) -> newServerContext
    155:155:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext newServerContext(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslProvider,java.io.File,java.io.File,java.lang.String) -> newServerContext
    183:197:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext newServerContext(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslProvider,java.io.File,java.io.File,java.lang.String,java.lang.Iterable,java.lang.Iterable,long,long) -> newServerContext
    207:207:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext newClientContext() -> newClientContext
    218:218:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext newClientContext(java.io.File) -> newClientContext
    231:231:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext newClientContext(javax.net.ssl.TrustManagerFactory) -> newClientContext
    247:247:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext newClientContext(java.io.File,javax.net.ssl.TrustManagerFactory) -> newClientContext
    273:273:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext newClientContext(java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,java.lang.Iterable,long,long) -> newClientContext
    287:287:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext newClientContext(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslProvider) -> newClientContext
    301:301:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext newClientContext(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslProvider,java.io.File) -> newClientContext
    317:317:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext newClientContext(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslProvider,javax.net.ssl.TrustManagerFactory) -> newClientContext
    335:335:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext newClientContext(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslProvider,java.io.File,javax.net.ssl.TrustManagerFactory) -> newClientContext
    365:369:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext newClientContext(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslProvider,java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,java.lang.Iterable,long,long) -> newClientContext
    374:374:void <init>() -> <init>
    380:380:boolean isServer() -> isServer
    boolean isClient() -> isClient
    java.util.List cipherSuites() -> cipherSuites
    long sessionCacheSize() -> sessionCacheSize
    long sessionTimeout() -> sessionTimeout
    java.util.List nextProtocols() -> nextProtocols
    javax.net.ssl.SSLEngine newEngine(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> newEngine
    javax.net.ssl.SSLEngine newEngine(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,java.lang.String,int) -> newEngine
    434:434:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler newHandler(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator) -> newHandler
    446:446:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler newHandler(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBufAllocator,java.lang.String,int) -> newHandler
    450:450:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler newHandler(javax.net.ssl.SSLEngine) -> newHandler
be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext$1 -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslContext$1:
    int[] $SwitchMap$io$netty$handler$ssl$SslProvider -> $SwitchMap$io$netty$handler$ssl$SslProvider
    187:187:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.regex.Pattern IGNORABLE_CLASS_IN_STACK -> IGNORABLE_CLASS_IN_STACK
    java.util.regex.Pattern IGNORABLE_ERROR_MESSAGE -> IGNORABLE_ERROR_MESSAGE
    javax.net.ssl.SSLException SSLENGINE_CLOSED -> SSLENGINE_CLOSED
    javax.net.ssl.SSLException HANDSHAKE_TIMED_OUT -> HANDSHAKE_TIMED_OUT
    java.nio.channels.ClosedChannelException CHANNEL_CLOSED -> CHANNEL_CLOSED
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext ctx -> ctx
    javax.net.ssl.SSLEngine engine -> engine
    int maxPacketBufferSize -> maxPacketBufferSize
    java.util.concurrent.Executor delegatedTaskExecutor -> delegatedTaskExecutor
    boolean wantsDirectBuffer -> wantsDirectBuffer
    boolean wantsLargeOutboundNetworkBuffer -> wantsLargeOutboundNetworkBuffer
    boolean wantsInboundHeapBuffer -> wantsInboundHeapBuffer
    boolean startTls -> startTls
    boolean sentFirstMessage -> sentFirstMessage
    boolean flushedBeforeHandshakeDone -> flushedBeforeHandshakeDone
    be.alexandre01.dnplugin.shaded.netty.channel.PendingWriteQueue pendingUnencryptedWrites -> pendingUnencryptedWrites
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$LazyChannelPromise handshakePromise -> handshakePromise
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$LazyChannelPromise sslCloseFuture -> sslCloseFuture
    boolean needsFlush -> needsFlush
    int packetLength -> packetLength
    long handshakeTimeoutMillis -> handshakeTimeoutMillis
    long closeNotifyTimeoutMillis -> closeNotifyTimeoutMillis
    boolean $assertionsDisabled -> $assertionsDisabled
    230:231:void <init>(javax.net.ssl.SSLEngine) -> <init>
    242:243:void <init>(javax.net.ssl.SSLEngine,boolean) -> <init>
    250:251:void <init>(javax.net.ssl.SSLEngine,java.util.concurrent.Executor) -> <init>
    210:271:void <init>(javax.net.ssl.SSLEngine,boolean,java.util.concurrent.Executor) -> <init>
    274:274:long getHandshakeTimeoutMillis() -> getHandshakeTimeoutMillis
    278:283:void setHandshakeTimeout(long,java.util.concurrent.TimeUnit) -> setHandshakeTimeout
    286:291:void setHandshakeTimeoutMillis(long) -> setHandshakeTimeoutMillis
    294:294:long getCloseNotifyTimeoutMillis() -> getCloseNotifyTimeoutMillis
    298:303:void setCloseNotifyTimeout(long,java.util.concurrent.TimeUnit) -> setCloseNotifyTimeout
    306:311:void setCloseNotifyTimeoutMillis(long) -> setCloseNotifyTimeoutMillis
    317:317:javax.net.ssl.SSLEngine engine() -> engine
    324:324:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future handshakeFuture() -> handshakeFuture
    332:332:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close() -> close
    339:355:be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    367:367:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future sslCloseFuture() -> sslCloseFuture
    372:376:void handlerRemoved0(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerRemoved0
    380:381:void bind(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> bind
    386:387:void connect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> connect
    391:392:void deregister(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> deregister
    397:398:void disconnect(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> disconnect
    403:404:void close(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> close
    408:409:void read(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> read
    413:414:void write(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    420:434:void flush(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> flush
    437:499:void wrap(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,boolean) -> wrap
    502:518:void finishWrap(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,boolean) -> finishWrap
    521:575:void wrapNonAppData(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,boolean) -> wrapNonAppData
    578:598:javax.net.ssl.SSLEngineResult wrap(javax.net.ssl.SSLEngine,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> wrap
    605:607:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    611:628:void exceptionCaught(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    640:693:boolean ignoreException(java.lang.Throwable) -> ignoreException
    709:712:boolean isEncrypted(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> isEncrypted
    729:784:int getEncryptedPacketLength(be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,int) -> getEncryptedPacketLength
    790:866:void decode(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf,java.util.List) -> decode
    870:875:void channelReadComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelReadComplete
    881:882:void unwrapNonAppData(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> unwrapNonAppData
    893:976:void unwrap(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.nio.ByteBuffer,int) -> unwrap
    979:998:javax.net.ssl.SSLEngineResult unwrap(javax.net.ssl.SSLEngine,java.nio.ByteBuffer,be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf) -> unwrap
    1008:1062:void runDelegatedTasks() -> runDelegatedTasks
    1072:1076:boolean setHandshakeSuccessIfStillHandshaking() -> setHandshakeSuccessIfStillHandshaking
    1084:1095:void setHandshakeSuccess() -> setHandshakeSuccess
    1103:1119:void setHandshakeFailure(java.lang.Throwable) -> setHandshakeFailure
    1122:1126:void notifyHandshakeFailure(java.lang.Throwable) -> notifyHandshakeFailure
    1130:1145:void closeOutboundAndChannel(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,boolean) -> closeOutboundAndChannel
    1149:1160:void handlerAdded(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerAdded
    1164:1193:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future handshake() -> handshake
    1201:1215:void channelActive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelActive
    1220:1254:void safeClose(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> safeClose
    1261:1265:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf allocate(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,int) -> allocate
    1274:1277:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf allocateOutNetBuf(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,int) -> allocateOutNetBuf
    157:157:javax.net.ssl.SSLEngine access$100(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler) -> access$100
    157:157:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger access$200() -> access$200
    157:157:be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext access$300(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler) -> access$300
    157:157:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$LazyChannelPromise access$400(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler) -> access$400
    157:157:javax.net.ssl.SSLException access$500() -> access$500
    157:157:void access$600(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler,java.lang.Throwable) -> access$600
    157:175:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$1 -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$future -> val$future
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler this$0 -> this$0
    340:340:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    343:352:void run() -> run
be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$2 -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$2:
    java.util.List val$tasks -> val$tasks
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler this$0 -> this$0
    1033:1033:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler,java.util.List,java.util.concurrent.CountDownLatch) -> <init>
    1037:1045:void run() -> run
be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$3 -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$3:
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler this$0 -> this$0
    1165:1165:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler) -> <init>
    1168:1172:void run() -> run
be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$4 -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$4:
    java.util.concurrent.ScheduledFuture val$timeoutFuture -> val$timeoutFuture
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler this$0 -> this$0
    1178:1178:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler,java.util.concurrent.ScheduledFuture) -> <init>
    1181:1184:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$5 -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$5:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler this$0 -> this$0
    1204:1204:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> <init>
    1207:1211:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$6 -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$6:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler this$0 -> this$0
    1228:1228:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    1231:1235:void run() -> run
be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$7 -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$7:
    java.util.concurrent.ScheduledFuture val$timeoutFuture -> val$timeoutFuture
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$promise -> val$promise
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler this$0 -> this$0
    1242:1242:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler,java.util.concurrent.ScheduledFuture,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    1246:1252:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    1242:1242:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$8 -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$8:
    int[] $SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus -> $SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus
    int[] $SwitchMap$javax$net$ssl$SSLEngineResult$Status -> $SwitchMap$javax$net$ssl$SSLEngineResult$Status
    470:591:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$LazyChannelPromise -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$LazyChannelPromise:
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler this$0 -> this$0
    1283:1283:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler) -> <init>
    1287:1290:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor executor() -> executor
    1283:1283:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler,be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandler$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandshakeCompletionEvent -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandshakeCompletionEvent:
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslHandshakeCompletionEvent SUCCESS -> SUCCESS
    java.lang.Throwable cause -> cause
    32:34:void <init>() -> <init>
    40:45:void <init>(java.lang.Throwable) -> <init>
    51:51:boolean isSuccess() -> isSuccess
    59:59:java.lang.Throwable cause() -> cause
    25:25:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslProvider -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslProvider:
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslProvider JDK -> JDK
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslProvider OPENSSL -> OPENSSL
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslProvider[] $VALUES -> $VALUES
    22:22:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslProvider[] values() -> values
    22:22:be.alexandre01.dnplugin.shaded.netty.handler.ssl.SslProvider valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    22:30:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator:
    java.security.Provider PROVIDER -> PROVIDER
    45:57:java.lang.String[] generate(java.lang.String,java.security.KeyPair,java.security.SecureRandom) -> generate
    60:60:void <init>() -> <init>
    42:42:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.FingerprintTrustManagerFactory -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.FingerprintTrustManagerFactory:
    java.util.regex.Pattern FINGERPRINT_PATTERN -> FINGERPRINT_PATTERN
    java.util.regex.Pattern FINGERPRINT_STRIP_PATTERN -> FINGERPRINT_STRIP_PATTERN
    int SHA1_BYTE_LEN -> SHA1_BYTE_LEN
    int SHA1_HEX_LEN -> SHA1_HEX_LEN
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.FastThreadLocal tlmd -> tlmd
    javax.net.ssl.TrustManager tm -> tm
    byte[][] fingerprints -> fingerprints
    132:133:void <init>(java.lang.Iterable) -> <init>
    141:142:void <init>(java.lang.String[]) -> <init>
    83:167:void <init>(byte[][]) -> <init>
    170:195:byte[][] toFingerprintArray(java.lang.Iterable) -> toFingerprintArray
    199:199:void engineInit(java.security.KeyStore) -> engineInit
    202:202:void engineInit(javax.net.ssl.ManagerFactoryParameters) -> engineInit
    206:206:javax.net.ssl.TrustManager[] engineGetTrustManagers() -> engineGetTrustManagers
    64:64:byte[][] access$000(be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.FingerprintTrustManagerFactory) -> access$000
    64:64:be.alexandre01.dnplugin.shaded.netty.util.concurrent.FastThreadLocal access$100() -> access$100
    66:71:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.FingerprintTrustManagerFactory$1 -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.FingerprintTrustManagerFactory$1:
    71:71:void <init>() -> <init>
    75:78:java.security.MessageDigest initialValue() -> initialValue
    71:71:java.lang.Object initialValue() -> initialValue
be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.FingerprintTrustManagerFactory$2 -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.FingerprintTrustManagerFactory$2:
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.FingerprintTrustManagerFactory this$0 -> this$0
    83:83:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.FingerprintTrustManagerFactory) -> <init>
    87:88:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    92:93:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    96:110:void checkTrusted(java.lang.String,java.security.cert.X509Certificate[]) -> checkTrusted
    113:115:byte[] fingerprint(java.security.cert.X509Certificate) -> fingerprint
    120:120:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.InsecureTrustManagerFactory -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.InsecureTrustManagerFactory:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    javax.net.ssl.TrustManagerFactory INSTANCE -> INSTANCE
    javax.net.ssl.TrustManager tm -> tm
    61:61:void <init>() -> <init>
    64:64:void engineInit(java.security.KeyStore) -> engineInit
    67:67:void engineInit(javax.net.ssl.ManagerFactoryParameters) -> engineInit
    71:71:javax.net.ssl.TrustManager[] engineGetTrustManagers() -> engineGetTrustManagers
    38:38:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger access$000() -> access$000
    40:44:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.InsecureTrustManagerFactory$1 -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.InsecureTrustManagerFactory$1:
    44:44:void <init>() -> <init>
    47:48:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    52:53:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    57:57:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator:
    45:77:java.lang.String[] generate(java.lang.String,java.security.KeyPair,java.security.SecureRandom) -> generate
    80:80:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.SelfSignedCertificate -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.SelfSignedCertificate:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.Date NOT_BEFORE -> NOT_BEFORE
    java.util.Date NOT_AFTER -> NOT_AFTER
    java.io.File certificate -> certificate
    java.io.File privateKey -> privateKey
    71:72:void <init>() -> <init>
    82:83:void <init>(java.lang.String) -> <init>
    92:123:void <init>(java.lang.String,java.security.SecureRandom,int) -> <init>
    129:129:java.io.File certificate() -> certificate
    136:136:java.io.File privateKey() -> privateKey
    143:145:void delete() -> delete
    151:191:java.lang.String[] newSelfSignedCertificate(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate) -> newSelfSignedCertificate
    195:198:void safeDelete(java.io.File) -> safeDelete
    202:206:void safeClose(java.io.File,java.io.OutputStream) -> safeClose
    57:62:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.SimpleTrustManagerFactory -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.SimpleTrustManagerFactory:
    java.security.Provider PROVIDER -> PROVIDER
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.FastThreadLocal CURRENT_SPI -> CURRENT_SPI
    59:60:void <init>() -> <init>
    68:75:void <init>(java.lang.String) -> <init>
    void engineInit(java.security.KeyStore) -> engineInit
    void engineInit(javax.net.ssl.ManagerFactoryParameters) -> engineInit
    javax.net.ssl.TrustManager[] engineGetTrustManagers() -> engineGetTrustManagers
    35:47:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.SimpleTrustManagerFactory$1 -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.SimpleTrustManagerFactory$1:
    long serialVersionUID -> serialVersionUID
    35:35:void <init>(java.lang.String,double,java.lang.String) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.SimpleTrustManagerFactory$2 -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.SimpleTrustManagerFactory$2:
    48:48:void <init>() -> <init>
    51:51:be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.SimpleTrustManagerFactory$SimpleTrustManagerFactorySpi initialValue() -> initialValue
    48:48:java.lang.Object initialValue() -> initialValue
be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.SimpleTrustManagerFactory$SimpleTrustManagerFactorySpi -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.SimpleTrustManagerFactory$SimpleTrustManagerFactorySpi:
    be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.SimpleTrustManagerFactory parent -> parent
    98:98:void <init>() -> <init>
    103:104:void init(be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.SimpleTrustManagerFactory) -> init
    109:115:void engineInit(java.security.KeyStore) -> engineInit
    121:127:void engineInit(javax.net.ssl.ManagerFactoryParameters) -> engineInit
    131:131:javax.net.ssl.TrustManager[] engineGetTrustManagers() -> engineGetTrustManagers
be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.ThreadLocalInsecureRandom -> be.alexandre01.dnplugin.shaded.netty.handler.ssl.util.ThreadLocalInsecureRandom:
    long serialVersionUID -> serialVersionUID
    java.security.SecureRandom INSTANCE -> INSTANCE
    34:34:java.security.SecureRandom current() -> current
    37:37:void <init>() -> <init>
    41:41:java.lang.String getAlgorithm() -> getAlgorithm
    45:45:void setSeed(byte[]) -> setSeed
    48:48:void setSeed(long) -> setSeed
    52:53:void nextBytes(byte[]) -> nextBytes
    57:59:byte[] generateSeed(int) -> generateSeed
    64:64:int nextInt() -> nextInt
    69:69:int nextInt(int) -> nextInt
    74:74:boolean nextBoolean() -> nextBoolean
    79:79:long nextLong() -> nextLong
    84:84:float nextFloat() -> nextFloat
    89:89:double nextDouble() -> nextDouble
    94:94:double nextGaussian() -> nextGaussian
    98:98:java.util.Random random() -> random
    31:31:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedFile -> be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedFile:
    java.io.RandomAccessFile file -> file
    long startOffset -> startOffset
    long endOffset -> endOffset
    int chunkSize -> chunkSize
    long offset -> offset
    45:46:void <init>(java.io.File) -> <init>
    55:56:void <init>(java.io.File,int) -> <init>
    62:63:void <init>(java.io.RandomAccessFile) -> <init>
    72:73:void <init>(java.io.RandomAccessFile,int) -> <init>
    83:107:void <init>(java.io.RandomAccessFile,long,long,int) -> <init>
    113:113:long startOffset() -> startOffset
    120:120:long endOffset() -> endOffset
    127:127:long currentOffset() -> currentOffset
    132:132:boolean isEndOfInput() -> isEndOfInput
    137:138:void close() -> close
    142:160:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readChunk(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> readChunk
    33:33:java.lang.Object readChunk(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> readChunk
be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedInput -> be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedInput:
    boolean isEndOfInput() -> isEndOfInput
    void close() -> close
    java.lang.Object readChunk(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> readChunk
be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedNioFile -> be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedNioFile:
    java.nio.channels.FileChannel in -> in
    long startOffset -> startOffset
    long endOffset -> endOffset
    int chunkSize -> chunkSize
    long offset -> offset
    47:48:void <init>(java.io.File) -> <init>
    57:58:void <init>(java.io.File,int) -> <init>
    64:65:void <init>(java.nio.channels.FileChannel) -> <init>
    74:75:void <init>(java.nio.channels.FileChannel,int) -> <init>
    86:111:void <init>(java.nio.channels.FileChannel,long,long,int) -> <init>
    117:117:long startOffset() -> startOffset
    124:124:long endOffset() -> endOffset
    131:131:long currentOffset() -> currentOffset
    136:136:boolean isEndOfInput() -> isEndOfInput
    141:142:void close() -> close
    146:171:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readChunk(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> readChunk
    35:35:java.lang.Object readChunk(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> readChunk
be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedNioStream -> be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedNioStream:
    java.nio.channels.ReadableByteChannel in -> in
    int chunkSize -> chunkSize
    long offset -> offset
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    45:46:void <init>(java.nio.channels.ReadableByteChannel) -> <init>
    54:66:void <init>(java.nio.channels.ReadableByteChannel,int) -> <init>
    72:72:long transferredBytes() -> transferredBytes
    77:91:boolean isEndOfInput() -> isEndOfInput
    96:97:void close() -> close
    101:127:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readChunk(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> readChunk
    29:29:java.lang.Object readChunk(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> readChunk
be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedStream -> be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedStream:
    int DEFAULT_CHUNK_SIZE -> DEFAULT_CHUNK_SIZE
    java.io.PushbackInputStream in -> in
    int chunkSize -> chunkSize
    long offset -> offset
    46:47:void <init>(java.io.InputStream) -> <init>
    55:71:void <init>(java.io.InputStream,int) -> <init>
    77:77:long transferredBytes() -> transferredBytes
    82:87:boolean isEndOfInput() -> isEndOfInput
    93:94:void close() -> close
    98:119:be.alexandre01.dnplugin.shaded.netty.buffer.ByteBuf readChunk(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> readChunk
    34:34:java.lang.Object readChunk(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> readChunk
be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler -> be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.Queue queue -> queue
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext ctx -> ctx
    be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler$PendingWrite currentWrite -> currentWrite
    75:80:void <init>() -> <init>
    75:91:void <init>(int) -> <init>
    95:96:void handlerAdded(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerAdded
    102:130:void resumeTransfer() -> resumeTransfer
    134:135:void write(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    139:143:void flush(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> flush
    147:149:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    153:158:void channelWritabilityChanged(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    162:198:void discard(java.lang.Throwable) -> discard
    201:316:void doFlush(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> doFlush
    320:326:void closeInput(be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedInput) -> closeInput
    366:372:int amount(java.lang.Object) -> amount
    69:69:void access$000(be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> access$000
    69:69:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger access$100() -> access$100
    72:72:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler$1 -> be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler this$0 -> this$0
    116:116:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> <init>
    121:127:void run() -> run
be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler$2 -> be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler$2:
    be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler$PendingWrite val$currentWrite -> val$currentWrite
    int val$amount -> val$amount
    be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedInput val$chunks -> val$chunks
    be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler this$0 -> this$0
    267:267:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler,be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler$PendingWrite,int,be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedInput) -> <init>
    270:273:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    267:267:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler$3 -> be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler$3:
    java.lang.Object val$pendingMessage -> val$pendingMessage
    be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler$PendingWrite val$currentWrite -> val$currentWrite
    int val$amount -> val$amount
    be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler this$0 -> this$0
    276:276:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler$PendingWrite,int) -> <init>
    279:285:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    276:276:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler$4 -> be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler$4:
    java.lang.Object val$pendingMessage -> val$pendingMessage
    be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler$PendingWrite val$currentWrite -> val$currentWrite
    int val$amount -> val$amount
    be.alexandre01.dnplugin.shaded.netty.channel.Channel val$channel -> val$channel
    be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler this$0 -> this$0
    288:288:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler$PendingWrite,int,be.alexandre01.dnplugin.shaded.netty.channel.Channel) -> <init>
    291:300:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    288:288:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler$PendingWrite -> be.alexandre01.dnplugin.shaded.netty.handler.stream.ChunkedWriteHandler$PendingWrite:
    java.lang.Object msg -> msg
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise promise -> promise
    long progress -> progress
    333:336:void <init>(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    339:341:void fail(java.lang.Throwable) -> fail
    344:355:void success() -> success
    358:362:void progress(int) -> progress
be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleState -> be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleState:
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleState READER_IDLE -> READER_IDLE
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleState WRITER_IDLE -> WRITER_IDLE
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleState ALL_IDLE -> ALL_IDLE
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleState[] $VALUES -> $VALUES
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleState[] values() -> values
    24:24:be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleState valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:36:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateEvent -> be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateEvent:
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateEvent FIRST_READER_IDLE_STATE_EVENT -> FIRST_READER_IDLE_STATE_EVENT
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateEvent READER_IDLE_STATE_EVENT -> READER_IDLE_STATE_EVENT
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateEvent FIRST_WRITER_IDLE_STATE_EVENT -> FIRST_WRITER_IDLE_STATE_EVENT
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateEvent WRITER_IDLE_STATE_EVENT -> WRITER_IDLE_STATE_EVENT
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateEvent FIRST_ALL_IDLE_STATE_EVENT -> FIRST_ALL_IDLE_STATE_EVENT
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateEvent ALL_IDLE_STATE_EVENT -> ALL_IDLE_STATE_EVENT
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleState state -> state
    boolean first -> first
    34:37:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleState,boolean) -> <init>
    43:43:be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleState state() -> state
    50:50:boolean isFirst() -> isFirst
    24:29:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler -> be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler:
    long MIN_TIMEOUT_NANOS -> MIN_TIMEOUT_NANOS
    long readerIdleTimeNanos -> readerIdleTimeNanos
    long writerIdleTimeNanos -> writerIdleTimeNanos
    long allIdleTimeNanos -> allIdleTimeNanos
    java.util.concurrent.ScheduledFuture readerIdleTimeout -> readerIdleTimeout
    long lastReadTime -> lastReadTime
    boolean firstReaderIdleEvent -> firstReaderIdleEvent
    java.util.concurrent.ScheduledFuture writerIdleTimeout -> writerIdleTimeout
    long lastWriteTime -> lastWriteTime
    boolean firstWriterIdleEvent -> firstWriterIdleEvent
    java.util.concurrent.ScheduledFuture allIdleTimeout -> allIdleTimeout
    boolean firstAllIdleEvent -> firstAllIdleEvent
    int state -> state
    138:140:void <init>(int,int,int) -> <init>
    106:183:void <init>(long,long,long,java.util.concurrent.TimeUnit) -> <init>
    190:190:long getReaderIdleTimeInMillis() -> getReaderIdleTimeInMillis
    198:198:long getWriterIdleTimeInMillis() -> getWriterIdleTimeInMillis
    206:206:long getAllIdleTimeInMillis() -> getAllIdleTimeInMillis
    211:219:void handlerAdded(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerAdded
    223:224:void handlerRemoved(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerRemoved
    229:233:void channelRegistered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelRegistered
    240:242:void channelActive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelActive
    246:248:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    252:255:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    259:267:void write(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    272:298:void initialize(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> initialize
    301:315:void destroy() -> destroy
    322:323:void channelIdle(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateEvent) -> channelIdle
    97:97:boolean access$002(be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler,boolean) -> access$002
    97:97:boolean access$102(be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler,boolean) -> access$102
    97:97:long access$200(be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler) -> access$200
    97:97:boolean access$300(be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler) -> access$300
    97:97:boolean access$302(be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler,boolean) -> access$302
    97:97:long access$400(be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler) -> access$400
    97:97:boolean access$000(be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler) -> access$000
    97:97:long access$500(be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler) -> access$500
    97:97:boolean access$100(be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler) -> access$100
    98:98:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler$1 -> be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler$1:
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler this$0 -> this$0
    259:259:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler) -> <init>
    262:264:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    259:259:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask -> be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext ctx -> ctx
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler this$0 -> this$0
    409:411:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> <init>
    415:444:void run() -> run
be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask -> be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext ctx -> ctx
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler this$0 -> this$0
    329:331:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> <init>
    335:362:void run() -> run
be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler$WriterIdleTimeoutTask -> be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler$WriterIdleTimeoutTask:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext ctx -> ctx
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler this$0 -> this$0
    369:371:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.timeout.IdleStateHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> <init>
    375:402:void run() -> run
be.alexandre01.dnplugin.shaded.netty.handler.timeout.ReadTimeoutException -> be.alexandre01.dnplugin.shaded.netty.handler.timeout.ReadTimeoutException:
    long serialVersionUID -> serialVersionUID
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.ReadTimeoutException INSTANCE -> INSTANCE
    28:28:void <init>() -> <init>
    26:26:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.timeout.ReadTimeoutHandler -> be.alexandre01.dnplugin.shaded.netty.handler.timeout.ReadTimeoutHandler:
    long MIN_TIMEOUT_NANOS -> MIN_TIMEOUT_NANOS
    long timeoutNanos -> timeoutNanos
    java.util.concurrent.ScheduledFuture timeout -> timeout
    long lastReadTime -> lastReadTime
    int state -> state
    boolean closed -> closed
    83:84:void <init>(int) -> <init>
    94:104:void <init>(long,java.util.concurrent.TimeUnit) -> <init>
    108:116:void handlerAdded(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerAdded
    120:121:void handlerRemoved(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerRemoved
    126:130:void channelRegistered(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelRegistered
    137:139:void channelActive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelActive
    143:145:void channelInactive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> channelInactive
    149:151:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    156:170:void initialize(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> initialize
    173:179:void destroy() -> destroy
    185:190:void readTimedOut(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> readTimedOut
    64:64:long access$000(be.alexandre01.dnplugin.shaded.netty.handler.timeout.ReadTimeoutHandler) -> access$000
    64:64:long access$100(be.alexandre01.dnplugin.shaded.netty.handler.timeout.ReadTimeoutHandler) -> access$100
    64:64:java.util.concurrent.ScheduledFuture access$202(be.alexandre01.dnplugin.shaded.netty.handler.timeout.ReadTimeoutHandler,java.util.concurrent.ScheduledFuture) -> access$202
    65:65:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.timeout.ReadTimeoutHandler$ReadTimeoutTask -> be.alexandre01.dnplugin.shaded.netty.handler.timeout.ReadTimeoutHandler$ReadTimeoutTask:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext ctx -> ctx
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.ReadTimeoutHandler this$0 -> this$0
    196:198:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.timeout.ReadTimeoutHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> <init>
    202:220:void run() -> run
be.alexandre01.dnplugin.shaded.netty.handler.timeout.TimeoutException -> be.alexandre01.dnplugin.shaded.netty.handler.timeout.TimeoutException:
    long serialVersionUID -> serialVersionUID
    28:28:void <init>() -> <init>
    32:32:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
be.alexandre01.dnplugin.shaded.netty.handler.timeout.WriteTimeoutException -> be.alexandre01.dnplugin.shaded.netty.handler.timeout.WriteTimeoutException:
    long serialVersionUID -> serialVersionUID
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.WriteTimeoutException INSTANCE -> INSTANCE
    28:28:void <init>() -> <init>
    26:26:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.timeout.WriteTimeoutHandler -> be.alexandre01.dnplugin.shaded.netty.handler.timeout.WriteTimeoutHandler:
    long MIN_TIMEOUT_NANOS -> MIN_TIMEOUT_NANOS
    long timeoutNanos -> timeoutNanos
    boolean closed -> closed
    81:82:void <init>(int) -> <init>
    92:102:void <init>(long,java.util.concurrent.TimeUnit) -> <init>
    106:108:void write(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    111:137:void scheduleTimeout(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> scheduleTimeout
    143:148:void writeTimedOut(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> writeTimedOut
    68:68:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.timeout.WriteTimeoutHandler$1 -> be.alexandre01.dnplugin.shaded.netty.handler.timeout.WriteTimeoutHandler$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise val$future -> val$future
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.WriteTimeoutHandler this$0 -> this$0
    113:113:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.timeout.WriteTimeoutHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> <init>
    119:126:void run() -> run
be.alexandre01.dnplugin.shaded.netty.handler.timeout.WriteTimeoutHandler$2 -> be.alexandre01.dnplugin.shaded.netty.handler.timeout.WriteTimeoutHandler$2:
    java.util.concurrent.ScheduledFuture val$sf -> val$sf
    be.alexandre01.dnplugin.shaded.netty.handler.timeout.WriteTimeoutHandler this$0 -> this$0
    130:130:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.timeout.WriteTimeoutHandler,java.util.concurrent.ScheduledFuture) -> <init>
    133:134:void operationComplete(be.alexandre01.dnplugin.shaded.netty.channel.ChannelFuture) -> operationComplete
    130:130:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.handler.traffic.AbstractTrafficShapingHandler -> be.alexandre01.dnplugin.shaded.netty.handler.traffic.AbstractTrafficShapingHandler:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    long DEFAULT_CHECK_INTERVAL -> DEFAULT_CHECK_INTERVAL
    long DEFAULT_MAX_TIME -> DEFAULT_MAX_TIME
    long MINIMAL_WAIT -> MINIMAL_WAIT
    be.alexandre01.dnplugin.shaded.netty.handler.traffic.TrafficCounter trafficCounter -> trafficCounter
    long writeLimit -> writeLimit
    long readLimit -> readLimit
    long maxTime -> maxTime
    long checkInterval -> checkInterval
    be.alexandre01.dnplugin.shaded.netty.util.AttributeKey READ_SUSPENDED -> READ_SUSPENDED
    be.alexandre01.dnplugin.shaded.netty.util.AttributeKey REOPEN_TASK -> REOPEN_TASK
    100:101:void setTrafficCounter(be.alexandre01.dnplugin.shaded.netty.handler.traffic.TrafficCounter) -> setTrafficCounter
    82:119:void <init>(long,long,long,long) -> <init>
    131:132:void <init>(long,long,long) -> <init>
    143:144:void <init>(long,long) -> <init>
    150:151:void <init>() -> <init>
    161:162:void <init>(long) -> <init>
    175:177:void configure(long,long,long) -> configure
    188:193:void configure(long,long) -> configure
    202:206:void configure(long) -> configure
    212:212:long getWriteLimit() -> getWriteLimit
    219:223:void setWriteLimit(long) -> setWriteLimit
    229:229:long getReadLimit() -> getReadLimit
    236:240:void setReadLimit(long) -> setReadLimit
    246:246:long getCheckInterval() -> getCheckInterval
    253:257:void setCheckInterval(long) -> setCheckInterval
    265:266:void setMaxTimeWait(long) -> setMaxTimeWait
    272:272:long getMaxTimeWait() -> getMaxTimeWait
    284:284:void doAccounting(be.alexandre01.dnplugin.shaded.netty.handler.traffic.TrafficCounter) -> doAccounting
    331:366:void channelRead(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    369:370:boolean isHandlerActive(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> isHandlerActive
    375:379:void read(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> read
    384:408:void write(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> write
    void submitWrite(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,long,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> submitWrite
    419:419:be.alexandre01.dnplugin.shaded.netty.handler.traffic.TrafficCounter trafficCounter() -> trafficCounter
    424:424:java.lang.String toString() -> toString
    438:444:long calculateSize(java.lang.Object) -> calculateSize
    44:44:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger access$000() -> access$000
    44:44:be.alexandre01.dnplugin.shaded.netty.util.AttributeKey access$100() -> access$100
    45:91:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.traffic.AbstractTrafficShapingHandler$ReopenReadTimerTask -> be.alexandre01.dnplugin.shaded.netty.handler.traffic.AbstractTrafficShapingHandler$ReopenReadTimerTask:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext ctx -> ctx
    292:294:void <init>(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> <init>
    297:326:void run() -> run
be.alexandre01.dnplugin.shaded.netty.handler.traffic.ChannelTrafficShapingHandler -> be.alexandre01.dnplugin.shaded.netty.handler.traffic.ChannelTrafficShapingHandler:
    java.util.List messagesQueue -> messagesQueue
    54:72:void <init>(long,long,long,long) -> <init>
    54:88:void <init>(long,long,long) -> <init>
    54:101:void <init>(long,long) -> <init>
    54:112:void <init>(long) -> <init>
    116:120:void handlerAdded(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerAdded
    124:133:void handlerRemoved(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerRemoved
    150:162:void submitWrite(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,long,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> submitWrite
    165:175:void sendAllValid(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> sendAllValid
    53:53:void access$100(be.alexandre01.dnplugin.shaded.netty.handler.traffic.ChannelTrafficShapingHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> access$100
be.alexandre01.dnplugin.shaded.netty.handler.traffic.ChannelTrafficShapingHandler$1 -> be.alexandre01.dnplugin.shaded.netty.handler.traffic.ChannelTrafficShapingHandler$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    be.alexandre01.dnplugin.shaded.netty.handler.traffic.ChannelTrafficShapingHandler this$0 -> this$0
    156:156:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.traffic.ChannelTrafficShapingHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> <init>
    159:160:void run() -> run
be.alexandre01.dnplugin.shaded.netty.handler.traffic.ChannelTrafficShapingHandler$ToSend -> be.alexandre01.dnplugin.shaded.netty.handler.traffic.ChannelTrafficShapingHandler$ToSend:
    long date -> date
    java.lang.Object toSend -> toSend
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise promise -> promise
    140:144:void <init>(long,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    135:135:void <init>(long,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,be.alexandre01.dnplugin.shaded.netty.handler.traffic.ChannelTrafficShapingHandler$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.traffic.GlobalTrafficShapingHandler -> be.alexandre01.dnplugin.shaded.netty.handler.traffic.GlobalTrafficShapingHandler:
    java.util.Map messagesQueues -> messagesQueues
    72:79:void createGlobalTrafficCounter(java.util.concurrent.ScheduledExecutorService) -> createGlobalTrafficCounter
    66:100:void <init>(java.util.concurrent.ScheduledExecutorService,long,long,long,long) -> <init>
    66:119:void <init>(java.util.concurrent.ScheduledExecutorService,long,long,long) -> <init>
    66:135:void <init>(java.util.concurrent.ScheduledExecutorService,long,long) -> <init>
    66:149:void <init>(java.util.concurrent.ScheduledExecutorService,long) -> <init>
    66:159:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor) -> <init>
    165:168:void release() -> release
    172:175:void handlerAdded(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerAdded
    179:189:void handlerRemoved(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext) -> handlerRemoved
    206:225:void submitWrite(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.lang.Object,long,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> submitWrite
    228:238:void sendAllValid(be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.util.List) -> sendAllValid
    65:65:void access$100(be.alexandre01.dnplugin.shaded.netty.handler.traffic.GlobalTrafficShapingHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.util.List) -> access$100
be.alexandre01.dnplugin.shaded.netty.handler.traffic.GlobalTrafficShapingHandler$1 -> be.alexandre01.dnplugin.shaded.netty.handler.traffic.GlobalTrafficShapingHandler$1:
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    java.util.List val$mqfinal -> val$mqfinal
    be.alexandre01.dnplugin.shaded.netty.handler.traffic.GlobalTrafficShapingHandler this$0 -> this$0
    219:219:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.traffic.GlobalTrafficShapingHandler,be.alexandre01.dnplugin.shaded.netty.channel.ChannelHandlerContext,java.util.List) -> <init>
    222:223:void run() -> run
be.alexandre01.dnplugin.shaded.netty.handler.traffic.GlobalTrafficShapingHandler$ToSend -> be.alexandre01.dnplugin.shaded.netty.handler.traffic.GlobalTrafficShapingHandler$ToSend:
    long date -> date
    java.lang.Object toSend -> toSend
    be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise promise -> promise
    196:200:void <init>(long,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise) -> <init>
    191:191:void <init>(long,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.channel.ChannelPromise,be.alexandre01.dnplugin.shaded.netty.handler.traffic.GlobalTrafficShapingHandler$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.handler.traffic.TrafficCounter -> be.alexandre01.dnplugin.shaded.netty.handler.traffic.TrafficCounter:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.concurrent.atomic.AtomicLong currentWrittenBytes -> currentWrittenBytes
    java.util.concurrent.atomic.AtomicLong currentReadBytes -> currentReadBytes
    java.util.concurrent.atomic.AtomicLong cumulativeWrittenBytes -> cumulativeWrittenBytes
    java.util.concurrent.atomic.AtomicLong cumulativeReadBytes -> cumulativeReadBytes
    long lastCumulativeTime -> lastCumulativeTime
    long lastWriteThroughput -> lastWriteThroughput
    long lastReadThroughput -> lastReadThroughput
    java.util.concurrent.atomic.AtomicLong lastTime -> lastTime
    long lastWrittenBytes -> lastWrittenBytes
    long lastReadBytes -> lastReadBytes
    long lastNonNullWrittenBytes -> lastNonNullWrittenBytes
    long lastNonNullWrittenTime -> lastNonNullWrittenTime
    long lastNonNullReadTime -> lastNonNullReadTime
    long lastNonNullReadBytes -> lastNonNullReadBytes
    java.util.concurrent.atomic.AtomicLong checkInterval -> checkInterval
    java.lang.String name -> name
    be.alexandre01.dnplugin.shaded.netty.handler.traffic.AbstractTrafficShapingHandler trafficShapingHandler -> trafficShapingHandler
    java.util.concurrent.ScheduledExecutorService executor -> executor
    java.lang.Runnable monitor -> monitor
    java.util.concurrent.ScheduledFuture scheduledFuture -> scheduledFuture
    java.util.concurrent.atomic.AtomicBoolean monitorActive -> monitorActive
    191:200:void start() -> start
    206:217:void stop() -> stop
    226:248:void resetAccounting(long) -> resetAccounting
    44:270:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.traffic.AbstractTrafficShapingHandler,java.util.concurrent.ScheduledExecutorService,java.lang.String,long) -> <init>
    279:291:void configure(long) -> configure
    300:302:void bytesRecvFlowControl(long) -> bytesRecvFlowControl
    311:313:void bytesWriteFlowControl(long) -> bytesWriteFlowControl
    321:321:long checkInterval() -> checkInterval
    329:329:long lastReadThroughput() -> lastReadThroughput
    337:337:long lastWriteThroughput() -> lastWriteThroughput
    345:345:long lastReadBytes() -> lastReadBytes
    353:353:long lastWrittenBytes() -> lastWrittenBytes
    361:361:long currentReadBytes() -> currentReadBytes
    369:369:long currentWrittenBytes() -> currentWrittenBytes
    376:376:long lastTime() -> lastTime
    383:383:long cumulativeWrittenBytes() -> cumulativeWrittenBytes
    390:390:long cumulativeReadBytes() -> cumulativeReadBytes
    398:398:long lastCumulativeTime() -> lastCumulativeTime
    405:408:void resetCumulativeTime() -> resetCumulativeTime
    414:414:java.lang.String name() -> name
    430:471:long readTimeToWait(long,long,long) -> readTimeToWait
    487:525:long writeTimeToWait(long,long,long) -> writeTimeToWait
    533:533:java.lang.String toString() -> toString
    38:38:java.util.concurrent.ScheduledFuture access$002(be.alexandre01.dnplugin.shaded.netty.handler.traffic.TrafficCounter,java.util.concurrent.ScheduledFuture) -> access$002
    38:38:java.util.concurrent.ScheduledExecutorService access$100(be.alexandre01.dnplugin.shaded.netty.handler.traffic.TrafficCounter) -> access$100
    39:39:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.handler.traffic.TrafficCounter$TrafficMonitoringTask -> be.alexandre01.dnplugin.shaded.netty.handler.traffic.TrafficCounter$TrafficMonitoringTask:
    be.alexandre01.dnplugin.shaded.netty.handler.traffic.AbstractTrafficShapingHandler trafficShapingHandler1 -> trafficShapingHandler1
    be.alexandre01.dnplugin.shaded.netty.handler.traffic.TrafficCounter counter -> counter
    167:170:void <init>(be.alexandre01.dnplugin.shaded.netty.handler.traffic.AbstractTrafficShapingHandler,be.alexandre01.dnplugin.shaded.netty.handler.traffic.TrafficCounter) -> <init>
    174:184:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.AbstractReferenceCounted -> be.alexandre01.dnplugin.shaded.netty.util.AbstractReferenceCounted:
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater refCntUpdater -> refCntUpdater
    int refCnt -> refCnt
    25:38:void <init>() -> <init>
    42:42:int refCnt() -> refCnt
    49:50:void setRefCnt(int) -> setRefCnt
    55:66:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    71:87:be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    93:105:boolean release() -> release
    110:127:boolean release(int) -> release
    void deallocate() -> deallocate
    30:36:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.Attribute -> be.alexandre01.dnplugin.shaded.netty.util.Attribute:
    be.alexandre01.dnplugin.shaded.netty.util.AttributeKey key() -> key
    java.lang.Object get() -> get
    void set(java.lang.Object) -> set
    java.lang.Object getAndSet(java.lang.Object) -> getAndSet
    java.lang.Object setIfAbsent(java.lang.Object) -> setIfAbsent
    java.lang.Object getAndRemove() -> getAndRemove
    boolean compareAndSet(java.lang.Object,java.lang.Object) -> compareAndSet
    void remove() -> remove
be.alexandre01.dnplugin.shaded.netty.util.AttributeKey -> be.alexandre01.dnplugin.shaded.netty.util.AttributeKey:
    java.util.concurrent.ConcurrentMap names -> names
    39:39:be.alexandre01.dnplugin.shaded.netty.util.AttributeKey valueOf(java.lang.String) -> valueOf
    47:48:void <init>(java.lang.String) -> <init>
    32:32:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.AttributeMap -> be.alexandre01.dnplugin.shaded.netty.util.AttributeMap:
    be.alexandre01.dnplugin.shaded.netty.util.Attribute attr(be.alexandre01.dnplugin.shaded.netty.util.AttributeKey) -> attr
be.alexandre01.dnplugin.shaded.netty.util.CharsetUtil -> be.alexandre01.dnplugin.shaded.netty.util.CharsetUtil:
    java.nio.charset.Charset UTF_16 -> UTF_16
    java.nio.charset.Charset UTF_16BE -> UTF_16BE
    java.nio.charset.Charset UTF_16LE -> UTF_16LE
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
    java.nio.charset.Charset US_ASCII -> US_ASCII
    69:86:java.nio.charset.CharsetEncoder getEncoder(java.nio.charset.Charset) -> getEncoder
    94:111:java.nio.charset.CharsetDecoder getDecoder(java.nio.charset.Charset) -> getDecoder
    114:116:void <init>() -> <init>
    36:62:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.DefaultAttributeMap -> be.alexandre01.dnplugin.shaded.netty.util.DefaultAttributeMap:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater updater -> updater
    int BUCKET_SIZE -> BUCKET_SIZE
    int MASK -> MASK
    java.util.concurrent.atomic.AtomicReferenceArray attributes -> attributes
    28:105:void <init>() -> <init>
    54:98:be.alexandre01.dnplugin.shaded.netty.util.Attribute attr(be.alexandre01.dnplugin.shaded.netty.util.AttributeKey) -> attr
    102:102:int index(be.alexandre01.dnplugin.shaded.netty.util.AttributeKey) -> index
    35:42:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.DefaultAttributeMap$DefaultAttribute -> be.alexandre01.dnplugin.shaded.netty.util.DefaultAttributeMap$DefaultAttribute:
    long serialVersionUID -> serialVersionUID
    be.alexandre01.dnplugin.shaded.netty.util.DefaultAttributeMap$DefaultAttribute head -> head
    be.alexandre01.dnplugin.shaded.netty.util.AttributeKey key -> key
    be.alexandre01.dnplugin.shaded.netty.util.DefaultAttributeMap$DefaultAttribute prev -> prev
    be.alexandre01.dnplugin.shaded.netty.util.DefaultAttributeMap$DefaultAttribute next -> next
    boolean removed -> removed
    121:124:void <init>(be.alexandre01.dnplugin.shaded.netty.util.DefaultAttributeMap$DefaultAttribute,be.alexandre01.dnplugin.shaded.netty.util.AttributeKey) -> <init>
    126:129:void <init>(be.alexandre01.dnplugin.shaded.netty.util.AttributeKey) -> <init>
    133:133:be.alexandre01.dnplugin.shaded.netty.util.AttributeKey key() -> key
    138:144:java.lang.Object setIfAbsent(java.lang.Object) -> setIfAbsent
    149:152:java.lang.Object getAndRemove() -> getAndRemove
    157:160:void remove() -> remove
    163:177:void remove0() -> remove0
    106:106:boolean access$000(be.alexandre01.dnplugin.shaded.netty.util.DefaultAttributeMap$DefaultAttribute) -> access$000
    106:106:be.alexandre01.dnplugin.shaded.netty.util.AttributeKey access$100(be.alexandre01.dnplugin.shaded.netty.util.DefaultAttributeMap$DefaultAttribute) -> access$100
    106:106:be.alexandre01.dnplugin.shaded.netty.util.DefaultAttributeMap$DefaultAttribute access$200(be.alexandre01.dnplugin.shaded.netty.util.DefaultAttributeMap$DefaultAttribute) -> access$200
    106:106:be.alexandre01.dnplugin.shaded.netty.util.DefaultAttributeMap$DefaultAttribute access$202(be.alexandre01.dnplugin.shaded.netty.util.DefaultAttributeMap$DefaultAttribute,be.alexandre01.dnplugin.shaded.netty.util.DefaultAttributeMap$DefaultAttribute) -> access$202
    106:106:be.alexandre01.dnplugin.shaded.netty.util.DefaultAttributeMap$DefaultAttribute access$302(be.alexandre01.dnplugin.shaded.netty.util.DefaultAttributeMap$DefaultAttribute,be.alexandre01.dnplugin.shaded.netty.util.DefaultAttributeMap$DefaultAttribute) -> access$302
be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer -> be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector leakDetector -> leakDetector
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater WORKER_STATE_UPDATER -> WORKER_STATE_UPDATER
    be.alexandre01.dnplugin.shaded.netty.util.ResourceLeak leak -> leak
    be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$Worker worker -> worker
    java.lang.Thread workerThread -> workerThread
    int WORKER_STATE_INIT -> WORKER_STATE_INIT
    int WORKER_STATE_STARTED -> WORKER_STATE_STARTED
    int WORKER_STATE_SHUTDOWN -> WORKER_STATE_SHUTDOWN
    int workerState -> workerState
    long tickDuration -> tickDuration
    be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelBucket[] wheel -> wheel
    int mask -> mask
    java.util.concurrent.CountDownLatch startTimeInitialized -> startTimeInitialized
    java.util.Queue timeouts -> timeouts
    java.util.Queue cancelledTimeouts -> cancelledTimeouts
    long startTime -> startTime
    119:120:void <init>() -> <init>
    133:134:void <init>(long,java.util.concurrent.TimeUnit) -> <init>
    147:148:void <init>(long,java.util.concurrent.TimeUnit,int) -> <init>
    160:161:void <init>(java.util.concurrent.ThreadFactory) -> <init>
    176:177:void <init>(java.util.concurrent.ThreadFactory,long,java.util.concurrent.TimeUnit) -> <init>
    95:224:void <init>(java.util.concurrent.ThreadFactory,long,java.util.concurrent.TimeUnit,int) -> <init>
    227:241:be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelBucket[] createWheel(int) -> createWheel
    245:249:int normalizeTicksPerWheel(int) -> normalizeTicksPerWheel
    260:282:void start() -> start
    286:321:java.util.Set stop() -> stop
    326:339:be.alexandre01.dnplugin.shaded.netty.util.Timeout newTimeout(be.alexandre01.dnplugin.shaded.netty.util.TimerTask,long,java.util.concurrent.TimeUnit) -> newTimeout
    75:75:long access$202(be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer,long) -> access$202
    75:75:long access$200(be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer) -> access$200
    75:75:java.util.concurrent.CountDownLatch access$300(be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer) -> access$300
    75:75:int access$400(be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer) -> access$400
    75:75:be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelBucket[] access$500(be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer) -> access$500
    75:75:java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$600() -> access$600
    75:75:java.util.Queue access$700(be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer) -> access$700
    75:75:long access$900(be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer) -> access$900
    75:75:java.util.Queue access$1000(be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer) -> access$1000
    77:92:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$1 -> be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$1:
be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelBucket -> be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelBucket:
    be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelTimeout head -> head
    be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelTimeout tail -> tail
    boolean $assertionsDisabled -> $assertionsDisabled
    625:625:void <init>() -> <init>
    634:643:void addTimeout(be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelTimeout) -> addTimeout
    649:675:void expireTimeouts(long) -> expireTimeouts
    678:703:void remove(be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelTimeout) -> remove
    710:718:void clearTimeouts(java.util.Set) -> clearTimeouts
    722:738:be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelTimeout pollTimeout() -> pollTimeout
    625:625:void <init>(be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$1) -> <init>
    625:625:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelTimeout -> be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelTimeout:
    int ST_INIT -> ST_INIT
    int ST_CANCELLED -> ST_CANCELLED
    int ST_EXPIRED -> ST_EXPIRED
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater STATE_UPDATER -> STATE_UPDATER
    be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer timer -> timer
    be.alexandre01.dnplugin.shaded.netty.util.TimerTask task -> task
    long deadline -> deadline
    int state -> state
    long remainingRounds -> remainingRounds
    be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelTimeout next -> next
    be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelTimeout prev -> prev
    be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelBucket bucket -> bucket
    496:515:void <init>(be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer,be.alexandre01.dnplugin.shaded.netty.util.TimerTask,long) -> <init>
    519:519:be.alexandre01.dnplugin.shaded.netty.util.Timer timer() -> timer
    524:524:be.alexandre01.dnplugin.shaded.netty.util.TimerTask task() -> task
    530:549:boolean cancel() -> cancel
    553:553:boolean compareAndSetState(int,int) -> compareAndSetState
    557:557:int state() -> state
    562:562:boolean isCancelled() -> isCancelled
    567:567:boolean isExpired() -> isExpired
    572:572:be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelTimeout value() -> value
    576:587:void expire() -> expire
    591:616:java.lang.String toString() -> toString
    475:475:java.lang.Object value() -> value
    475:475:long access$800(be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelTimeout) -> access$800
    484:490:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelTimeout$1 -> be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelTimeout$1:
    be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelTimeout this$0 -> this$0
    540:540:void <init>(be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$HashedWheelTimeout) -> <init>
    543:547:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$Worker -> be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$Worker:
    java.util.Set unprocessedTimeouts -> unprocessedTimeouts
    long tick -> tick
    be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer this$0 -> this$0
    342:343:void <init>(be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer) -> <init>
    350:386:void run() -> run
    391:411:void transferTimeoutsToBuckets() -> transferTimeoutsToBuckets
    415:428:void processCancelledTasks() -> processCancelledTasks
    437:467:long waitForNextTick() -> waitForNextTick
    471:471:java.util.Set unprocessedTimeouts() -> unprocessedTimeouts
    342:342:void <init>(be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer,be.alexandre01.dnplugin.shaded.netty.util.HashedWheelTimer$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.util.IllegalReferenceCountException -> be.alexandre01.dnplugin.shaded.netty.util.IllegalReferenceCountException:
    long serialVersionUID -> serialVersionUID
    27:27:void <init>() -> <init>
    30:31:void <init>(int) -> <init>
    34:35:void <init>(int,int) -> <init>
    38:39:void <init>(java.lang.String) -> <init>
    42:43:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    46:47:void <init>(java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.util.NetUtil -> be.alexandre01.dnplugin.shaded.netty.util.NetUtil:
    java.net.Inet4Address LOCALHOST4 -> LOCALHOST4
    java.net.Inet6Address LOCALHOST6 -> LOCALHOST6
    java.net.InetAddress LOCALHOST -> LOCALHOST
    java.net.NetworkInterface LOOPBACK_IF -> LOOPBACK_IF
    int SOMAXCONN -> SOMAXCONN
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    222:310:byte[] createByteArrayFromIpAddressString(java.lang.String) -> createByteArrayFromIpAddressString
    318:345:void convertToBytes(java.lang.String,byte[],int) -> convertToBytes
    349:387:int getIntValue(char) -> getIntValue
    391:539:boolean isValidIpV6Address(java.lang.String) -> isValidIpV6Address
    544:553:boolean isValidIp4Word(java.lang.String) -> isValidIp4Word
    557:557:boolean isValidHexChar(char) -> isValidHexChar
    568:605:boolean isValidIpV4Address(java.lang.String) -> isValidIpV4Address
    611:613:void <init>() -> <init>
    74:214:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.Recycler -> be.alexandre01.dnplugin.shaded.netty.util.Recycler:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.concurrent.atomic.AtomicInteger ID_GENERATOR -> ID_GENERATOR
    int OWN_THREAD_ID -> OWN_THREAD_ID
    int DEFAULT_MAX_CAPACITY -> DEFAULT_MAX_CAPACITY
    int INITIAL_CAPACITY -> INITIAL_CAPACITY
    int maxCapacity -> maxCapacity
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.FastThreadLocal threadLocal -> threadLocal
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.FastThreadLocal DELAYED_RECYCLED -> DELAYED_RECYCLED
    71:72:void <init>() -> <init>
    63:76:void <init>(int) -> <init>
    80:86:java.lang.Object get() -> get
    90:98:boolean recycle(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> recycle
    java.lang.Object newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
    35:35:int access$000(be.alexandre01.dnplugin.shaded.netty.util.Recycler) -> access$000
    35:35:be.alexandre01.dnplugin.shaded.netty.util.concurrent.FastThreadLocal access$300() -> access$300
    35:35:java.util.concurrent.atomic.AtomicInteger access$400() -> access$400
    35:35:int access$1400() -> access$1400
    35:35:int access$1700() -> access$1700
    37:134:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.Recycler$1 -> be.alexandre01.dnplugin.shaded.netty.util.Recycler$1:
    be.alexandre01.dnplugin.shaded.netty.util.Recycler this$0 -> this$0
    63:63:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler) -> <init>
    66:66:be.alexandre01.dnplugin.shaded.netty.util.Recycler$Stack initialValue() -> initialValue
    63:63:java.lang.Object initialValue() -> initialValue
be.alexandre01.dnplugin.shaded.netty.util.Recycler$2 -> be.alexandre01.dnplugin.shaded.netty.util.Recycler$2:
    135:135:void <init>() -> <init>
    138:138:java.util.Map initialValue() -> initialValue
    135:135:java.lang.Object initialValue() -> initialValue
be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle -> be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle:
    int lastRecycledId -> lastRecycledId
    int recycleId -> recycleId
    be.alexandre01.dnplugin.shaded.netty.util.Recycler$Stack stack -> stack
    java.lang.Object value -> value
    112:114:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Stack) -> <init>
    117:131:void recycle() -> recycle
    105:105:java.lang.Object access$102(be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle,java.lang.Object) -> access$102
    105:105:java.lang.Object access$100(be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle) -> access$100
    105:105:be.alexandre01.dnplugin.shaded.netty.util.Recycler$Stack access$200(be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle) -> access$200
    105:105:int access$702(be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle,int) -> access$702
    105:105:be.alexandre01.dnplugin.shaded.netty.util.Recycler$Stack access$202(be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle,be.alexandre01.dnplugin.shaded.netty.util.Recycler$Stack) -> access$202
    105:105:int access$1300(be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle) -> access$1300
    105:105:int access$1302(be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle,int) -> access$1302
    105:105:int access$700(be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle) -> access$700
be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle -> be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle:
be.alexandre01.dnplugin.shaded.netty.util.Recycler$Stack -> be.alexandre01.dnplugin.shaded.netty.util.Recycler$Stack:
    be.alexandre01.dnplugin.shaded.netty.util.Recycler parent -> parent
    java.lang.Thread thread -> thread
    be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle[] elements -> elements
    int maxCapacity -> maxCapacity
    int size -> size
    be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue head -> head
    be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue cursor -> cursor
    be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue prev -> prev
    259:264:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler,java.lang.Thread,int) -> <init>
    267:282:be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle pop() -> pop
    287:294:boolean scavenge() -> scavenge
    298:327:boolean scavengeSome() -> scavengeSome
    331:347:void push(be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle) -> push
    350:350:be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle newHandle() -> newHandle
    244:244:be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue access$600(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Stack) -> access$600
    244:244:be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue access$602(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Stack,be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue) -> access$602
    244:244:int access$1100(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Stack) -> access$1100
    244:244:be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle[] access$1200(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Stack) -> access$1200
    244:244:be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle[] access$1202(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Stack,be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle[]) -> access$1202
    244:244:int access$1102(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Stack,int) -> access$1102
be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue -> be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue:
    int LINK_CAPACITY -> LINK_CAPACITY
    be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue$Link head -> head
    be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue$Link tail -> tail
    be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue next -> next
    java.lang.ref.WeakReference owner -> owner
    int id -> id
    161:170:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Stack,java.lang.Thread) -> <init>
    173:186:void add(be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle) -> add
    189:189:boolean hasFinalData() -> hasFinalData
    196:240:boolean transfer(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Stack) -> transfer
    144:144:be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue access$1500(be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue) -> access$1500
    144:144:java.lang.ref.WeakReference access$1600(be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue) -> access$1600
    144:144:be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue access$1502(be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue,be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue) -> access$1502
be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue$Link -> be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue$Link:
    be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle[] elements -> elements
    int readIndex -> readIndex
    be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue$Link next -> next
    149:150:void <init>() -> <init>
    149:149:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$1) -> <init>
    149:149:be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue$Link access$802(be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue$Link,be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue$Link) -> access$802
    149:149:be.alexandre01.dnplugin.shaded.netty.util.Recycler$DefaultHandle[] access$900(be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue$Link) -> access$900
    149:149:int access$1000(be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue$Link) -> access$1000
    149:149:be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue$Link access$800(be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue$Link) -> access$800
    149:149:int access$1002(be.alexandre01.dnplugin.shaded.netty.util.Recycler$WeakOrderQueue$Link,int) -> access$1002
be.alexandre01.dnplugin.shaded.netty.util.ReferenceCountUtil -> be.alexandre01.dnplugin.shaded.netty.util.ReferenceCountUtil:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    35:38:java.lang.Object retain(java.lang.Object) -> retain
    47:50:java.lang.Object retain(java.lang.Object,int) -> retain
    58:61:boolean release(java.lang.Object) -> release
    69:72:boolean release(java.lang.Object,int) -> release
    84:88:void safeRelease(java.lang.Object) -> safeRelease
    99:105:void safeRelease(java.lang.Object,int) -> safeRelease
    113:113:java.lang.Object releaseLater(java.lang.Object) -> releaseLater
    122:125:java.lang.Object releaseLater(java.lang.Object,int) -> releaseLater
    160:160:void <init>() -> <init>
    25:25:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger access$000() -> access$000
    27:27:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.ReferenceCountUtil$ReleasingTask -> be.alexandre01.dnplugin.shaded.netty.util.ReferenceCountUtil$ReleasingTask:
    be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted obj -> obj
    int decrement -> decrement
    136:139:void <init>(be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted,int) -> <init>
    144:152:void run() -> run
    156:156:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted -> be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted:
    int refCnt() -> refCnt
    be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain() -> retain
    be.alexandre01.dnplugin.shaded.netty.util.ReferenceCounted retain(int) -> retain
    boolean release() -> release
    boolean release(int) -> release
be.alexandre01.dnplugin.shaded.netty.util.ResourceLeak -> be.alexandre01.dnplugin.shaded.netty.util.ResourceLeak:
    void record() -> record
    boolean close() -> close
be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector -> be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector:
    java.lang.String PROP_LEVEL -> PROP_LEVEL
    be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$Level DEFAULT_LEVEL -> DEFAULT_LEVEL
    be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$Level level -> level
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    int DEFAULT_SAMPLING_INTERVAL -> DEFAULT_SAMPLING_INTERVAL
    be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$DefaultResourceLeak head -> head
    be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$DefaultResourceLeak tail -> tail
    java.lang.ref.ReferenceQueue refQueue -> refQueue
    java.util.concurrent.ConcurrentMap reportedLeaks -> reportedLeaks
    java.lang.String resourceType -> resourceType
    int samplingInterval -> samplingInterval
    long maxActive -> maxActive
    long active -> active
    java.util.concurrent.atomic.AtomicBoolean loggedTooManyActive -> loggedTooManyActive
    long leakCheckCnt -> leakCheckCnt
    java.lang.String[] STACK_TRACE_ELEMENT_EXCLUSIONS -> STACK_TRACE_ELEMENT_EXCLUSIONS
    102:103:void setEnabled(boolean) -> setEnabled
    109:109:boolean isEnabled() -> isEnabled
    116:120:void setLevel(be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$Level) -> setLevel
    126:126:be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$Level getLevel() -> getLevel
    145:146:void <init>(java.lang.Class) -> <init>
    149:150:void <init>(java.lang.String) -> <init>
    153:154:void <init>(java.lang.Class,int,long) -> <init>
    130:173:void <init>(java.lang.String,int,long) -> <init>
    182:196:be.alexandre01.dnplugin.shaded.netty.util.ResourceLeak open(java.lang.Object) -> open
    201:250:void reportLeak(be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$Level) -> reportLeak
    360:385:java.lang.String newRecord(int) -> newRecord
    34:34:java.lang.ref.ReferenceQueue access$200(be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector) -> access$200
    34:34:be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$DefaultResourceLeak access$300(be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector) -> access$300
    34:34:long access$408(be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector) -> access$408
    34:34:long access$410(be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector) -> access$410
    37:355:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$DefaultResourceLeak -> be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$DefaultResourceLeak:
    int MAX_RECORDS -> MAX_RECORDS
    java.lang.String creationRecord -> creationRecord
    java.util.Deque lastRecords -> lastRecords
    java.util.concurrent.atomic.AtomicBoolean freed -> freed
    be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$DefaultResourceLeak prev -> prev
    be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$DefaultResourceLeak next -> next
    be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector this$0 -> this$0
    257:286:void <init>(be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector,java.lang.Object) -> <init>
    290:303:void record() -> record
    307:317:boolean close() -> close
    321:351:java.lang.String toString() -> toString
    252:252:be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$DefaultResourceLeak access$002(be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$DefaultResourceLeak,be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$DefaultResourceLeak) -> access$002
    252:252:be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$DefaultResourceLeak access$102(be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$DefaultResourceLeak,be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$DefaultResourceLeak) -> access$102
be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$Level -> be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$Level:
    be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$Level DISABLED -> DISABLED
    be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$Level SIMPLE -> SIMPLE
    be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$Level ADVANCED -> ADVANCED
    be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$Level PARANOID -> PARANOID
    be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$Level[] $VALUES -> $VALUES
    42:42:be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$Level[] values() -> values
    42:42:be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakDetector$Level valueOf(java.lang.String) -> valueOf
    42:42:void <init>(java.lang.String,int) -> <init>
    42:61:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakException -> be.alexandre01.dnplugin.shaded.netty.util.ResourceLeakException:
    long serialVersionUID -> serialVersionUID
    java.lang.StackTraceElement[] cachedStackTrace -> cachedStackTrace
    31:33:void <init>() -> <init>
    36:38:void <init>(java.lang.String) -> <init>
    41:43:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    46:48:void <init>(java.lang.Throwable) -> <init>
    52:57:int hashCode() -> hashCode
    62:69:boolean equals(java.lang.Object) -> equals
be.alexandre01.dnplugin.shaded.netty.util.Signal -> be.alexandre01.dnplugin.shaded.netty.util.Signal:
    long serialVersionUID -> serialVersionUID
    java.util.concurrent.ConcurrentMap map -> map
    be.alexandre01.dnplugin.shaded.netty.util.UniqueName uname -> uname
    41:41:be.alexandre01.dnplugin.shaded.netty.util.Signal valueOf(java.lang.String) -> valueOf
    49:51:void <init>(java.lang.String) -> <init>
    58:61:void expect(be.alexandre01.dnplugin.shaded.netty.util.Signal) -> expect
    65:65:java.lang.Throwable initCause(java.lang.Throwable) -> initCause
    70:70:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    75:75:java.lang.String toString() -> toString
    31:31:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.ThreadDeathWatcher -> be.alexandre01.dnplugin.shaded.netty.util.ThreadDeathWatcher:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.concurrent.ThreadFactory threadFactory -> threadFactory
    java.util.Queue pendingEntries -> pendingEntries
    be.alexandre01.dnplugin.shaded.netty.util.ThreadDeathWatcher$Watcher watcher -> watcher
    java.util.concurrent.atomic.AtomicBoolean started -> started
    java.lang.Thread watcherThread -> watcherThread
    60:71:void watch(java.lang.Thread,java.lang.Runnable) -> watch
    77:85:void unwatch(java.lang.Thread,java.lang.Runnable) -> unwatch
    88:95:void schedule(java.lang.Thread,java.lang.Runnable,boolean) -> schedule
    107:116:boolean awaitInactivity(long,java.util.concurrent.TimeUnit) -> awaitInactivity
    120:120:void <init>() -> <init>
    40:40:java.util.Queue access$100() -> access$100
    40:40:java.util.concurrent.atomic.AtomicBoolean access$200() -> access$200
    40:40:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger access$300() -> access$300
    42:48:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.ThreadDeathWatcher$1 -> be.alexandre01.dnplugin.shaded.netty.util.ThreadDeathWatcher$1:
be.alexandre01.dnplugin.shaded.netty.util.ThreadDeathWatcher$Entry -> be.alexandre01.dnplugin.shaded.netty.util.ThreadDeathWatcher$Entry:
    java.lang.Thread thread -> thread
    java.lang.Runnable task -> task
    boolean isWatch -> isWatch
    211:215:void <init>(java.lang.Thread,java.lang.Runnable,boolean) -> <init>
    219:219:be.alexandre01.dnplugin.shaded.netty.util.ThreadDeathWatcher$Entry value() -> value
    224:224:int hashCode() -> hashCode
    229:238:boolean equals(java.lang.Object) -> equals
    206:206:java.lang.Object value() -> value
be.alexandre01.dnplugin.shaded.netty.util.ThreadDeathWatcher$Watcher -> be.alexandre01.dnplugin.shaded.netty.util.ThreadDeathWatcher$Watcher:
    java.util.List watchees -> watchees
    boolean $assertionsDisabled -> $assertionsDisabled
    122:124:void <init>() -> <init>
    129:171:void run() -> run
    175:186:void fetchWatchees() -> fetchWatchees
    189:203:void notifyWatchees() -> notifyWatchees
    122:122:void <init>(be.alexandre01.dnplugin.shaded.netty.util.ThreadDeathWatcher$1) -> <init>
    122:122:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.Timeout -> be.alexandre01.dnplugin.shaded.netty.util.Timeout:
    be.alexandre01.dnplugin.shaded.netty.util.Timer timer() -> timer
    be.alexandre01.dnplugin.shaded.netty.util.TimerTask task() -> task
    boolean isExpired() -> isExpired
    boolean isCancelled() -> isCancelled
    boolean cancel() -> cancel
be.alexandre01.dnplugin.shaded.netty.util.Timer -> be.alexandre01.dnplugin.shaded.netty.util.Timer:
    be.alexandre01.dnplugin.shaded.netty.util.Timeout newTimeout(be.alexandre01.dnplugin.shaded.netty.util.TimerTask,long,java.util.concurrent.TimeUnit) -> newTimeout
    java.util.Set stop() -> stop
be.alexandre01.dnplugin.shaded.netty.util.TimerTask -> be.alexandre01.dnplugin.shaded.netty.util.TimerTask:
    void run(be.alexandre01.dnplugin.shaded.netty.util.Timeout) -> run
be.alexandre01.dnplugin.shaded.netty.util.UniqueName -> be.alexandre01.dnplugin.shaded.netty.util.UniqueName:
    java.util.concurrent.atomic.AtomicInteger nextId -> nextId
    int id -> id
    java.lang.String name -> name
    41:58:void <init>(java.util.concurrent.ConcurrentMap,java.lang.String,java.lang.Object[]) -> <init>
    69:69:void validateArgs(java.lang.Object[]) -> validateArgs
    77:77:java.lang.String name() -> name
    86:86:int id() -> id
    91:91:int hashCode() -> hashCode
    96:96:boolean equals(java.lang.Object) -> equals
    101:110:int compareTo(be.alexandre01.dnplugin.shaded.netty.util.UniqueName) -> compareTo
    115:115:java.lang.String toString() -> toString
    26:26:int compareTo(java.lang.Object) -> compareTo
    29:29:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.Version -> be.alexandre01.dnplugin.shaded.netty.util.Version:
    java.lang.String PROP_VERSION -> PROP_VERSION
    java.lang.String PROP_BUILD_DATE -> PROP_BUILD_DATE
    java.lang.String PROP_COMMIT_DATE -> PROP_COMMIT_DATE
    java.lang.String PROP_SHORT_COMMIT_HASH -> PROP_SHORT_COMMIT_HASH
    java.lang.String PROP_LONG_COMMIT_HASH -> PROP_LONG_COMMIT_HASH
    java.lang.String PROP_REPO_STATUS -> PROP_REPO_STATUS
    java.lang.String artifactId -> artifactId
    java.lang.String artifactVersion -> artifactVersion
    long buildTimeMillis -> buildTimeMillis
    long commitTimeMillis -> commitTimeMillis
    java.lang.String shortCommitHash -> shortCommitHash
    java.lang.String longCommitHash -> longCommitHash
    java.lang.String repositoryStatus -> repositoryStatus
    56:56:java.util.Map identify() -> identify
    65:129:java.util.Map identify(java.lang.ClassLoader) -> identify
    134:136:long parseIso8601(java.lang.String) -> parseIso8601
    144:147:void main(java.lang.String[]) -> main
    160:168:void <init>(java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String) -> <init>
    171:171:java.lang.String artifactId() -> artifactId
    175:175:java.lang.String artifactVersion() -> artifactVersion
    179:179:long buildTimeMillis() -> buildTimeMillis
    183:183:long commitTimeMillis() -> commitTimeMillis
    187:187:java.lang.String shortCommitHash() -> shortCommitHash
    191:191:java.lang.String longCommitHash() -> longCommitHash
    195:195:java.lang.String repositoryStatus() -> repositoryStatus
    200:200:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectHashMap -> be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectHashMap:
    int DEFAULT_CAPACITY -> DEFAULT_CAPACITY
    float DEFAULT_LOAD_FACTOR -> DEFAULT_LOAD_FACTOR
    java.lang.Object NULL_VALUE -> NULL_VALUE
    int maxSize -> maxSize
    float loadFactor -> loadFactor
    int[] keys -> keys
    java.lang.Object[] values -> values
    int size -> size
    56:57:void <init>() -> <init>
    60:61:void <init>(int) -> <init>
    63:86:void <init>(int,float) -> <init>
    89:89:java.lang.Object toExternal(java.lang.Object) -> toExternal
    94:94:java.lang.Object toInternal(java.lang.Object) -> toInternal
    99:100:java.lang.Object get(int) -> get
    105:125:java.lang.Object put(int,java.lang.Object) -> put
    131:131:int probeNext(int) -> probeNext
    136:152:void putAll(be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectMap) -> putAll
    156:163:java.lang.Object remove(int) -> remove
    168:168:int size() -> size
    173:173:boolean isEmpty() -> isEmpty
    178:181:void clear() -> clear
    185:185:boolean containsKey(int) -> containsKey
    190:197:boolean containsValue(java.lang.Object) -> containsValue
    202:202:java.lang.Iterable entries() -> entries
    207:207:java.util.Iterator iterator() -> iterator
    212:219:int[] keys() -> keys
    225:232:java.lang.Object[] values(java.lang.Class) -> values
    240:251:int hashCode() -> hashCode
    256:280:boolean equals(java.lang.Object) -> equals
    290:303:int indexOf(int) -> indexOf
    312:312:int hashIndex(int) -> hashIndex
    319:330:void growSize() -> growSize
    336:336:int adjustCapacity(int) -> adjustCapacity
    346:371:void removeAt(int) -> removeAt
    378:379:int calcMaxSize(int) -> calcMaxSize
    388:420:void rehash(int) -> rehash
    490:501:java.lang.String toString() -> toString
    31:31:java.lang.Object[] access$100(be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectHashMap) -> access$100
    31:31:int[] access$200(be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectHashMap) -> access$200
    31:31:void access$300(be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectHashMap,int) -> access$300
    31:31:java.lang.Object access$400(java.lang.Object) -> access$400
    31:31:java.lang.Object access$500(java.lang.Object) -> access$500
    43:43:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectHashMap$1 -> be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectHashMap$1:
be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectHashMap$IteratorImpl -> be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectHashMap$IteratorImpl:
    int prevIndex -> prevIndex
    int nextIndex -> nextIndex
    int entryIndex -> entryIndex
    be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectHashMap this$0 -> this$0
    425:428:void <init>(be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectHashMap) -> <init>
    432:436:void scanNext() -> scanNext
    440:443:boolean hasNext() -> hasNext
    448:457:be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectMap$Entry next() -> next
    462:467:void remove() -> remove
    474:474:int key() -> key
    479:479:java.lang.Object value() -> value
    484:485:void setValue(java.lang.Object) -> setValue
    425:425:java.lang.Object next() -> next
    425:425:void <init>(be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectHashMap,be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectHashMap$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectMap -> be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectMap:
    java.lang.Object get(int) -> get
    java.lang.Object put(int,java.lang.Object) -> put
    void putAll(be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectMap) -> putAll
    java.lang.Object remove(int) -> remove
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
    boolean containsKey(int) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Iterable entries() -> entries
    int[] keys() -> keys
    java.lang.Object[] values(java.lang.Class) -> values
be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectMap$Entry -> be.alexandre01.dnplugin.shaded.netty.util.collection.IntObjectMap$Entry:
    int key() -> key
    java.lang.Object value() -> value
    void setValue(java.lang.Object) -> setValue
be.alexandre01.dnplugin.shaded.netty.util.concurrent.AbstractEventExecutor -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.AbstractEventExecutor:
    30:135:void <init>() -> <init>
    34:34:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor next() -> next
    39:39:boolean inEventLoop() -> inEventLoop
    44:44:java.util.Iterator iterator() -> iterator
    49:49:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future shutdownGracefully() -> shutdownGracefully
    void shutdown() -> shutdown
    65:66:java.util.List shutdownNow() -> shutdownNow
    71:71:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise newPromise() -> newPromise
    76:76:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise newProgressivePromise() -> newProgressivePromise
    81:81:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future newSucceededFuture(java.lang.Object) -> newSucceededFuture
    86:86:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future newFailedFuture(java.lang.Throwable) -> newFailedFuture
    91:91:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future submit(java.lang.Runnable) -> submit
    96:96:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    101:101:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    106:106:java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object) -> newTaskFor
    111:111:java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable) -> newTaskFor
    117:117:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    122:122:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    127:127:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    132:132:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    30:30:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    30:30:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    30:30:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    30:30:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    30:30:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    30:30:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    30:30:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
be.alexandre01.dnplugin.shaded.netty.util.concurrent.AbstractEventExecutor$1 -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.AbstractEventExecutor$1:
be.alexandre01.dnplugin.shaded.netty.util.concurrent.AbstractEventExecutor$EventExecutorIterator -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.AbstractEventExecutor$EventExecutorIterator:
    boolean nextCalled -> nextCalled
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.AbstractEventExecutor this$0 -> this$0
    135:135:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.AbstractEventExecutor) -> <init>
    140:140:boolean hasNext() -> hasNext
    145:149:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor next() -> next
    154:154:void remove() -> remove
    135:135:java.lang.Object next() -> next
    135:135:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.AbstractEventExecutor,be.alexandre01.dnplugin.shaded.netty.util.concurrent.AbstractEventExecutor$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.util.concurrent.AbstractEventExecutorGroup -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.AbstractEventExecutorGroup:
    30:30:void <init>() -> <init>
    34:34:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future submit(java.lang.Runnable) -> submit
    39:39:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    44:44:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    49:49:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    54:54:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    59:59:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    64:64:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    69:69:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future shutdownGracefully() -> shutdownGracefully
    void shutdown() -> shutdown
    85:86:java.util.List shutdownNow() -> shutdownNow
    92:92:java.util.List invokeAll(java.util.Collection) -> invokeAll
    98:98:java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    103:103:java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    109:109:java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    114:115:void execute(java.lang.Runnable) -> execute
    30:30:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    30:30:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    30:30:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    30:30:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    30:30:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    30:30:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    30:30:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
be.alexandre01.dnplugin.shaded.netty.util.concurrent.AbstractFuture -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.AbstractFuture:
    27:27:void <init>() -> <init>
    31:37:java.lang.Object get() -> get
    42:49:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
be.alexandre01.dnplugin.shaded.netty.util.concurrent.BlockingOperationException -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.BlockingOperationException:
    long serialVersionUID -> serialVersionUID
    28:28:void <init>() -> <init>
    31:32:void <init>(java.lang.String) -> <init>
    35:36:void <init>(java.lang.Throwable) -> <init>
    39:40:void <init>(java.lang.String,java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.util.concurrent.CompleteFuture -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.CompleteFuture:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor executor -> executor
    33:35:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor) -> <init>
    41:41:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor executor() -> executor
    46:50:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    55:64:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    70:70:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    76:76:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    81:84:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future await() -> await
    89:92:boolean await(long,java.util.concurrent.TimeUnit) -> await
    97:97:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future sync() -> sync
    102:102:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    107:110:boolean await(long) -> await
    115:115:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    120:120:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    125:125:boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    130:130:boolean isDone() -> isDone
    135:135:boolean isCancellable() -> isCancellable
    140:140:boolean isCancelled() -> isCancelled
    145:145:boolean cancel(boolean) -> cancel
be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultEventExecutor -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultEventExecutor:
    28:29:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultEventExecutorGroup,java.util.concurrent.ThreadFactory) -> <init>
    34:44:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultEventExecutorGroup -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultEventExecutorGroup:
    30:31:void <init>(int) -> <init>
    40:41:void <init>(int,java.util.concurrent.ThreadFactory) -> <init>
    46:46:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor newChild(java.util.concurrent.ThreadFactory,java.lang.Object[]) -> newChild
be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultFutureListeners -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultFutureListeners:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[] listeners -> listeners
    int size -> size
    int progressiveSize -> progressiveSize
    28:39:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> <init>
    42:53:void add(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> add
    56:73:void remove(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> remove
    76:76:be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[] listeners() -> listeners
    80:80:int size() -> size
    84:84:int progressiveSize() -> progressiveSize
be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultProgressivePromise -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultProgressivePromise:
    30:31:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor) -> <init>
    33:33:void <init>() -> <init>
    37:53:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise setProgress(long,long) -> setProgress
    58:68:boolean tryProgress(long,long) -> tryProgress
    73:74:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    79:80:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    85:86:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    91:92:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    97:98:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise sync() -> sync
    103:104:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise syncUninterruptibly() -> syncUninterruptibly
    109:110:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise await() -> await
    115:116:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise awaitUninterruptibly() -> awaitUninterruptibly
    121:122:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise setSuccess(java.lang.Object) -> setSuccess
    127:128:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise setFailure(java.lang.Throwable) -> setFailure
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise await() -> await
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise sync() -> sync
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future await() -> await
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future sync() -> sync
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture awaitUninterruptibly() -> awaitUninterruptibly
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture await() -> await
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture syncUninterruptibly() -> syncUninterruptibly
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture sync() -> sync
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    19:19:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger rejectedExecutionLogger -> rejectedExecutionLogger
    int MAX_LISTENER_STACK_DEPTH -> MAX_LISTENER_STACK_DEPTH
    be.alexandre01.dnplugin.shaded.netty.util.Signal SUCCESS -> SUCCESS
    be.alexandre01.dnplugin.shaded.netty.util.Signal UNCANCELLABLE -> UNCANCELLABLE
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$CauseHolder CANCELLATION_CAUSE_HOLDER -> CANCELLATION_CAUSE_HOLDER
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor executor -> executor
    java.lang.Object result -> result
    java.lang.Object listeners -> listeners
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$LateListeners lateListeners -> lateListeners
    short waiters -> waiters
    74:79:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor) -> <init>
    81:84:void <init>() -> <init>
    87:87:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor executor() -> executor
    92:92:boolean isCancelled() -> isCancelled
    96:96:boolean isCancelled0(java.lang.Object) -> isCancelled0
    101:101:boolean isCancellable() -> isCancellable
    106:106:boolean isDone() -> isDone
    110:110:boolean isDone0(java.lang.Object) -> isDone0
    115:119:boolean isSuccess() -> isSuccess
    124:128:java.lang.Throwable cause() -> cause
    133:160:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    165:175:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    180:198:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    203:213:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    218:220:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise sync() -> sync
    225:227:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    231:237:void rethrowIfFailed() -> rethrowIfFailed
    241:260:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise await() -> await
    266:266:boolean await(long,java.util.concurrent.TimeUnit) -> await
    271:271:boolean await(long) -> await
    276:300:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    306:309:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    316:319:boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    324:379:boolean await0(long,boolean) -> await0
    388:392:void checkDeadLock() -> checkDeadLock
    396:400:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    405:409:boolean trySuccess(java.lang.Object) -> trySuccess
    414:418:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    423:427:boolean tryFailure(java.lang.Throwable) -> tryFailure
    432:451:boolean cancel(boolean) -> cancel
    456:470:boolean setUncancellable() -> setUncancellable
    474:493:boolean setFailure0(java.lang.Throwable) -> setFailure0
    497:515:boolean setSuccess0(java.lang.Object) -> setSuccess0
    521:525:java.lang.Object getNow() -> getNow
    529:529:boolean hasWaiters() -> hasWaiters
    533:537:void incWaiters() -> incWaiters
    540:541:void decWaiters() -> decWaiters
    550:597:void notifyListeners() -> notifyListeners
    600:605:void notifyListeners0(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future,be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultFutureListeners) -> notifyListeners0
    613:642:void notifyLateListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> notifyLateListener
    647:667:void notifyListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor,be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> notifyListener
    671:675:void execute(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor,java.lang.Runnable) -> execute
    680:686:void notifyListener0(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> notifyListener0
    693:729:java.lang.Object progressiveListeners() -> progressiveListeners
    735:772:void notifyProgressiveListeners(long,long) -> notifyProgressiveListeners
    776:782:void notifyProgressiveListeners0(be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericProgressiveFutureListener[],long,long) -> notifyProgressiveListeners0
    788:794:void notifyProgressiveListener0(be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericProgressiveFutureListener,long,long) -> notifyProgressiveListener0
    805:805:java.lang.String toString() -> toString
    809:826:java.lang.StringBuilder toStringBuilder() -> toStringBuilder
    32:32:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    32:32:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future await() -> await
    32:32:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    32:32:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future sync() -> sync
    32:32:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    32:32:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    32:32:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    32:32:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    32:32:void access$000(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future,be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultFutureListeners) -> access$000
    32:32:java.lang.Object access$102(be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise,java.lang.Object) -> access$102
    32:32:void access$200(be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericProgressiveFutureListener[],long,long) -> access$200
    32:32:void access$300(be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericProgressiveFutureListener,long,long) -> access$300
    32:32:java.lang.Object access$100(be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise) -> access$100
    32:32:void access$400(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor,java.lang.Runnable) -> access$400
    32:32:be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$LateListeners access$500(be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise) -> access$500
    32:32:be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$LateListeners access$502(be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise,be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$LateListeners) -> access$502
    34:45:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$1 -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$1:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultFutureListeners val$dfl -> val$dfl
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise this$0 -> this$0
    579:579:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise,be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultFutureListeners) -> <init>
    582:584:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$2 -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$2:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener val$l -> val$l
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise this$0 -> this$0
    589:589:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> <init>
    592:594:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$3 -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$3:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future val$future -> val$future
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener val$l -> val$l
    661:661:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> <init>
    664:665:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$4 -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$4:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture val$self -> val$self
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericProgressiveFutureListener[] val$array -> val$array
    long val$progress -> val$progress
    long val$total -> val$total
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise this$0 -> this$0
    755:755:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise,be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericProgressiveFutureListener[],long,long) -> <init>
    758:759:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$5 -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$5:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture val$self -> val$self
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericProgressiveFutureListener val$l -> val$l
    long val$progress -> val$progress
    long val$total -> val$total
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise this$0 -> this$0
    764:764:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise,be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericProgressiveFutureListener,long,long) -> <init>
    767:768:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$CauseHolder -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$CauseHolder:
    java.lang.Throwable cause -> cause
    798:800:void <init>(java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$LateListenerNotifier -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$LateListenerNotifier:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener l -> l
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise this$0 -> this$0
    858:860:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> <init>
    864:874:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$LateListeners -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise$LateListeners:
    long serialVersionUID -> serialVersionUID
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise this$0 -> this$0
    833:835:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultPromise) -> <init>
    839:852:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultThreadFactory -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultThreadFactory:
    java.util.concurrent.atomic.AtomicInteger poolId -> poolId
    java.util.concurrent.atomic.AtomicInteger nextId -> nextId
    java.lang.String prefix -> prefix
    boolean daemon -> daemon
    int priority -> priority
    38:39:void <init>(java.lang.Class) -> <init>
    42:43:void <init>(java.lang.String) -> <init>
    46:47:void <init>(java.lang.Class,boolean) -> <init>
    50:51:void <init>(java.lang.String,boolean) -> <init>
    54:55:void <init>(java.lang.Class,int) -> <init>
    58:59:void <init>(java.lang.String,int) -> <init>
    62:63:void <init>(java.lang.Class,boolean,int) -> <init>
    66:80:java.lang.String toPoolName(java.lang.Class) -> toPoolName
    32:97:void <init>(java.lang.String,boolean,int) -> <init>
    101:119:java.lang.Thread newThread(java.lang.Runnable) -> newThread
    123:123:java.lang.Thread newThread(java.lang.Runnable,java.lang.String) -> newThread
    30:30:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:
    java.lang.Runnable r -> r
    130:132:void <init>(java.lang.Runnable) -> <init>
    137:141:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor next() -> next
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup parent() -> parent
    boolean inEventLoop() -> inEventLoop
    boolean inEventLoop(java.lang.Thread) -> inEventLoop
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise newPromise() -> newPromise
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise newProgressivePromise() -> newProgressivePromise
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future newSucceededFuture(java.lang.Object) -> newSucceededFuture
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future newFailedFuture(java.lang.Throwable) -> newFailedFuture
be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup:
    boolean isShuttingDown() -> isShuttingDown
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future shutdownGracefully() -> shutdownGracefully
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    void shutdown() -> shutdown
    java.util.List shutdownNow() -> shutdownNow
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor next() -> next
    java.util.Iterator iterator() -> iterator
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future submit(java.lang.Runnable) -> submit
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
be.alexandre01.dnplugin.shaded.netty.util.concurrent.FailedFuture -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.FailedFuture:
    java.lang.Throwable cause -> cause
    36:41:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor,java.lang.Throwable) -> <init>
    45:45:java.lang.Throwable cause() -> cause
    50:50:boolean isSuccess() -> isSuccess
    55:56:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future sync() -> sync
    61:62:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    67:67:java.lang.Object getNow() -> getNow
be.alexandre01.dnplugin.shaded.netty.util.concurrent.FastThreadLocal -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.FastThreadLocal:
    int variablesToRemoveIndex -> variablesToRemoveIndex
    int index -> index
    54:73:void removeAll() -> removeAll
    79:83:int size() -> size
    94:95:void destroy() -> destroy
    99:109:void addToVariablesToRemove(be.alexandre01.dnplugin.shaded.netty.util.internal.InternalThreadLocalMap,be.alexandre01.dnplugin.shaded.netty.util.concurrent.FastThreadLocal) -> addToVariablesToRemove
    114:123:void removeFromVariablesToRemove(be.alexandre01.dnplugin.shaded.netty.util.internal.InternalThreadLocalMap,be.alexandre01.dnplugin.shaded.netty.util.concurrent.FastThreadLocal) -> removeFromVariablesToRemove
    127:129:void <init>() -> <init>
    135:135:java.lang.Object get() -> get
    144:149:java.lang.Object get(be.alexandre01.dnplugin.shaded.netty.util.internal.InternalThreadLocalMap) -> get
    153:162:java.lang.Object initialize(be.alexandre01.dnplugin.shaded.netty.util.internal.InternalThreadLocalMap) -> initialize
    169:174:void set(java.lang.Object) -> set
    180:187:void set(be.alexandre01.dnplugin.shaded.netty.util.internal.InternalThreadLocalMap,java.lang.Object) -> set
    193:193:boolean isSet() -> isSet
    201:201:boolean isSet(be.alexandre01.dnplugin.shaded.netty.util.internal.InternalThreadLocalMap) -> isSet
    207:208:void remove() -> remove
    217:231:void remove(be.alexandre01.dnplugin.shaded.netty.util.internal.InternalThreadLocalMap) -> remove
    237:237:java.lang.Object initialValue() -> initialValue
    243:243:void onRemoval(java.lang.Object) -> onRemoval
    46:46:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.concurrent.FastThreadLocalThread -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.FastThreadLocalThread:
    be.alexandre01.dnplugin.shaded.netty.util.internal.InternalThreadLocalMap threadLocalMap -> threadLocalMap
    27:27:void <init>() -> <init>
    30:31:void <init>(java.lang.Runnable) -> <init>
    34:35:void <init>(java.lang.ThreadGroup,java.lang.Runnable) -> <init>
    38:39:void <init>(java.lang.String) -> <init>
    42:43:void <init>(java.lang.ThreadGroup,java.lang.String) -> <init>
    46:47:void <init>(java.lang.Runnable,java.lang.String) -> <init>
    50:51:void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String) -> <init>
    54:55:void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long) -> <init>
    62:62:be.alexandre01.dnplugin.shaded.netty.util.internal.InternalThreadLocalMap threadLocalMap() -> threadLocalMap
    70:71:void setThreadLocalMap(be.alexandre01.dnplugin.shaded.netty.util.internal.InternalThreadLocalMap) -> setThreadLocalMap
be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future:
    boolean isSuccess() -> isSuccess
    boolean isCancellable() -> isCancellable
    java.lang.Throwable cause() -> cause
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future sync() -> sync
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future await() -> await
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    boolean await(long,java.util.concurrent.TimeUnit) -> await
    boolean await(long) -> await
    boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    java.lang.Object getNow() -> getNow
    boolean cancel(boolean) -> cancel
be.alexandre01.dnplugin.shaded.netty.util.concurrent.FutureListener -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.FutureListener:
be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener:
    void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericProgressiveFutureListener -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericProgressiveFutureListener:
    void operationProgressed(be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture,long,long) -> operationProgressed
be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    long SCHEDULE_PURGE_INTERVAL -> SCHEDULE_PURGE_INTERVAL
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor INSTANCE -> INSTANCE
    java.util.concurrent.BlockingQueue taskQueue -> taskQueue
    java.util.Queue delayedTaskQueue -> delayedTaskQueue
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFutureTask purgeTask -> purgeTask
    java.util.concurrent.ThreadFactory threadFactory -> threadFactory
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor$TaskRunner taskRunner -> taskRunner
    java.util.concurrent.atomic.AtomicBoolean started -> started
    java.lang.Thread thread -> thread
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future terminationFuture -> terminationFuture
    46:61:void <init>() -> <init>
    65:65:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup parent() -> parent
    74:107:java.lang.Runnable takeTask() -> takeTask
    111:129:void fetchFromDelayedQueue() -> fetchFromDelayedQueue
    138:138:int pendingTasks() -> pendingTasks
    146:150:void addTask(java.lang.Runnable) -> addTask
    154:154:boolean inEventLoop(java.lang.Thread) -> inEventLoop
    159:159:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    164:164:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    170:170:void shutdown() -> shutdown
    175:175:boolean isShuttingDown() -> isShuttingDown
    180:180:boolean isShutdown() -> isShutdown
    185:185:boolean isTerminated() -> isTerminated
    190:190:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    202:211:boolean awaitInactivity(long,java.util.concurrent.TimeUnit) -> awaitInactivity
    216:224:void execute(java.lang.Runnable) -> execute
    230:240:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    246:256:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    262:277:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    284:299:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    305:320:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture schedule(be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFutureTask) -> schedule
    324:329:void startThread() -> startThread
    38:38:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    38:38:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    38:38:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    38:38:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    38:38:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger access$100() -> access$100
    38:38:java.util.concurrent.atomic.AtomicBoolean access$200(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor) -> access$200
    40:44:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor$1 -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor$1:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFutureTask val$task -> val$task
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor this$0 -> this$0
    312:312:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor,be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFutureTask) -> <init>
    315:316:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor$PurgeTask -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor$PurgeTask:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor this$0 -> this$0
    380:380:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor) -> <init>
    383:390:void run() -> run
    380:380:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor,be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor$TaskRunner -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor$TaskRunner:
    boolean $assertionsDisabled -> $assertionsDisabled
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor this$0 -> this$0
    331:331:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GlobalEventExecutor) -> <init>
    335:377:void run() -> run
    331:331:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.concurrent.ImmediateEventExecutor -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.ImmediateEventExecutor:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ImmediateEventExecutor INSTANCE -> INSTANCE
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future terminationFuture -> terminationFuture
    26:31:void <init>() -> <init>
    35:35:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup parent() -> parent
    40:40:boolean inEventLoop() -> inEventLoop
    45:45:boolean inEventLoop(java.lang.Thread) -> inEventLoop
    50:50:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    55:55:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    60:60:void shutdown() -> shutdown
    64:64:boolean isShuttingDown() -> isShuttingDown
    69:69:boolean isShutdown() -> isShutdown
    74:74:boolean isTerminated() -> isTerminated
    79:79:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    84:88:void execute(java.lang.Runnable) -> execute
    92:92:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise newPromise() -> newPromise
    97:97:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise newProgressivePromise() -> newProgressivePromise
    24:24:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.concurrent.ImmediateEventExecutor$ImmediateProgressivePromise -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.ImmediateEventExecutor$ImmediateProgressivePromise:
    113:114:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor) -> <init>
    119:119:void checkDeadLock() -> checkDeadLock
be.alexandre01.dnplugin.shaded.netty.util.concurrent.ImmediateEventExecutor$ImmediatePromise -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.ImmediateEventExecutor$ImmediatePromise:
    102:103:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor) -> <init>
    108:108:void checkDeadLock() -> checkDeadLock
be.alexandre01.dnplugin.shaded.netty.util.concurrent.ImmediateExecutor -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.ImmediateExecutor:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ImmediateExecutor INSTANCE -> INSTANCE
    26:28:void <init>() -> <init>
    32:36:void execute(java.lang.Runnable) -> execute
    24:24:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor[] children -> children
    java.util.concurrent.atomic.AtomicInteger childIndex -> childIndex
    java.util.concurrent.atomic.AtomicInteger terminatedChildren -> terminatedChildren
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise terminationFuture -> terminationFuture
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup$EventExecutorChooser chooser -> chooser
    33:102:void <init>(int,java.util.concurrent.ThreadFactory,java.lang.Object[]) -> <init>
    105:105:java.util.concurrent.ThreadFactory newDefaultThreadFactory() -> newDefaultThreadFactory
    110:110:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor next() -> next
    115:115:java.util.Iterator iterator() -> iterator
    123:123:int executorCount() -> executorCount
    130:132:java.util.Set children() -> children
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor newChild(java.util.concurrent.ThreadFactory,java.lang.Object[]) -> newChild
    145:148:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    153:153:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    159:162:void shutdown() -> shutdown
    166:171:boolean isShuttingDown() -> isShuttingDown
    176:181:boolean isShutdown() -> isShutdown
    186:191:boolean isTerminated() -> isTerminated
    197:209:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    213:213:boolean isPowerOfTwo(int) -> isPowerOfTwo
    30:30:java.util.concurrent.atomic.AtomicInteger access$200(be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup) -> access$200
    30:30:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor[] access$300(be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup) -> access$300
    30:30:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise access$400(be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup) -> access$400
    30:30:java.util.concurrent.atomic.AtomicInteger access$500(be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup) -> access$500
be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup$1 -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup$1:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup this$0 -> this$0
    90:90:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup) -> <init>
    93:96:void operationComplete(be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future) -> operationComplete
be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup$EventExecutorChooser -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup$EventExecutorChooser:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor next() -> next
be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup$GenericEventExecutorChooser -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup$GenericEventExecutorChooser:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup this$0 -> this$0
    227:227:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup) -> <init>
    230:230:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor next() -> next
    227:227:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup,be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup$PowerOfTwoEventExecutorChooser -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup$PowerOfTwoEventExecutorChooser:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup this$0 -> this$0
    220:220:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup) -> <init>
    223:223:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor next() -> next
    220:220:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup,be.alexandre01.dnplugin.shaded.netty.util.concurrent.MultithreadEventExecutorGroup$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture sync() -> sync
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture syncUninterruptibly() -> syncUninterruptibly
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture await() -> await
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressiveFuture awaitUninterruptibly() -> awaitUninterruptibly
be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise setProgress(long,long) -> setProgress
    boolean tryProgress(long,long) -> tryProgress
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise setSuccess(java.lang.Object) -> setSuccess
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise setFailure(java.lang.Throwable) -> setFailure
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise await() -> await
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise awaitUninterruptibly() -> awaitUninterruptibly
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise sync() -> sync
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ProgressivePromise syncUninterruptibly() -> syncUninterruptibly
be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    boolean trySuccess(java.lang.Object) -> trySuccess
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    boolean tryFailure(java.lang.Throwable) -> tryFailure
    boolean setUncancellable() -> setUncancellable
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise addListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> addListener
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise addListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise removeListener(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener) -> removeListener
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise removeListeners(be.alexandre01.dnplugin.shaded.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise await() -> await
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise sync() -> sync
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
be.alexandre01.dnplugin.shaded.netty.util.concurrent.PromiseTask -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.PromiseTask:
    java.util.concurrent.Callable task -> task
    24:24:java.util.concurrent.Callable toCallable(java.lang.Runnable,java.lang.Object) -> toCallable
    51:52:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor,java.lang.Runnable,java.lang.Object) -> <init>
    55:57:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor,java.util.concurrent.Callable) -> <init>
    61:61:int hashCode() -> hashCode
    66:66:boolean equals(java.lang.Object) -> equals
    72:79:void run() -> run
    83:83:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    87:88:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setFailureInternal(java.lang.Throwable) -> setFailureInternal
    93:93:boolean tryFailure(java.lang.Throwable) -> tryFailure
    97:97:boolean tryFailureInternal(java.lang.Throwable) -> tryFailureInternal
    102:102:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    106:107:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise setSuccessInternal(java.lang.Object) -> setSuccessInternal
    112:112:boolean trySuccess(java.lang.Object) -> trySuccess
    116:116:boolean trySuccessInternal(java.lang.Object) -> trySuccessInternal
    121:121:boolean setUncancellable() -> setUncancellable
    125:125:boolean setUncancellableInternal() -> setUncancellableInternal
    130:135:java.lang.StringBuilder toStringBuilder() -> toStringBuilder
be.alexandre01.dnplugin.shaded.netty.util.concurrent.PromiseTask$RunnableAdapter -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.PromiseTask$RunnableAdapter:
    java.lang.Runnable task -> task
    java.lang.Object result -> result
    31:34:void <init>(java.lang.Runnable,java.lang.Object) -> <init>
    38:39:java.lang.Object call() -> call
    44:44:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture:
be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFutureTask -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFutureTask:
    java.util.concurrent.atomic.AtomicLong nextTaskId -> nextTaskId
    long START_TIME -> START_TIME
    long id -> id
    java.util.Queue delayedTaskQueue -> delayedTaskQueue
    long deadlineNanos -> deadlineNanos
    long periodNanos -> periodNanos
    boolean $assertionsDisabled -> $assertionsDisabled
    31:31:long nanoTime() -> nanoTime
    35:35:long deadlineNanos(long) -> deadlineNanos
    48:49:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor,java.util.Queue,java.lang.Runnable,java.lang.Object,long) -> <init>
    38:62:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor,java.util.Queue,java.util.concurrent.Callable,long,long) -> <init>
    38:72:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor,java.util.Queue,java.util.concurrent.Callable,long) -> <init>
    76:76:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor executor() -> executor
    80:80:long deadlineNanos() -> deadlineNanos
    84:84:long delayNanos() -> delayNanos
    88:88:long delayNanos(long) -> delayNanos
    93:93:long getDelay(java.util.concurrent.TimeUnit) -> getDelay
    98:113:int compareTo(java.util.concurrent.Delayed) -> compareTo
    119:146:void run() -> run
    150:159:java.lang.StringBuilder toStringBuilder() -> toStringBuilder
    25:25:int compareTo(java.lang.Object) -> compareTo
    25:28:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    int ST_NOT_STARTED -> ST_NOT_STARTED
    int ST_STARTED -> ST_STARTED
    int ST_SHUTTING_DOWN -> ST_SHUTTING_DOWN
    int ST_SHUTDOWN -> ST_SHUTDOWN
    int ST_TERMINATED -> ST_TERMINATED
    java.lang.Runnable WAKEUP_TASK -> WAKEUP_TASK
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater STATE_UPDATER -> STATE_UPDATER
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup parent -> parent
    java.util.Queue taskQueue -> taskQueue
    java.util.Queue delayedTaskQueue -> delayedTaskQueue
    java.lang.Thread thread -> thread
    java.util.concurrent.Semaphore threadLock -> threadLock
    java.util.Set shutdownHooks -> shutdownHooks
    boolean addTaskWakesUp -> addTaskWakesUp
    long lastExecutionTime -> lastExecutionTime
    int state -> state
    long gracefulShutdownQuietPeriod -> gracefulShutdownQuietPeriod
    long gracefulShutdownTimeout -> gracefulShutdownTimeout
    long gracefulShutdownStartTime -> gracefulShutdownStartTime
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise terminationFuture -> terminationFuture
    long SCHEDULE_PURGE_INTERVAL -> SCHEDULE_PURGE_INTERVAL
    boolean $assertionsDisabled -> $assertionsDisabled
    74:163:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.ThreadFactory,boolean) -> <init>
    172:172:java.util.Queue newTaskQueue() -> newTaskQueue
    177:177:be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutorGroup parent() -> parent
    184:185:void interruptThread() -> interruptThread
    191:197:java.lang.Runnable pollTask() -> pollTask
    211:253:java.lang.Runnable takeTask() -> takeTask
    257:275:void fetchFromDelayedQueue() -> fetchFromDelayedQueue
    281:282:java.lang.Runnable peekTask() -> peekTask
    289:290:boolean hasTasks() -> hasTasks
    298:300:boolean hasScheduledTasks() -> hasScheduledTasks
    310:310:int pendingTasks() -> pendingTasks
    318:325:void addTask(java.lang.Runnable) -> addTask
    331:334:boolean removeTask(java.lang.Runnable) -> removeTask
    343:359:boolean runAllTasks() -> runAllTasks
    369:404:boolean runAllTasks(long) -> runAllTasks
    411:416:long delayNanos(long) -> delayNanos
    427:428:void updateLastExecutionTime() -> updateLastExecutionTime
    void run() -> run
    440:440:void cleanup() -> cleanup
    443:446:void wakeup(boolean) -> wakeup
    450:450:boolean inEventLoop(java.lang.Thread) -> inEventLoop
    457:467:void addShutdownHook(java.lang.Runnable) -> addShutdownHook
    473:483:void removeShutdownHook(java.lang.Runnable) -> removeShutdownHook
    486:506:boolean runShutdownHooks() -> runShutdownHooks
    511:564:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    569:569:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    575:615:void shutdown() -> shutdown
    619:619:boolean isShuttingDown() -> isShuttingDown
    624:624:boolean isShutdown() -> isShutdown
    629:629:boolean isTerminated() -> isTerminated
    636:682:boolean confirmShutdown() -> confirmShutdown
    686:698:void cancelDelayedTasks() -> cancelDelayedTasks
    702:714:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    719:737:void execute(java.lang.Runnable) -> execute
    741:741:boolean wakesUpForTask(java.lang.Runnable) -> wakesUpForTask
    745:745:void reject() -> reject
    754:764:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    770:780:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    786:801:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    808:823:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    829:844:be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFuture schedule(be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFutureTask) -> schedule
    848:856:void startThread() -> startThread
    43:43:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    43:43:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    43:43:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    43:43:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    43:43:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger access$000() -> access$000
    43:43:java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$100() -> access$100
    43:43:long access$200(be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor) -> access$200
    43:43:java.util.concurrent.Semaphore access$300(be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor) -> access$300
    43:43:java.util.Queue access$400(be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor) -> access$400
    43:43:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise access$500(be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor) -> access$500
    43:43:java.util.Set access$600(be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor) -> access$600
    43:750:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor$1 -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor$1:
    54:54:void <init>() -> <init>
    58:58:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor$2 -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor$2:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor this$0 -> this$0
    110:110:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor) -> <init>
    113:159:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor$3 -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor$3:
    java.lang.Runnable val$task -> val$task
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor this$0 -> this$0
    460:460:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor,java.lang.Runnable) -> <init>
    463:464:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor$4 -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor$4:
    java.lang.Runnable val$task -> val$task
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor this$0 -> this$0
    476:476:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor,java.lang.Runnable) -> <init>
    479:480:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor$5 -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor$5:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFutureTask val$task -> val$task
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor this$0 -> this$0
    836:836:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor,be.alexandre01.dnplugin.shaded.netty.util.concurrent.ScheduledFutureTask) -> <init>
    839:840:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor$PurgeTask -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor$PurgeTask:
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor this$0 -> this$0
    858:858:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor) -> <init>
    861:868:void run() -> run
    858:858:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor,be.alexandre01.dnplugin.shaded.netty.util.concurrent.SingleThreadEventExecutor$1) -> <init>
be.alexandre01.dnplugin.shaded.netty.util.concurrent.SucceededFuture -> be.alexandre01.dnplugin.shaded.netty.util.concurrent.SucceededFuture:
    java.lang.Object result -> result
    32:34:void <init>(be.alexandre01.dnplugin.shaded.netty.util.concurrent.EventExecutor,java.lang.Object) -> <init>
    38:38:java.lang.Throwable cause() -> cause
    43:43:boolean isSuccess() -> isSuccess
    48:48:java.lang.Object getNow() -> getNow
be.alexandre01.dnplugin.shaded.netty.util.internal.AppendableCharSequence -> be.alexandre01.dnplugin.shaded.netty.util.internal.AppendableCharSequence:
    char[] chars -> chars
    int pos -> pos
    25:30:void <init>(int) -> <init>
    32:35:void <init>(char[]) -> <init>
    39:39:int length() -> length
    44:47:char charAt(int) -> charAt
    52:52:be.alexandre01.dnplugin.shaded.netty.util.internal.AppendableCharSequence subSequence(int,int) -> subSequence
    57:68:be.alexandre01.dnplugin.shaded.netty.util.internal.AppendableCharSequence append(char) -> append
    73:73:be.alexandre01.dnplugin.shaded.netty.util.internal.AppendableCharSequence append(java.lang.CharSequence) -> append
    78:97:be.alexandre01.dnplugin.shaded.netty.util.internal.AppendableCharSequence append(java.lang.CharSequence,int,int) -> append
    105:106:void reset() -> reset
    110:110:java.lang.String toString() -> toString
    117:121:java.lang.String substring(int,int) -> substring
    125:139:char[] expand(char[],int,int) -> expand
    21:21:java.lang.CharSequence subSequence(int,int) -> subSequence
    21:21:java.lang.Appendable append(char) -> append
    21:21:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    21:21:java.lang.Appendable append(java.lang.CharSequence) -> append
be.alexandre01.dnplugin.shaded.netty.util.internal.Cleaner0 -> be.alexandre01.dnplugin.shaded.netty.util.internal.Cleaner0:
    long CLEANER_FIELD_OFFSET -> CLEANER_FIELD_OFFSET
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    60:71:void freeDirectBuffer(java.nio.ByteBuffer) -> freeDirectBuffer
    73:73:void <init>() -> <init>
    34:57:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.ConcurrentSet -> be.alexandre01.dnplugin.shaded.netty.util.internal.ConcurrentSet:
    long serialVersionUID -> serialVersionUID
    java.util.concurrent.ConcurrentMap map -> map
    32:34:void <init>() -> <init>
    38:38:int size() -> size
    43:43:boolean contains(java.lang.Object) -> contains
    48:48:boolean add(java.lang.Object) -> add
    53:53:boolean remove(java.lang.Object) -> remove
    58:59:void clear() -> clear
    63:63:java.util.Iterator iterator() -> iterator
be.alexandre01.dnplugin.shaded.netty.util.internal.EmptyArrays -> be.alexandre01.dnplugin.shaded.netty.util.internal.EmptyArrays:
    byte[] EMPTY_BYTES -> EMPTY_BYTES
    boolean[] EMPTY_BOOLEANS -> EMPTY_BOOLEANS
    double[] EMPTY_DOUBLES -> EMPTY_DOUBLES
    float[] EMPTY_FLOATS -> EMPTY_FLOATS
    int[] EMPTY_INTS -> EMPTY_INTS
    short[] EMPTY_SHORTS -> EMPTY_SHORTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    java.lang.Class[] EMPTY_CLASSES -> EMPTY_CLASSES
    java.lang.String[] EMPTY_STRINGS -> EMPTY_STRINGS
    java.lang.StackTraceElement[] EMPTY_STACK_TRACE -> EMPTY_STACK_TRACE
    java.nio.ByteBuffer[] EMPTY_BYTE_BUFFERS -> EMPTY_BYTE_BUFFERS
    java.security.cert.X509Certificate[] EMPTY_X509_CERTIFICATES -> EMPTY_X509_CERTIFICATES
    38:38:void <init>() -> <init>
    24:36:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.IntegerHolder -> be.alexandre01.dnplugin.shaded.netty.util.internal.IntegerHolder:
    int value -> value
    19:19:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.util.internal.InternalThreadLocalMap -> be.alexandre01.dnplugin.shaded.netty.util.internal.InternalThreadLocalMap:
    java.lang.Object UNSET -> UNSET
    long rp1 -> rp1
    long rp2 -> rp2
    long rp3 -> rp3
    long rp4 -> rp4
    long rp5 -> rp5
    long rp6 -> rp6
    long rp7 -> rp7
    long rp8 -> rp8
    long rp9 -> rp9
    40:52:be.alexandre01.dnplugin.shaded.netty.util.internal.InternalThreadLocalMap getIfSet() -> getIfSet
    56:60:be.alexandre01.dnplugin.shaded.netty.util.internal.InternalThreadLocalMap get() -> get
    65:69:be.alexandre01.dnplugin.shaded.netty.util.internal.InternalThreadLocalMap fastGet(be.alexandre01.dnplugin.shaded.netty.util.concurrent.FastThreadLocalThread) -> fastGet
    73:84:be.alexandre01.dnplugin.shaded.netty.util.internal.InternalThreadLocalMap slowGet() -> slowGet
    88:97:void remove() -> remove
    100:101:void destroy() -> destroy
    104:109:int nextVariableIndex() -> nextVariableIndex
    113:113:int lastVariableIndex() -> lastVariableIndex
    121:122:void <init>() -> <init>
    125:127:java.lang.Object[] newIndexedVariableTable() -> newIndexedVariableTable
    131:172:int size() -> size
    176:182:java.lang.StringBuilder stringBuilder() -> stringBuilder
    186:190:java.util.Map charsetEncoderCache() -> charsetEncoderCache
    194:198:java.util.Map charsetDecoderCache() -> charsetDecoderCache
    202:202:int futureListenerStackDepth() -> futureListenerStackDepth
    206:207:void setFutureListenerStackDepth(int) -> setFutureListenerStackDepth
    210:214:be.alexandre01.dnplugin.shaded.netty.util.internal.ThreadLocalRandom random() -> random
    218:222:java.util.Map typeParameterMatcherGetCache() -> typeParameterMatcherGetCache
    226:230:java.util.Map typeParameterMatcherFindCache() -> typeParameterMatcherFindCache
    234:234:be.alexandre01.dnplugin.shaded.netty.util.internal.IntegerHolder counterHashCode() -> counterHashCode
    238:239:void setCounterHashCode(be.alexandre01.dnplugin.shaded.netty.util.internal.IntegerHolder) -> setCounterHashCode
    242:247:java.util.Map handlerSharableCache() -> handlerSharableCache
    251:251:int localChannelReaderStackDepth() -> localChannelReaderStackDepth
    255:256:void setLocalChannelReaderStackDepth(int) -> setLocalChannelReaderStackDepth
    259:260:java.lang.Object indexedVariable(int) -> indexedVariable
    267:274:boolean setIndexedVariable(int,java.lang.Object) -> setIndexedVariable
    279:293:void expandIndexedVariableTableAndSet(int,java.lang.Object) -> expandIndexedVariableTableAndSet
    296:302:java.lang.Object removeIndexedVariable(int) -> removeIndexedVariable
    307:308:boolean isIndexedVariableSet(int) -> isIndexedVariableSet
    37:37:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.JavassistTypeParameterMatcherGenerator -> be.alexandre01.dnplugin.shaded.netty.util.internal.JavassistTypeParameterMatcherGenerator:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    javassist.ClassPool classPool -> classPool
    42:43:void appendClassPath(javassist.ClassPath) -> appendClassPath
    46:47:void appendClassPath(java.lang.String) -> appendClassPath
    50:54:be.alexandre01.dnplugin.shaded.netty.util.internal.TypeParameterMatcher generate(java.lang.Class) -> generate
    58:86:be.alexandre01.dnplugin.shaded.netty.util.internal.TypeParameterMatcher generate(java.lang.Class,java.lang.ClassLoader) -> generate
    91:95:java.lang.String typeName(java.lang.Class) -> typeName
    98:98:void <init>() -> <init>
    32:39:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueue -> be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueue:
    long serialVersionUID -> serialVersionUID
    long p00 -> p00
    long p01 -> p01
    long p02 -> p02
    long p03 -> p03
    long p04 -> p04
    long p05 -> p05
    long p06 -> p06
    long p07 -> p07
    long p30 -> p30
    long p31 -> p31
    long p32 -> p32
    long p33 -> p33
    long p34 -> p34
    long p35 -> p35
    long p36 -> p36
    long p37 -> p37
    90:94:void <init>() -> <init>
    101:114:be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueNode peekNode() -> peekNode
    120:134:boolean offer(java.lang.Object) -> offer
    139:154:java.lang.Object poll() -> poll
    159:163:java.lang.Object peek() -> peek
    168:177:int size() -> size
    182:182:boolean isEmpty() -> isEmpty
    187:197:boolean contains(java.lang.Object) -> contains
    202:202:java.util.Iterator iterator() -> iterator
    230:233:boolean add(java.lang.Object) -> add
    238:242:java.lang.Object remove() -> remove
    247:251:java.lang.Object element() -> element
    256:265:java.lang.Object[] toArray() -> toArray
    271:300:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    305:305:boolean remove(java.lang.Object) -> remove
    310:315:boolean containsAll(java.util.Collection) -> containsAll
    320:332:boolean addAll(java.util.Collection) -> addAll
    337:337:boolean removeAll(java.util.Collection) -> removeAll
    342:342:boolean retainAll(java.util.Collection) -> retainAll
    347:350:void clear() -> clear
    353:358:void writeObject(java.io.ObjectOutputStream) -> writeObject
    361:375:void readObject(java.io.ObjectInputStream) -> readObject
    68:68:be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueNode access$000(be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueue) -> access$000
be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueue$1 -> be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueue$1:
    be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueNode node -> node
    be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueue this$0 -> this$0
    202:203:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueue) -> <init>
    207:207:boolean hasNext() -> hasNext
    212:218:java.lang.Object next() -> next
    223:223:void remove() -> remove
be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueue$DefaultNode -> be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueue$DefaultNode:
    java.lang.Object value -> value
    381:383:void <init>(java.lang.Object) -> <init>
    387:387:java.lang.Object value() -> value
    392:394:java.lang.Object clearMaybe() -> clearMaybe
be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueHeadRef -> be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueHeadRef:
    long serialVersionUID -> serialVersionUID
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater UPDATER -> UPDATER
    be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueNode headRef -> headRef
    23:23:void <init>() -> <init>
    44:44:be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueNode headRef() -> headRef
    48:49:void setHeadRef(be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueNode) -> setHeadRef
    52:53:void lazySetHeadRef(be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueNode) -> lazySetHeadRef
    33:39:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueNode -> be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueNode:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater nextUpdater -> nextUpdater
    be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueNode next -> next
    21:21:void <init>() -> <init>
    41:41:be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueNode next() -> next
    47:48:void setNext(be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueNode) -> setNext
    java.lang.Object value() -> value
    56:56:java.lang.Object clearMaybe() -> clearMaybe
    63:64:void unlink() -> unlink
    30:35:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueuePad0 -> be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueuePad0:
    long p00 -> p00
    long p01 -> p01
    long p02 -> p02
    long p03 -> p03
    long p04 -> p04
    long p05 -> p05
    long p06 -> p06
    long p07 -> p07
    long p30 -> p30
    long p31 -> p31
    long p32 -> p32
    long p33 -> p33
    long p34 -> p34
    long p35 -> p35
    long p36 -> p36
    long p37 -> p37
    19:19:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueuePad1 -> be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueuePad1:
    long serialVersionUID -> serialVersionUID
    long p00 -> p00
    long p01 -> p01
    long p02 -> p02
    long p03 -> p03
    long p04 -> p04
    long p05 -> p05
    long p06 -> p06
    long p07 -> p07
    long p30 -> p30
    long p31 -> p31
    long p32 -> p32
    long p33 -> p33
    long p34 -> p34
    long p35 -> p35
    long p36 -> p36
    long p37 -> p37
    19:19:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueTailRef -> be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueTailRef:
    long serialVersionUID -> serialVersionUID
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater UPDATER -> UPDATER
    be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueNode tailRef -> tailRef
    21:21:void <init>() -> <init>
    42:42:be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueNode tailRef() -> tailRef
    46:47:void setTailRef(be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueNode) -> setTailRef
    52:52:be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueNode getAndSetTailRef(be.alexandre01.dnplugin.shaded.netty.util.internal.MpscLinkedQueueNode) -> getAndSetTailRef
    31:37:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.NativeLibraryLoader -> be.alexandre01.dnplugin.shaded.netty.util.internal.NativeLibraryLoader:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String NATIVE_RESOURCE_HOME -> NATIVE_RESOURCE_HOME
    java.lang.String OSNAME -> OSNAME
    java.io.File WORKDIR -> WORKDIR
    66:119:java.io.File tmpdir() -> tmpdir
    124:138:java.io.File toDirectory(java.lang.String) -> toDirectory
    143:143:boolean isWindows() -> isWindows
    147:147:boolean isOSX() -> isOSX
    154:223:void load(java.lang.String,java.lang.ClassLoader) -> load
    225:227:void <init>() -> <init>
    35:61:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.NoOpTypeParameterMatcher -> be.alexandre01.dnplugin.shaded.netty.util.internal.NoOpTypeParameterMatcher:
    19:19:void <init>() -> <init>
    22:22:boolean match(java.lang.Object) -> match
be.alexandre01.dnplugin.shaded.netty.util.internal.OneTimeTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.OneTimeTask:
    26:26:void <init>() -> <init>
    30:30:java.lang.Runnable value() -> value
    26:26:java.lang.Object value() -> value
be.alexandre01.dnplugin.shaded.netty.util.internal.PendingWrite -> be.alexandre01.dnplugin.shaded.netty.util.internal.PendingWrite:
    be.alexandre01.dnplugin.shaded.netty.util.Recycler RECYCLER -> RECYCLER
    be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle handle -> handle
    java.lang.Object msg -> msg
    be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise promise -> promise
    37:40:be.alexandre01.dnplugin.shaded.netty.util.internal.PendingWrite newInstance(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise) -> newInstance
    47:49:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> <init>
    55:57:boolean recycle() -> recycle
    64:68:boolean failAndRecycle(java.lang.Throwable) -> failAndRecycle
    75:78:boolean successAndRecycle() -> successAndRecycle
    82:82:java.lang.Object msg() -> msg
    86:86:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise promise() -> promise
    93:95:be.alexandre01.dnplugin.shaded.netty.util.concurrent.Promise recycleAndGet() -> recycleAndGet
    25:25:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle,be.alexandre01.dnplugin.shaded.netty.util.internal.PendingWrite$1) -> <init>
    26:26:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.PendingWrite$1 -> be.alexandre01.dnplugin.shaded.netty.util.internal.PendingWrite$1:
    26:26:void <init>() -> <init>
    29:29:be.alexandre01.dnplugin.shaded.netty.util.internal.PendingWrite newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
    26:26:java.lang.Object newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
be.alexandre01.dnplugin.shaded.netty.util.internal.PlatformDependent -> be.alexandre01.dnplugin.shaded.netty.util.internal.PlatformDependent:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.regex.Pattern MAX_DIRECT_MEMORY_SIZE_ARG_PATTERN -> MAX_DIRECT_MEMORY_SIZE_ARG_PATTERN
    boolean IS_ANDROID -> IS_ANDROID
    boolean IS_WINDOWS -> IS_WINDOWS
    boolean IS_ROOT -> IS_ROOT
    int JAVA_VERSION -> JAVA_VERSION
    boolean CAN_ENABLE_TCP_NODELAY_BY_DEFAULT -> CAN_ENABLE_TCP_NODELAY_BY_DEFAULT
    boolean HAS_UNSAFE -> HAS_UNSAFE
    boolean CAN_USE_CHM_V8 -> CAN_USE_CHM_V8
    boolean DIRECT_BUFFER_PREFERRED -> DIRECT_BUFFER_PREFERRED
    long MAX_DIRECT_MEMORY -> MAX_DIRECT_MEMORY
    long ARRAY_BASE_OFFSET -> ARRAY_BASE_OFFSET
    boolean HAS_JAVASSIST -> HAS_JAVASSIST
    java.io.File TMPDIR -> TMPDIR
    int BIT_MODE -> BIT_MODE
    int ADDRESS_SIZE -> ADDRESS_SIZE
    102:102:boolean isAndroid() -> isAndroid
    109:109:boolean isWindows() -> isWindows
    117:117:boolean isRoot() -> isRoot
    124:124:int javaVersion() -> javaVersion
    131:131:boolean canEnableTcpNoDelayByDefault() -> canEnableTcpNoDelayByDefault
    139:139:boolean hasUnsafe() -> hasUnsafe
    147:147:boolean directBufferPreferred() -> directBufferPreferred
    154:154:long maxDirectMemory() -> maxDirectMemory
    161:161:boolean hasJavassist() -> hasJavassist
    168:168:java.io.File tmpdir() -> tmpdir
    175:175:int bitMode() -> bitMode
    183:183:int addressSize() -> addressSize
    187:187:long allocateMemory(long) -> allocateMemory
    191:192:void freeMemory(long) -> freeMemory
    198:203:void throwException(java.lang.Throwable) -> throwException
    207:207:void throwException0(java.lang.Throwable) -> throwException0
    214:217:java.util.concurrent.ConcurrentMap newConcurrentHashMap() -> newConcurrentHashMap
    225:228:java.util.concurrent.ConcurrentMap newConcurrentHashMap(int) -> newConcurrentHashMap
    236:239:java.util.concurrent.ConcurrentMap newConcurrentHashMap(int,float) -> newConcurrentHashMap
    248:251:java.util.concurrent.ConcurrentMap newConcurrentHashMap(int,float,int) -> newConcurrentHashMap
    259:262:java.util.concurrent.ConcurrentMap newConcurrentHashMap(java.util.Map) -> newConcurrentHashMap
    271:276:void freeDirectBuffer(java.nio.ByteBuffer) -> freeDirectBuffer
    279:279:long directBufferAddress(java.nio.ByteBuffer) -> directBufferAddress
    283:283:java.lang.Object getObject(java.lang.Object,long) -> getObject
    287:287:java.lang.Object getObjectVolatile(java.lang.Object,long) -> getObjectVolatile
    291:291:int getInt(java.lang.Object,long) -> getInt
    295:295:long objectFieldOffset(java.lang.reflect.Field) -> objectFieldOffset
    299:299:byte getByte(long) -> getByte
    303:303:short getShort(long) -> getShort
    307:307:int getInt(long) -> getInt
    311:311:long getLong(long) -> getLong
    315:316:void putOrderedObject(java.lang.Object,long,java.lang.Object) -> putOrderedObject
    319:320:void putByte(long,byte) -> putByte
    323:324:void putShort(long,short) -> putShort
    327:328:void putInt(long,int) -> putInt
    331:332:void putLong(long,long) -> putLong
    335:336:void copyMemory(long,long,long) -> copyMemory
    339:340:void copyMemory(byte[],int,long,long) -> copyMemory
    343:344:void copyMemory(long,byte[],int,long) -> copyMemory
    353:360:java.util.concurrent.atomic.AtomicReferenceFieldUpdater newAtomicReferenceFieldUpdater(java.lang.Class,java.lang.String) -> newAtomicReferenceFieldUpdater
    370:377:java.util.concurrent.atomic.AtomicIntegerFieldUpdater newAtomicIntegerFieldUpdater(java.lang.Class,java.lang.String) -> newAtomicIntegerFieldUpdater
    387:394:java.util.concurrent.atomic.AtomicLongFieldUpdater newAtomicLongFieldUpdater(java.lang.Class,java.lang.String) -> newAtomicLongFieldUpdater
    402:402:java.util.Queue newMpscQueue() -> newMpscQueue
    409:409:java.lang.ClassLoader getClassLoader(java.lang.Class) -> getClassLoader
    416:416:java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    423:423:java.lang.ClassLoader getSystemClassLoader() -> getSystemClassLoader
    429:439:boolean isAndroid0() -> isAndroid0
    443:447:boolean isWindows0() -> isWindows0
    451:540:boolean isRoot0() -> isRoot0
    550:578:int javaVersion0() -> javaVersion0
    582:614:boolean hasUnsafe0() -> hasUnsafe0
    619:623:long arrayBaseOffset0() -> arrayBaseOffset0
    627:684:long maxDirectMemory0() -> maxDirectMemory0
    688:710:boolean hasJavassist0() -> hasJavassist0
    717:770:java.io.File tmpdir0() -> tmpdir0
    775:789:java.io.File toDirectory(java.lang.String) -> toDirectory
    795:832:int bitMode0() -> bitMode0
    837:840:int addressSize0() -> addressSize0
    843:845:void <init>() -> <init>
    56:96:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.PlatformDependent0 -> be.alexandre01.dnplugin.shaded.netty.util.internal.PlatformDependent0:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    sun.misc.Unsafe UNSAFE -> UNSAFE
    boolean BIG_ENDIAN -> BIG_ENDIAN
    long ADDRESS_FIELD_OFFSET -> ADDRESS_FIELD_OFFSET
    long UNSAFE_COPY_THRESHOLD -> UNSAFE_COPY_THRESHOLD
    boolean UNALIGNED -> UNALIGNED
    137:137:boolean hasUnsafe() -> hasUnsafe
    141:142:void throwException(java.lang.Throwable) -> throwException
    147:148:void freeDirectBuffer(java.nio.ByteBuffer) -> freeDirectBuffer
    151:151:long directBufferAddress(java.nio.ByteBuffer) -> directBufferAddress
    155:155:long arrayBaseOffset() -> arrayBaseOffset
    159:159:java.lang.Object getObject(java.lang.Object,long) -> getObject
    163:163:java.lang.Object getObjectVolatile(java.lang.Object,long) -> getObjectVolatile
    167:167:int getInt(java.lang.Object,long) -> getInt
    171:171:long getLong(java.lang.Object,long) -> getLong
    175:175:long objectFieldOffset(java.lang.reflect.Field) -> objectFieldOffset
    179:179:byte getByte(long) -> getByte
    183:188:short getShort(long) -> getShort
    193:201:int getInt(long) -> getInt
    209:221:long getLong(long) -> getLong
    233:234:void putOrderedObject(java.lang.Object,long,java.lang.Object) -> putOrderedObject
    237:238:void putByte(long,byte) -> putByte
    241:250:void putShort(long,short) -> putShort
    253:266:void putInt(long,int) -> putInt
    269:290:void putLong(long,long) -> putLong
    294:301:void copyMemory(long,long,long) -> copyMemory
    305:312:void copyMemory(java.lang.Object,long,java.lang.Object,long,long) -> copyMemory
    316:316:java.util.concurrent.atomic.AtomicReferenceFieldUpdater newAtomicReferenceFieldUpdater(java.lang.Class,java.lang.String) -> newAtomicReferenceFieldUpdater
    321:321:java.util.concurrent.atomic.AtomicIntegerFieldUpdater newAtomicIntegerFieldUpdater(java.lang.Class,java.lang.String) -> newAtomicIntegerFieldUpdater
    326:326:java.util.concurrent.atomic.AtomicLongFieldUpdater newAtomicLongFieldUpdater(java.lang.Class,java.lang.String) -> newAtomicLongFieldUpdater
    330:333:java.lang.ClassLoader getClassLoader(java.lang.Class) -> getClassLoader
    343:346:java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    356:359:java.lang.ClassLoader getSystemClassLoader() -> getSystemClassLoader
    369:369:int addressSize() -> addressSize
    373:373:long allocateMemory(long) -> allocateMemory
    377:378:void freeMemory(long) -> freeMemory
    380:381:void <init>() -> <init>
    38:134:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.PlatformDependent0$1 -> be.alexandre01.dnplugin.shaded.netty.util.internal.PlatformDependent0$1:
    java.lang.Class val$clazz -> val$clazz
    333:333:void <init>(java.lang.Class) -> <init>
    336:336:java.lang.ClassLoader run() -> run
    333:333:java.lang.Object run() -> run
be.alexandre01.dnplugin.shaded.netty.util.internal.PlatformDependent0$2 -> be.alexandre01.dnplugin.shaded.netty.util.internal.PlatformDependent0$2:
    346:346:void <init>() -> <init>
    349:349:java.lang.ClassLoader run() -> run
    346:346:java.lang.Object run() -> run
be.alexandre01.dnplugin.shaded.netty.util.internal.PlatformDependent0$3 -> be.alexandre01.dnplugin.shaded.netty.util.internal.PlatformDependent0$3:
    359:359:void <init>() -> <init>
    362:362:java.lang.ClassLoader run() -> run
    359:359:java.lang.Object run() -> run
be.alexandre01.dnplugin.shaded.netty.util.internal.ReadOnlyIterator -> be.alexandre01.dnplugin.shaded.netty.util.internal.ReadOnlyIterator:
    java.util.Iterator iterator -> iterator
    24:29:void <init>(java.util.Iterator) -> <init>
    33:33:boolean hasNext() -> hasNext
    38:38:java.lang.Object next() -> next
    43:43:void remove() -> remove
be.alexandre01.dnplugin.shaded.netty.util.internal.RecyclableArrayList -> be.alexandre01.dnplugin.shaded.netty.util.internal.RecyclableArrayList:
    long serialVersionUID -> serialVersionUID
    int DEFAULT_INITIAL_CAPACITY -> DEFAULT_INITIAL_CAPACITY
    be.alexandre01.dnplugin.shaded.netty.util.Recycler RECYCLER -> RECYCLER
    be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle handle -> handle
    47:47:be.alexandre01.dnplugin.shaded.netty.util.internal.RecyclableArrayList newInstance() -> newInstance
    54:56:be.alexandre01.dnplugin.shaded.netty.util.internal.RecyclableArrayList newInstance(int) -> newInstance
    62:63:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> <init>
    66:68:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle,int) -> <init>
    72:73:boolean addAll(java.util.Collection) -> addAll
    78:79:boolean addAll(int,java.util.Collection) -> addAll
    83:99:void checkNullElements(java.util.Collection) -> checkNullElements
    103:106:boolean add(java.lang.Object) -> add
    111:115:void add(int,java.lang.Object) -> add
    119:122:java.lang.Object set(int,java.lang.Object) -> set
    129:130:boolean recycle() -> recycle
    30:30:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle,be.alexandre01.dnplugin.shaded.netty.util.internal.RecyclableArrayList$1) -> <init>
    36:36:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.RecyclableArrayList$1 -> be.alexandre01.dnplugin.shaded.netty.util.internal.RecyclableArrayList$1:
    36:36:void <init>() -> <init>
    39:39:be.alexandre01.dnplugin.shaded.netty.util.internal.RecyclableArrayList newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
    36:36:java.lang.Object newObject(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> newObject
be.alexandre01.dnplugin.shaded.netty.util.internal.RecyclableMpscLinkedQueueNode -> be.alexandre01.dnplugin.shaded.netty.util.internal.RecyclableMpscLinkedQueueNode:
    be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle handle -> handle
    28:33:void <init>(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> <init>
    37:39:void unlink() -> unlink
    void recycle(be.alexandre01.dnplugin.shaded.netty.util.Recycler$Handle) -> recycle
be.alexandre01.dnplugin.shaded.netty.util.internal.StringUtil -> be.alexandre01.dnplugin.shaded.netty.util.internal.StringUtil:
    java.lang.String NEWLINE -> NEWLINE
    java.lang.String[] BYTE2HEX_PAD -> BYTE2HEX_PAD
    java.lang.String[] BYTE2HEX_NOPAD -> BYTE2HEX_NOPAD
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    boolean $assertionsDisabled -> $assertionsDisabled
    78:111:java.lang.String[] split(java.lang.String,char) -> split
    118:118:java.lang.String byteToHexStringPadded(int) -> byteToHexStringPadded
    126:130:java.lang.Appendable byteToHexStringPadded(java.lang.Appendable,int) -> byteToHexStringPadded
    137:137:java.lang.String toHexStringPadded(byte[]) -> toHexStringPadded
    144:144:java.lang.String toHexStringPadded(byte[],int,int) -> toHexStringPadded
    151:151:java.lang.Appendable toHexStringPadded(java.lang.Appendable,byte[]) -> toHexStringPadded
    158:162:java.lang.Appendable toHexStringPadded(java.lang.Appendable,byte[],int,int) -> toHexStringPadded
    169:169:java.lang.String byteToHexString(int) -> byteToHexString
    177:181:java.lang.Appendable byteToHexString(java.lang.Appendable,int) -> byteToHexString
    188:188:java.lang.String toHexString(byte[]) -> toHexString
    195:195:java.lang.String toHexString(byte[],int,int) -> toHexString
    202:202:java.lang.Appendable toHexString(java.lang.Appendable,byte[]) -> toHexString
    209:229:java.lang.Appendable toHexString(java.lang.Appendable,byte[],int,int) -> toHexString
    236:239:java.lang.String simpleClassName(java.lang.Object) -> simpleClassName
    248:256:java.lang.String simpleClassName(java.lang.Class) -> simpleClassName
    260:262:void <init>() -> <init>
    26:71:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.SystemPropertyUtil -> be.alexandre01.dnplugin.shaded.netty.util.internal.SystemPropertyUtil:
    boolean initializedLogger -> initializedLogger
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    boolean loggedException -> loggedException
    java.util.regex.Pattern INTEGER_PATTERN -> INTEGER_PATTERN
    47:47:boolean contains(java.lang.String) -> contains
    57:57:java.lang.String get(java.lang.String) -> get
    70:100:java.lang.String get(java.lang.String,java.lang.String) -> get
    113:135:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    150:168:int getInt(java.lang.String,int) -> getInt
    181:199:long getLong(java.lang.String,long) -> getLong
    203:209:void log(java.lang.String) -> log
    212:218:void log(java.lang.String,java.lang.Exception) -> log
    220:222:void <init>() -> <init>
    37:138:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.SystemPropertyUtil$1 -> be.alexandre01.dnplugin.shaded.netty.util.internal.SystemPropertyUtil$1:
    java.lang.String val$key -> val$key
    82:82:void <init>(java.lang.String) -> <init>
    85:85:java.lang.String run() -> run
    82:82:java.lang.Object run() -> run
be.alexandre01.dnplugin.shaded.netty.util.internal.ThreadLocalRandom -> be.alexandre01.dnplugin.shaded.netty.util.internal.ThreadLocalRandom:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.concurrent.atomic.AtomicLong seedUniquifier -> seedUniquifier
    long initialSeedUniquifier -> initialSeedUniquifier
    long multiplier -> multiplier
    long addend -> addend
    long mask -> mask
    long rnd -> rnd
    boolean initialized -> initialized
    long pad0 -> pad0
    long pad1 -> pad1
    long pad2 -> pad2
    long pad3 -> pad3
    long pad4 -> pad4
    long pad5 -> pad5
    long pad6 -> pad6
    long pad7 -> pad7
    long serialVersionUID -> serialVersionUID
    70:71:void setInitialSeedUniquifier(long) -> setInitialSeedUniquifier
    75:155:long getInitialSeedUniquifier() -> getInitialSeedUniquifier
    159:175:long newSeed() -> newSeed
    205:207:void <init>() -> <init>
    215:215:be.alexandre01.dnplugin.shaded.netty.util.internal.ThreadLocalRandom current() -> current
    225:229:void setSeed(long) -> setSeed
    232:233:int next(int) -> next
    247:250:int nextInt(int,int) -> nextInt
    263:282:long nextLong(long) -> nextLong
    296:299:long nextLong(long,long) -> nextLong
    312:315:double nextDouble(double) -> nextDouble
    329:332:double nextDouble(double,double) -> nextDouble
    61:61:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger access$000() -> access$000
    63:65:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.ThreadLocalRandom$1 -> be.alexandre01.dnplugin.shaded.netty.util.internal.ThreadLocalRandom$1:
    java.util.concurrent.BlockingQueue val$queue -> val$queue
    87:87:void <init>(java.lang.String,java.util.concurrent.BlockingQueue) -> <init>
    90:92:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.internal.ThreadLocalRandom$2 -> be.alexandre01.dnplugin.shaded.netty.util.internal.ThreadLocalRandom$2:
    96:96:void <init>() -> <init>
    99:100:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
be.alexandre01.dnplugin.shaded.netty.util.internal.TypeParameterMatcher -> be.alexandre01.dnplugin.shaded.netty.util.internal.TypeParameterMatcher:
    be.alexandre01.dnplugin.shaded.netty.util.internal.TypeParameterMatcher NOOP -> NOOP
    java.lang.Object TEST_OBJECT -> TEST_OBJECT
    33:60:be.alexandre01.dnplugin.shaded.netty.util.internal.TypeParameterMatcher get(java.lang.Class) -> get
    66:82:be.alexandre01.dnplugin.shaded.netty.util.internal.TypeParameterMatcher find(java.lang.Object,java.lang.Class,java.lang.String) -> find
    88:150:java.lang.Class find0(java.lang.Object,java.lang.Class,java.lang.String) -> find0
    156:156:java.lang.Class fail(java.lang.Class,java.lang.String) -> fail
    boolean match(java.lang.Object) -> match
    175:175:void <init>() -> <init>
    29:30:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.TypeParameterMatcher$ReflectiveMatcher -> be.alexandre01.dnplugin.shaded.netty.util.internal.TypeParameterMatcher$ReflectiveMatcher:
    java.lang.Class type -> type
    165:167:void <init>(java.lang.Class) -> <init>
    171:171:boolean match(java.lang.Object) -> match
be.alexandre01.dnplugin.shaded.netty.util.internal.UnpaddedInternalThreadLocalMap -> be.alexandre01.dnplugin.shaded.netty.util.internal.UnpaddedInternalThreadLocalMap:
    java.lang.ThreadLocal slowThreadLocalMap -> slowThreadLocalMap
    java.util.concurrent.atomic.AtomicInteger nextIndex -> nextIndex
    java.lang.Object[] indexedVariables -> indexedVariables
    int futureListenerStackDepth -> futureListenerStackDepth
    int localChannelReaderStackDepth -> localChannelReaderStackDepth
    java.util.Map handlerSharableCache -> handlerSharableCache
    be.alexandre01.dnplugin.shaded.netty.util.internal.IntegerHolder counterHashCode -> counterHashCode
    be.alexandre01.dnplugin.shaded.netty.util.internal.ThreadLocalRandom random -> random
    java.util.Map typeParameterMatcherGetCache -> typeParameterMatcherGetCache
    java.util.Map typeParameterMatcherFindCache -> typeParameterMatcherFindCache
    java.lang.StringBuilder stringBuilder -> stringBuilder
    java.util.Map charsetEncoderCache -> charsetEncoderCache
    java.util.Map charsetDecoderCache -> charsetDecoderCache
    54:56:void <init>(java.lang.Object[]) -> <init>
    35:35:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.UnsafeAtomicIntegerFieldUpdater -> be.alexandre01.dnplugin.shaded.netty.util.internal.UnsafeAtomicIntegerFieldUpdater:
    long offset -> offset
    sun.misc.Unsafe unsafe -> unsafe
    28:35:void <init>(sun.misc.Unsafe,java.lang.Class,java.lang.String) -> <init>
    39:39:boolean compareAndSet(java.lang.Object,int,int) -> compareAndSet
    44:44:boolean weakCompareAndSet(java.lang.Object,int,int) -> weakCompareAndSet
    49:50:void set(java.lang.Object,int) -> set
    54:55:void lazySet(java.lang.Object,int) -> lazySet
    59:59:int get(java.lang.Object) -> get
be.alexandre01.dnplugin.shaded.netty.util.internal.UnsafeAtomicLongFieldUpdater -> be.alexandre01.dnplugin.shaded.netty.util.internal.UnsafeAtomicLongFieldUpdater:
    long offset -> offset
    sun.misc.Unsafe unsafe -> unsafe
    28:35:void <init>(sun.misc.Unsafe,java.lang.Class,java.lang.String) -> <init>
    39:39:boolean compareAndSet(java.lang.Object,long,long) -> compareAndSet
    44:44:boolean weakCompareAndSet(java.lang.Object,long,long) -> weakCompareAndSet
    49:50:void set(java.lang.Object,long) -> set
    54:55:void lazySet(java.lang.Object,long) -> lazySet
    59:59:long get(java.lang.Object) -> get
be.alexandre01.dnplugin.shaded.netty.util.internal.UnsafeAtomicReferenceFieldUpdater -> be.alexandre01.dnplugin.shaded.netty.util.internal.UnsafeAtomicReferenceFieldUpdater:
    long offset -> offset
    sun.misc.Unsafe unsafe -> unsafe
    28:35:void <init>(sun.misc.Unsafe,java.lang.Class,java.lang.String) -> <init>
    39:39:boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object) -> compareAndSet
    44:44:boolean weakCompareAndSet(java.lang.Object,java.lang.Object,java.lang.Object) -> weakCompareAndSet
    49:50:void set(java.lang.Object,java.lang.Object) -> set
    54:55:void lazySet(java.lang.Object,java.lang.Object) -> lazySet
    60:60:java.lang.Object get(java.lang.Object) -> get
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8 -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8:
    long serialVersionUID -> serialVersionUID
    int MAXIMUM_CAPACITY -> MAXIMUM_CAPACITY
    int DEFAULT_CAPACITY -> DEFAULT_CAPACITY
    int MAX_ARRAY_SIZE -> MAX_ARRAY_SIZE
    int DEFAULT_CONCURRENCY_LEVEL -> DEFAULT_CONCURRENCY_LEVEL
    float LOAD_FACTOR -> LOAD_FACTOR
    int TREEIFY_THRESHOLD -> TREEIFY_THRESHOLD
    int UNTREEIFY_THRESHOLD -> UNTREEIFY_THRESHOLD
    int MIN_TREEIFY_CAPACITY -> MIN_TREEIFY_CAPACITY
    int MIN_TRANSFER_STRIDE -> MIN_TRANSFER_STRIDE
    int MOVED -> MOVED
    int TREEBIN -> TREEBIN
    int RESERVED -> RESERVED
    int HASH_BITS -> HASH_BITS
    int NCPU -> NCPU
    java.io.ObjectStreamField[] serialPersistentFields -> serialPersistentFields
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[] table -> table
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[] nextTable -> nextTable
    long baseCount -> baseCount
    int sizeCtl -> sizeCtl
    int transferIndex -> transferIndex
    int transferOrigin -> transferOrigin
    int cellsBusy -> cellsBusy
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$CounterCell[] counterCells -> counterCells
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView keySet -> keySet
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView values -> values
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView entrySet -> entrySet
    java.util.concurrent.atomic.AtomicInteger counterHashCodeGenerator -> counterHashCodeGenerator
    int SEED_INCREMENT -> SEED_INCREMENT
    sun.misc.Unsafe U -> U
    long SIZECTL -> SIZECTL
    long TRANSFERINDEX -> TRANSFERINDEX
    long TRANSFERORIGIN -> TRANSFERORIGIN
    long BASECOUNT -> BASECOUNT
    long CELLSBUSY -> CELLSBUSY
    long CELLVALUE -> CELLVALUE
    long ABASE -> ABASE
    int ASHIFT -> ASHIFT
    679:679:int spread(int) -> spread
    687:693:int tableSizeFor(int) -> tableSizeFor
    701:716:java.lang.Class comparableClassFor(java.lang.Object) -> comparableClassFor
    725:725:int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object) -> compareComparables
    749:749:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node tabAt(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],int) -> tabAt
    754:754:boolean casTabAt(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node) -> casTabAt
    758:759:void setTabAt(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node) -> setTabAt
    822:823:void <init>() -> <init>
    835:842:void <init>(int) -> <init>
    849:852:void <init>(java.util.Map) -> <init>
    870:871:void <init>(int,float) -> <init>
    892:901:void <init>(int,float,int) -> <init>
    909:910:int size() -> size
    919:919:boolean isEmpty() -> isEmpty
    935:950:java.lang.Object get(java.lang.Object) -> get
    963:963:boolean containsKey(java.lang.Object) -> containsKey
    977:988:boolean containsValue(java.lang.Object) -> containsValue
    1005:1005:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    1010:1070:java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean) -> putVal
    1081:1084:void putAll(java.util.Map) -> putAll
    1096:1096:java.lang.Object remove(java.lang.Object) -> remove
    1105:1172:java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object) -> replaceNode
    1179:1208:void clear() -> clear
    1230:1230:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView keySet() -> keySet
    1253:1253:java.util.Collection values() -> values
    1275:1275:java.util.Set entrySet() -> entrySet
    1286:1293:int hashCode() -> hashCode
    1309:1326:java.lang.String toString() -> toString
    1340:1362:boolean equals(java.lang.Object) -> equals
    1388:1416:void writeObject(java.io.ObjectOutputStream) -> writeObject
    1431:1515:void readObject(java.io.ObjectInputStream) -> readObject
    1527:1527:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    1536:1538:boolean remove(java.lang.Object,java.lang.Object) -> remove
    1547:1549:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    1560:1562:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    1580:1580:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    1584:1592:void forEach(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiAction) -> forEach
    1595:1611:void replaceAll(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> replaceAll
    1636:1713:java.lang.Object computeIfAbsent(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun) -> computeIfAbsent
    1737:1803:java.lang.Object computeIfPresent(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> computeIfPresent
    1828:1929:java.lang.Object compute(java.lang.Object,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> compute
    1953:2038:java.lang.Object merge(java.lang.Object,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> merge
    2059:2059:boolean contains(java.lang.Object) -> contains
    2070:2071:java.util.Enumeration keys() -> keys
    2082:2083:java.util.Enumeration elements() -> elements
    2099:2100:long mappingCount() -> mappingCount
    2111:2111:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView newKeySet() -> newKeySet
    2127:2127:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView newKeySet(int) -> newKeySet
    2143:2145:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView keySet(java.lang.Object) -> keySet
    2207:2225:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[] initTable() -> initTable
    2240:2273:void addCount(long,int) -> addCount
    2280:2288:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[] helpTransfer(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node) -> helpTransfer
    2297:2323:void tryPresize(int) -> tryPresize
    2330:2475:void transfer(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[]) -> transfer
    2486:2511:void treeifyBin(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],int) -> treeifyBin
    2517:2526:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node untreeify(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node) -> untreeify
    3430:3433:int batchFor(long) -> batchFor
    3446:3450:void forEach(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiAction) -> forEach
    3467:3472:void forEach(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> forEach
    3491:3492:java.lang.Object search(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> search
    3515:3517:java.lang.Object reduce(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> reduce
    3541:3543:double reduceToDouble(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToDouble,double,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble) -> reduceToDouble
    3567:3569:long reduceToLong(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToLong,long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$LongByLongToLong) -> reduceToLong
    3593:3595:int reduceToInt(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToInt,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$IntByIntToInt) -> reduceToInt
    3610:3614:void forEachKey(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> forEachKey
    3631:3636:void forEachKey(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> forEachKey
    3655:3656:java.lang.Object searchKeys(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun) -> searchKeys
    3674:3675:java.lang.Object reduceKeys(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> reduceKeys
    3698:3700:java.lang.Object reduceKeys(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> reduceKeys
    3724:3726:double reduceKeysToDouble(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToDouble,double,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble) -> reduceKeysToDouble
    3750:3752:long reduceKeysToLong(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToLong,long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$LongByLongToLong) -> reduceKeysToLong
    3776:3778:int reduceKeysToInt(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToInt,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$IntByIntToInt) -> reduceKeysToInt
    3793:3798:void forEachValue(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> forEachValue
    3815:3820:void forEachValue(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> forEachValue
    3839:3840:java.lang.Object searchValues(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun) -> searchValues
    3857:3858:java.lang.Object reduceValues(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> reduceValues
    3881:3883:java.lang.Object reduceValues(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> reduceValues
    3907:3909:double reduceValuesToDouble(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToDouble,double,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble) -> reduceValuesToDouble
    3933:3935:long reduceValuesToLong(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToLong,long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$LongByLongToLong) -> reduceValuesToLong
    3959:3961:int reduceValuesToInt(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToInt,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$IntByIntToInt) -> reduceValuesToInt
    3976:3979:void forEachEntry(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> forEachEntry
    3996:4001:void forEachEntry(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> forEachEntry
    4020:4021:java.lang.Object searchEntries(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun) -> searchEntries
    4038:4039:java.util.Map$Entry reduceEntries(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> reduceEntries
    4062:4064:java.lang.Object reduceEntries(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> reduceEntries
    4088:4090:double reduceEntriesToDouble(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToDouble,double,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble) -> reduceEntriesToDouble
    4114:4116:long reduceEntriesToLong(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToLong,long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$LongByLongToLong) -> reduceEntriesToLong
    4140:4142:int reduceEntriesToInt(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToInt,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$IntByIntToInt) -> reduceEntriesToInt
    6036:6044:long sumCount() -> sumCount
    6052:6135:void fullAddCount(be.alexandre01.dnplugin.shaded.netty.util.internal.InternalThreadLocalMap,long,be.alexandre01.dnplugin.shaded.netty.util.internal.IntegerHolder,boolean) -> fullAddCount
    6185:6201:sun.misc.Unsafe getUnsafe() -> getUnsafe
    237:237:java.util.Set keySet() -> keySet
    238:238:sun.misc.Unsafe access$000() -> access$000
    594:6174:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$1 -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$1:
    6189:6189:void <init>() -> <init>
    6191:6198:sun.misc.Unsafe run() -> run
    6189:6189:java.lang.Object run() -> run
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action:
    void apply(java.lang.Object) -> apply
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8 map -> map
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node lastReturned -> lastReturned
    3192:3195:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8) -> <init>
    3197:3197:boolean hasNext() -> hasNext
    3198:3198:boolean hasMoreElements() -> hasMoreElements
    3202:3206:void remove() -> remove
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiAction -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiAction:
    void apply(java.lang.Object,java.lang.Object) -> apply
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun:
    java.lang.Object apply(java.lang.Object,java.lang.Object) -> apply
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[] tab -> tab
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node next -> next
    int index -> index
    int baseIndex -> baseIndex
    int baseLimit -> baseLimit
    int baseSize -> baseSize
    int batch -> batch
    4595:4606:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[]) -> <init>
    4613:4635:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node advance() -> advance
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView:
    long serialVersionUID -> serialVersionUID
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8 map -> map
    java.lang.String oomeMsg -> oomeMsg
    4157:4157:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8) -> <init>
    4164:4164:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8 getMap() -> getMap
    4170:4170:void clear() -> clear
    4171:4171:int size() -> size
    4172:4172:boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    4191:4209:java.lang.Object[] toArray() -> toArray
    4214:4239:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    4254:4266:java.lang.String toString() -> toString
    4270:4276:boolean containsAll(java.util.Collection) -> containsAll
    4280:4287:boolean removeAll(java.util.Collection) -> removeAll
    4291:4298:boolean retainAll(java.util.Collection) -> retainAll
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ConcurrentHashMapSpliterator -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ConcurrentHashMapSpliterator:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ConcurrentHashMapSpliterator trySplit() -> trySplit
    long estimateSize() -> estimateSize
    void forEachRemaining(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> forEachRemaining
    boolean tryAdvance(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> tryAdvance
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$CounterCell -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$CounterCell:
    long p0 -> p0
    long p1 -> p1
    long p2 -> p2
    long p3 -> p3
    long p4 -> p4
    long p5 -> p5
    long p6 -> p6
    long value -> value
    long q0 -> q0
    long q1 -> q1
    long q2 -> q2
    long q3 -> q3
    long q4 -> q4
    long q5 -> q5
    long q6 -> q6
    6012:6012:void <init>(long) -> <init>
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$CounterHashCode -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$CounterHashCode:
    int code -> code
    6020:6020:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble:
    double apply(double,double) -> apply
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$EntryIterator -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$EntryIterator:
    3253:3254:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8) -> <init>
    3258:3264:java.util.Map$Entry next() -> next
    3249:3249:java.lang.Object next() -> next
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:
    long serialVersionUID -> serialVersionUID
    4498:4498:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8) -> <init>
    4502:4502:boolean contains(java.lang.Object) -> contains
    4511:4511:boolean remove(java.lang.Object) -> remove
    4521:4524:java.util.Iterator iterator() -> iterator
    4528:4528:boolean add(java.util.Map$Entry) -> add
    4532:4537:boolean addAll(java.util.Collection) -> addAll
    4541:4549:int hashCode() -> hashCode
    4554:4554:boolean equals(java.lang.Object) -> equals
    4561:4564:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ConcurrentHashMapSpliterator spliterator166() -> spliterator166
    4568:4575:void forEach(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> forEach
    4495:4495:boolean add(java.lang.Object) -> add
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySpliterator -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySpliterator:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8 map -> map
    long est -> est
    3387:3390:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],int,int,int,long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8) -> <init>
    3394:3394:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ConcurrentHashMapSpliterator trySplit() -> trySplit
    3400:3403:void forEachRemaining(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> forEachRemaining
    3406:3411:boolean tryAdvance(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> tryAdvance
    3414:3414:long estimateSize() -> estimateSize
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachEntryTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachEntryTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action action -> action
    4707:4709:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> <init>
    4712:4724:void compute() -> compute
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachKeyTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachKeyTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action action -> action
    4653:4655:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> <init>
    4658:4670:void compute() -> compute
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachMappingTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachMappingTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiAction action -> action
    4734:4736:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiAction) -> <init>
    4739:4751:void compute() -> compute
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedEntryTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedEntryTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action action -> action
    4828:4830:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> <init>
    4834:4850:void compute() -> compute
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedKeyTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedKeyTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action action -> action
    4762:4764:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> <init>
    4768:4784:void compute() -> compute
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedMappingTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedMappingTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action action -> action
    4862:4864:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> <init>
    4868:4884:void compute() -> compute
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedValueTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedValueTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action action -> action
    4795:4797:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> <init>
    4801:4817:void compute() -> compute
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachValueTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachValueTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action action -> action
    4680:4682:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> <init>
    4685:4697:void compute() -> compute
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ForwardingNode -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ForwardingNode:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[] nextTable -> nextTable
    2156:2158:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[]) -> <init>
    2162:2182:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node find(int,java.lang.Object) -> find
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun:
    java.lang.Object apply(java.lang.Object) -> apply
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$IntByIntToInt -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$IntByIntToInt:
    int apply(int,int) -> apply
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator:
    3213:3214:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8) -> <init>
    3218:3223:java.lang.Object next() -> next
    3226:3226:java.lang.Object nextElement() -> nextElement
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:
    long serialVersionUID -> serialVersionUID
    java.lang.Object value -> value
    4319:4321:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8,java.lang.Object) -> <init>
    4330:4330:java.lang.Object getMappedValue() -> getMappedValue
    4336:4336:boolean contains(java.lang.Object) -> contains
    4347:4347:boolean remove(java.lang.Object) -> remove
    4354:4356:java.util.Iterator iterator() -> iterator
    4371:4373:boolean add(java.lang.Object) -> add
    4388:4396:boolean addAll(java.util.Collection) -> addAll
    4400:4403:int hashCode() -> hashCode
    4408:4408:boolean equals(java.lang.Object) -> equals
    4415:4418:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ConcurrentHashMapSpliterator spliterator166() -> spliterator166
    4422:4429:void forEach(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> forEach
    4314:4314:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8 getMap() -> getMap
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySpliterator -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySpliterator:
    long est -> est
    3316:3318:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],int,int,int,long) -> <init>
    3322:3322:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ConcurrentHashMapSpliterator trySplit() -> trySplit
    3328:3331:void forEachRemaining(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> forEachRemaining
    3334:3339:boolean tryAdvance(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> tryAdvance
    3342:3342:long estimateSize() -> estimateSize
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$LongByLongToLong -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$LongByLongToLong:
    long apply(long,long) -> apply
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry:
    java.lang.Object key -> key
    java.lang.Object val -> val
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8 map -> map
    3275:3279:void <init>(java.lang.Object,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8) -> <init>
    3280:3280:java.lang.Object getKey() -> getKey
    3281:3281:java.lang.Object getValue() -> getValue
    3282:3282:int hashCode() -> hashCode
    3283:3283:java.lang.String toString() -> toString
    3287:3287:boolean equals(java.lang.Object) -> equals
    3303:3307:java.lang.Object setValue(java.lang.Object) -> setValue
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun reducer -> reducer
    java.lang.Object result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesTask nextRight -> nextRight
    5320:5323:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> <init>
    5324:5324:java.lang.Object getRawResult() -> getRawResult
    5328:5358:void compute() -> compute
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToDoubleTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToDoubleTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToDouble transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble reducer -> reducer
    double basis -> basis
    double result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToDoubleTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToDoubleTask nextRight -> nextRight
    5526:5529:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToDoubleTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToDouble,double,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble) -> <init>
    5530:5530:java.lang.Double getRawResult() -> getRawResult
    5534:5558:void compute() -> compute
    5512:5512:java.lang.Object getRawResult() -> getRawResult
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToIntTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToIntTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToInt transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$IntByIntToInt reducer -> reducer
    int basis -> basis
    int result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToIntTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToIntTask nextRight -> nextRight
    5918:5921:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToIntTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToInt,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$IntByIntToInt) -> <init>
    5922:5922:java.lang.Integer getRawResult() -> getRawResult
    5926:5950:void compute() -> compute
    5904:5904:java.lang.Object getRawResult() -> getRawResult
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToLongTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToLongTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToLong transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$LongByLongToLong reducer -> reducer
    long basis -> basis
    long result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToLongTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToLongTask nextRight -> nextRight
    5722:5725:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToLongTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToLong,long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$LongByLongToLong) -> <init>
    5726:5726:java.lang.Long getRawResult() -> getRawResult
    5730:5754:void compute() -> compute
    5708:5708:java.lang.Object getRawResult() -> getRawResult
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun reducer -> reducer
    java.lang.Object result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysTask nextRight -> nextRight
    5214:5217:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> <init>
    5218:5218:java.lang.Object getRawResult() -> getRawResult
    5222:5252:void compute() -> compute
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToDoubleTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToDoubleTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToDouble transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble reducer -> reducer
    double basis -> basis
    double result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToDoubleTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToDoubleTask nextRight -> nextRight
    5428:5431:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToDoubleTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToDouble,double,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble) -> <init>
    5432:5432:java.lang.Double getRawResult() -> getRawResult
    5436:5460:void compute() -> compute
    5414:5414:java.lang.Object getRawResult() -> getRawResult
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToIntTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToIntTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToInt transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$IntByIntToInt reducer -> reducer
    int basis -> basis
    int result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToIntTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToIntTask nextRight -> nextRight
    5820:5823:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToIntTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToInt,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$IntByIntToInt) -> <init>
    5824:5824:java.lang.Integer getRawResult() -> getRawResult
    5828:5852:void compute() -> compute
    5806:5806:java.lang.Object getRawResult() -> getRawResult
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToLongTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToLongTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToLong transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$LongByLongToLong reducer -> reducer
    long basis -> basis
    long result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToLongTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToLongTask nextRight -> nextRight
    5624:5627:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToLongTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToLong,long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$LongByLongToLong) -> <init>
    5628:5628:java.lang.Long getRawResult() -> getRawResult
    5632:5656:void compute() -> compute
    5610:5610:java.lang.Object getRawResult() -> getRawResult
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun reducer -> reducer
    java.lang.Object result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsTask nextRight -> nextRight
    5373:5376:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> <init>
    5377:5377:java.lang.Object getRawResult() -> getRawResult
    5381:5411:void compute() -> compute
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToDoubleTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToDoubleTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToDouble transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble reducer -> reducer
    double basis -> basis
    double result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToDoubleTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToDoubleTask nextRight -> nextRight
    5575:5578:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToDoubleTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToDouble,double,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble) -> <init>
    5579:5579:java.lang.Double getRawResult() -> getRawResult
    5583:5607:void compute() -> compute
    5561:5561:java.lang.Object getRawResult() -> getRawResult
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToIntTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToIntTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToInt transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$IntByIntToInt reducer -> reducer
    int basis -> basis
    int result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToIntTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToIntTask nextRight -> nextRight
    5967:5970:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToIntTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToInt,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$IntByIntToInt) -> <init>
    5971:5971:java.lang.Integer getRawResult() -> getRawResult
    5975:5999:void compute() -> compute
    5953:5953:java.lang.Object getRawResult() -> getRawResult
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToLongTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToLongTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToLong transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$LongByLongToLong reducer -> reducer
    long basis -> basis
    long result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToLongTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToLongTask nextRight -> nextRight
    5771:5774:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToLongTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToLong,long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$LongByLongToLong) -> <init>
    5775:5775:java.lang.Long getRawResult() -> getRawResult
    5779:5803:void compute() -> compute
    5757:5757:java.lang.Object getRawResult() -> getRawResult
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun reducer -> reducer
    java.lang.Object result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesTask nextRight -> nextRight
    5267:5270:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> <init>
    5271:5271:java.lang.Object getRawResult() -> getRawResult
    5275:5305:void compute() -> compute
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToDoubleTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToDoubleTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToDouble transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble reducer -> reducer
    double basis -> basis
    double result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToDoubleTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToDoubleTask nextRight -> nextRight
    5477:5480:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToDoubleTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToDouble,double,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble) -> <init>
    5481:5481:java.lang.Double getRawResult() -> getRawResult
    5485:5509:void compute() -> compute
    5463:5463:java.lang.Object getRawResult() -> getRawResult
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToIntTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToIntTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToInt transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$IntByIntToInt reducer -> reducer
    int basis -> basis
    int result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToIntTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToIntTask nextRight -> nextRight
    5869:5872:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToIntTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToInt,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$IntByIntToInt) -> <init>
    5873:5873:java.lang.Integer getRawResult() -> getRawResult
    5877:5901:void compute() -> compute
    5855:5855:java.lang.Object getRawResult() -> getRawResult
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToLongTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToLongTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToLong transformer -> transformer
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$LongByLongToLong reducer -> reducer
    long basis -> basis
    long result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToLongTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToLongTask nextRight -> nextRight
    5673:5676:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToLongTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToLong,long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$LongByLongToLong) -> <init>
    5677:5677:java.lang.Long getRawResult() -> getRawResult
    5681:5705:void compute() -> compute
    5659:5659:java.lang.Object getRawResult() -> getRawResult
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node:
    int hash -> hash
    java.lang.Object key -> key
    java.lang.Object val -> val
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node next -> next
    619:624:void <init>(int,java.lang.Object,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node) -> <init>
    626:626:java.lang.Object getKey() -> getKey
    627:627:java.lang.Object getValue() -> getValue
    628:628:int hashCode() -> hashCode
    629:629:java.lang.String toString() -> toString
    631:631:java.lang.Object setValue(java.lang.Object) -> setValue
    636:636:boolean equals(java.lang.Object) -> equals
    647:656:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node find(int,java.lang.Object) -> find
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToDouble -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToDouble:
    double apply(java.lang.Object,java.lang.Object) -> apply
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToInt -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToInt:
    int apply(java.lang.Object,java.lang.Object) -> apply
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToLong -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToLong:
    long apply(java.lang.Object,java.lang.Object) -> apply
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToDouble -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToDouble:
    double apply(java.lang.Object) -> apply
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToInt -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToInt:
    int apply(java.lang.Object) -> apply
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToLong -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToLong:
    long apply(java.lang.Object) -> apply
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceEntriesTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceEntriesTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun reducer -> reducer
    java.util.Map$Entry result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceEntriesTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceEntriesTask nextRight -> nextRight
    5167:5169:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceEntriesTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> <init>
    5170:5170:java.util.Map$Entry getRawResult() -> getRawResult
    5173:5199:void compute() -> compute
    5157:5157:java.lang.Object getRawResult() -> getRawResult
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceKeysTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceKeysTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun reducer -> reducer
    java.lang.Object result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceKeysTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceKeysTask nextRight -> nextRight
    5073:5075:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceKeysTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> <init>
    5076:5076:java.lang.Object getRawResult() -> getRawResult
    5079:5107:void compute() -> compute
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceValuesTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceValuesTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun reducer -> reducer
    java.lang.Object result -> result
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceValuesTask rights -> rights
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceValuesTask nextRight -> nextRight
    5120:5122:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceValuesTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun) -> <init>
    5123:5123:java.lang.Object getRawResult() -> getRawResult
    5126:5154:void compute() -> compute
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ReservationNode -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ReservationNode:
    2192:2193:void <init>() -> <init>
    2196:2196:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node find(int,java.lang.Object) -> find
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchEntriesTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchEntriesTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun searchFunction -> searchFunction
    java.util.concurrent.atomic.AtomicReference result -> result
    4984:4986:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun,java.util.concurrent.atomic.AtomicReference) -> <init>
    4987:4987:java.lang.Object getRawResult() -> getRawResult
    4991:5016:void compute() -> compute
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchKeysTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchKeysTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun searchFunction -> searchFunction
    java.util.concurrent.atomic.AtomicReference result -> result
    4896:4898:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun,java.util.concurrent.atomic.AtomicReference) -> <init>
    4899:4899:java.lang.Object getRawResult() -> getRawResult
    4903:4928:void compute() -> compute
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchMappingsTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchMappingsTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun searchFunction -> searchFunction
    java.util.concurrent.atomic.AtomicReference result -> result
    5028:5030:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun,java.util.concurrent.atomic.AtomicReference) -> <init>
    5031:5031:java.lang.Object getRawResult() -> getRawResult
    5035:5060:void compute() -> compute
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchValuesTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchValuesTask:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun searchFunction -> searchFunction
    java.util.concurrent.atomic.AtomicReference result -> result
    4940:4942:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask,int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun,java.util.concurrent.atomic.AtomicReference) -> <init>
    4943:4943:java.lang.Object getRawResult() -> getRawResult
    4947:4972:void compute() -> compute
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Segment -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Segment:
    long serialVersionUID -> serialVersionUID
    float loadFactor -> loadFactor
    1372:1372:void <init>(float) -> <init>
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Traverser -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Traverser:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[] tab -> tab
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node next -> next
    int index -> index
    int baseIndex -> baseIndex
    int baseLimit -> baseLimit
    int baseSize -> baseSize
    3144:3150:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],int,int,int) -> <init>
    3157:3179:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node advance() -> advance
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeBin -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeBin:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode root -> root
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode first -> first
    java.lang.Thread waiter -> waiter
    int lockState -> lockState
    int WRITER -> WRITER
    int WAITER -> WAITER
    int READER -> READER
    sun.misc.Unsafe U -> U
    long LOCKSTATE -> LOCKSTATE
    boolean $assertionsDisabled -> $assertionsDisabled
    2609:2649:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode) -> <init>
    2655:2657:void lockRoot() -> lockRoot
    2663:2664:void unlockRoot() -> unlockRoot
    2670:2686:void contendedLock() -> contendedLock
    2696:2723:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node find(int,java.lang.Object) -> find
    2731:2779:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object) -> putTreeVal
    2793:2885:boolean removeTreeNode(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode) -> removeTreeNode
    2894:2906:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode rotateLeft(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode) -> rotateLeft
    2912:2924:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode rotateRight(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode) -> rotateRight
    2929:2974:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode balanceInsertion(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode) -> balanceInsertion
    2985:3069:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode balanceDeletion(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode) -> balanceDeletion
    3078:3096:boolean checkInvariants(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode) -> checkInvariants
    2595:3110:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode parent -> parent
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode left -> left
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode right -> right
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode prev -> prev
    boolean red -> red
    2543:2545:void <init>(int,java.lang.Object,java.lang.Object,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode) -> <init>
    2548:2548:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node find(int,java.lang.Object) -> find
    2556:2582:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class) -> findTreeNode
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator:
    3233:3234:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],int,int,int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8) -> <init>
    3238:3243:java.lang.Object next() -> next
    3246:3246:java.lang.Object nextElement() -> nextElement
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueSpliterator -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueSpliterator:
    long est -> est
    3351:3353:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Node[],int,int,int,long) -> <init>
    3357:3357:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ConcurrentHashMapSpliterator trySplit() -> trySplit
    3363:3366:void forEachRemaining(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> forEachRemaining
    3369:3374:boolean tryAdvance(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> tryAdvance
    3377:3377:long estimateSize() -> estimateSize
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView:
    long serialVersionUID -> serialVersionUID
    4440:4440:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8) -> <init>
    4442:4442:boolean contains(java.lang.Object) -> contains
    4446:4454:boolean remove(java.lang.Object) -> remove
    4458:4461:java.util.Iterator iterator() -> iterator
    4465:4465:boolean add(java.lang.Object) -> add
    4468:4468:boolean addAll(java.util.Collection) -> addAll
    4473:4476:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$ConcurrentHashMapSpliterator spliterator166() -> spliterator166
    4480:4487:void forEach(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ConcurrentHashMapV8$Action) -> forEach
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.CountedCompleter -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.CountedCompleter:
    long serialVersionUID -> serialVersionUID
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.CountedCompleter completer -> completer
    int pending -> pending
    sun.misc.Unsafe U -> U
    long PENDING -> PENDING
    417:420:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.CountedCompleter,int) -> <init>
    428:430:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.CountedCompleter) -> <init>
    436:438:void <init>() -> <init>
    void compute() -> compute
    458:458:void onCompletion(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.CountedCompleter) -> onCompletion
    479:479:boolean onExceptionalCompletion(java.lang.Throwable,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.CountedCompleter) -> onExceptionalCompletion
    489:489:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.CountedCompleter getCompleter() -> getCompleter
    498:498:int getPendingCount() -> getPendingCount
    507:508:void setPendingCount(int) -> setPendingCount
    517:518:void addToPendingCount(int) -> addToPendingCount
    529:529:boolean compareAndSetPendingCount(int,int) -> compareAndSetPendingCount
    540:542:int decrementPendingCountUnlessZero() -> decrementPendingCountUnlessZero
    552:555:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.CountedCompleter getRoot() -> getRoot
    565:575:void tryComplete() -> tryComplete
    589:598:void propagateCompletion() -> propagateCompletion
    623:628:void complete(java.lang.Object) -> complete
    641:644:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.CountedCompleter firstComplete() -> firstComplete
    667:671:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.CountedCompleter nextComplete() -> nextComplete
    679:684:void quietlyCompleteRoot() -> quietlyCompleteRoot
    692:697:void internalPropagateException(java.lang.Throwable) -> internalPropagateException
    703:704:boolean exec() -> exec
    716:716:java.lang.Object getRawResult() -> getRawResult
    725:725:void setRawResult(java.lang.Object) -> setRawResult
    749:765:sun.misc.Unsafe getUnsafe() -> getUnsafe
    732:738:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.CountedCompleter$1 -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.CountedCompleter$1:
    753:753:void <init>() -> <init>
    755:762:sun.misc.Unsafe run() -> run
    753:753:java.lang.Object run() -> run
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool:
    java.lang.ThreadLocal submitters -> submitters
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$ForkJoinWorkerThreadFactory defaultForkJoinWorkerThreadFactory -> defaultForkJoinWorkerThreadFactory
    java.lang.RuntimePermission modifyThreadPermission -> modifyThreadPermission
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool common -> common
    int commonParallelism -> commonParallelism
    int poolNumberSequence -> poolNumberSequence
    long IDLE_TIMEOUT -> IDLE_TIMEOUT
    long FAST_IDLE_TIMEOUT -> FAST_IDLE_TIMEOUT
    long TIMEOUT_SLOP -> TIMEOUT_SLOP
    int MAX_HELP -> MAX_HELP
    int SEED_INCREMENT -> SEED_INCREMENT
    int AC_SHIFT -> AC_SHIFT
    int TC_SHIFT -> TC_SHIFT
    int ST_SHIFT -> ST_SHIFT
    int EC_SHIFT -> EC_SHIFT
    int SMASK -> SMASK
    int MAX_CAP -> MAX_CAP
    int EVENMASK -> EVENMASK
    int SQMASK -> SQMASK
    int SHORT_SIGN -> SHORT_SIGN
    int INT_SIGN -> INT_SIGN
    long STOP_BIT -> STOP_BIT
    long AC_MASK -> AC_MASK
    long TC_MASK -> TC_MASK
    long TC_UNIT -> TC_UNIT
    long AC_UNIT -> AC_UNIT
    int UAC_SHIFT -> UAC_SHIFT
    int UTC_SHIFT -> UTC_SHIFT
    int UAC_MASK -> UAC_MASK
    int UTC_MASK -> UTC_MASK
    int UAC_UNIT -> UAC_UNIT
    int UTC_UNIT -> UTC_UNIT
    int E_MASK -> E_MASK
    int E_SEQ -> E_SEQ
    int SHUTDOWN -> SHUTDOWN
    int PL_LOCK -> PL_LOCK
    int PL_SIGNAL -> PL_SIGNAL
    int PL_SPINS -> PL_SPINS
    int LIFO_QUEUE -> LIFO_QUEUE
    int FIFO_QUEUE -> FIFO_QUEUE
    int SHARED_QUEUE -> SHARED_QUEUE
    long pad00 -> pad00
    long pad01 -> pad01
    long pad02 -> pad02
    long pad03 -> pad03
    long pad04 -> pad04
    long pad05 -> pad05
    long pad06 -> pad06
    long stealCount -> stealCount
    long ctl -> ctl
    int plock -> plock
    int indexSeed -> indexSeed
    short parallelism -> parallelism
    short mode -> mode
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue[] workQueues -> workQueues
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$ForkJoinWorkerThreadFactory factory -> factory
    java.lang.Thread$UncaughtExceptionHandler ueh -> ueh
    java.lang.String workerNamePrefix -> workerNamePrefix
    java.lang.Object pad10 -> pad10
    java.lang.Object pad11 -> pad11
    java.lang.Object pad12 -> pad12
    java.lang.Object pad13 -> pad13
    java.lang.Object pad14 -> pad14
    java.lang.Object pad15 -> pad15
    java.lang.Object pad16 -> pad16
    java.lang.Object pad17 -> pad17
    java.lang.Object pad18 -> pad18
    java.lang.Object pad19 -> pad19
    java.lang.Object pad1a -> pad1a
    java.lang.Object pad1b -> pad1b
    sun.misc.Unsafe U -> U
    long CTL -> CTL
    long PARKBLOCKER -> PARKBLOCKER
    int ABASE -> ABASE
    int ASHIFT -> ASHIFT
    long STEALCOUNT -> STEALCOUNT
    long PLOCK -> PLOCK
    long INDEXSEED -> INDEXSEED
    long QBASE -> QBASE
    long QLOCK -> QLOCK
    534:537:void checkPermission() -> checkPermission
    1123:1123:int nextPoolId() -> nextPoolId
    1275:1298:int acquirePlock() -> acquirePlock
    1308:1310:void releasePlock(int) -> releasePlock
    1319:1339:void tryAddWorker() -> tryAddWorker
    1355:1390:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue registerWorker(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinWorkerThread) -> registerWorker
    1403:1462:void deregisterWorker(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinWorkerThread,java.lang.Throwable) -> deregisterWorker
    1495:1515:void externalPush(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask) -> externalPush
    1535:1605:void fullExternalPush(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask) -> fullExternalPush
    1615:1618:void incrementActiveCount() -> incrementActiveCount
    1629:1652:void signalWork(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue) -> signalWork
    1660:1664:void runWorker(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue) -> runWorker
    1690:1725:int scan(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue,int) -> scan
    1744:1785:int awaitWork(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue,long,int) -> awaitWork
    1797:1811:void helpRelease(long,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue[],be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue,int) -> helpRelease
    1832:1907:int tryHelpStealer(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask) -> tryHelpStealer
    1918:1941:int helpComplete(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.CountedCompleter) -> helpComplete
    1954:1996:boolean tryCompensate(long) -> tryCompensate
    2007:2044:int awaitJoin(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask) -> awaitJoin
    2057:2070:void helpJoinOnce(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask) -> helpJoinOnce
    2078:2090:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue findNonEmptyStealQueue() -> findNonEmptyStealQueue
    2100:2131:void helpQuiescePool(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue) -> helpQuiescePool
    2141:2147:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask nextTaskFor(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue) -> nextTaskFor
    2198:2208:int getSurplusQueuedTaskCount() -> getSurplusQueuedTaskCount
    2229:2302:boolean tryTerminate(boolean,boolean) -> tryTerminate
    2317:2317:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue commonSubmitterQueue() -> commonSubmitterQueue
    2329:2347:boolean tryExternalUnpush(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask) -> tryExternalUnpush
    2352:2377:int externalHelpComplete(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.CountedCompleter) -> externalHelpComplete
    2396:2398:void <init>() -> <init>
    2415:2416:void <init>(int) -> <init>
    2446:2452:void <init>(int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$ForkJoinWorkerThreadFactory,java.lang.Thread$UncaughtExceptionHandler,boolean) -> <init>
    2455:2457:int checkParallelism(int) -> checkParallelism
    2462:2464:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$ForkJoinWorkerThreadFactory checkFactory(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$ForkJoinWorkerThreadFactory) -> checkFactory
    2476:2484:void <init>(int,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$ForkJoinWorkerThreadFactory,java.lang.Thread$UncaughtExceptionHandler,int,java.lang.String) -> <init>
    2501:2501:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool commonPool() -> commonPool
    2523:2526:java.lang.Object invoke(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask) -> invoke
    2538:2541:void execute(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask) -> execute
    2551:2559:void execute(java.lang.Runnable) -> execute
    2571:2574:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask submit(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask) -> submit
    2583:2585:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask submit(java.util.concurrent.Callable) -> submit
    2594:2596:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask submit(java.lang.Runnable,java.lang.Object) -> submit
    2605:2613:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask submit(java.lang.Runnable) -> submit
    2624:2640:java.util.List invokeAll(java.util.Collection) -> invokeAll
    2650:2650:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$ForkJoinWorkerThreadFactory getFactory() -> getFactory
    2660:2660:java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler() -> getUncaughtExceptionHandler
    2670:2670:int getParallelism() -> getParallelism
    2680:2680:int getCommonPoolParallelism() -> getCommonPoolParallelism
    2692:2692:int getPoolSize() -> getPoolSize
    2702:2702:boolean getAsyncMode() -> getAsyncMode
    2714:2722:int getRunningThreadCount() -> getRunningThreadCount
    2733:2734:int getActiveThreadCount() -> getActiveThreadCount
    2749:2749:boolean isQuiescent() -> isQuiescent
    2764:2772:long getStealCount() -> getStealCount
    2786:2794:long getQueuedTaskCount() -> getQueuedTaskCount
    2805:2813:int getQueuedSubmissionCount() -> getQueuedSubmissionCount
    2824:2830:boolean hasQueuedSubmissions() -> hasQueuedSubmissions
    2842:2848:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask pollSubmission() -> pollSubmission
    2869:2881:int drainTasksTo(java.util.Collection) -> drainTasksTo
    2893:2922:java.lang.String toString() -> toString
    2949:2951:void shutdown() -> shutdown
    2972:2974:java.util.List shutdownNow() -> shutdownNow
    2983:2984:boolean isTerminated() -> isTerminated
    3002:3003:boolean isTerminating() -> isTerminating
    3013:3013:boolean isShutdown() -> isShutdown
    3032:3054:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    3069:3099:boolean awaitQuiescence(long,java.util.concurrent.TimeUnit) -> awaitQuiescence
    3107:3108:void quiesceCommonPool() -> quiesceCommonPool
    3206:3225:void managedBlock(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$ManagedBlocker) -> managedBlock
    3232:3232:java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object) -> newTaskFor
    3236:3236:java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable) -> newTaskFor
    3299:3326:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool makeCommonPool() -> makeCommonPool
    3339:3355:sun.misc.Unsafe getUnsafe() -> getUnsafe
    149:149:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    149:149:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    149:149:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    150:150:sun.misc.Unsafe access$000() -> access$000
    150:150:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool access$100() -> access$100
    3254:3292:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$1 -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$1:
    3288:3288:void <init>() -> <init>
    3289:3289:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool run() -> run
    3288:3288:java.lang.Object run() -> run
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$2 -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$2:
    3343:3343:void <init>() -> <init>
    3345:3352:sun.misc.Unsafe run() -> run
    3343:3343:java.lang.Object run() -> run
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$DefaultForkJoinWorkerThreadFactory -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$DefaultForkJoinWorkerThreadFactory:
    562:562:void <init>() -> <init>
    565:565:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinWorkerThread newThread(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool) -> newThread
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$EmptyTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$EmptyTask:
    long serialVersionUID -> serialVersionUID
    577:577:void <init>() -> <init>
    578:578:java.lang.Void getRawResult() -> getRawResult
    579:579:void setRawResult(java.lang.Void) -> setRawResult
    580:580:boolean exec() -> exec
    575:575:void setRawResult(java.lang.Object) -> setRawResult
    575:575:java.lang.Object getRawResult() -> getRawResult
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$ForkJoinWorkerThreadFactory -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$ForkJoinWorkerThreadFactory:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinWorkerThread newThread(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool) -> newThread
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$ManagedBlocker -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$ManagedBlocker:
    boolean block() -> block
    boolean isReleasable() -> isReleasable
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$Submitter -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$Submitter:
    int seed -> seed
    1483:1483:void <init>(int) -> <init>
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue:
    int INITIAL_QUEUE_CAPACITY -> INITIAL_QUEUE_CAPACITY
    int MAXIMUM_QUEUE_CAPACITY -> MAXIMUM_QUEUE_CAPACITY
    long pad00 -> pad00
    long pad01 -> pad01
    long pad02 -> pad02
    long pad03 -> pad03
    long pad04 -> pad04
    long pad05 -> pad05
    long pad06 -> pad06
    int eventCount -> eventCount
    int nextWait -> nextWait
    int nsteals -> nsteals
    int hint -> hint
    short poolIndex -> poolIndex
    short mode -> mode
    int qlock -> qlock
    int base -> base
    int top -> top
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask[] array -> array
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool pool -> pool
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinWorkerThread owner -> owner
    java.lang.Thread parker -> parker
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask currentJoin -> currentJoin
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask currentSteal -> currentSteal
    java.lang.Object pad10 -> pad10
    java.lang.Object pad11 -> pad11
    java.lang.Object pad12 -> pad12
    java.lang.Object pad13 -> pad13
    java.lang.Object pad14 -> pad14
    java.lang.Object pad15 -> pad15
    java.lang.Object pad16 -> pad16
    java.lang.Object pad17 -> pad17
    java.lang.Object pad18 -> pad18
    java.lang.Object pad19 -> pad19
    java.lang.Object pad1a -> pad1a
    java.lang.Object pad1b -> pad1b
    java.lang.Object pad1c -> pad1c
    java.lang.Object pad1d -> pad1d
    sun.misc.Unsafe U -> U
    long QBASE -> QBASE
    long QLOCK -> QLOCK
    int ABASE -> ABASE
    int ASHIFT -> ASHIFT
    675:682:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinWorkerThread,int,int) -> <init>
    688:689:int queueSize() -> queueSize
    699:700:boolean isEmpty() -> isEmpty
    717:726:void push(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask) -> push
    734:753:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask[] growArray() -> growArray
    762:773:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask pop() -> pop
    783:791:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask pollAt(int) -> pollAt
    799:814:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask poll() -> poll
    821:821:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask nextLocalTask() -> nextLocalTask
    828:833:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask peek() -> peek
    842:848:boolean tryUnpush(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask) -> tryUnpush
    855:859:void cancelAll() -> cancelAll
    867:869:void pollAndExecAll() -> pollAndExecAll
    876:898:void runTask(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask) -> runTask
    910:949:boolean tryRemoveAndExec(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask) -> tryRemoveAndExec
    958:977:boolean pollAndExecCC(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.CountedCompleter) -> pollAndExecCC
    986:1008:boolean externalPopAndExecCC(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.CountedCompleter) -> externalPopAndExecCC
    1016:1032:boolean internalPopAndExecCC(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.CountedCompleter) -> internalPopAndExecCC
    1040:1040:boolean isApparentlyUnblocked() -> isApparentlyUnblocked
    1055:1070:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask:
    int status -> status
    int DONE_MASK -> DONE_MASK
    int NORMAL -> NORMAL
    int CANCELLED -> CANCELLED
    int EXCEPTIONAL -> EXCEPTIONAL
    int SIGNAL -> SIGNAL
    int SMASK -> SMASK
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask$ExceptionNode[] exceptionTable -> exceptionTable
    java.util.concurrent.locks.ReentrantLock exceptionTableLock -> exceptionTableLock
    java.lang.ref.ReferenceQueue exceptionTableRefQueue -> exceptionTableRefQueue
    int EXCEPTION_MAP_CAPACITY -> EXCEPTION_MAP_CAPACITY
    long serialVersionUID -> serialVersionUID
    sun.misc.Unsafe U -> U
    long STATUS -> STATUS
    203:1422:void <init>() -> <init>
    259:264:int setCompletion(int) -> setCompletion
    278:287:int doExec() -> doExec
    298:299:boolean trySetSignal() -> trySetSignal
    308:337:int externalAwaitDone() -> externalAwaitDone
    345:364:int externalInterruptibleAwaitDone() -> externalInterruptibleAwaitDone
    377:377:int doJoin() -> doJoin
    392:392:int doInvoke() -> doInvoke
    449:470:int recordExceptionalCompletion(java.lang.Throwable) -> recordExceptionalCompletion
    479:482:int setExceptionalCompletion(java.lang.Throwable) -> setExceptionalCompletion
    489:489:void internalPropagateException(java.lang.Throwable) -> internalPropagateException
    498:504:void cancelIgnoringExceptions(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask) -> cancelIgnoringExceptions
    510:535:void clearExceptionalCompletion() -> clearExceptionalCompletion
    552:591:java.lang.Throwable getThrowableException() -> getThrowableException
    598:619:void expungeStaleExceptions() -> expungeStaleExceptions
    626:634:void helpExpungeStaleExceptions() -> helpExpungeStaleExceptions
    640:642:void rethrow(java.lang.Throwable) -> rethrow
    651:651:void uncheckedThrow(java.lang.Throwable) -> uncheckedThrow
    658:662:void reportException(int) -> reportException
    683:687:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask fork() -> fork
    703:705:java.lang.Object join() -> join
    718:720:java.lang.Object invoke() -> invoke
    742:747:void invokeAll(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask) -> invokeAll
    765:789:void invokeAll(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask[]) -> invokeAll
    809:840:java.util.Collection invokeAll(java.util.Collection) -> invokeAll
    871:871:boolean cancel(boolean) -> cancel
    875:875:boolean isDone() -> isDone
    879:879:boolean isCancelled() -> isCancelled
    888:888:boolean isCompletedAbnormally() -> isCompletedAbnormally
    899:899:boolean isCompletedNormally() -> isCompletedNormally
    910:911:java.lang.Throwable getException() -> getException
    931:934:void completeExceptionally(java.lang.Throwable) -> completeExceptionally
    951:957:void complete(java.lang.Object) -> complete
    968:969:void quietlyComplete() -> quietlyComplete
    983:990:java.lang.Object get() -> get
    1009:1079:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    1089:1090:void quietlyJoin() -> quietlyJoin
    1098:1099:void quietlyInvoke() -> quietlyInvoke
    1110:1116:void helpQuiesce() -> helpQuiesce
    1135:1139:void reinitialize() -> reinitialize
    1149:1150:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool getPool() -> getPool
    1163:1163:boolean inForkJoinPool() -> inForkJoinPool
    1178:1178:boolean tryUnfork() -> tryUnfork
    1193:1197:int getQueuedTaskCount() -> getQueuedTaskCount
    1214:1214:int getSurplusQueuedTaskCount() -> getSurplusQueuedTaskCount
    java.lang.Object getRawResult() -> getRawResult
    void setRawResult(java.lang.Object) -> setRawResult
    boolean exec() -> exec
    1269:1273:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask peekNextLocalTask() -> peekNextLocalTask
    1287:1287:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask pollNextLocalTask() -> pollNextLocalTask
    1307:1307:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask pollTask() -> pollTask
    1321:1321:short getForkJoinTaskTag() -> getForkJoinTaskTag
    1333:1335:short setForkJoinTaskTag(short) -> setForkJoinTaskTag
    1355:1359:boolean compareAndSetForkJoinTaskTag(short,short) -> compareAndSetForkJoinTaskTag
    1457:1457:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask adapt(java.lang.Runnable) -> adapt
    1470:1470:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask adapt(java.lang.Runnable,java.lang.Object) -> adapt
    1483:1483:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask adapt(java.util.concurrent.Callable) -> adapt
    1498:1500:void writeObject(java.io.ObjectOutputStream) -> writeObject
    1507:1511:void readObject(java.io.ObjectInputStream) -> readObject
    1540:1556:sun.misc.Unsafe getUnsafe() -> getUnsafe
    203:203:java.lang.ref.ReferenceQueue access$000() -> access$000
    1518:1529:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask$1 -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask$1:
    1544:1544:void <init>() -> <init>
    1546:1553:sun.misc.Unsafe run() -> run
    1544:1544:java.lang.Object run() -> run
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask$AdaptedCallable -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask$AdaptedCallable:
    java.util.concurrent.Callable callable -> callable
    java.lang.Object result -> result
    long serialVersionUID -> serialVersionUID
    1426:1429:void <init>(java.util.concurrent.Callable) -> <init>
    1430:1430:java.lang.Object getRawResult() -> getRawResult
    1431:1431:void setRawResult(java.lang.Object) -> setRawResult
    1434:1441:boolean exec() -> exec
    1444:1444:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnable -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnable:
    java.lang.Runnable runnable -> runnable
    java.lang.Object result -> result
    long serialVersionUID -> serialVersionUID
    1372:1376:void <init>(java.lang.Runnable,java.lang.Object) -> <init>
    1377:1377:java.lang.Object getRawResult() -> getRawResult
    1378:1378:void setRawResult(java.lang.Object) -> setRawResult
    1379:1379:boolean exec() -> exec
    1380:1380:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnableAction -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnableAction:
    java.lang.Runnable runnable -> runnable
    long serialVersionUID -> serialVersionUID
    1390:1393:void <init>(java.lang.Runnable) -> <init>
    1394:1394:java.lang.Void getRawResult() -> getRawResult
    1395:1395:void setRawResult(java.lang.Void) -> setRawResult
    1396:1396:boolean exec() -> exec
    1397:1397:void run() -> run
    1387:1387:void setRawResult(java.lang.Object) -> setRawResult
    1387:1387:java.lang.Object getRawResult() -> getRawResult
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask$ExceptionNode -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask$ExceptionNode:
    java.lang.Throwable ex -> ex
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask$ExceptionNode next -> next
    long thrower -> thrower
    435:439:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask,java.lang.Throwable,be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask$ExceptionNode) -> <init>
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask$RunnableExecuteAction -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinTask$RunnableExecuteAction:
    java.lang.Runnable runnable -> runnable
    long serialVersionUID -> serialVersionUID
    1406:1409:void <init>(java.lang.Runnable) -> <init>
    1410:1410:java.lang.Void getRawResult() -> getRawResult
    1411:1411:void setRawResult(java.lang.Void) -> setRawResult
    1412:1412:boolean exec() -> exec
    1414:1415:void internalPropagateException(java.lang.Throwable) -> internalPropagateException
    1404:1404:void setRawResult(java.lang.Object) -> setRawResult
    1404:1404:java.lang.Object getRawResult() -> getRawResult
be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinWorkerThread -> be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinWorkerThread:
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool pool -> pool
    be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool$WorkQueue workQueue -> workQueue
    66:69:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool) -> <init>
    77:77:be.alexandre01.dnplugin.shaded.netty.util.internal.chmv8.ForkJoinPool getPool() -> getPool
    91:91:int getPoolIndex() -> getPoolIndex
    104:104:void onStart() -> onStart
    115:115:void onTermination(java.lang.Throwable) -> onTermination
    123:139:void run() -> run
be.alexandre01.dnplugin.shaded.netty.util.internal.logging.AbstractInternalLogger -> be.alexandre01.dnplugin.shaded.netty.util.internal.logging.AbstractInternalLogger:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    37:42:void <init>(java.lang.String) -> <init>
    46:46:java.lang.String name() -> name
    51:63:boolean isEnabled(be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel) -> isEnabled
    69:88:void log(be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Throwable) -> log
    92:111:void log(be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel,java.lang.String) -> log
    115:134:void log(be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object) -> log
    138:157:void log(be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object,java.lang.Object) -> log
    161:180:void log(be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[]) -> log
    183:183:java.lang.Object readResolve() -> readResolve
    188:188:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.netty.util.internal.logging.AbstractInternalLogger$1 -> be.alexandre01.dnplugin.shaded.netty.util.internal.logging.AbstractInternalLogger$1:
    int[] $SwitchMap$io$netty$util$internal$logging$InternalLogLevel -> $SwitchMap$io$netty$util$internal$logging$InternalLogLevel
    51:51:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.logging.CommonsLogger -> be.alexandre01.dnplugin.shaded.netty.util.internal.logging.CommonsLogger:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.logging.Log logger -> logger
    55:60:void <init>(org.apache.commons.logging.Log,java.lang.String) -> <init>
    68:68:boolean isTraceEnabled() -> isTraceEnabled
    79:80:void trace(java.lang.String) -> trace
    98:102:void trace(java.lang.String,java.lang.Object) -> trace
    122:126:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    142:146:void trace(java.lang.String,java.lang.Object[]) -> trace
    159:160:void trace(java.lang.String,java.lang.Throwable) -> trace
    168:168:boolean isDebugEnabled() -> isDebugEnabled
    181:182:void debug(java.lang.String) -> debug
    200:204:void debug(java.lang.String,java.lang.Object) -> debug
    224:228:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    244:248:void debug(java.lang.String,java.lang.Object[]) -> debug
    261:262:void debug(java.lang.String,java.lang.Throwable) -> debug
    270:270:boolean isInfoEnabled() -> isInfoEnabled
    281:282:void info(java.lang.String) -> info
    301:305:void info(java.lang.String,java.lang.Object) -> info
    324:328:void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    344:348:void info(java.lang.String,java.lang.Object[]) -> info
    361:362:void info(java.lang.String,java.lang.Throwable) -> info
    370:370:boolean isWarnEnabled() -> isWarnEnabled
    381:382:void warn(java.lang.String) -> warn
    400:404:void warn(java.lang.String,java.lang.Object) -> warn
    424:428:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    444:448:void warn(java.lang.String,java.lang.Object[]) -> warn
    462:463:void warn(java.lang.String,java.lang.Throwable) -> warn
    471:471:boolean isErrorEnabled() -> isErrorEnabled
    482:483:void error(java.lang.String) -> error
    501:505:void error(java.lang.String,java.lang.Object) -> error
    525:529:void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    545:549:void error(java.lang.String,java.lang.Object[]) -> error
    562:563:void error(java.lang.String,java.lang.Throwable) -> error
be.alexandre01.dnplugin.shaded.netty.util.internal.logging.CommonsLoggerFactory -> be.alexandre01.dnplugin.shaded.netty.util.internal.logging.CommonsLoggerFactory:
    java.util.Map loggerMap -> loggerMap
    29:31:void <init>() -> <init>
    35:35:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> newInstance
be.alexandre01.dnplugin.shaded.netty.util.internal.logging.FormattingTuple -> be.alexandre01.dnplugin.shaded.netty.util.internal.logging.FormattingTuple:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.FormattingTuple NULL -> NULL
    java.lang.String message -> message
    java.lang.Throwable throwable -> throwable
    java.lang.Object[] argArray -> argArray
    54:55:void <init>(java.lang.String) -> <init>
    57:65:void <init>(java.lang.String,java.lang.Object[],java.lang.Throwable) -> <init>
    68:74:java.lang.Object[] trimmedCopy(java.lang.Object[]) -> trimmedCopy
    78:78:java.lang.String getMessage() -> getMessage
    82:82:java.lang.Object[] getArgArray() -> getArgArray
    86:86:java.lang.Throwable getThrowable() -> getThrowable
    47:47:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel -> be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel TRACE -> TRACE
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel DEBUG -> DEBUG
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel INFO -> INFO
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel WARN -> WARN
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel ERROR -> ERROR
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel[] $VALUES -> $VALUES
    21:21:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel[] values() -> values
    21:21:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel valueOf(java.lang.String) -> valueOf
    21:21:void <init>(java.lang.String,int) -> <init>
    21:41:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger -> be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger:
    java.lang.String name() -> name
    boolean isTraceEnabled() -> isTraceEnabled
    void trace(java.lang.String) -> trace
    void trace(java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.String,java.lang.Throwable) -> trace
    boolean isDebugEnabled() -> isDebugEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.String,java.lang.Throwable) -> debug
    boolean isInfoEnabled() -> isInfoEnabled
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.String,java.lang.Throwable) -> info
    boolean isWarnEnabled() -> isWarnEnabled
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Throwable) -> warn
    boolean isErrorEnabled() -> isErrorEnabled
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
    boolean isEnabled(be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel) -> isEnabled
    void log(be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel,java.lang.String) -> log
    void log(be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object) -> log
    void log(be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object,java.lang.Object) -> log
    void log(be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[]) -> log
    void log(be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Throwable) -> log
be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLoggerFactory -> be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLoggerFactory:
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLoggerFactory defaultFactory -> defaultFactory
    33:33:void <init>() -> <init>
    41:52:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLoggerFactory newDefaultFactory(java.lang.String) -> newDefaultFactory
    60:60:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLoggerFactory getDefaultFactory() -> getDefaultFactory
    67:71:void setDefaultFactory(be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLoggerFactory) -> setDefaultFactory
    77:77:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class) -> getInstance
    84:84:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger getInstance(java.lang.String) -> getInstance
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> newInstance
    34:34:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.logging.JdkLogger -> be.alexandre01.dnplugin.shaded.netty.util.internal.logging.JdkLogger:
    long serialVersionUID -> serialVersionUID
    java.util.logging.Logger logger -> logger
    java.lang.String SELF -> SELF
    java.lang.String SUPER -> SUPER
    57:59:void <init>(java.util.logging.Logger) -> <init>
    68:68:boolean isTraceEnabled() -> isTraceEnabled
    79:82:void trace(java.lang.String) -> trace
    100:104:void trace(java.lang.String,java.lang.Object) -> trace
    124:128:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    146:150:void trace(java.lang.String,java.lang.Object[]) -> trace
    162:165:void trace(java.lang.String,java.lang.Throwable) -> trace
    174:174:boolean isDebugEnabled() -> isDebugEnabled
    185:188:void debug(java.lang.String) -> debug
    205:209:void debug(java.lang.String,java.lang.Object) -> debug
    229:233:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    251:255:void debug(java.lang.String,java.lang.Object[]) -> debug
    267:270:void debug(java.lang.String,java.lang.Throwable) -> debug
    279:279:boolean isInfoEnabled() -> isInfoEnabled
    290:293:void info(java.lang.String) -> info
    310:314:void info(java.lang.String,java.lang.Object) -> info
    334:338:void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    356:360:void info(java.lang.String,java.lang.Object[]) -> info
    373:376:void info(java.lang.String,java.lang.Throwable) -> info
    386:386:boolean isWarnEnabled() -> isWarnEnabled
    397:400:void warn(java.lang.String) -> warn
    418:422:void warn(java.lang.String,java.lang.Object) -> warn
    442:446:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    464:468:void warn(java.lang.String,java.lang.Object[]) -> warn
    481:484:void warn(java.lang.String,java.lang.Throwable) -> warn
    493:493:boolean isErrorEnabled() -> isErrorEnabled
    504:507:void error(java.lang.String) -> error
    525:529:void error(java.lang.String,java.lang.Object) -> error
    549:553:void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    571:575:void error(java.lang.String,java.lang.Object[]) -> error
    588:591:void error(java.lang.String,java.lang.Throwable) -> error
    602:607:void log(java.lang.String,java.util.logging.Level,java.lang.String,java.lang.Throwable) -> log
    619:646:void fillCallerData(java.lang.String,java.util.logging.LogRecord) -> fillCallerData
    609:610:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.logging.JdkLoggerFactory -> be.alexandre01.dnplugin.shaded.netty.util.internal.logging.JdkLoggerFactory:
    26:26:void <init>() -> <init>
    30:30:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> newInstance
be.alexandre01.dnplugin.shaded.netty.util.internal.logging.Log4JLogger -> be.alexandre01.dnplugin.shaded.netty.util.internal.logging.Log4JLogger:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger logger -> logger
    java.lang.String FQCN -> FQCN
    boolean traceCapable -> traceCapable
    66:69:void <init>(org.apache.log4j.Logger) -> <init>
    73:76:boolean isTraceCapable() -> isTraceCapable
    87:90:boolean isTraceEnabled() -> isTraceEnabled
    102:103:void trace(java.lang.String) -> trace
    121:126:void trace(java.lang.String,java.lang.Object) -> trace
    146:151:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    169:174:void trace(java.lang.String,java.lang.Object[]) -> trace
    186:187:void trace(java.lang.String,java.lang.Throwable) -> trace
    196:196:boolean isDebugEnabled() -> isDebugEnabled
    207:208:void debug(java.lang.String) -> debug
    226:230:void debug(java.lang.String,java.lang.Object) -> debug
    250:254:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    271:275:void debug(java.lang.String,java.lang.Object[]) -> debug
    287:288:void debug(java.lang.String,java.lang.Throwable) -> debug
    297:297:boolean isInfoEnabled() -> isInfoEnabled
    308:309:void info(java.lang.String) -> info
    326:330:void info(java.lang.String,java.lang.Object) -> info
    350:354:void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    372:376:void info(java.lang.String,java.lang.Object[]) -> info
    389:390:void info(java.lang.String,java.lang.Throwable) -> info
    399:399:boolean isWarnEnabled() -> isWarnEnabled
    410:411:void warn(java.lang.String) -> warn
    429:433:void warn(java.lang.String,java.lang.Object) -> warn
    453:457:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    475:479:void warn(java.lang.String,java.lang.Object[]) -> warn
    492:493:void warn(java.lang.String,java.lang.Throwable) -> warn
    502:502:boolean isErrorEnabled() -> isErrorEnabled
    513:514:void error(java.lang.String) -> error
    532:536:void error(java.lang.String,java.lang.Object) -> error
    556:560:void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    578:582:void error(java.lang.String,java.lang.Object[]) -> error
    595:596:void error(java.lang.String,java.lang.Throwable) -> error
    59:59:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.logging.Log4JLoggerFactory -> be.alexandre01.dnplugin.shaded.netty.util.internal.logging.Log4JLoggerFactory:
    25:25:void <init>() -> <init>
    29:29:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> newInstance
be.alexandre01.dnplugin.shaded.netty.util.internal.logging.MessageFormatter -> be.alexandre01.dnplugin.shaded.netty.util.internal.logging.MessageFormatter:
    char DELIM_START -> DELIM_START
    char DELIM_STOP -> DELIM_STOP
    java.lang.String DELIM_STR -> DELIM_STR
    char ESCAPE_CHAR -> ESCAPE_CHAR
    135:135:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.FormattingTuple format(java.lang.String,java.lang.Object) -> format
    159:159:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object) -> format
    163:171:java.lang.Throwable getThrowableCandidate(java.lang.Object[]) -> getThrowableCandidate
    187:245:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[]) -> arrayFormat
    252:255:boolean isEscapedDelimeter(java.lang.String,int) -> isEscapedDelimeter
    260:260:boolean isDoubleEscaped(java.lang.String,int) -> isDoubleEscaped
    266:295:void deeplyAppendParameter(java.lang.StringBuffer,java.lang.Object,java.util.Map) -> deeplyAppendParameter
    299:308:void safeObjectAppend(java.lang.StringBuffer,java.lang.Object) -> safeObjectAppend
    312:328:void objectArrayAppend(java.lang.StringBuffer,java.lang.Object[],java.util.Map) -> objectArrayAppend
    331:340:void booleanArrayAppend(java.lang.StringBuffer,boolean[]) -> booleanArrayAppend
    343:352:void byteArrayAppend(java.lang.StringBuffer,byte[]) -> byteArrayAppend
    355:364:void charArrayAppend(java.lang.StringBuffer,char[]) -> charArrayAppend
    367:376:void shortArrayAppend(java.lang.StringBuffer,short[]) -> shortArrayAppend
    379:388:void intArrayAppend(java.lang.StringBuffer,int[]) -> intArrayAppend
    391:400:void longArrayAppend(java.lang.StringBuffer,long[]) -> longArrayAppend
    403:412:void floatArrayAppend(java.lang.StringBuffer,float[]) -> floatArrayAppend
    415:424:void doubleArrayAppend(java.lang.StringBuffer,double[]) -> doubleArrayAppend
    426:427:void <init>() -> <init>
be.alexandre01.dnplugin.shaded.netty.util.internal.logging.Slf4JLogger -> be.alexandre01.dnplugin.shaded.netty.util.internal.logging.Slf4JLogger:
    long serialVersionUID -> serialVersionUID
    org.slf4j.Logger logger -> logger
    30:32:void <init>(org.slf4j.Logger) -> <init>
    36:36:boolean isTraceEnabled() -> isTraceEnabled
    41:42:void trace(java.lang.String) -> trace
    46:47:void trace(java.lang.String,java.lang.Object) -> trace
    51:52:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    56:57:void trace(java.lang.String,java.lang.Object[]) -> trace
    61:62:void trace(java.lang.String,java.lang.Throwable) -> trace
    66:66:boolean isDebugEnabled() -> isDebugEnabled
    71:72:void debug(java.lang.String) -> debug
    76:77:void debug(java.lang.String,java.lang.Object) -> debug
    81:82:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    86:87:void debug(java.lang.String,java.lang.Object[]) -> debug
    91:92:void debug(java.lang.String,java.lang.Throwable) -> debug
    96:96:boolean isInfoEnabled() -> isInfoEnabled
    101:102:void info(java.lang.String) -> info
    106:107:void info(java.lang.String,java.lang.Object) -> info
    111:112:void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    116:117:void info(java.lang.String,java.lang.Object[]) -> info
    121:122:void info(java.lang.String,java.lang.Throwable) -> info
    126:126:boolean isWarnEnabled() -> isWarnEnabled
    131:132:void warn(java.lang.String) -> warn
    136:137:void warn(java.lang.String,java.lang.Object) -> warn
    141:142:void warn(java.lang.String,java.lang.Object[]) -> warn
    146:147:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    151:152:void warn(java.lang.String,java.lang.Throwable) -> warn
    156:156:boolean isErrorEnabled() -> isErrorEnabled
    161:162:void error(java.lang.String) -> error
    166:167:void error(java.lang.String,java.lang.Object) -> error
    171:172:void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    176:177:void error(java.lang.String,java.lang.Object[]) -> error
    181:182:void error(java.lang.String,java.lang.Throwable) -> error
be.alexandre01.dnplugin.shaded.netty.util.internal.logging.Slf4JLoggerFactory -> be.alexandre01.dnplugin.shaded.netty.util.internal.logging.Slf4JLoggerFactory:
    boolean $assertionsDisabled -> $assertionsDisabled
    32:33:void <init>() -> <init>
    35:63:void <init>(boolean) -> <init>
    67:67:be.alexandre01.dnplugin.shaded.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> newInstance
    30:30:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.netty.util.internal.logging.Slf4JLoggerFactory$1 -> be.alexandre01.dnplugin.shaded.netty.util.internal.logging.Slf4JLoggerFactory$1:
    java.lang.StringBuffer val$buf -> val$buf
    be.alexandre01.dnplugin.shaded.netty.util.internal.logging.Slf4JLoggerFactory this$0 -> this$0
    43:43:void <init>(be.alexandre01.dnplugin.shaded.netty.util.internal.logging.Slf4JLoggerFactory,java.lang.StringBuffer) -> <init>
    46:47:void write(int) -> write
be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions -> be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions:
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle defaultStyle -> defaultStyle
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle defaultFlowStyle -> defaultFlowStyle
    boolean canonical -> canonical
    boolean allowUnicode -> allowUnicode
    boolean allowReadOnlyProperties -> allowReadOnlyProperties
    int indent -> indent
    int indicatorIndent -> indicatorIndent
    int bestWidth -> bestWidth
    boolean splitLines -> splitLines
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$LineBreak lineBreak -> lineBreak
    boolean explicitStart -> explicitStart
    boolean explicitEnd -> explicitEnd
    java.util.TimeZone timeZone -> timeZone
    int maxSimpleKeyLength -> maxSimpleKeyLength
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$NonPrintableStyle nonPrintableStyle -> nonPrintableStyle
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version version -> version
    java.util.Map tags -> tags
    java.lang.Boolean prettyFlow -> prettyFlow
    be.alexandre01.dnplugin.shaded.snakeyaml.serializer.AnchorGenerator anchorGenerator -> anchorGenerator
    26:202:void <init>() -> <init>
    205:205:boolean isAllowUnicode() -> isAllowUnicode
    219:220:void setAllowUnicode(boolean) -> setAllowUnicode
    223:223:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle getDefaultScalarStyle() -> getDefaultScalarStyle
    234:238:void setDefaultScalarStyle(be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle) -> setDefaultScalarStyle
    241:248:void setIndent(int) -> setIndent
    251:251:int getIndent() -> getIndent
    255:262:void setIndicatorIndent(int) -> setIndicatorIndent
    265:265:int getIndicatorIndent() -> getIndicatorIndent
    269:270:void setVersion(be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version) -> setVersion
    273:273:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version getVersion() -> getVersion
    283:284:void setCanonical(boolean) -> setCanonical
    287:287:boolean isCanonical() -> isCanonical
    298:299:void setPrettyFlow(boolean) -> setPrettyFlow
    302:302:boolean isPrettyFlow() -> isPrettyFlow
    314:315:void setWidth(int) -> setWidth
    318:318:int getWidth() -> getWidth
    329:330:void setSplitLines(boolean) -> setSplitLines
    333:333:boolean getSplitLines() -> getSplitLines
    337:337:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$LineBreak getLineBreak() -> getLineBreak
    341:345:void setDefaultFlowStyle(be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle) -> setDefaultFlowStyle
    348:348:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle getDefaultFlowStyle() -> getDefaultFlowStyle
    358:362:void setLineBreak(be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$LineBreak) -> setLineBreak
    365:365:boolean isExplicitStart() -> isExplicitStart
    369:370:void setExplicitStart(boolean) -> setExplicitStart
    373:373:boolean isExplicitEnd() -> isExplicitEnd
    377:378:void setExplicitEnd(boolean) -> setExplicitEnd
    381:381:java.util.Map getTags() -> getTags
    385:386:void setTags(java.util.Map) -> setTags
    395:395:boolean isAllowReadOnlyProperties() -> isAllowReadOnlyProperties
    407:408:void setAllowReadOnlyProperties(boolean) -> setAllowReadOnlyProperties
    411:411:java.util.TimeZone getTimeZone() -> getTimeZone
    420:421:void setTimeZone(java.util.TimeZone) -> setTimeZone
    425:425:be.alexandre01.dnplugin.shaded.snakeyaml.serializer.AnchorGenerator getAnchorGenerator() -> getAnchorGenerator
    429:430:void setAnchorGenerator(be.alexandre01.dnplugin.shaded.snakeyaml.serializer.AnchorGenerator) -> setAnchorGenerator
    433:433:int getMaxSimpleKeyLength() -> getMaxSimpleKeyLength
    442:446:void setMaxSimpleKeyLength(int) -> setMaxSimpleKeyLength
    449:449:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$NonPrintableStyle getNonPrintableStyle() -> getNonPrintableStyle
    458:459:void setNonPrintableStyle(be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$NonPrintableStyle) -> setNonPrintableStyle
be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle -> be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle:
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle FLOW -> FLOW
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle BLOCK -> BLOCK
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle AUTO -> AUTO
    java.lang.Boolean styleBoolean -> styleBoolean
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle[] $VALUES -> $VALUES
    84:84:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle[] values() -> values
    84:84:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle valueOf(java.lang.String) -> valueOf
    89:91:void <init>(java.lang.String,int,java.lang.Boolean) -> <init>
    100:101:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle fromBoolean(java.lang.Boolean) -> fromBoolean
    106:106:java.lang.Boolean getStyleBoolean() -> getStyleBoolean
    111:111:java.lang.String toString() -> toString
    84:85:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$LineBreak -> be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$LineBreak:
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$LineBreak WIN -> WIN
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$LineBreak MAC -> MAC
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$LineBreak UNIX -> UNIX
    java.lang.String lineBreak -> lineBreak
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$LineBreak[] $VALUES -> $VALUES
    118:118:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$LineBreak[] values() -> values
    118:118:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$LineBreak valueOf(java.lang.String) -> valueOf
    123:125:void <init>(java.lang.String,int,java.lang.String) -> <init>
    128:128:java.lang.String getString() -> getString
    133:133:java.lang.String toString() -> toString
    137:143:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$LineBreak getPlatformLineBreak() -> getPlatformLineBreak
    118:119:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$NonPrintableStyle -> be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$NonPrintableStyle:
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$NonPrintableStyle BINARY -> BINARY
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$NonPrintableStyle ESCAPE -> ESCAPE
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$NonPrintableStyle[] $VALUES -> $VALUES
    172:172:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$NonPrintableStyle[] values() -> values
    172:172:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$NonPrintableStyle valueOf(java.lang.String) -> valueOf
    172:172:void <init>(java.lang.String,int) -> <init>
    172:180:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle -> be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle:
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle DOUBLE_QUOTED -> DOUBLE_QUOTED
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle SINGLE_QUOTED -> SINGLE_QUOTED
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle LITERAL -> LITERAL
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle FOLDED -> FOLDED
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle PLAIN -> PLAIN
    java.lang.Character styleChar -> styleChar
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle[] $VALUES -> $VALUES
    38:38:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle[] values() -> values
    38:38:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle valueOf(java.lang.String) -> valueOf
    43:45:void <init>(java.lang.String,int,java.lang.Character) -> <init>
    48:48:java.lang.Character getChar() -> getChar
    53:53:java.lang.String toString() -> toString
    57:70:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle createStyle(java.lang.Character) -> createStyle
    38:40:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version -> be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version:
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version V1_0 -> V1_0
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version V1_1 -> V1_1
    java.lang.Integer[] version -> version
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version[] $VALUES -> $VALUES
    150:150:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version[] values() -> values
    150:150:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version valueOf(java.lang.String) -> valueOf
    155:157:void <init>(java.lang.String,int,java.lang.Integer[]) -> <init>
    159:159:int major() -> major
    160:160:int minor() -> minor
    163:163:java.lang.String getRepresentation() -> getRepresentation
    168:168:java.lang.String toString() -> toString
    150:151:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.LoaderOptions -> be.alexandre01.dnplugin.shaded.snakeyaml.LoaderOptions:
    boolean allowDuplicateKeys -> allowDuplicateKeys
    boolean wrappedToRootException -> wrappedToRootException
    int maxAliasesForCollections -> maxAliasesForCollections
    boolean allowRecursiveKeys -> allowRecursiveKeys
    18:22:void <init>() -> <init>
    26:26:boolean isAllowDuplicateKeys() -> isAllowDuplicateKeys
    45:46:void setAllowDuplicateKeys(boolean) -> setAllowDuplicateKeys
    49:49:boolean isWrappedToRootException() -> isWrappedToRootException
    60:61:void setWrappedToRootException(boolean) -> setWrappedToRootException
    64:64:int getMaxAliasesForCollections() -> getMaxAliasesForCollections
    68:69:void setMaxAliasesForCollections(int) -> setMaxAliasesForCollections
    72:73:void setAllowRecursiveKeys(boolean) -> setAllowRecursiveKeys
    76:76:boolean getAllowRecursiveKeys() -> getAllowRecursiveKeys
be.alexandre01.dnplugin.shaded.snakeyaml.TypeDescription -> be.alexandre01.dnplugin.shaded.snakeyaml.TypeDescription:
    java.util.logging.Logger log -> log
    java.lang.Class type -> type
    java.lang.Class impl -> impl
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag tag -> tag
    java.util.Set dumpProperties -> dumpProperties
    be.alexandre01.dnplugin.shaded.snakeyaml.introspector.PropertyUtils propertyUtils -> propertyUtils
    boolean delegatesChecked -> delegatesChecked
    java.util.Map properties -> properties
    java.util.Set excludes -> excludes
    java.lang.String[] includes -> includes
    be.alexandre01.dnplugin.shaded.snakeyaml.introspector.BeanAccess beanAccess -> beanAccess
    70:71:void <init>(java.lang.Class,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag) -> <init>
    63:78:void <init>(java.lang.Class,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,java.lang.Class) -> <init>
    81:82:void <init>(java.lang.Class,java.lang.String) -> <init>
    85:86:void <init>(java.lang.Class) -> <init>
    89:90:void <init>(java.lang.Class,java.lang.Class) -> <init>
    99:99:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag getTag() -> getTag
    110:111:void setTag(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag) -> setTag
    121:122:void setTag(java.lang.String) -> setTag
    130:130:java.lang.Class getType() -> getType
    143:144:void putListPropertyType(java.lang.String,java.lang.Class) -> putListPropertyType
    155:161:java.lang.Class getListPropertyType(java.lang.String) -> getListPropertyType
    177:178:void putMapPropertyType(java.lang.String,java.lang.Class,java.lang.Class) -> putMapPropertyType
    189:195:java.lang.Class getMapKeyType(java.lang.String) -> getMapKeyType
    207:213:java.lang.Class getMapValueType(java.lang.String) -> getMapValueType
    226:233:void addPropertyParameters(java.lang.String,java.lang.Class[]) -> addPropertyParameters
    237:237:java.lang.String toString() -> toString
    241:249:void checkDelegates() -> checkDelegates
    252:258:be.alexandre01.dnplugin.shaded.snakeyaml.introspector.Property discoverProperty(java.lang.String) -> discoverProperty
    262:265:be.alexandre01.dnplugin.shaded.snakeyaml.introspector.Property getProperty(java.lang.String) -> getProperty
    284:285:void substituteProperty(java.lang.String,java.lang.Class,java.lang.String,java.lang.String,java.lang.Class[]) -> substituteProperty
    288:293:void substituteProperty(be.alexandre01.dnplugin.shaded.snakeyaml.introspector.PropertySubstitute) -> substituteProperty
    296:297:void setPropertyUtils(be.alexandre01.dnplugin.shaded.snakeyaml.introspector.PropertyUtils) -> setPropertyUtils
    301:302:void setIncludes(java.lang.String[]) -> setIncludes
    305:313:void setExcludes(java.lang.String[]) -> setExcludes
    316:368:java.util.Set getProperties() -> getProperties
    376:376:boolean setupPropertyType(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> setupPropertyType
    381:381:boolean setProperty(java.lang.Object,java.lang.String,java.lang.Object) -> setProperty
    393:403:java.lang.Object newInstance(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> newInstance
    407:407:java.lang.Object newInstance(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> newInstance
    416:416:java.lang.Object finalizeConstruction(java.lang.Object) -> finalizeConstruction
    48:49:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.Yaml -> be.alexandre01.dnplugin.shaded.snakeyaml.Yaml:
    be.alexandre01.dnplugin.shaded.snakeyaml.resolver.Resolver resolver -> resolver
    java.lang.String name -> name
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.BaseConstructor constructor -> constructor
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.Representer representer -> representer
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions dumperOptions -> dumperOptions
    be.alexandre01.dnplugin.shaded.snakeyaml.LoaderOptions loadingConfig -> loadingConfig
    66:68:void <init>() -> <init>
    76:77:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions) -> <init>
    85:86:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.LoaderOptions) -> <init>
    94:95:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.representer.Representer) -> <init>
    103:104:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.BaseConstructor) -> <init>
    113:114:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.BaseConstructor,be.alexandre01.dnplugin.shaded.snakeyaml.representer.Representer) -> <init>
    117:122:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions initDumperOptions(be.alexandre01.dnplugin.shaded.snakeyaml.representer.Representer) -> initDumperOptions
    133:134:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.representer.Representer,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions) -> <init>
    145:146:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.BaseConstructor,be.alexandre01.dnplugin.shaded.snakeyaml.representer.Representer,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions) -> <init>
    159:160:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.BaseConstructor,be.alexandre01.dnplugin.shaded.snakeyaml.representer.Representer,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions,be.alexandre01.dnplugin.shaded.snakeyaml.LoaderOptions) -> <init>
    173:174:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.BaseConstructor,be.alexandre01.dnplugin.shaded.snakeyaml.representer.Representer,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions,be.alexandre01.dnplugin.shaded.snakeyaml.resolver.Resolver) -> <init>
    187:209:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.BaseConstructor,be.alexandre01.dnplugin.shaded.snakeyaml.representer.Representer,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions,be.alexandre01.dnplugin.shaded.snakeyaml.LoaderOptions,be.alexandre01.dnplugin.shaded.snakeyaml.resolver.Resolver) -> <init>
    218:220:java.lang.String dump(java.lang.Object) -> dump
    232:232:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node represent(java.lang.Object) -> represent
    242:244:java.lang.String dumpAll(java.util.Iterator) -> dumpAll
    254:257:void dump(java.lang.Object,java.io.Writer) -> dump
    266:267:void dumpAll(java.util.Iterator,java.io.Writer) -> dumpAll
    270:282:void dumpAll(java.util.Iterator,java.io.Writer,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag) -> dumpAll
    321:330:java.lang.String dumpAs(java.lang.Object,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle) -> dumpAs
    352:352:java.lang.String dumpAsMap(java.lang.Object) -> dumpAsMap
    363:372:java.util.List serialize(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> serialize
    398:398:java.lang.Object load(java.lang.String) -> load
    411:411:java.lang.Object load(java.io.InputStream) -> load
    424:424:java.lang.Object load(java.io.Reader) -> load
    438:438:java.lang.Object loadAs(java.io.Reader,java.lang.Class) -> loadAs
    452:452:java.lang.Object loadAs(java.lang.String,java.lang.Class) -> loadAs
    466:466:java.lang.Object loadAs(java.io.InputStream,java.lang.Class) -> loadAs
    470:472:java.lang.Object loadFromReader(be.alexandre01.dnplugin.shaded.snakeyaml.reader.StreamReader,java.lang.Class) -> loadFromReader
    484:502:java.lang.Iterable loadAll(java.io.Reader) -> loadAll
    528:528:java.lang.Iterable loadAll(java.lang.String) -> loadAll
    540:540:java.lang.Iterable loadAll(java.io.InputStream) -> loadAll
    553:554:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node compose(java.io.Reader) -> compose
    566:588:java.lang.Iterable composeAll(java.io.Reader) -> composeAll
    614:615:void addImplicitResolver(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,java.util.regex.Pattern,java.lang.String) -> addImplicitResolver
    619:619:java.lang.String toString() -> toString
    630:630:java.lang.String getName() -> getName
    639:640:void setName(java.lang.String) -> setName
    650:672:java.lang.Iterable parse(java.io.Reader) -> parse
    689:691:void setBeanAccess(be.alexandre01.dnplugin.shaded.snakeyaml.introspector.BeanAccess) -> setBeanAccess
    694:696:void addTypeDescription(be.alexandre01.dnplugin.shaded.snakeyaml.TypeDescription) -> addTypeDescription
be.alexandre01.dnplugin.shaded.snakeyaml.Yaml$1 -> be.alexandre01.dnplugin.shaded.snakeyaml.Yaml$1:
    be.alexandre01.dnplugin.shaded.snakeyaml.Yaml this$0 -> this$0
    486:486:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.Yaml) -> <init>
    489:489:boolean hasNext() -> hasNext
    494:494:java.lang.Object next() -> next
    499:499:void remove() -> remove
be.alexandre01.dnplugin.shaded.snakeyaml.Yaml$2 -> be.alexandre01.dnplugin.shaded.snakeyaml.Yaml$2:
    be.alexandre01.dnplugin.shaded.snakeyaml.composer.Composer val$composer -> val$composer
    be.alexandre01.dnplugin.shaded.snakeyaml.Yaml this$0 -> this$0
    567:567:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.Yaml,be.alexandre01.dnplugin.shaded.snakeyaml.composer.Composer) -> <init>
    570:570:boolean hasNext() -> hasNext
    575:579:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node next() -> next
    585:585:void remove() -> remove
    567:567:java.lang.Object next() -> next
be.alexandre01.dnplugin.shaded.snakeyaml.Yaml$3 -> be.alexandre01.dnplugin.shaded.snakeyaml.Yaml$3:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.Parser val$parser -> val$parser
    be.alexandre01.dnplugin.shaded.snakeyaml.Yaml this$0 -> this$0
    651:651:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.Yaml,be.alexandre01.dnplugin.shaded.snakeyaml.parser.Parser) -> <init>
    654:654:boolean hasNext() -> hasNext
    659:663:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event next() -> next
    669:669:void remove() -> remove
    651:651:java.lang.Object next() -> next
be.alexandre01.dnplugin.shaded.snakeyaml.Yaml$EventIterable -> be.alexandre01.dnplugin.shaded.snakeyaml.Yaml$EventIterable:
    java.util.Iterator iterator -> iterator
    678:680:void <init>(java.util.Iterator) -> <init>
    684:684:java.util.Iterator iterator() -> iterator
be.alexandre01.dnplugin.shaded.snakeyaml.Yaml$NodeIterable -> be.alexandre01.dnplugin.shaded.snakeyaml.Yaml$NodeIterable:
    java.util.Iterator iterator -> iterator
    594:596:void <init>(java.util.Iterator) -> <init>
    600:600:java.util.Iterator iterator() -> iterator
be.alexandre01.dnplugin.shaded.snakeyaml.Yaml$SilentEmitter -> be.alexandre01.dnplugin.shaded.snakeyaml.Yaml$SilentEmitter:
    java.util.List events -> events
    375:376:void <init>() -> <init>
    379:379:java.util.List getEvents() -> getEvents
    384:385:void emit(be.alexandre01.dnplugin.shaded.snakeyaml.events.Event) -> emit
    375:375:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.Yaml$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.Yaml$YamlIterable -> be.alexandre01.dnplugin.shaded.snakeyaml.Yaml$YamlIterable:
    java.util.Iterator iterator -> iterator
    508:510:void <init>(java.util.Iterator) -> <init>
    514:514:java.util.Iterator iterator() -> iterator
be.alexandre01.dnplugin.shaded.snakeyaml.composer.Composer -> be.alexandre01.dnplugin.shaded.snakeyaml.composer.Composer:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.Parser parser -> parser
    be.alexandre01.dnplugin.shaded.snakeyaml.resolver.Resolver resolver -> resolver
    java.util.Map anchors -> anchors
    java.util.Set recursiveNodes -> recursiveNodes
    int nonScalarAliasesCount -> nonScalarAliasesCount
    be.alexandre01.dnplugin.shaded.snakeyaml.LoaderOptions loadingConfig -> loadingConfig
    60:61:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.Parser,be.alexandre01.dnplugin.shaded.snakeyaml.resolver.Resolver) -> <init>
    56:69:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.Parser,be.alexandre01.dnplugin.shaded.snakeyaml.resolver.Resolver,be.alexandre01.dnplugin.shaded.snakeyaml.LoaderOptions) -> <init>
    78:82:boolean checkNode() -> checkNode
    93:101:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node getNode() -> getNode
    115:130:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node getSingleNode() -> getSingleNode
    134:166:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node composeNode(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> composeNode
    170:187:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node composeScalarNode(java.lang.String) -> composeScalarNode
    191:213:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node composeSequenceNode(java.lang.String) -> composeSequenceNode
    217:240:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node composeMappingNode(java.lang.String) -> composeMappingNode
    244:250:void composeMappingChildren(java.util.List,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.MappingNode) -> composeMappingChildren
    253:253:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node composeKeyNode(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.MappingNode) -> composeKeyNode
    257:257:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node composeValueNode(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.MappingNode) -> composeValueNode
be.alexandre01.dnplugin.shaded.snakeyaml.composer.ComposerException -> be.alexandre01.dnplugin.shaded.snakeyaml.composer.ComposerException:
    long serialVersionUID -> serialVersionUID
    25:26:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.AbstractConstruct -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.AbstractConstruct:
    25:25:void <init>() -> <init>
    35:38:void construct2ndStep(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node,java.lang.Object) -> construct2ndStep
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.BaseConstructor -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.BaseConstructor:
    java.util.Map yamlClassConstructors -> yamlClassConstructors
    java.util.Map yamlConstructors -> yamlConstructors
    java.util.Map yamlMultiConstructors -> yamlMultiConstructors
    be.alexandre01.dnplugin.shaded.snakeyaml.composer.Composer composer -> composer
    java.util.Map constructedObjects -> constructedObjects
    java.util.Set recursiveObjects -> recursiveObjects
    java.util.ArrayList maps2fill -> maps2fill
    java.util.ArrayList sets2fill -> sets2fill
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag rootTag -> rootTag
    be.alexandre01.dnplugin.shaded.snakeyaml.introspector.PropertyUtils propertyUtils -> propertyUtils
    boolean explicitPropertyUtils -> explicitPropertyUtils
    boolean allowDuplicateKeys -> allowDuplicateKeys
    boolean wrappedToRootException -> wrappedToRootException
    java.util.Map typeDefinitions -> typeDefinitions
    java.util.Map typeTags -> typeTags
    be.alexandre01.dnplugin.shaded.snakeyaml.LoaderOptions loadingConfig -> loadingConfig
    91:92:void <init>() -> <init>
    56:110:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.LoaderOptions) -> <init>
    113:114:void setComposer(be.alexandre01.dnplugin.shaded.snakeyaml.composer.Composer) -> setComposer
    123:123:boolean checkData() -> checkData
    133:138:java.lang.Object getData() -> getData
    150:160:java.lang.Object getSingleData(java.lang.Class) -> getSingleData
    173:186:java.lang.Object constructDocument(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> constructDocument
    193:206:void fillRecursive() -> fillRecursive
    216:219:java.lang.Object constructObject(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> constructObject
    223:238:java.lang.Object constructObjectNoCheck(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> constructObjectNoCheck
    250:262:be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Construct getConstructor(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> getConstructor
    267:267:java.lang.String constructScalar(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.ScalarNode) -> constructScalar
    272:272:java.util.List createDefaultList(int) -> createDefaultList
    276:276:java.util.Set createDefaultSet(int) -> createDefaultSet
    281:281:java.util.Map createDefaultMap(int) -> createDefaultMap
    285:285:java.lang.Object createArray(java.lang.Class,int) -> createArray
    291:295:java.lang.Object finalizeConstruction(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node,java.lang.Object) -> finalizeConstruction
    301:303:java.lang.Object newInstance(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> newInstance
    308:308:java.lang.Object newInstance(java.lang.Class,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> newInstance
    313:339:java.lang.Object newInstance(java.lang.Class,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node,boolean) -> newInstance
    345:347:java.util.Set newSet(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.CollectionNode) -> newSet
    354:356:java.util.List newList(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.SequenceNode) -> newList
    363:365:java.util.Map newMap(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.MappingNode) -> newMap
    373:375:java.util.List constructSequence(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.SequenceNode) -> constructSequence
    379:381:java.util.Set constructSet(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.SequenceNode) -> constructSet
    385:385:java.lang.Object constructArray(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.SequenceNode) -> constructArray
    389:392:void constructSequenceStep2(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.SequenceNode,java.util.Collection) -> constructSequenceStep2
    395:449:java.lang.Object constructArrayStep2(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.SequenceNode,java.lang.Object) -> constructArrayStep2
    453:455:java.util.Set constructSet(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.MappingNode) -> constructSet
    459:461:java.util.Map constructMapping(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.MappingNode) -> constructMapping
    465:490:void constructMapping2ndStep(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.MappingNode,java.util.Map) -> constructMapping2ndStep
    499:500:void postponeMapFilling(java.util.Map,java.lang.Object,java.lang.Object) -> postponeMapFilling
    503:521:void constructSet2ndStep(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.MappingNode,java.util.Set) -> constructSet2ndStep
    530:531:void postponeSetFilling(java.util.Set,java.lang.Object) -> postponeSetFilling
    548:554:void setPropertyUtils(be.alexandre01.dnplugin.shaded.snakeyaml.introspector.PropertyUtils) -> setPropertyUtils
    557:560:be.alexandre01.dnplugin.shaded.snakeyaml.introspector.PropertyUtils getPropertyUtils() -> getPropertyUtils
    573:579:be.alexandre01.dnplugin.shaded.snakeyaml.TypeDescription addTypeDescription(be.alexandre01.dnplugin.shaded.snakeyaml.TypeDescription) -> addTypeDescription
    601:601:boolean isExplicitPropertyUtils() -> isExplicitPropertyUtils
    605:605:boolean isAllowDuplicateKeys() -> isAllowDuplicateKeys
    609:610:void setAllowDuplicateKeys(boolean) -> setAllowDuplicateKeys
    613:613:boolean isWrappedToRootException() -> isWrappedToRootException
    617:618:void setWrappedToRootException(boolean) -> setWrappedToRootException
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.BaseConstructor$RecursiveTuple -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.BaseConstructor$RecursiveTuple:
    java.lang.Object _1 -> _1
    java.lang.Object _2 -> _2
    586:589:void <init>(java.lang.Object,java.lang.Object) -> <init>
    592:592:java.lang.Object _2() -> _2
    596:596:java.lang.Object _1() -> _1
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Construct -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Construct:
    java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
    void construct2ndStep(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node,java.lang.Object) -> construct2ndStep
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor:
    47:48:void <init>() -> <init>
    51:52:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.LoaderOptions) -> <init>
    61:62:void <init>(java.lang.Class) -> <init>
    65:66:void <init>(java.lang.Class,be.alexandre01.dnplugin.shaded.snakeyaml.LoaderOptions) -> <init>
    72:75:java.lang.Class checkRoot(java.lang.Class) -> checkRoot
    79:80:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.TypeDescription) -> <init>
    83:84:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.TypeDescription,be.alexandre01.dnplugin.shaded.snakeyaml.LoaderOptions) -> <init>
    87:88:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.TypeDescription,java.util.Collection) -> <init>
    91:108:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.TypeDescription,java.util.Collection,be.alexandre01.dnplugin.shaded.snakeyaml.LoaderOptions) -> <init>
    120:121:void <init>(java.lang.String) -> <init>
    124:125:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.LoaderOptions) -> <init>
    128:134:java.lang.String check(java.lang.String) -> check
    657:669:java.lang.Class getClassForNode(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> getClassForNode
    675:677:java.lang.Class getClassForName(java.lang.String) -> getClassForName
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor$ConstructMapping -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor$ConstructMapping:
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor this$0 -> this$0
    141:141:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor) -> <init>
    153:171:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
    178:185:void construct2ndStep(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node,java.lang.Object) -> construct2ndStep
    212:295:java.lang.Object constructJavaBean2ndStep(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.MappingNode,java.lang.Object) -> constructJavaBean2ndStep
    300:305:java.lang.Object newInstance(be.alexandre01.dnplugin.shaded.snakeyaml.TypeDescription,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> newInstance
    309:309:be.alexandre01.dnplugin.shaded.snakeyaml.introspector.Property getProperty(java.lang.Class,java.lang.String) -> getProperty
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor$ConstructScalar -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor$ConstructScalar:
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor this$0 -> this$0
    356:356:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor) -> <init>
    358:424:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
    431:516:java.lang.Object constructStandardJavaInstance(java.lang.Class,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.ScalarNode) -> constructStandardJavaInstance
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor$ConstructSequence -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor$ConstructSequence:
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor this$0 -> this$0
    524:524:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor) -> <init>
    527:606:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
    612:639:java.lang.Class wrapIfPrimitive(java.lang.Class) -> wrapIfPrimitive
    644:653:void construct2ndStep(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node,java.lang.Object) -> construct2ndStep
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor$ConstructYamlObject -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor$ConstructYamlObject:
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor this$0 -> this$0
    319:319:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor) -> <init>
    322:326:be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Construct getConstructor(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> getConstructor
    331:336:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
    342:349:void construct2ndStep(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node,java.lang.Object) -> construct2ndStep
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.ConstructorException -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.ConstructorException:
    long serialVersionUID -> serialVersionUID
    26:27:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.Throwable) -> <init>
    31:32:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.CustomClassLoaderConstructor -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.CustomClassLoaderConstructor:
    java.lang.ClassLoader loader -> loader
    25:26:void <init>(java.lang.ClassLoader) -> <init>
    22:34:void <init>(java.lang.Class,java.lang.ClassLoader) -> <init>
    38:38:java.lang.Class getClassForName(java.lang.String) -> getClassForName
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.DuplicateKeyException -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.DuplicateKeyException:
    24:25:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.Object,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor:
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructUndefined undefinedConstructor -> undefinedConstructor
    java.util.Map BOOL_VALUES -> BOOL_VALUES
    int[][] RADIX_MAX -> RADIX_MAX
    java.util.regex.Pattern TIMESTAMP_REGEXP -> TIMESTAMP_REGEXP
    java.util.regex.Pattern YMD_REGEXP -> YMD_REGEXP
    51:52:void <init>() -> <init>
    55:72:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.LoaderOptions) -> <init>
    76:81:void flattenMapping(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.MappingNode) -> flattenMapping
    84:118:void processDuplicateKeys(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.MappingNode) -> processDuplicateKeys
    136:184:java.util.List mergeNode(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.MappingNode,boolean,java.util.Map,java.util.List) -> mergeNode
    189:191:void constructMapping2ndStep(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.MappingNode,java.util.Map) -> constructMapping2ndStep
    195:197:void constructSet2ndStep(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.MappingNode,java.util.Set) -> constructSet2ndStep
    274:274:int maxLen(int,int) -> maxLen
    277:277:int maxLen(long,int) -> maxLen
    280:300:java.lang.Number createNumber(int,java.lang.String,int) -> createNumber
    305:307:java.lang.Number createLongOrBigInteger(java.lang.String,int) -> createLongOrBigInteger
    46:46:java.util.Map access$000() -> access$000
    46:46:java.lang.Number access$100(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor,int,java.lang.String,int) -> access$100
    46:46:java.util.regex.Pattern access$200() -> access$200
    46:46:java.util.regex.Pattern access$300() -> access$300
    48:359:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$1 -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$1:
    int[] $SwitchMap$org$yaml$snakeyaml$nodes$NodeId -> $SwitchMap$org$yaml$snakeyaml$nodes$NodeId
    143:143:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructUndefined -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructUndefined:
    571:571:void <init>() -> <init>
    574:576:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlBinary -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlBinary:
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor this$0 -> this$0
    345:345:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor) -> <init>
    349:352:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlBool -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlBool:
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor this$0 -> this$0
    217:217:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor) -> <init>
    220:221:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlFloat -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlFloat:
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor this$0 -> this$0
    311:311:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor) -> <init>
    314:340:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlInt -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlInt:
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor this$0 -> this$0
    225:225:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor) -> <init>
    228:261:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlMap -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlMap:
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor this$0 -> this$0
    549:549:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor) -> <init>
    552:556:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
    563:568:void construct2ndStep(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node,java.lang.Object) -> construct2ndStep
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlNull -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlNull:
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor this$0 -> this$0
    199:199:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor) -> <init>
    202:203:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlOmap -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlOmap:
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor this$0 -> this$0
    428:428:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor) -> <init>
    433:460:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlPairs -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlPairs:
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor this$0 -> this$0
    464:464:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor) -> <init>
    469:494:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlSeq -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlSeq:
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor this$0 -> this$0
    527:527:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor) -> <init>
    530:534:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
    541:546:void construct2ndStep(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node,java.lang.Object) -> construct2ndStep
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlSet -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlSet:
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor this$0 -> this$0
    498:498:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor) -> <init>
    501:505:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
    512:517:void construct2ndStep(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node,java.lang.Object) -> construct2ndStep
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlStr -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlStr:
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor this$0 -> this$0
    520:520:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor) -> <init>
    523:523:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp -> be.alexandre01.dnplugin.shaded.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp:
    java.util.Calendar calendar -> calendar
    361:361:void <init>() -> <init>
    365:365:java.util.Calendar getCalendar() -> getCalendar
    370:423:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitable -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitable:
    void emit(be.alexandre01.dnplugin.shaded.snakeyaml.events.Event) -> emit
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter:
    java.util.Map ESCAPE_REPLACEMENTS -> ESCAPE_REPLACEMENTS
    int MIN_INDENT -> MIN_INDENT
    int MAX_INDENT -> MAX_INDENT
    char[] SPACE -> SPACE
    java.util.Map DEFAULT_TAG_PREFIXES -> DEFAULT_TAG_PREFIXES
    java.io.Writer stream -> stream
    be.alexandre01.dnplugin.shaded.snakeyaml.util.ArrayStack states -> states
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.EmitterState state -> state
    java.util.Queue events -> events
    be.alexandre01.dnplugin.shaded.snakeyaml.events.Event event -> event
    be.alexandre01.dnplugin.shaded.snakeyaml.util.ArrayStack indents -> indents
    java.lang.Integer indent -> indent
    int flowLevel -> flowLevel
    boolean rootContext -> rootContext
    boolean mappingContext -> mappingContext
    boolean simpleKeyContext -> simpleKeyContext
    int column -> column
    boolean whitespace -> whitespace
    boolean indention -> indention
    boolean openEnded -> openEnded
    java.lang.Boolean canonical -> canonical
    java.lang.Boolean prettyFlow -> prettyFlow
    boolean allowUnicode -> allowUnicode
    int bestIndent -> bestIndent
    int indicatorIndent -> indicatorIndent
    int bestWidth -> bestWidth
    char[] bestLineBreak -> bestLineBreak
    boolean splitLines -> splitLines
    int maxSimpleKeyLength -> maxSimpleKeyLength
    java.util.Map tagPrefixes -> tagPrefixes
    java.lang.String preparedAnchor -> preparedAnchor
    java.lang.String preparedTag -> preparedTag
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.ScalarAnalysis analysis -> analysis
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle style -> style
    java.util.regex.Pattern HANDLE_FORMAT -> HANDLE_FORMAT
    java.util.regex.Pattern ANCHOR_FORMAT -> ANCHOR_FORMAT
    155:214:void <init>(java.io.Writer,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions) -> <init>
    217:223:void emit(be.alexandre01.dnplugin.shaded.snakeyaml.events.Event) -> emit
    228:239:boolean needMoreEvents() -> needMoreEvents
    244:260:boolean needEvents(int) -> needEvents
    264:274:void increaseIndent(boolean,boolean) -> increaseIndent
    386:414:void expectNode(boolean,boolean,boolean) -> expectNode
    417:422:void expectAlias() -> expectAlias
    425:429:void expectScalar() -> expectScalar
    434:441:void expectFlowSequence() -> expectFlowSequence
    488:495:void expectFlowMapping() -> expectFlowMapping
    573:576:void expectBlockSequence() -> expectBlockSequence
    607:609:void expectBlockMapping() -> expectBlockMapping
    662:662:boolean checkEmptySequence() -> checkEmptySequence
    666:666:boolean checkEmptyMapping() -> checkEmptyMapping
    670:679:boolean checkEmptyDocument() -> checkEmptyDocument
    683:710:boolean checkSimpleKey() -> checkSimpleKey
    716:726:void processAnchor(java.lang.String) -> processAnchor
    729:762:void processTag() -> processTag
    765:788:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle chooseScalarStyle() -> chooseScalarStyle
    792:822:void processScalar() -> processScalar
    827:830:java.lang.String prepareVersion(be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version) -> prepareVersion
    836:843:java.lang.String prepareTagHandle(java.lang.String) -> prepareTagHandle
    847:862:java.lang.String prepareTagPrefix(java.lang.String) -> prepareTagPrefix
    866:891:java.lang.String prepareTag(java.lang.String) -> prepareTag
    897:903:java.lang.String prepareAnchor(java.lang.String) -> prepareAnchor
    908:1071:be.alexandre01.dnplugin.shaded.snakeyaml.emitter.ScalarAnalysis analyzeScalar(java.lang.String) -> analyzeScalar
    1078:1079:void flushStream() -> flushStream
    1083:1083:void writeStreamStart() -> writeStreamStart
    1086:1087:void writeStreamEnd() -> writeStreamEnd
    1091:1100:void writeIndicator(java.lang.String,boolean,boolean,boolean) -> writeIndicator
    1104:1115:void writeIndent() -> writeIndent
    1118:1128:void writeWhitespace(int) -> writeWhitespace
    1131:1139:void writeLineBreak(java.lang.String) -> writeLineBreak
    1142:1145:void writeVersionDirective(java.lang.String) -> writeVersionDirective
    1150:1155:void writeTagDirective(java.lang.String,java.lang.String) -> writeTagDirective
    1159:1219:void writeSingleQuoted(java.lang.String,boolean) -> writeSingleQuoted
    1222:1294:void writeDoubleQuoted(java.lang.String,boolean) -> writeDoubleQuoted
    1297:1307:java.lang.String determineBlockHints(java.lang.String) -> determineBlockHints
    1311:1373:void writeFolded(java.lang.String,boolean) -> writeFolded
    1376:1418:void writeLiteral(java.lang.String) -> writeLiteral
    1421:1486:void writePlain(java.lang.String,boolean) -> writePlain
    62:62:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event access$100(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> access$100
    62:62:be.alexandre01.dnplugin.shaded.snakeyaml.emitter.EmitterState access$202(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,be.alexandre01.dnplugin.shaded.snakeyaml.emitter.EmitterState) -> access$202
    62:62:boolean access$400(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> access$400
    62:62:java.lang.String access$500(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version) -> access$500
    62:62:java.util.Map access$602(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,java.util.Map) -> access$602
    62:62:java.util.Map access$700() -> access$700
    62:62:java.util.Map access$600(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> access$600
    62:62:java.lang.String access$800(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,java.lang.String) -> access$800
    62:62:java.lang.String access$900(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,java.lang.String) -> access$900
    62:62:java.lang.Boolean access$1000(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> access$1000
    62:62:boolean access$1100(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> access$1100
    62:62:be.alexandre01.dnplugin.shaded.snakeyaml.util.ArrayStack access$1500(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> access$1500
    62:62:void access$1600(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,boolean,boolean,boolean) -> access$1600
    62:62:java.lang.Integer access$1802(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,java.lang.Integer) -> access$1802
    62:62:be.alexandre01.dnplugin.shaded.snakeyaml.util.ArrayStack access$1900(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> access$1900
    62:62:int access$2010(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> access$2010
    62:62:int access$2100(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> access$2100
    62:62:int access$2200(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> access$2200
    62:62:boolean access$2300(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> access$2300
    62:62:java.lang.Boolean access$2400(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> access$2400
    62:62:boolean access$2700(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> access$2700
    62:62:int access$3200(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> access$3200
    62:62:void access$3300(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,int) -> access$3300
    63:894:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$1 -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$1:
    int[] $SwitchMap$org$yaml$snakeyaml$DumperOptions$ScalarStyle -> $SwitchMap$org$yaml$snakeyaml$DumperOptions$ScalarStyle
    803:803:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectBlockMappingKey -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectBlockMappingKey:
    boolean first -> first
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter this$0 -> this$0
    620:622:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,boolean) -> <init>
    625:639:void expect() -> expect
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectBlockMappingSimpleValue -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectBlockMappingSimpleValue:
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter this$0 -> this$0
    642:642:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> <init>
    644:647:void expect() -> expect
    642:642:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectBlockMappingValue -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectBlockMappingValue:
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter this$0 -> this$0
    650:650:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> <init>
    652:656:void expect() -> expect
    650:650:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem:
    boolean first -> first
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter this$0 -> this$0
    587:589:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,boolean) -> <init>
    592:602:void expect() -> expect
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectDocumentEnd -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectDocumentEnd:
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter this$0 -> this$0
    360:360:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> <init>
    362:373:void expect() -> expect
    360:360:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectDocumentRoot -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectDocumentRoot:
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter this$0 -> this$0
    376:376:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> <init>
    378:380:void expect() -> expect
    376:376:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectDocumentStart -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectDocumentStart:
    boolean first -> first
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter this$0 -> this$0
    308:310:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,boolean) -> <init>
    313:357:void expect() -> expect
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectFirstBlockMappingKey -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectFirstBlockMappingKey:
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter this$0 -> this$0
    611:611:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> <init>
    613:614:void expect() -> expect
    611:611:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectFirstBlockSequenceItem -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectFirstBlockSequenceItem:
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter this$0 -> this$0
    578:578:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> <init>
    580:581:void expect() -> expect
    578:578:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectFirstDocumentStart -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectFirstDocumentStart:
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter this$0 -> this$0
    299:299:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> <init>
    301:302:void expect() -> expect
    299:299:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey:
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter this$0 -> this$0
    497:497:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> <init>
    499:517:void expect() -> expect
    497:497:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem:
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter this$0 -> this$0
    443:443:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> <init>
    445:457:void expect() -> expect
    443:443:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectFlowMappingKey -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectFlowMappingKey:
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter this$0 -> this$0
    520:520:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> <init>
    522:548:void expect() -> expect
    520:520:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectFlowMappingSimpleValue -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectFlowMappingSimpleValue:
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter this$0 -> this$0
    551:551:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> <init>
    553:556:void expect() -> expect
    551:551:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectFlowMappingValue -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectFlowMappingValue:
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter this$0 -> this$0
    559:559:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> <init>
    561:567:void expect() -> expect
    559:559:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem:
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter this$0 -> this$0
    460:460:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> <init>
    462:482:void expect() -> expect
    460:460:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectNothing -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectNothing:
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter this$0 -> this$0
    291:291:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> <init>
    293:293:void expect() -> expect
    291:291:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectStreamStart -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$ExpectStreamStart:
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter this$0 -> this$0
    280:280:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter) -> <init>
    282:288:void expect() -> expect
    280:280:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter,be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitter$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.EmitterException -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.EmitterException:
    long serialVersionUID -> serialVersionUID
    24:25:void <init>(java.lang.String) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.EmitterState -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.EmitterState:
    void expect() -> expect
be.alexandre01.dnplugin.shaded.snakeyaml.emitter.ScalarAnalysis -> be.alexandre01.dnplugin.shaded.snakeyaml.emitter.ScalarAnalysis:
    java.lang.String scalar -> scalar
    boolean empty -> empty
    boolean multiline -> multiline
    boolean allowFlowPlain -> allowFlowPlain
    boolean allowBlockPlain -> allowBlockPlain
    boolean allowSingleQuoted -> allowSingleQuoted
    boolean allowBlock -> allowBlock
    32:40:void <init>(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean) -> <init>
    43:43:java.lang.String getScalar() -> getScalar
    47:47:boolean isEmpty() -> isEmpty
    51:51:boolean isMultiline() -> isMultiline
    55:55:boolean isAllowFlowPlain() -> isAllowFlowPlain
    59:59:boolean isAllowBlockPlain() -> isAllowBlockPlain
    63:63:boolean isAllowSingleQuoted() -> isAllowSingleQuoted
    67:67:boolean isAllowBlock() -> isAllowBlock
be.alexandre01.dnplugin.shaded.snakeyaml.env.EnvScalarConstructor -> be.alexandre01.dnplugin.shaded.snakeyaml.env.EnvScalarConstructor:
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag ENV_TAG -> ENV_TAG
    java.util.regex.Pattern ENV_FORMAT -> ENV_FORMAT
    37:39:void <init>() -> <init>
    63:85:java.lang.String apply(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> apply
    95:95:java.lang.String getEnv(java.lang.String) -> getEnv
    33:33:java.lang.String access$100(be.alexandre01.dnplugin.shaded.snakeyaml.env.EnvScalarConstructor,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.ScalarNode) -> access$100
    34:35:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.env.EnvScalarConstructor$1 -> be.alexandre01.dnplugin.shaded.snakeyaml.env.EnvScalarConstructor$1:
be.alexandre01.dnplugin.shaded.snakeyaml.env.EnvScalarConstructor$ConstructEnv -> be.alexandre01.dnplugin.shaded.snakeyaml.env.EnvScalarConstructor$ConstructEnv:
    be.alexandre01.dnplugin.shaded.snakeyaml.env.EnvScalarConstructor this$0 -> this$0
    41:41:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.env.EnvScalarConstructor) -> <init>
    43:49:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
    41:41:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.env.EnvScalarConstructor,be.alexandre01.dnplugin.shaded.snakeyaml.env.EnvScalarConstructor$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark -> be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark:
    java.lang.String name -> name
    int index -> index
    int line -> line
    int column -> column
    int[] buffer -> buffer
    int pointer -> pointer
    35:41:int[] toCodePoints(char[]) -> toCodePoints
    45:46:void <init>(java.lang.String,int,int,int,char[],int) -> <init>
    55:56:void <init>(java.lang.String,int,int,int,java.lang.String,int) -> <init>
    59:66:void <init>(java.lang.String,int,int,int,int[],int) -> <init>
    69:69:boolean isLineBreak(int) -> isLineBreak
    73:109:java.lang.String get_snippet(int,int) -> get_snippet
    113:113:java.lang.String get_snippet() -> get_snippet
    118:127:java.lang.String toString() -> toString
    131:131:java.lang.String getName() -> getName
    139:139:int getLine() -> getLine
    147:147:int getColumn() -> getColumn
    155:155:int getIndex() -> getIndex
    159:159:int[] getBuffer() -> getBuffer
    163:163:int getPointer() -> getPointer
be.alexandre01.dnplugin.shaded.snakeyaml.error.MarkedYAMLException -> be.alexandre01.dnplugin.shaded.snakeyaml.error.MarkedYAMLException:
    long serialVersionUID -> serialVersionUID
    java.lang.String context -> context
    be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark contextMark -> contextMark
    java.lang.String problem -> problem
    be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark problemMark -> problemMark
    java.lang.String note -> note
    29:30:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.String) -> <init>
    34:40:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.String,java.lang.Throwable) -> <init>
    43:44:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    48:49:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.Throwable) -> <init>
    53:53:java.lang.String getMessage() -> getMessage
    58:83:java.lang.String toString() -> toString
    87:87:java.lang.String getContext() -> getContext
    91:91:be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark getContextMark() -> getContextMark
    95:95:java.lang.String getProblem() -> getProblem
    99:99:be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark getProblemMark() -> getProblemMark
be.alexandre01.dnplugin.shaded.snakeyaml.error.MissingEnvironmentVariableException -> be.alexandre01.dnplugin.shaded.snakeyaml.error.MissingEnvironmentVariableException:
    25:26:void <init>(java.lang.String) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.error.YAMLException -> be.alexandre01.dnplugin.shaded.snakeyaml.error.YAMLException:
    long serialVersionUID -> serialVersionUID
    22:23:void <init>(java.lang.String) -> <init>
    26:27:void <init>(java.lang.Throwable) -> <init>
    30:31:void <init>(java.lang.String,java.lang.Throwable) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.events.AliasEvent -> be.alexandre01.dnplugin.shaded.snakeyaml.events.AliasEvent:
    25:27:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    31:31:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID getEventId() -> getEventId
be.alexandre01.dnplugin.shaded.snakeyaml.events.CollectionEndEvent -> be.alexandre01.dnplugin.shaded.snakeyaml.events.CollectionEndEvent:
    26:27:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.events.CollectionStartEvent -> be.alexandre01.dnplugin.shaded.snakeyaml.events.CollectionStartEvent:
    java.lang.String tag -> tag
    boolean implicit -> implicit
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle flowStyle -> flowStyle
    34:39:void <init>(java.lang.String,java.lang.String,boolean,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle) -> <init>
    49:50:void <init>(java.lang.String,java.lang.String,boolean,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.Boolean) -> <init>
    59:59:java.lang.String getTag() -> getTag
    69:69:boolean getImplicit() -> getImplicit
    79:79:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle getFlowStyle() -> getFlowStyle
    84:84:java.lang.String getArguments() -> getArguments
    88:88:boolean isFlow() -> isFlow
be.alexandre01.dnplugin.shaded.snakeyaml.events.DocumentEndEvent -> be.alexandre01.dnplugin.shaded.snakeyaml.events.DocumentEndEvent:
    boolean explicit -> explicit
    30:32:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,boolean) -> <init>
    35:35:boolean getExplicit() -> getExplicit
    40:40:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID getEventId() -> getEventId
be.alexandre01.dnplugin.shaded.snakeyaml.events.DocumentStartEvent -> be.alexandre01.dnplugin.shaded.snakeyaml.events.DocumentStartEvent:
    boolean explicit -> explicit
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version version -> version
    java.util.Map tags -> tags
    36:40:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,boolean,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version,java.util.Map) -> <init>
    43:43:boolean getExplicit() -> getExplicit
    55:55:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version getVersion() -> getVersion
    65:65:java.util.Map getTags() -> getTags
    70:70:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID getEventId() -> getEventId
be.alexandre01.dnplugin.shaded.snakeyaml.events.Event -> be.alexandre01.dnplugin.shaded.snakeyaml.events.Event:
    be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark startMark -> startMark
    be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark endMark -> endMark
    32:35:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    38:38:java.lang.String toString() -> toString
    42:42:be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark getStartMark() -> getStartMark
    46:46:be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark getEndMark() -> getEndMark
    55:55:java.lang.String getArguments() -> getArguments
    64:64:boolean is(be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID) -> is
    be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID getEventId() -> getEventId
    78:81:boolean equals(java.lang.Object) -> equals
    90:90:int hashCode() -> hashCode
be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID -> be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID:
    be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID Alias -> Alias
    be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID DocumentEnd -> DocumentEnd
    be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID DocumentStart -> DocumentStart
    be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID MappingEnd -> MappingEnd
    be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID MappingStart -> MappingStart
    be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID Scalar -> Scalar
    be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID SequenceEnd -> SequenceEnd
    be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID SequenceStart -> SequenceStart
    be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID StreamEnd -> StreamEnd
    be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID StreamStart -> StreamStart
    be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID[] $VALUES -> $VALUES
    25:25:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID[] values() -> values
    25:25:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID valueOf(java.lang.String) -> valueOf
    25:25:void <init>(java.lang.String,int) -> <init>
    25:26:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.events.ImplicitTuple -> be.alexandre01.dnplugin.shaded.snakeyaml.events.ImplicitTuple:
    boolean plain -> plain
    boolean nonPlain -> nonPlain
    29:32:void <init>(boolean,boolean) -> <init>
    39:39:boolean canOmitTagInPlainScalar() -> canOmitTagInPlainScalar
    47:47:boolean canOmitTagInNonPlainScalar() -> canOmitTagInNonPlainScalar
    51:51:boolean bothFalse() -> bothFalse
    56:56:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.snakeyaml.events.MappingEndEvent -> be.alexandre01.dnplugin.shaded.snakeyaml.events.MappingEndEvent:
    28:29:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    33:33:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID getEventId() -> getEventId
be.alexandre01.dnplugin.shaded.snakeyaml.events.MappingStartEvent -> be.alexandre01.dnplugin.shaded.snakeyaml.events.MappingStartEvent:
    38:39:void <init>(java.lang.String,java.lang.String,boolean,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle) -> <init>
    49:50:void <init>(java.lang.String,java.lang.String,boolean,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.Boolean) -> <init>
    54:54:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID getEventId() -> getEventId
be.alexandre01.dnplugin.shaded.snakeyaml.events.NodeEvent -> be.alexandre01.dnplugin.shaded.snakeyaml.events.NodeEvent:
    java.lang.String anchor -> anchor
    28:30:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    42:42:java.lang.String getAnchor() -> getAnchor
    47:47:java.lang.String getArguments() -> getArguments
be.alexandre01.dnplugin.shaded.snakeyaml.events.ScalarEvent -> be.alexandre01.dnplugin.shaded.snakeyaml.events.ScalarEvent:
    java.lang.String tag -> tag
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle style -> style
    java.lang.String value -> value
    be.alexandre01.dnplugin.shaded.snakeyaml.events.ImplicitTuple implicit -> implicit
    37:44:void <init>(java.lang.String,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.events.ImplicitTuple,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle) -> <init>
    54:55:void <init>(java.lang.String,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.events.ImplicitTuple,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.Character) -> <init>
    64:64:java.lang.String getTag() -> getTag
    87:87:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle getScalarStyle() -> getScalarStyle
    96:96:java.lang.Character getStyle() -> getStyle
    108:108:java.lang.String getValue() -> getValue
    112:112:be.alexandre01.dnplugin.shaded.snakeyaml.events.ImplicitTuple getImplicit() -> getImplicit
    117:117:java.lang.String getArguments() -> getArguments
    122:122:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID getEventId() -> getEventId
    126:126:boolean isPlain() -> isPlain
be.alexandre01.dnplugin.shaded.snakeyaml.events.SequenceEndEvent -> be.alexandre01.dnplugin.shaded.snakeyaml.events.SequenceEndEvent:
    28:29:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    33:33:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID getEventId() -> getEventId
be.alexandre01.dnplugin.shaded.snakeyaml.events.SequenceStartEvent -> be.alexandre01.dnplugin.shaded.snakeyaml.events.SequenceStartEvent:
    33:34:void <init>(java.lang.String,java.lang.String,boolean,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle) -> <init>
    44:45:void <init>(java.lang.String,java.lang.String,boolean,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.Boolean) -> <init>
    49:49:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID getEventId() -> getEventId
be.alexandre01.dnplugin.shaded.snakeyaml.events.StreamEndEvent -> be.alexandre01.dnplugin.shaded.snakeyaml.events.StreamEndEvent:
    33:34:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    38:38:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID getEventId() -> getEventId
be.alexandre01.dnplugin.shaded.snakeyaml.events.StreamStartEvent -> be.alexandre01.dnplugin.shaded.snakeyaml.events.StreamStartEvent:
    34:35:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    39:39:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID getEventId() -> getEventId
be.alexandre01.dnplugin.shaded.snakeyaml.extensions.compactnotation.CompactConstructor -> be.alexandre01.dnplugin.shaded.snakeyaml.extensions.compactnotation.CompactConstructor:
    java.util.regex.Pattern GUESS_COMPACT -> GUESS_COMPACT
    java.util.regex.Pattern FIRST_PATTERN -> FIRST_PATTERN
    java.util.regex.Pattern PROPERTY_NAME_PATTERN -> PROPERTY_NAME_PATTERN
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Construct compactConstruct -> compactConstruct
    39:39:void <init>() -> <init>
    49:54:java.lang.Object constructCompactFormat(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.ScalarNode,be.alexandre01.dnplugin.shaded.snakeyaml.extensions.compactnotation.CompactData) -> constructCompactFormat
    59:67:java.lang.Object createInstance(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.ScalarNode,be.alexandre01.dnplugin.shaded.snakeyaml.extensions.compactnotation.CompactData) -> createInstance
    72:85:void setProperties(java.lang.Object,java.util.Map) -> setProperties
    88:119:be.alexandre01.dnplugin.shaded.snakeyaml.extensions.compactnotation.CompactData getCompactData(java.lang.String) -> getCompactData
    123:126:be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Construct getCompactConstruct() -> getCompactConstruct
    130:130:be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Construct createCompactConstruct() -> createCompactConstruct
    135:154:be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Construct getConstructor(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> getConstructor
    203:209:void applySequence(java.lang.Object,java.util.List) -> applySequence
    218:233:java.lang.String getSequencePropertyName(java.lang.Class) -> getSequencePropertyName
    39:39:java.util.List access$000(be.alexandre01.dnplugin.shaded.snakeyaml.extensions.compactnotation.CompactConstructor,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.SequenceNode) -> access$000
    39:39:java.lang.String access$100(be.alexandre01.dnplugin.shaded.snakeyaml.extensions.compactnotation.CompactConstructor,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.ScalarNode) -> access$100
    40:44:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.extensions.compactnotation.CompactConstructor$ConstructCompactObject -> be.alexandre01.dnplugin.shaded.snakeyaml.extensions.compactnotation.CompactConstructor$ConstructCompactObject:
    be.alexandre01.dnplugin.shaded.snakeyaml.extensions.compactnotation.CompactConstructor this$0 -> this$0
    157:157:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.extensions.compactnotation.CompactConstructor) -> <init>
    162:174:void construct2ndStep(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node,java.lang.Object) -> construct2ndStep
    182:197:java.lang.Object construct(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> construct
be.alexandre01.dnplugin.shaded.snakeyaml.extensions.compactnotation.CompactData -> be.alexandre01.dnplugin.shaded.snakeyaml.extensions.compactnotation.CompactData:
    java.lang.String prefix -> prefix
    java.util.List arguments -> arguments
    java.util.Map properties -> properties
    25:30:void <init>(java.lang.String) -> <init>
    33:33:java.lang.String getPrefix() -> getPrefix
    37:37:java.util.Map getProperties() -> getProperties
    41:41:java.util.List getArguments() -> getArguments
    46:46:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.snakeyaml.extensions.compactnotation.PackageCompactConstructor -> be.alexandre01.dnplugin.shaded.snakeyaml.extensions.compactnotation.PackageCompactConstructor:
    java.lang.String packageName -> packageName
    21:23:void <init>(java.lang.String) -> <init>
    27:35:java.lang.Class getClassForName(java.lang.String) -> getClassForName
be.alexandre01.dnplugin.shaded.snakeyaml.external.biz.base64Coder.Base64Coder -> be.alexandre01.dnplugin.shaded.snakeyaml.external.biz.base64Coder.Base64Coder:
    java.lang.String systemLineSeparator -> systemLineSeparator
    char[] map1 -> map1
    byte[] map2 -> map2
    69:69:java.lang.String encodeString(java.lang.String) -> encodeString
    82:82:java.lang.String encodeLines(byte[]) -> encodeLines
    104:117:java.lang.String encodeLines(byte[],int,int,int,java.lang.String) -> encodeLines
    129:129:char[] encode(byte[]) -> encode
    143:143:char[] encode(byte[],int) -> encode
    160:181:char[] encode(byte[],int,int) -> encode
    195:195:java.lang.String decodeString(java.lang.String) -> decodeString
    211:218:byte[] decodeLines(java.lang.String) -> decodeLines
    232:232:byte[] decode(java.lang.String) -> decode
    246:246:byte[] decode(char[]) -> decode
    266:298:byte[] decode(char[],int,int) -> decode
    302:303:void <init>() -> <init>
    35:58:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.external.com.google.gdata.util.common.base.Escaper -> be.alexandre01.dnplugin.shaded.snakeyaml.external.com.google.gdata.util.common.base.Escaper:
    java.lang.String escape(java.lang.String) -> escape
    java.lang.Appendable escape(java.lang.Appendable) -> escape
be.alexandre01.dnplugin.shaded.snakeyaml.external.com.google.gdata.util.common.base.PercentEscaper -> be.alexandre01.dnplugin.shaded.snakeyaml.external.com.google.gdata.util.common.base.PercentEscaper:
    java.lang.String SAFECHARS_URLENCODER -> SAFECHARS_URLENCODER
    java.lang.String SAFEPATHCHARS_URLENCODER -> SAFEPATHCHARS_URLENCODER
    java.lang.String SAFEQUERYSTRINGCHARS_URLENCODER -> SAFEQUERYSTRINGCHARS_URLENCODER
    char[] URI_ESCAPED_SPACE -> URI_ESCAPED_SPACE
    char[] UPPER_HEX_DIGITS -> UPPER_HEX_DIGITS
    boolean plusForSpace -> plusForSpace
    boolean[] safeOctets -> safeOctets
    120:138:void <init>(java.lang.String,boolean) -> <init>
    146:164:boolean[] createSafeOctets(java.lang.String) -> createSafeOctets
    174:180:int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    190:197:java.lang.String escape(java.lang.String) -> escape
    208:278:char[] escape(int) -> escape
    90:92:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper -> be.alexandre01.dnplugin.shaded.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper:
    int DEST_PAD -> DEST_PAD
    java.lang.ThreadLocal DEST_TL -> DEST_TL
    boolean $assertionsDisabled -> $assertionsDisabled
    56:56:void <init>() -> <init>
    char[] escape(int) -> escape
    122:130:int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    161:163:java.lang.String escape(java.lang.String) -> escape
    188:238:java.lang.String escapeSlow(java.lang.String,int) -> escapeSlow
    286:288:java.lang.Appendable escape(java.lang.Appendable) -> escape
    456:479:int codePointAt(java.lang.CharSequence,int,int) -> codePointAt
    488:492:char[] growBuffer(char[],int,int) -> growBuffer
    56:500:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper$1 -> be.alexandre01.dnplugin.shaded.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper$1:
    int pendingHighSurrogate -> pendingHighSurrogate
    char[] decodedChars -> decodedChars
    java.lang.Appendable val$out -> val$out
    be.alexandre01.dnplugin.shaded.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper this$0 -> this$0
    288:290:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper,java.lang.Appendable) -> <init>
    293:293:java.lang.Appendable append(java.lang.CharSequence) -> append
    297:369:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    373:406:java.lang.Appendable append(char) -> append
    410:413:void outputChars(char[],int) -> outputChars
be.alexandre01.dnplugin.shaded.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper$2 -> be.alexandre01.dnplugin.shaded.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper$2:
    500:500:void <init>() -> <init>
    503:503:char[] initialValue() -> initialValue
    500:500:java.lang.Object initialValue() -> initialValue
be.alexandre01.dnplugin.shaded.snakeyaml.introspector.BeanAccess -> be.alexandre01.dnplugin.shaded.snakeyaml.introspector.BeanAccess:
    be.alexandre01.dnplugin.shaded.snakeyaml.introspector.BeanAccess DEFAULT -> DEFAULT
    be.alexandre01.dnplugin.shaded.snakeyaml.introspector.BeanAccess FIELD -> FIELD
    be.alexandre01.dnplugin.shaded.snakeyaml.introspector.BeanAccess PROPERTY -> PROPERTY
    be.alexandre01.dnplugin.shaded.snakeyaml.introspector.BeanAccess[] $VALUES -> $VALUES
    21:21:be.alexandre01.dnplugin.shaded.snakeyaml.introspector.BeanAccess[] values() -> values
    21:21:be.alexandre01.dnplugin.shaded.snakeyaml.introspector.BeanAccess valueOf(java.lang.String) -> valueOf
    21:21:void <init>(java.lang.String,int) -> <init>
    21:29:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.introspector.FieldProperty -> be.alexandre01.dnplugin.shaded.snakeyaml.introspector.FieldProperty:
    java.lang.reflect.Field field -> field
    37:40:void <init>(java.lang.reflect.Field) -> <init>
    44:45:void set(java.lang.Object,java.lang.Object) -> set
    50:52:java.lang.Object get(java.lang.Object) -> get
    59:59:java.util.List getAnnotations() -> getAnnotations
    64:64:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
be.alexandre01.dnplugin.shaded.snakeyaml.introspector.GenericProperty -> be.alexandre01.dnplugin.shaded.snakeyaml.introspector.GenericProperty:
    java.lang.reflect.Type genType -> genType
    boolean actualClassesChecked -> actualClassesChecked
    java.lang.Class[] actualClasses -> actualClasses
    28:31:void <init>(java.lang.String,java.lang.Class,java.lang.reflect.Type) -> <init>
    37:80:java.lang.Class[] getActualTypeArguments() -> getActualTypeArguments
be.alexandre01.dnplugin.shaded.snakeyaml.introspector.MethodProperty -> be.alexandre01.dnplugin.shaded.snakeyaml.introspector.MethodProperty:
    java.beans.PropertyDescriptor property -> property
    boolean readable -> readable
    boolean writable -> writable
    43:60:java.lang.reflect.Type discoverGenericType(java.beans.PropertyDescriptor) -> discoverGenericType
    64:69:void <init>(java.beans.PropertyDescriptor) -> <init>
    73:78:void set(java.lang.Object,java.lang.Object) -> set
    83:86:java.lang.Object get(java.lang.Object) -> get
    100:107:java.util.List getAnnotations() -> getAnnotations
    119:126:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    131:131:boolean isWritable() -> isWritable
    136:136:boolean isReadable() -> isReadable
be.alexandre01.dnplugin.shaded.snakeyaml.introspector.MissingProperty -> be.alexandre01.dnplugin.shaded.snakeyaml.introspector.MissingProperty:
    29:30:void <init>(java.lang.String) -> <init>
    34:34:java.lang.Class[] getActualTypeArguments() -> getActualTypeArguments
    42:42:void set(java.lang.Object,java.lang.Object) -> set
    46:46:java.lang.Object get(java.lang.Object) -> get
    51:51:java.util.List getAnnotations() -> getAnnotations
    56:56:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
be.alexandre01.dnplugin.shaded.snakeyaml.introspector.Property -> be.alexandre01.dnplugin.shaded.snakeyaml.introspector.Property:
    java.lang.String name -> name
    java.lang.Class type -> type
    39:42:void <init>(java.lang.String,java.lang.Class) -> <init>
    45:45:java.lang.Class getType() -> getType
    java.lang.Class[] getActualTypeArguments() -> getActualTypeArguments
    51:51:java.lang.String getName() -> getName
    56:56:java.lang.String toString() -> toString
    60:60:int compareTo(be.alexandre01.dnplugin.shaded.snakeyaml.introspector.Property) -> compareTo
    64:64:boolean isWritable() -> isWritable
    68:68:boolean isReadable() -> isReadable
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
    java.util.List getAnnotations() -> getAnnotations
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    94:94:int hashCode() -> hashCode
    99:103:boolean equals(java.lang.Object) -> equals
    34:34:int compareTo(java.lang.Object) -> compareTo
be.alexandre01.dnplugin.shaded.snakeyaml.introspector.PropertySubstitute -> be.alexandre01.dnplugin.shaded.snakeyaml.introspector.PropertySubstitute:
    java.util.logging.Logger log -> log
    java.lang.Class targetType -> targetType
    java.lang.String readMethod -> readMethod
    java.lang.String writeMethod -> writeMethod
    java.lang.reflect.Method read -> read
    java.lang.reflect.Method write -> write
    java.lang.reflect.Field field -> field
    java.lang.Class[] parameters -> parameters
    be.alexandre01.dnplugin.shaded.snakeyaml.introspector.Property delegate -> delegate
    boolean filler -> filler
    51:56:void <init>(java.lang.String,java.lang.Class,java.lang.String,java.lang.String,java.lang.Class[]) -> <init>
    59:60:void <init>(java.lang.String,java.lang.Class,java.lang.Class[]) -> <init>
    64:67:java.lang.Class[] getActualTypeArguments() -> getActualTypeArguments
    71:76:void setActualTypeArguments(java.lang.Class[]) -> setActualTypeArguments
    80:112:void set(java.lang.Object,java.lang.Object) -> set
    117:130:java.lang.Object get(java.lang.Object) -> get
    136:142:java.util.List getAnnotations() -> getAnnotations
    148:155:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    159:193:void setTargetType(java.lang.Class) -> setTargetType
    196:220:java.lang.reflect.Method discoverMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> discoverMethod
    225:229:java.lang.String getName() -> getName
    234:238:java.lang.Class getType() -> getType
    243:243:boolean isReadable() -> isReadable
    248:248:boolean isWritable() -> isWritable
    252:257:void setDelegate(be.alexandre01.dnplugin.shaded.snakeyaml.introspector.Property) -> setDelegate
    36:37:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.introspector.PropertyUtils -> be.alexandre01.dnplugin.shaded.snakeyaml.introspector.PropertyUtils:
    java.util.Map propertiesCache -> propertiesCache
    java.util.Map readableProperties -> readableProperties
    be.alexandre01.dnplugin.shaded.snakeyaml.introspector.BeanAccess beanAccess -> beanAccess
    boolean allowReadOnlyProperties -> allowReadOnlyProperties
    boolean skipMissingProperties -> skipMissingProperties
    be.alexandre01.dnplugin.shaded.snakeyaml.util.PlatformFeatureDetector platformFeatureDetector -> platformFeatureDetector
    java.lang.String TRANSIENT -> TRANSIENT
    46:47:void <init>() -> <init>
    37:59:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.util.PlatformFeatureDetector) -> <init>
    62:114:java.util.Map getPropertiesMap(java.lang.Class,be.alexandre01.dnplugin.shaded.snakeyaml.introspector.BeanAccess) -> getPropertiesMap
    120:120:boolean isTransient(java.beans.FeatureDescriptor) -> isTransient
    124:124:java.util.Set getProperties(java.lang.Class) -> getProperties
    128:133:java.util.Set getProperties(java.lang.Class,be.alexandre01.dnplugin.shaded.snakeyaml.introspector.BeanAccess) -> getProperties
    137:144:java.util.Set createPropertySet(java.lang.Class,be.alexandre01.dnplugin.shaded.snakeyaml.introspector.BeanAccess) -> createPropertySet
    148:148:be.alexandre01.dnplugin.shaded.snakeyaml.introspector.Property getProperty(java.lang.Class,java.lang.String) -> getProperty
    152:161:be.alexandre01.dnplugin.shaded.snakeyaml.introspector.Property getProperty(java.lang.Class,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.introspector.BeanAccess) -> getProperty
    165:175:void setBeanAccess(be.alexandre01.dnplugin.shaded.snakeyaml.introspector.BeanAccess) -> setBeanAccess
    178:182:void setAllowReadOnlyProperties(boolean) -> setAllowReadOnlyProperties
    185:185:boolean isAllowReadOnlyProperties() -> isAllowReadOnlyProperties
    196:200:void setSkipMissingProperties(boolean) -> setSkipMissingProperties
    203:203:boolean isSkipMissingProperties() -> isSkipMissingProperties
be.alexandre01.dnplugin.shaded.snakeyaml.introspector.PropertyUtils$1 -> be.alexandre01.dnplugin.shaded.snakeyaml.introspector.PropertyUtils$1:
    int[] $SwitchMap$org$yaml$snakeyaml$introspector$BeanAccess -> $SwitchMap$org$yaml$snakeyaml$introspector$BeanAccess
    68:68:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.nodes.AnchorNode -> be.alexandre01.dnplugin.shaded.snakeyaml.nodes.AnchorNode:
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node realNode -> realNode
    26:28:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> <init>
    32:32:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeId getNodeId() -> getNodeId
    36:36:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node getRealNode() -> getRealNode
be.alexandre01.dnplugin.shaded.snakeyaml.nodes.CollectionNode -> be.alexandre01.dnplugin.shaded.snakeyaml.nodes.CollectionNode:
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle flowStyle -> flowStyle
    31:33:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle) -> <init>
    42:43:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.Boolean) -> <init>
    java.util.List getValue() -> getValue
    59:59:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle getFlowStyle() -> getFlowStyle
    63:65:void setFlowStyle(be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle) -> setFlowStyle
    74:75:void setFlowStyle(java.lang.Boolean) -> setFlowStyle
    78:79:void setEndMark(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> setEndMark
be.alexandre01.dnplugin.shaded.snakeyaml.nodes.MappingNode -> be.alexandre01.dnplugin.shaded.snakeyaml.nodes.MappingNode:
    java.util.List value -> value
    boolean merged -> merged
    31:41:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,boolean,java.util.List,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle) -> <init>
    44:45:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,java.util.List,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle) -> <init>
    55:56:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,boolean,java.util.List,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.Boolean) -> <init>
    65:67:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,java.util.List,java.lang.Boolean) -> <init>
    71:71:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeId getNodeId() -> getNodeId
    80:80:java.util.List getValue() -> getValue
    84:85:void setValue(java.util.List) -> setValue
    88:91:void setOnlyKeyType(java.lang.Class) -> setOnlyKeyType
    94:98:void setTypes(java.lang.Class,java.lang.Class) -> setTypes
    103:117:java.lang.String toString() -> toString
    125:126:void setMerged(boolean) -> setMerged
    132:132:boolean isMerged() -> isMerged
be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node -> be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node:
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag tag -> tag
    be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark startMark -> startMark
    be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark endMark -> endMark
    java.lang.Class type -> type
    boolean twoStepsConstruction -> twoStepsConstruction
    java.lang.String anchor -> anchor
    boolean resolved -> resolved
    java.lang.Boolean useClassConstructor -> useClassConstructor
    47:55:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    65:65:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag getTag() -> getTag
    69:69:be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark getEndMark() -> getEndMark
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeId getNodeId() -> getNodeId
    81:81:be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark getStartMark() -> getStartMark
    85:89:void setTag(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag) -> setTag
    96:96:boolean equals(java.lang.Object) -> equals
    100:100:java.lang.Class getType() -> getType
    104:107:void setType(java.lang.Class) -> setType
    110:111:void setTwoStepsConstruction(boolean) -> setTwoStepsConstruction
    131:131:boolean isTwoStepsConstruction() -> isTwoStepsConstruction
    136:136:int hashCode() -> hashCode
    140:152:boolean useClassConstructor() -> useClassConstructor
    156:157:void setUseClassConstructor(java.lang.Boolean) -> setUseClassConstructor
    169:169:boolean isResolved() -> isResolved
    173:173:java.lang.String getAnchor() -> getAnchor
    177:178:void setAnchor(java.lang.String) -> setAnchor
be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeId -> be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeId:
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeId scalar -> scalar
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeId sequence -> sequence
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeId mapping -> mapping
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeId anchor -> anchor
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeId[] $VALUES -> $VALUES
    21:21:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeId[] values() -> values
    21:21:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeId valueOf(java.lang.String) -> valueOf
    21:21:void <init>(java.lang.String,int) -> <init>
    21:22:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeTuple -> be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeTuple:
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node keyNode -> keyNode
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node valueNode -> valueNode
    26:32:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> <init>
    40:40:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node getKeyNode() -> getKeyNode
    49:49:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node getValueNode() -> getValueNode
    54:54:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.snakeyaml.nodes.ScalarNode -> be.alexandre01.dnplugin.shaded.snakeyaml.nodes.ScalarNode:
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle style -> style
    java.lang.String value -> value
    32:33:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle) -> <init>
    37:45:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,boolean,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle) -> <init>
    54:55:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.Character) -> <init>
    65:66:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,boolean,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.Character) -> <init>
    79:79:java.lang.Character getStyle() -> getStyle
    91:91:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle getScalarStyle() -> getScalarStyle
    96:96:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeId getNodeId() -> getNodeId
    105:105:java.lang.String getValue() -> getValue
    109:109:java.lang.String toString() -> toString
    114:114:boolean isPlain() -> isPlain
be.alexandre01.dnplugin.shaded.snakeyaml.nodes.SequenceNode -> be.alexandre01.dnplugin.shaded.snakeyaml.nodes.SequenceNode:
    java.util.List value -> value
    34:40:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,boolean,java.util.List,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle) -> <init>
    43:44:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,java.util.List,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle) -> <init>
    53:54:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,java.util.List,java.lang.Boolean) -> <init>
    64:65:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,boolean,java.util.List,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.Boolean) -> <init>
    69:69:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeId getNodeId() -> getNodeId
    78:78:java.util.List getValue() -> getValue
    82:85:void setListType(java.lang.Class) -> setListType
    88:88:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag -> be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag:
    java.lang.String PREFIX -> PREFIX
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag YAML -> YAML
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag MERGE -> MERGE
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag SET -> SET
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag PAIRS -> PAIRS
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag OMAP -> OMAP
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag BINARY -> BINARY
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag INT -> INT
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag FLOAT -> FLOAT
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag TIMESTAMP -> TIMESTAMP
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag BOOL -> BOOL
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag NULL -> NULL
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag STR -> STR
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag SEQ -> SEQ
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag MAP -> MAP
    java.util.Map COMPATIBILITY_MAP -> COMPATIBILITY_MAP
    java.lang.String value -> value
    boolean secondary -> secondary
    76:88:void <init>(java.lang.String) -> <init>
    76:95:void <init>(java.lang.Class) -> <init>
    76:106:void <init>(java.net.URI) -> <init>
    109:109:boolean isSecondary() -> isSecondary
    113:113:java.lang.String getValue() -> getValue
    117:117:boolean startsWith(java.lang.String) -> startsWith
    121:124:java.lang.String getClassName() -> getClassName
    129:129:java.lang.String toString() -> toString
    134:137:boolean equals(java.lang.Object) -> equals
    142:142:int hashCode() -> hashCode
    155:159:boolean isCompatible(java.lang.Class) -> isCompatible
    171:171:boolean matches(java.lang.Class) -> matches
    32:73:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.Parser -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.Parser:
    boolean checkEvent(be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID) -> checkEvent
    be.alexandre01.dnplugin.shaded.snakeyaml.events.Event peekEvent() -> peekEvent
    be.alexandre01.dnplugin.shaded.snakeyaml.events.Event getEvent() -> getEvent
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserException -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserException:
    long serialVersionUID -> serialVersionUID
    42:43:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl:
    java.util.Map DEFAULT_TAGS -> DEFAULT_TAGS
    be.alexandre01.dnplugin.shaded.snakeyaml.scanner.Scanner scanner -> scanner
    be.alexandre01.dnplugin.shaded.snakeyaml.events.Event currentEvent -> currentEvent
    be.alexandre01.dnplugin.shaded.snakeyaml.util.ArrayStack states -> states
    be.alexandre01.dnplugin.shaded.snakeyaml.util.ArrayStack marks -> marks
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.Production state -> state
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.VersionTagsTuple directives -> directives
    132:133:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.reader.StreamReader) -> <init>
    135:142:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.scanner.Scanner) -> <init>
    148:149:boolean checkEvent(be.alexandre01.dnplugin.shaded.snakeyaml.events.Event$ID) -> checkEvent
    156:161:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event peekEvent() -> peekEvent
    168:171:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event getEvent() -> getEvent
    286:334:be.alexandre01.dnplugin.shaded.snakeyaml.parser.VersionTagsTuple processDirectives() -> processDirectives
    364:364:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event parseFlowNode() -> parseFlowNode
    368:368:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event parseBlockNodeOrIndentlessSequence() -> parseBlockNodeOrIndentlessSequence
    373:486:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event parseNode(boolean,boolean) -> parseNode
    793:793:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event processEmptyScalar(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> processEmptyScalar
    117:117:be.alexandre01.dnplugin.shaded.snakeyaml.parser.Production access$102(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.Production) -> access$102
    117:117:be.alexandre01.dnplugin.shaded.snakeyaml.parser.VersionTagsTuple access$302(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.VersionTagsTuple) -> access$302
    117:117:java.util.Map access$400() -> access$400
    117:117:be.alexandre01.dnplugin.shaded.snakeyaml.util.ArrayStack access$600(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> access$600
    117:117:be.alexandre01.dnplugin.shaded.snakeyaml.parser.VersionTagsTuple access$900(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> access$900
    117:117:be.alexandre01.dnplugin.shaded.snakeyaml.util.ArrayStack access$1100(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> access$1100
    117:117:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event access$1200(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> access$1200
    117:117:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event access$1300(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,boolean,boolean) -> access$1300
    117:117:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event access$2200(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> access$2200
    117:117:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event access$2400(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> access$2400
    118:122:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1 -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1:
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseBlockMappingFirstKey -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseBlockMappingFirstKey:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    548:548:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    550:552:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    548:548:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseBlockMappingKey -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseBlockMappingKey:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    556:556:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    558:578:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    556:556:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseBlockMappingValue -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseBlockMappingValue:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    582:582:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    584:596:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    582:582:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseBlockNode -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseBlockNode:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    357:357:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    359:359:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    357:357:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseBlockSequenceEntry -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseBlockSequenceEntry:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    500:500:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    502:522:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    500:500:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseBlockSequenceFirstEntry -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseBlockSequenceFirstEntry:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    492:492:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    494:496:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    492:492:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseDocumentContent -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseDocumentContent:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    269:269:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    272:279:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    269:269:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseDocumentEnd -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseDocumentEnd:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    250:250:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    253:265:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    250:250:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseDocumentStart -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseDocumentStart:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    212:212:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    215:246:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    212:212:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseFlowMappingEmptyValue -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseFlowMappingEmptyValue:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    777:777:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    779:780:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    777:777:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseFlowMappingFirstKey -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseFlowMappingFirstKey:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    708:708:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    710:712:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    708:708:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseFlowMappingKey -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseFlowMappingKey:
    boolean first -> first
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    717:721:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,boolean) -> <init>
    724:754:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseFlowMappingValue -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseFlowMappingValue:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    758:758:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    760:772:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    758:758:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry:
    boolean first -> first
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    622:626:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,boolean) -> <init>
    629:655:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntryMappingEnd -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntryMappingEnd:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    691:691:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    693:695:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    691:691:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntryMappingKey -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntryMappingKey:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    659:659:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    661:667:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    659:659:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntryMappingValue -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntryMappingValue:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    672:672:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    674:686:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    672:672:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseFlowSequenceFirstEntry -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseFlowSequenceFirstEntry:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    613:613:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    615:617:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    613:613:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    192:192:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    195:207:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    192:192:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntry -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntry:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    528:528:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    530:544:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    528:528:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseStreamStart -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$ParseStreamStart:
    be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl this$0 -> this$0
    181:181:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl) -> <init>
    184:188:be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
    181:181:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl,be.alexandre01.dnplugin.shaded.snakeyaml.parser.ParserImpl$1) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.parser.Production -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.Production:
    be.alexandre01.dnplugin.shaded.snakeyaml.events.Event produce() -> produce
be.alexandre01.dnplugin.shaded.snakeyaml.parser.VersionTagsTuple -> be.alexandre01.dnplugin.shaded.snakeyaml.parser.VersionTagsTuple:
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version version -> version
    java.util.Map tags -> tags
    29:32:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version,java.util.Map) -> <init>
    35:35:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version getVersion() -> getVersion
    39:39:java.util.Map getTags() -> getTags
    44:44:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.snakeyaml.reader.ReaderException -> be.alexandre01.dnplugin.shaded.snakeyaml.reader.ReaderException:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    int codePoint -> codePoint
    int position -> position
    27:31:void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    34:34:java.lang.String getName() -> getName
    38:38:int getCodePoint() -> getCodePoint
    42:42:int getPosition() -> getPosition
    47:49:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.snakeyaml.reader.StreamReader -> be.alexandre01.dnplugin.shaded.snakeyaml.reader.StreamReader:
    java.lang.String name -> name
    java.io.Reader stream -> stream
    int[] dataWindow -> dataWindow
    int dataLength -> dataLength
    int pointer -> pointer
    boolean eof -> eof
    int index -> index
    int line -> line
    int column -> column
    char[] buffer -> buffer
    int BUFFER_SIZE -> BUFFER_SIZE
    63:65:void <init>(java.lang.String) -> <init>
    47:74:void <init>(java.io.Reader) -> <init>
    77:88:boolean isPrintable(java.lang.String) -> isPrintable
    92:92:boolean isPrintable(int) -> isPrintable
    98:98:be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark getMark() -> getMark
    102:103:void forward() -> forward
    112:123:void forward(int) -> forward
    126:126:int peek() -> peek
    136:136:int peek(int) -> peek
    146:152:java.lang.String prefix(int) -> prefix
    162:167:java.lang.String prefixForward(int) -> prefixForward
    171:171:boolean ensureEnoughData() -> ensureEnoughData
    175:178:boolean ensureEnoughData(int) -> ensureEnoughData
    183:220:void update() -> update
    224:224:int getColumn() -> getColumn
    231:231:int getIndex() -> getIndex
    235:235:int getLine() -> getLine
be.alexandre01.dnplugin.shaded.snakeyaml.reader.UnicodeReader -> be.alexandre01.dnplugin.shaded.snakeyaml.reader.UnicodeReader:
    java.nio.charset.Charset UTF8 -> UTF8
    java.nio.charset.Charset UTF16BE -> UTF16BE
    java.nio.charset.Charset UTF16LE -> UTF16LE
    java.io.PushbackInputStream internalIn -> internalIn
    java.io.InputStreamReader internalIn2 -> internalIn2
    int BOM_SIZE -> BOM_SIZE
    59:69:void <init>(java.io.InputStream) -> <init>
    77:77:java.lang.String getEncoding() -> getEncoding
    86:116:void init() -> init
    119:121:void close() -> close
    124:125:int read(char[],int,int) -> read
    54:56:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.representer.BaseRepresenter -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.BaseRepresenter:
    java.util.Map representers -> representers
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.Represent nullRepresenter -> nullRepresenter
    java.util.Map multiRepresenters -> multiRepresenters
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle defaultScalarStyle -> defaultScalarStyle
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle defaultFlowStyle -> defaultFlowStyle
    java.util.Map representedObjects -> representedObjects
    java.lang.Object objectToRepresent -> objectToRepresent
    be.alexandre01.dnplugin.shaded.snakeyaml.introspector.PropertyUtils propertyUtils -> propertyUtils
    boolean explicitPropertyUtils -> explicitPropertyUtils
    40:62:void <init>() -> <init>
    65:68:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node represent(java.lang.Object) -> represent
    72:109:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
    113:117:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representScalar(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle) -> representScalar
    121:121:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representScalar(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,java.lang.String) -> representScalar
    125:147:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representSequence(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,java.lang.Iterable,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle) -> representSequence
    151:173:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representMapping(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,java.util.Map,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle) -> representMapping
    177:178:void setDefaultScalarStyle(be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle) -> setDefaultScalarStyle
    181:184:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle getDefaultScalarStyle() -> getDefaultScalarStyle
    188:189:void setDefaultFlowStyle(be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle) -> setDefaultFlowStyle
    192:192:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$FlowStyle getDefaultFlowStyle() -> getDefaultFlowStyle
    196:198:void setPropertyUtils(be.alexandre01.dnplugin.shaded.snakeyaml.introspector.PropertyUtils) -> setPropertyUtils
    201:204:be.alexandre01.dnplugin.shaded.snakeyaml.introspector.PropertyUtils getPropertyUtils() -> getPropertyUtils
    208:208:boolean isExplicitPropertyUtils() -> isExplicitPropertyUtils
be.alexandre01.dnplugin.shaded.snakeyaml.representer.BaseRepresenter$1 -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.BaseRepresenter$1:
    long serialVersionUID -> serialVersionUID
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.BaseRepresenter this$0 -> this$0
    52:52:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.representer.BaseRepresenter) -> <init>
    56:56:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node put(java.lang.Object,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> put
    52:52:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
be.alexandre01.dnplugin.shaded.snakeyaml.representer.Represent -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.Represent:
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
be.alexandre01.dnplugin.shaded.snakeyaml.representer.Representer -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.Representer:
    java.util.Map typeDefinitions -> typeDefinitions
    46:51:void <init>() -> <init>
    46:56:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions) -> <init>
    59:66:be.alexandre01.dnplugin.shaded.snakeyaml.TypeDescription addTypeDescription(be.alexandre01.dnplugin.shaded.snakeyaml.TypeDescription) -> addTypeDescription
    71:76:void setPropertyUtils(be.alexandre01.dnplugin.shaded.snakeyaml.introspector.PropertyUtils) -> setPropertyUtils
    99:130:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.MappingNode representJavaBean(java.util.Set,java.lang.Object) -> representJavaBean
    149:180:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeTuple representJavaBeanProperty(java.lang.Object,be.alexandre01.dnplugin.shaded.snakeyaml.introspector.Property,java.lang.Object,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag) -> representJavaBeanProperty
    197:253:void checkGlobalTag(be.alexandre01.dnplugin.shaded.snakeyaml.introspector.Property,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node,java.lang.Object) -> checkGlobalTag
    256:264:void resetTag(java.lang.Class,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> resetTag
    275:278:java.util.Set getProperties(java.lang.Class) -> getProperties
    44:44:void setTimeZone(java.util.TimeZone) -> setTimeZone
    44:44:java.util.TimeZone getTimeZone() -> getTimeZone
    44:44:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag addClassTag(java.lang.Class,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag) -> addClassTag
be.alexandre01.dnplugin.shaded.snakeyaml.representer.Representer$RepresentJavaBean -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.Representer$RepresentJavaBean:
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.Representer this$0 -> this$0
    78:78:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.representer.Representer) -> <init>
    80:80:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter:
    java.util.Map classTags -> classTags
    java.util.TimeZone timeZone -> timeZone
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$NonPrintableStyle nonPrintableStyle -> nonPrintableStyle
    java.util.regex.Pattern MULTILINE_PATTERN -> MULTILINE_PATTERN
    51:52:void <init>() -> <init>
    47:82:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions) -> <init>
    85:88:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag getTag(java.lang.Class,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag) -> getTag
    103:106:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag addClassTag(java.lang.Class,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag) -> addClassTag
    442:442:java.util.TimeZone getTimeZone() -> getTimeZone
    446:447:void setTimeZone(java.util.TimeZone) -> setTimeZone
    44:44:java.util.regex.Pattern access$000() -> access$000
    115:115:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$IteratorWrapper -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$IteratorWrapper:
    java.util.Iterator iter -> iter
    206:208:void <init>(java.util.Iterator) -> <init>
    211:211:java.util.Iterator iterator() -> iterator
be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentArray -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentArray:
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter this$0 -> this$0
    215:215:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter) -> <init>
    217:219:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentBoolean -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentBoolean:
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter this$0 -> this$0
    150:150:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter) -> <init>
    153:158:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentByteArray -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentByteArray:
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter this$0 -> this$0
    434:434:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter) -> <init>
    436:437:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentDate -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentDate:
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter this$0 -> this$0
    338:338:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter) -> <init>
    342:423:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentEnum -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentEnum:
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter this$0 -> this$0
    427:427:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter) -> <init>
    429:430:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentIterator -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentIterator:
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter this$0 -> this$0
    194:194:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter) -> <init>
    197:198:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentList -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentList:
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter this$0 -> this$0
    187:187:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter) -> <init>
    190:190:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentMap -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentMap:
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter this$0 -> this$0
    318:318:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter) -> <init>
    321:321:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentNull -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentNull:
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter this$0 -> this$0
    109:109:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter) -> <init>
    111:111:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentNumber -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentNumber:
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter this$0 -> this$0
    162:162:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter) -> <init>
    166:183:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentPrimitiveArray -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentPrimitiveArray:
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter this$0 -> this$0
    228:228:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter) -> <init>
    230:250:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
    254:258:java.util.List asByteList(java.lang.Object) -> asByteList
    262:266:java.util.List asShortList(java.lang.Object) -> asShortList
    270:274:java.util.List asIntList(java.lang.Object) -> asIntList
    278:282:java.util.List asLongList(java.lang.Object) -> asLongList
    286:290:java.util.List asFloatList(java.lang.Object) -> asFloatList
    294:298:java.util.List asDoubleList(java.lang.Object) -> asDoubleList
    302:306:java.util.List asCharList(java.lang.Object) -> asCharList
    310:314:java.util.List asBooleanList(java.lang.Object) -> asBooleanList
be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentSet -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentSet:
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter this$0 -> this$0
    326:326:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter) -> <init>
    329:334:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentString -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentString:
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter this$0 -> this$0
    117:117:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter) -> <init>
    119:146:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentUuid -> be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter$RepresentUuid:
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter this$0 -> this$0
    449:449:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.representer.SafeRepresenter) -> <init>
    451:451:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
be.alexandre01.dnplugin.shaded.snakeyaml.resolver.Resolver -> be.alexandre01.dnplugin.shaded.snakeyaml.resolver.Resolver:
    java.util.regex.Pattern BOOL -> BOOL
    java.util.regex.Pattern FLOAT -> FLOAT
    java.util.regex.Pattern INT -> INT
    java.util.regex.Pattern MERGE -> MERGE
    java.util.regex.Pattern NULL -> NULL
    java.util.regex.Pattern EMPTY -> EMPTY
    java.util.regex.Pattern TIMESTAMP -> TIMESTAMP
    java.util.regex.Pattern VALUE -> VALUE
    java.util.regex.Pattern YAML -> YAML
    java.util.Map yamlImplicitResolvers -> yamlImplicitResolvers
    53:70:void addImplicitResolvers() -> addImplicitResolvers
    50:74:void <init>() -> <init>
    77:100:void addImplicitResolver(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,java.util.regex.Pattern,java.lang.String) -> addImplicitResolver
    103:135:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag resolve(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeId,java.lang.String,boolean) -> resolve
    31:48:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.resolver.Resolver$1 -> be.alexandre01.dnplugin.shaded.snakeyaml.resolver.Resolver$1:
    int[] $SwitchMap$org$yaml$snakeyaml$nodes$NodeId -> $SwitchMap$org$yaml$snakeyaml$nodes$NodeId
    129:129:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.resolver.ResolverTuple -> be.alexandre01.dnplugin.shaded.snakeyaml.resolver.ResolverTuple:
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag tag -> tag
    java.util.regex.Pattern regexp -> regexp
    26:29:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag,java.util.regex.Pattern) -> <init>
    32:32:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag getTag() -> getTag
    36:36:java.util.regex.Pattern getRegexp() -> getRegexp
    41:41:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.snakeyaml.scanner.Constant -> be.alexandre01.dnplugin.shaded.snakeyaml.scanner.Constant:
    java.lang.String ALPHA_S -> ALPHA_S
    java.lang.String LINEBR_S -> LINEBR_S
    java.lang.String FULL_LINEBR_S -> FULL_LINEBR_S
    java.lang.String NULL_OR_LINEBR_S -> NULL_OR_LINEBR_S
    java.lang.String NULL_BL_LINEBR_S -> NULL_BL_LINEBR_S
    java.lang.String NULL_BL_T_LINEBR_S -> NULL_BL_T_LINEBR_S
    java.lang.String NULL_BL_T_S -> NULL_BL_T_S
    java.lang.String URI_CHARS_S -> URI_CHARS_S
    be.alexandre01.dnplugin.shaded.snakeyaml.scanner.Constant LINEBR -> LINEBR
    be.alexandre01.dnplugin.shaded.snakeyaml.scanner.Constant FULL_LINEBR -> FULL_LINEBR
    be.alexandre01.dnplugin.shaded.snakeyaml.scanner.Constant NULL_OR_LINEBR -> NULL_OR_LINEBR
    be.alexandre01.dnplugin.shaded.snakeyaml.scanner.Constant NULL_BL_LINEBR -> NULL_BL_LINEBR
    be.alexandre01.dnplugin.shaded.snakeyaml.scanner.Constant NULL_BL_T_LINEBR -> NULL_BL_T_LINEBR
    be.alexandre01.dnplugin.shaded.snakeyaml.scanner.Constant NULL_BL_T -> NULL_BL_T
    be.alexandre01.dnplugin.shaded.snakeyaml.scanner.Constant URI_CHARS -> URI_CHARS
    be.alexandre01.dnplugin.shaded.snakeyaml.scanner.Constant ALPHA -> ALPHA
    java.lang.String content -> content
    boolean[] contains -> contains
    boolean noASCII -> noASCII
    42:59:void <init>(java.lang.String) -> <init>
    62:62:boolean has(int) -> has
    66:66:boolean hasNo(int) -> hasNo
    70:70:boolean has(int,java.lang.String) -> has
    74:74:boolean hasNo(int,java.lang.String) -> hasNo
    31:39:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.scanner.Scanner -> be.alexandre01.dnplugin.shaded.snakeyaml.scanner.Scanner:
    boolean checkToken(be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID[]) -> checkToken
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token peekToken() -> peekToken
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token getToken() -> getToken
be.alexandre01.dnplugin.shaded.snakeyaml.scanner.ScannerException -> be.alexandre01.dnplugin.shaded.snakeyaml.scanner.ScannerException:
    long serialVersionUID -> serialVersionUID
    47:48:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.String) -> <init>
    64:65:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.scanner.ScannerImpl -> be.alexandre01.dnplugin.shaded.snakeyaml.scanner.ScannerImpl:
    java.util.regex.Pattern NOT_HEXA -> NOT_HEXA
    java.util.Map ESCAPE_REPLACEMENTS -> ESCAPE_REPLACEMENTS
    java.util.Map ESCAPE_CODES -> ESCAPE_CODES
    be.alexandre01.dnplugin.shaded.snakeyaml.reader.StreamReader reader -> reader
    boolean done -> done
    int flowLevel -> flowLevel
    java.util.List tokens -> tokens
    int tokensTaken -> tokensTaken
    int indent -> indent
    be.alexandre01.dnplugin.shaded.snakeyaml.util.ArrayStack indents -> indents
    boolean allowSimpleKey -> allowSimpleKey
    java.util.Map possibleSimpleKeys -> possibleSimpleKeys
    160:220:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.reader.StreamReader) -> <init>
    226:242:boolean checkToken(be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID[]) -> checkToken
    249:252:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token peekToken() -> peekToken
    259:260:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token getToken() -> getToken
    269:279:boolean needMoreTokens() -> needMoreTokens
    287:419:void fetchMoreTokens() -> fetchMoreTokens
    433:436:int nextPossibleSimpleKey() -> nextPossibleSimpleKey
    450:470:void stalePossibleSimpleKeys() -> stalePossibleSimpleKeys
    485:504:void savePossibleSimpleKey() -> savePossibleSimpleKey
    510:515:void removePossibleSimpleKey() -> removePossibleSimpleKey
    542:552:void unwindIndent(int) -> unwindIndent
    558:563:boolean addIndent(int) -> addIndent
    574:579:void fetchStreamStart() -> fetchStreamStart
    583:599:void fetchStreamEnd() -> fetchStreamEnd
    610:619:void fetchDirective() -> fetchDirective
    625:626:void fetchDocumentStart() -> fetchDocumentStart
    632:633:void fetchDocumentEnd() -> fetchDocumentEnd
    641:659:void fetchDocumentIndicator(boolean) -> fetchDocumentIndicator
    662:663:void fetchFlowSequenceStart() -> fetchFlowSequenceStart
    666:667:void fetchFlowMappingStart() -> fetchFlowMappingStart
    683:702:void fetchFlowCollectionStart(boolean) -> fetchFlowCollectionStart
    705:706:void fetchFlowSequenceEnd() -> fetchFlowSequenceEnd
    709:710:void fetchFlowMappingEnd() -> fetchFlowMappingEnd
    724:743:void fetchFlowCollectionEnd(boolean) -> fetchFlowCollectionEnd
    753:764:void fetchFlowEntry() -> fetchFlowEntry
    773:801:void fetchBlockEntry() -> fetchBlockEntry
    810:834:void fetchKey() -> fetchKey
    843:896:void fetchValue() -> fetchValue
    910:918:void fetchAlias() -> fetchAlias
    931:939:void fetchAnchor() -> fetchAnchor
    948:956:void fetchTag() -> fetchTag
    966:967:void fetchLiteral() -> fetchLiteral
    976:977:void fetchFolded() -> fetchFolded
    988:996:void fetchBlockScalar(char) -> fetchBlockScalar
    1002:1003:void fetchSingle() -> fetchSingle
    1009:1010:void fetchDouble() -> fetchDouble
    1021:1029:void fetchFlowScalar(char) -> fetchFlowScalar
    1036:1046:void fetchPlain() -> fetchPlain
    1058:1058:boolean checkDirective() -> checkDirective
    1067:1072:boolean checkDocumentStart() -> checkDocumentStart
    1081:1086:boolean checkDocumentEnd() -> checkDocumentEnd
    1094:1094:boolean checkBlockEntry() -> checkBlockEntry
    1102:1106:boolean checkKey() -> checkKey
    1115:1119:boolean checkValue() -> checkValue
    1143:1148:boolean checkPlain() -> checkPlain
    1177:1216:void scanToNextToken() -> scanToNextToken
    1221:1243:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token scanDirective() -> scanDirective
    1254:1278:java.lang.String scanDirectiveName(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> scanDirectiveName
    1283:1306:java.util.List scanYamlDirectiveValue(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> scanYamlDirectiveValue
    1318:1329:java.lang.Integer scanYamlDirectiveNumber(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> scanYamlDirectiveNumber
    1346:1357:java.util.List scanTagDirectiveValue(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> scanTagDirectiveValue
    1369:1376:java.lang.String scanTagDirectiveHandle(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> scanTagDirectiveHandle
    1386:1394:java.lang.String scanTagDirectivePrefix(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> scanTagDirectivePrefix
    1399:1415:void scanDirectiveIgnoredLine(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> scanDirectiveIgnoredLine
    1418:1449:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token scanAnchor(boolean) -> scanAnchor
    1487:1549:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token scanTag() -> scanTag
    1557:1634:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token scanBlockScalar(char) -> scanBlockScalar
    1654:1701:be.alexandre01.dnplugin.shaded.snakeyaml.scanner.ScannerImpl$Chomping scanBlockScalarIndicators(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> scanBlockScalarIndicators
    1712:1732:java.lang.String scanBlockScalarIgnoredLine(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> scanBlockScalarIgnoredLine
    1744:1767:java.lang.Object[] scanBlockScalarIndentation() -> scanBlockScalarIndentation
    1772:1797:java.lang.Object[] scanBlockScalarBreaks(int) -> scanBlockScalarBreaks
    1820:1836:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token scanFlowScalar(char) -> scanFlowScalar
    1844:1900:java.lang.String scanFlowScalarNonSpaces(boolean,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> scanFlowScalarNonSpaces
    1905:1932:java.lang.String scanFlowScalarSpaces(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> scanFlowScalarSpaces
    1937:1959:java.lang.String scanFlowScalarBreaks(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> scanFlowScalarBreaks
    1974:2009:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token scanPlain() -> scanPlain
    2017:2055:java.lang.String scanPlainSpaces() -> scanPlainSpaces
    2081:2113:java.lang.String scanTagHandle(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> scanTagHandle
    2134:2161:java.lang.String scanTagUri(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> scanTagUri
    2178:2211:java.lang.String scanUriEscapes(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> scanUriEscapes
    2233:2245:java.lang.String scanLineBreak() -> scanLineBreak
    88:157:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.scanner.ScannerImpl$Chomping -> be.alexandre01.dnplugin.shaded.snakeyaml.scanner.ScannerImpl$Chomping:
    java.lang.Boolean value -> value
    int increment -> increment
    2255:2258:void <init>(java.lang.Boolean,int) -> <init>
    2261:2261:boolean chompTailIsNotFalse() -> chompTailIsNotFalse
    2265:2265:boolean chompTailIsTrue() -> chompTailIsTrue
    2269:2269:int getIncrement() -> getIncrement
be.alexandre01.dnplugin.shaded.snakeyaml.scanner.SimpleKey -> be.alexandre01.dnplugin.shaded.snakeyaml.scanner.SimpleKey:
    int tokenNumber -> tokenNumber
    boolean required -> required
    int index -> index
    int line -> line
    int column -> column
    be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark mark -> mark
    36:43:void <init>(int,boolean,int,int,int,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    46:46:int getTokenNumber() -> getTokenNumber
    50:50:int getColumn() -> getColumn
    54:54:be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark getMark() -> getMark
    58:58:int getIndex() -> getIndex
    62:62:int getLine() -> getLine
    66:66:boolean isRequired() -> isRequired
    71:71:java.lang.String toString() -> toString
be.alexandre01.dnplugin.shaded.snakeyaml.serializer.AnchorGenerator -> be.alexandre01.dnplugin.shaded.snakeyaml.serializer.AnchorGenerator:
    java.lang.String nextAnchor(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> nextAnchor
be.alexandre01.dnplugin.shaded.snakeyaml.serializer.NumberAnchorGenerator -> be.alexandre01.dnplugin.shaded.snakeyaml.serializer.NumberAnchorGenerator:
    int lastAnchorId -> lastAnchorId
    24:28:void <init>(int) -> <init>
    31:37:java.lang.String nextAnchor(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> nextAnchor
be.alexandre01.dnplugin.shaded.snakeyaml.serializer.Serializer -> be.alexandre01.dnplugin.shaded.snakeyaml.serializer.Serializer:
    be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitable emitter -> emitter
    be.alexandre01.dnplugin.shaded.snakeyaml.resolver.Resolver resolver -> resolver
    boolean explicitStart -> explicitStart
    boolean explicitEnd -> explicitEnd
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$Version useVersion -> useVersion
    java.util.Map useTags -> useTags
    java.util.Set serializedNodes -> serializedNodes
    java.util.Map anchors -> anchors
    be.alexandre01.dnplugin.shaded.snakeyaml.serializer.AnchorGenerator anchorGenerator -> anchorGenerator
    java.lang.Boolean closed -> closed
    be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag explicitRoot -> explicitRoot
    63:77:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.emitter.Emitable,be.alexandre01.dnplugin.shaded.snakeyaml.resolver.Resolver,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag) -> <init>
    80:88:void open() -> open
    91:100:void close() -> close
    103:118:void serialize(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> serialize
    121:152:void anchorNode(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> anchorNode
    156:203:void serializeNode(be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Node) -> serializeNode
be.alexandre01.dnplugin.shaded.snakeyaml.serializer.Serializer$1 -> be.alexandre01.dnplugin.shaded.snakeyaml.serializer.Serializer$1:
    int[] $SwitchMap$org$yaml$snakeyaml$nodes$NodeId -> $SwitchMap$org$yaml$snakeyaml$nodes$NodeId
    132:132:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.serializer.SerializerException -> be.alexandre01.dnplugin.shaded.snakeyaml.serializer.SerializerException:
    long serialVersionUID -> serialVersionUID
    24:25:void <init>(java.lang.String) -> <init>
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.AliasToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.AliasToken:
    java.lang.String value -> value
    24:26:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    29:29:java.lang.String getValue() -> getValue
    34:34:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.AnchorToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.AnchorToken:
    java.lang.String value -> value
    24:26:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    29:29:java.lang.String getValue() -> getValue
    34:34:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.BlockEndToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.BlockEndToken:
    23:24:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    28:28:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.BlockEntryToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.BlockEntryToken:
    23:24:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    28:28:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.BlockMappingStartToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.BlockMappingStartToken:
    23:24:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    28:28:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.BlockSequenceStartToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.BlockSequenceStartToken:
    23:24:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    28:28:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.CommentToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.CommentToken:
    25:26:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    30:30:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.DirectiveToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.DirectiveToken:
    java.lang.String name -> name
    java.util.List value -> value
    28:35:void <init>(java.lang.String,java.util.List,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    38:38:java.lang.String getName() -> getName
    42:42:java.util.List getValue() -> getValue
    47:47:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.DocumentEndToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.DocumentEndToken:
    23:24:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    28:28:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.DocumentStartToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.DocumentStartToken:
    23:24:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    28:28:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.FlowEntryToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.FlowEntryToken:
    23:24:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    28:28:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.FlowMappingEndToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.FlowMappingEndToken:
    23:24:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    28:28:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.FlowMappingStartToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.FlowMappingStartToken:
    23:24:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    28:28:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.FlowSequenceEndToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.FlowSequenceEndToken:
    23:24:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    28:28:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.FlowSequenceStartToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.FlowSequenceStartToken:
    23:24:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    28:28:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.KeyToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.KeyToken:
    23:24:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    28:28:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.ScalarToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.ScalarToken:
    java.lang.String value -> value
    boolean plain -> plain
    be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle style -> style
    27:28:void <init>(java.lang.String,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,boolean) -> <init>
    31:36:void <init>(java.lang.String,boolean,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle) -> <init>
    39:39:boolean getPlain() -> getPlain
    43:43:java.lang.String getValue() -> getValue
    47:47:be.alexandre01.dnplugin.shaded.snakeyaml.DumperOptions$ScalarStyle getStyle() -> getStyle
    52:52:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.StreamEndToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.StreamEndToken:
    23:24:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    28:28:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.StreamStartToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.StreamStartToken:
    23:24:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    28:28:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.TagToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.TagToken:
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.TagTuple value -> value
    24:26:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.tokens.TagTuple,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    29:29:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.TagTuple getValue() -> getValue
    34:34:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.TagTuple -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.TagTuple:
    java.lang.String handle -> handle
    java.lang.String suffix -> suffix
    22:28:void <init>(java.lang.String,java.lang.String) -> <init>
    31:31:java.lang.String getHandle() -> getHandle
    35:35:java.lang.String getSuffix() -> getSuffix
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token:
    be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark startMark -> startMark
    be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark endMark -> endMark
    62:68:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    71:71:be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark getStartMark() -> getStartMark
    75:75:be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark getEndMark() -> getEndMark
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID:
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID Alias -> Alias
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID Anchor -> Anchor
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID BlockEnd -> BlockEnd
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID BlockEntry -> BlockEntry
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID BlockMappingStart -> BlockMappingStart
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID BlockSequenceStart -> BlockSequenceStart
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID Directive -> Directive
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID DocumentEnd -> DocumentEnd
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID DocumentStart -> DocumentStart
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID FlowEntry -> FlowEntry
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID FlowMappingEnd -> FlowMappingEnd
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID FlowMappingStart -> FlowMappingStart
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID FlowSequenceEnd -> FlowSequenceEnd
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID FlowSequenceStart -> FlowSequenceStart
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID Key -> Key
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID Scalar -> Scalar
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID StreamEnd -> StreamEnd
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID StreamStart -> StreamStart
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID Tag -> Tag
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID Value -> Value
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID Whitespace -> Whitespace
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID Comment -> Comment
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID Error -> Error
    java.lang.String description -> description
    be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID[] $VALUES -> $VALUES
    22:22:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID[] values() -> values
    22:22:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID valueOf(java.lang.String) -> valueOf
    49:51:void <init>(java.lang.String,int,java.lang.String) -> <init>
    55:55:java.lang.String toString() -> toString
    22:45:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.ValueToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.ValueToken:
    23:24:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    28:28:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.tokens.WhitespaceToken -> be.alexandre01.dnplugin.shaded.snakeyaml.tokens.WhitespaceToken:
    25:26:void <init>(be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark,be.alexandre01.dnplugin.shaded.snakeyaml.error.Mark) -> <init>
    30:30:be.alexandre01.dnplugin.shaded.snakeyaml.tokens.Token$ID getTokenId() -> getTokenId
be.alexandre01.dnplugin.shaded.snakeyaml.util.ArrayStack -> be.alexandre01.dnplugin.shaded.snakeyaml.util.ArrayStack:
    java.util.ArrayList stack -> stack
    23:25:void <init>(int) -> <init>
    28:29:void push(java.lang.Object) -> push
    32:32:java.lang.Object pop() -> pop
    36:36:boolean isEmpty() -> isEmpty
    40:41:void clear() -> clear
be.alexandre01.dnplugin.shaded.snakeyaml.util.ArrayUtils -> be.alexandre01.dnplugin.shaded.snakeyaml.util.ArrayUtils:
    24:25:void <init>() -> <init>
    35:35:java.util.List toUnmodifiableList(java.lang.Object[]) -> toUnmodifiableList
    49:56:java.util.List toUnmodifiableCompositeList(java.lang.Object[],java.lang.Object[]) -> toUnmodifiableCompositeList
be.alexandre01.dnplugin.shaded.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList -> be.alexandre01.dnplugin.shaded.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList:
    java.lang.Object[] array1 -> array1
    java.lang.Object[] array2 -> array2
    86:89:void <init>(java.lang.Object[],java.lang.Object[]) -> <init>
    94:101:java.lang.Object get(int) -> get
    106:106:int size() -> size
be.alexandre01.dnplugin.shaded.snakeyaml.util.ArrayUtils$UnmodifiableArrayList -> be.alexandre01.dnplugin.shaded.snakeyaml.util.ArrayUtils$UnmodifiableArrayList:
    java.lang.Object[] array -> array
    63:65:void <init>(java.lang.Object[]) -> <init>
    69:72:java.lang.Object get(int) -> get
    77:77:int size() -> size
be.alexandre01.dnplugin.shaded.snakeyaml.util.PlatformFeatureDetector -> be.alexandre01.dnplugin.shaded.snakeyaml.util.PlatformFeatureDetector:
    java.lang.Boolean isRunningOnAndroid -> isRunningOnAndroid
    18:20:void <init>() -> <init>
    23:27:boolean isRunningOnAndroid() -> isRunningOnAndroid
be.alexandre01.dnplugin.shaded.snakeyaml.util.UriEncoder -> be.alexandre01.dnplugin.shaded.snakeyaml.util.UriEncoder:
    java.nio.charset.CharsetDecoder UTF8Decoder -> UTF8Decoder
    java.lang.String SAFE_CHARS -> SAFE_CHARS
    be.alexandre01.dnplugin.shaded.snakeyaml.external.com.google.gdata.util.common.base.Escaper escaper -> escaper
    31:31:void <init>() -> <init>
    46:46:java.lang.String encode(java.lang.String) -> encode
    56:57:java.lang.String decode(java.nio.ByteBuffer) -> decode
    62:64:java.lang.String decode(java.lang.String) -> decode
    32:38:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.utils.ASCII -> be.alexandre01.dnplugin.utils.a:
    5:5:void <init>() -> <init>
    18:25:void sendDNText() -> a
be.alexandre01.dnplugin.utils.Config -> be.alexandre01.dnplugin.utils.b:
    15:15:void <init>() -> <init>
    17:23:java.lang.String getPath(java.lang.String) -> a
    26:34:boolean contains(java.lang.String) -> b
    37:50:void createDir(java.lang.String) -> c
    52:69:java.io.File createFile(java.lang.String) -> d
    72:86:boolean removeDir(java.lang.String) -> e
    91:96:void copy(java.io.File,java.io.File) -> a
    98:109:void write(java.io.InputStream,java.io.File) -> a
    111:118:void copyDirectory(java.io.File,java.io.File) -> b
    122:183:void copyFile(java.io.File,java.io.File) -> c
    186:189:java.lang.String pathConvert(java.lang.String) -> f
    195:214:java.util.ArrayList getGroupsLines(java.lang.String) -> g
    219:222:boolean isWindows() -> a
be.alexandre01.dnplugin.utils.Config$1 -> be.alexandre01.dnplugin.utils.c:
    int pos -> a
    java.nio.ByteBuffer val$buffer -> b
    java.io.File val$target -> c
    125:126:void <init>(java.nio.ByteBuffer,java.io.File) -> <init>
    130:172:void completed(java.lang.Integer,java.nio.ByteBuffer) -> a
    177:177:void failed(java.lang.Throwable,java.nio.ByteBuffer) -> a
    125:125:void failed(java.lang.Throwable,java.lang.Object) -> failed
    125:125:void completed(java.lang.Object,java.lang.Object) -> completed
be.alexandre01.dnplugin.utils.Config$1$1 -> be.alexandre01.dnplugin.utils.d:
    be.alexandre01.dnplugin.utils.Config$1 this$0 -> a
    149:149:void <init>(be.alexandre01.dnplugin.utils.Config$1) -> <init>
    153:156:void completed(java.lang.Integer,java.nio.ByteBuffer) -> a
    160:162:void failed(java.lang.Throwable,java.nio.ByteBuffer) -> a
    149:149:void failed(java.lang.Throwable,java.lang.Object) -> failed
    149:149:void completed(java.lang.Object,java.lang.Object) -> completed
be.alexandre01.dnplugin.utils.Mods -> be.alexandre01.dnplugin.utils.e:
    be.alexandre01.dnplugin.utils.Mods STATIC -> STATIC
    be.alexandre01.dnplugin.utils.Mods DYNAMIC -> DYNAMIC
    be.alexandre01.dnplugin.utils.Mods[] $VALUES -> $VALUES
    3:3:be.alexandre01.dnplugin.utils.Mods[] values() -> values
    3:3:be.alexandre01.dnplugin.utils.Mods valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:4:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.utils.colors.Colors -> be.alexandre01.dnplugin.utils.a.a:
    boolean isWindows -> an
    java.lang.String ANSI_YELLOW -> a
    java.lang.String ANSI_BLUE -> b
    java.lang.String ANSI_PURPLE -> c
    java.lang.String ANSI_CYAN -> d
    java.lang.String ANSI_WHITE -> e
    java.lang.String ANSI_PWHITE -> f
    java.lang.String RESET -> g
    java.lang.String BLACK -> h
    java.lang.String RED -> i
    java.lang.String GREEN -> j
    java.lang.String YELLOW -> k
    java.lang.String BLUE -> l
    java.lang.String PURPLE -> m
    java.lang.String CYAN -> n
    java.lang.String WHITE -> o
    java.lang.String BLACK_BOLD -> p
    java.lang.String RED_BOLD -> q
    java.lang.String GREEN_BOLD -> r
    java.lang.String YELLOW_BOLD -> s
    java.lang.String BLUE_BOLD -> t
    java.lang.String PURPLE_BOLD -> u
    java.lang.String CYAN_BOLD -> v
    java.lang.String WHITE_BOLD -> w
    java.lang.String WHITE_BOLD_UNDERLINED -> x
    java.lang.String BLACK_UNDERLINED -> y
    java.lang.String BLACK_BRIGHT_UNDERLINED -> z
    java.lang.String RED_UNDERLINED -> A
    java.lang.String GREEN_UNDERLINED -> B
    java.lang.String YELLOW_UNDERLINED -> C
    java.lang.String YELLOW_BRIGHT_UNDERLINE -> D
    java.lang.String BLUE_UNDERLINED -> E
    java.lang.String CYAN_UNDERLINED -> F
    java.lang.String WHITE_UNDERLINED -> G
    java.lang.String BLACK_BACKGROUND -> H
    java.lang.String RED_BACKGROUND -> I
    java.lang.String GREEN_BACKGROUND -> J
    java.lang.String YELLOW_BACKGROUND -> K
    java.lang.String BLUE_BACKGROUND -> L
    java.lang.String PURPLE_BACKGROUND -> M
    java.lang.String CYAN_BACKGROUND -> N
    java.lang.String WHITE_BACKGROUND -> O
    java.lang.String BLACK_BRIGHT -> P
    java.lang.String RED_BRIGHT -> Q
    java.lang.String GREEN_BRIGHT -> R
    java.lang.String YELLOW_BRIGHT -> S
    java.lang.String BLUE_BRIGHT -> T
    java.lang.String PURPLE_BRIGHT -> U
    java.lang.String CYAN_BRIGHT -> V
    java.lang.String WHITE_BRIGHT -> W
    java.lang.String BLACK_BOLD_BRIGHT -> X
    java.lang.String RED_BOLD_BRIGHT -> Y
    java.lang.String GREEN_BOLD_BRIGHT -> Z
    java.lang.String YELLOW_BOLD_BRIGHT -> aa
    java.lang.String BLUE_BOLD_BRIGHT -> ab
    java.lang.String PURPLE_BOLD_BRIGHT -> ac
    java.lang.String CYAN_BOLD_BRIGHT -> ad
    java.lang.String WHITE_BOLD_BRIGHT -> ae
    java.lang.String BLACK_BACKGROUND_BRIGHT -> af
    java.lang.String RED_BACKGROUND_BRIGHT -> ag
    java.lang.String GREEN_BACKGROUND_BRIGHT -> ah
    java.lang.String YELLOW_BACKGROUND_BRIGHT -> ai
    java.lang.String BLUE_BACKGROUND_BRIGHT -> aj
    java.lang.String PURPLE_BACKGROUND_BRIGHT -> ak
    java.lang.String CYAN_BACKGROUND_BRIGHT -> al
    java.lang.String WHITE_BACKGROUND_BRIGHT -> am
    3:3:void <init>() -> <init>
    6:9:java.lang.String ANSI_RESET() -> a
    13:16:java.lang.String ANSI_BLACK() -> b
    21:24:java.lang.String ANSI_RED() -> c
    29:32:java.lang.String ANSI_GREEN() -> d
    75:78:java.lang.String PURPLE_UNDERLINED() -> e
    4:40:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.utils.files.CopyFiles -> be.alexandre01.dnplugin.utils.b.a:
    9:9:void <init>() -> <init>
    11:21:void copyRessource(java.lang.String,java.io.File) -> a
be.alexandre01.dnplugin.utils.files.SearchText -> be.alexandre01.dnplugin.utils.b.b:
    java.util.HashMap messages -> c
    java.util.concurrent.ScheduledExecutorService executorService -> a
    java.lang.String path1 -> b
    be.alexandre01.dnplugin.utils.files.SearchText$distributeText distributeText -> d
    be.alexandre01.dnplugin.utils.files.SearchText old -> e
    be.alexandre01.dnplugin.utils.files.SearchText instance -> f
    boolean autoDelete -> g
    28:28:java.lang.String get(java.lang.String) -> c
    31:31:java.lang.String get(java.lang.String,java.lang.Object[]) -> a
    18:37:void <init>(boolean) -> <init>
    39:53:void init() -> a
    58:73:void tryToDelete() -> f
    75:76:void reset() -> g
    80:95:boolean recursiveSearch(java.lang.String) -> e
    java.util.Set getKeys(java.lang.String,boolean) -> a
    boolean hasSubSection(java.lang.String) -> a
    java.lang.String getString(java.lang.String) -> b
    106:111:java.lang.String getMessage(java.lang.String) -> d
    114:133:java.lang.String getMessage(java.lang.String,java.lang.Object[]) -> b
    137:139:java.util.List returnObjects(java.lang.Class,java.lang.Object[]) -> a
    142:173:java.lang.String distribute(java.util.List,java.lang.String,java.lang.String,java.lang.String) -> a
    void reloadConfig() -> b
    void saveFile() -> c
    void setString(java.lang.String,java.lang.String) -> a
    java.io.File getFile() -> d
    21:21:void setDistributeText(be.alexandre01.dnplugin.utils.files.SearchText$distributeText) -> a
    22:22:be.alexandre01.dnplugin.utils.files.SearchText getOld() -> h
    23:23:be.alexandre01.dnplugin.utils.files.SearchText getInstance() -> i
    138:138:java.lang.Object lambda$returnObjects$1(java.lang.Object) -> a
    46:50:void lambda$init$0(java.util.Map$Entry) -> a
    17:17:java.util.concurrent.ScheduledExecutorService access$000(be.alexandre01.dnplugin.utils.files.SearchText) -> a
be.alexandre01.dnplugin.utils.files.SearchText$1 -> be.alexandre01.dnplugin.utils.b.c:
    be.alexandre01.dnplugin.utils.files.SearchText this$0 -> a
    58:58:void <init>(be.alexandre01.dnplugin.utils.files.SearchText) -> <init>
    62:70:void run() -> run
be.alexandre01.dnplugin.utils.files.SearchText$distributeText -> be.alexandre01.dnplugin.utils.b.b$a:
    void exec(java.lang.String,java.lang.Object[]) -> exec
be.alexandre01.dnplugin.utils.files.YAMLManager -> be.alexandre01.dnplugin.utils.b.d:
    java.lang.String pluginFolder -> b
    java.lang.String type -> c
    be.alexandre01.dnplugin.utils.files.network.NetworkYAML network -> d
    be.alexandre01.dnplugin.utils.files.motd.MOTDYAML motd -> e
    be.alexandre01.dnplugin.utils.files.tablist.TabListYAML tabList -> f
    be.alexandre01.dnplugin.utils.files.messages.MessagesManager messagesManager -> g
    boolean $assertionsDisabled -> a
    26:35:void <init>(java.lang.String,java.lang.String) -> <init>
    43:70:void loadNetwork() -> i
    73:90:void saveNetwork() -> a
    93:134:void loadMOTD() -> j
    137:150:void saveMOTD() -> b
    153:180:void loadTabList() -> k
    183:184:void reloadTabList() -> c
    187:198:void saveTabList() -> d
    201:212:java.util.LinkedHashMap compressAnimation(be.alexandre01.dnplugin.utils.files.tablist.TabList) -> a
    216:260:be.alexandre01.dnplugin.utils.files.tablist.TabList readAnimation(be.alexandre01.dnplugin.utils.files.tablist.Animations,java.util.LinkedHashMap) -> a
    268:284:void loadMessages() -> l
    287:287:java.util.LinkedHashMap read(java.lang.String) -> a
    290:298:java.util.LinkedHashMap read(java.io.File) -> a
    302:303:void saveYAML(java.lang.String,java.util.LinkedHashMap) -> a
    305:321:void saveYAML(java.io.File,java.util.LinkedHashMap) -> a
    37:37:be.alexandre01.dnplugin.utils.files.network.NetworkYAML getNetwork() -> e
    38:38:be.alexandre01.dnplugin.utils.files.motd.MOTDYAML getMotd() -> f
    39:39:be.alexandre01.dnplugin.utils.files.tablist.TabListYAML getTabList() -> g
    40:40:be.alexandre01.dnplugin.utils.files.messages.MessagesManager getMessagesManager() -> h
    247:254:void lambda$readAnimation$3(java.util.HashMap,java.lang.String,java.lang.String) -> a
    225:234:void lambda$readAnimation$2(java.util.HashMap,java.lang.String,java.lang.Object) -> a
    206:210:void lambda$compressAnimation$1(java.util.LinkedHashMap,java.lang.Integer,be.alexandre01.dnplugin.utils.files.tablist.LineState) -> a
    208:208:void lambda$null$0(java.util.HashMap,java.lang.Integer,java.lang.String) -> a
    22:22:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.utils.files.messages.MessagesManager -> be.alexandre01.dnplugin.utils.b.a.a:
    java.util.LinkedHashMap messages -> a
    10:12:void <init>(java.util.LinkedHashMap) -> <init>
    15:20:java.lang.String getString(java.lang.String) -> a
    24:34:java.util.List getPaths(java.lang.String) -> b
    32:33:void lambda$getPaths$0(java.util.List,java.lang.String,java.lang.String) -> a
be.alexandre01.dnplugin.utils.files.motd.MOTDYAML -> be.alexandre01.dnplugin.utils.b.b.a:
    boolean activated -> a
    boolean customVersionProtocol -> b
    java.lang.String customVersionMessage -> c
    boolean autoSlotIncrement -> d
    java.util.List content -> e
    java.util.List versionHover -> f
    13:13:boolean isActivated() -> a
    14:14:boolean isCustomVersionProtocol() -> b
    15:15:java.lang.String getCustomVersionMessage() -> c
    16:16:boolean isAutoSlotIncrement() -> d
    17:17:java.util.List getContent() -> e
    18:18:java.util.List getVersionHover() -> f
    10:10:void setActivated(boolean) -> a
    10:10:void setCustomVersionProtocol(boolean) -> b
    10:10:void setCustomVersionMessage(java.lang.String) -> a
    10:10:void setAutoSlotIncrement(boolean) -> c
    10:10:void setContent(java.util.List) -> a
    10:10:void setVersionHover(java.util.List) -> b
    11:11:void <init>(boolean,boolean,java.lang.String,boolean,java.util.List,java.util.List) -> <init>
be.alexandre01.dnplugin.utils.files.network.NetworkYAML -> be.alexandre01.dnplugin.utils.b.c.a:
    java.lang.String lobby -> a
    boolean connexionOnLobby -> b
    int maxPlayerPerLobby -> c
    boolean maintenance -> d
    boolean kickRedirectionEnabled -> e
    java.lang.String kickRedirectionServer -> f
    boolean statusLogo -> g
    java.util.List maintenanceAllowedPlayers -> h
    boolean autoSendPlayers -> i
    int slots -> j
    13:13:java.lang.String getLobby() -> a
    14:14:boolean isConnexionOnLobby() -> b
    15:15:int getMaxPlayerPerLobby() -> c
    16:16:boolean isMaintenance() -> d
    17:17:boolean isKickRedirectionEnabled() -> e
    18:18:java.lang.String getKickRedirectionServer() -> f
    19:19:boolean isStatusLogo() -> g
    20:20:java.util.List getMaintenanceAllowedPlayers() -> h
    21:21:boolean isAutoSendPlayers() -> i
    22:22:int getSlots() -> j
    10:10:void setLobby(java.lang.String) -> a
    10:10:void setConnexionOnLobby(boolean) -> a
    10:10:void setMaxPlayerPerLobby(int) -> a
    10:10:void setMaintenance(boolean) -> b
    10:10:void setKickRedirectionEnabled(boolean) -> c
    10:10:void setKickRedirectionServer(java.lang.String) -> b
    10:10:void setStatusLogo(boolean) -> d
    10:10:void setMaintenanceAllowedPlayers(java.util.List) -> a
    10:10:void setAutoSendPlayers(boolean) -> e
    10:10:void setSlots(int) -> b
    11:11:void <init>(java.lang.String,boolean,int,boolean,boolean,java.lang.String,boolean,java.util.List,boolean,int) -> <init>
be.alexandre01.dnplugin.utils.files.tablist.Animations -> be.alexandre01.dnplugin.utils.b.d.a:
    be.alexandre01.dnplugin.utils.files.tablist.Animations HEADER -> HEADER
    be.alexandre01.dnplugin.utils.files.tablist.Animations FOOTER -> FOOTER
    be.alexandre01.dnplugin.utils.files.tablist.Animations[] $VALUES -> $VALUES
    3:3:be.alexandre01.dnplugin.utils.files.tablist.Animations[] values() -> values
    3:3:be.alexandre01.dnplugin.utils.files.tablist.Animations valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:5:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.utils.files.tablist.LineState -> be.alexandre01.dnplugin.utils.b.d.b:
    java.util.HashMap lines -> a
    int repeat -> b
    11:11:java.util.HashMap getLines() -> a
    12:12:int getRepeat() -> b
    9:9:void <init>(java.util.HashMap,int) -> <init>
be.alexandre01.dnplugin.utils.files.tablist.TabList -> be.alexandre01.dnplugin.utils.b.d.c:
    int overrideLines -> a
    java.util.HashMap defaultLines -> b
    java.util.HashMap states -> c
    11:11:int getOverrideLines() -> a
    12:12:java.util.HashMap getDefaultLines() -> b
    13:13:java.util.HashMap getStates() -> c
    9:9:void <init>(int,java.util.HashMap,java.util.HashMap) -> <init>
be.alexandre01.dnplugin.utils.files.tablist.TabListYAML -> be.alexandre01.dnplugin.utils.b.d.d:
    boolean activate -> a
    int delay -> b
    be.alexandre01.dnplugin.utils.files.tablist.TabList header -> c
    be.alexandre01.dnplugin.utils.files.tablist.TabList footer -> d
    11:11:boolean isActivate() -> a
    12:12:int getDelay() -> b
    13:13:be.alexandre01.dnplugin.utils.files.tablist.TabList getHeader() -> c
    14:14:be.alexandre01.dnplugin.utils.files.tablist.TabList getFooter() -> d
    8:8:void setActivate(boolean) -> a
    8:8:void setDelay(int) -> a
    8:8:void setHeader(be.alexandre01.dnplugin.utils.files.tablist.TabList) -> a
    8:8:void setFooter(be.alexandre01.dnplugin.utils.files.tablist.TabList) -> b
    9:9:void <init>(boolean,int,be.alexandre01.dnplugin.utils.files.tablist.TabList,be.alexandre01.dnplugin.utils.files.tablist.TabList) -> <init>
be.alexandre01.dnplugin.utils.files.tablist.Test -> be.alexandre01.dnplugin.utils.b.d.e:
    java.lang.String filePath -> a
    boolean test -> b
    java.lang.String bonjour -> c
    java.util.Map t -> d
    17:22:void <init>() -> <init>
    17:27:void <init>(java.lang.String) -> <init>
    30:36:void loading() -> a
    39:40:void save() -> b
    15:15:java.lang.String getFilePath() -> c
    17:17:boolean isTest() -> d
    19:19:java.lang.String getBonjour() -> e
    20:20:java.util.Map getT() -> f
    13:13:void setFilePath(java.lang.String) -> a
    13:13:void setTest(boolean) -> a
    13:13:void setBonjour(java.lang.String) -> b
    13:13:void setT(java.util.Map) -> a
be.alexandre01.dnplugin.utils.files.yaml.CustomRepresenter -> be.alexandre01.dnplugin.utils.b.e.a:
    boolean skipNull -> a
    java.lang.Class[] clazz -> b
    java.lang.Object obj -> c
    boolean thisClassOnly -> d
    18:34:void <init>(boolean,java.lang.Object,java.lang.Class[]) -> <init>
    37:38:void <init>(boolean,java.lang.Class[]) -> <init>
    51:93:be.alexandre01.dnplugin.shaded.snakeyaml.nodes.NodeTuple representJavaBeanProperty(java.lang.Object,be.alexandre01.dnplugin.shaded.snakeyaml.introspector.Property,java.lang.Object,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag) -> representJavaBeanProperty
    17:17:void setObj(java.lang.Object) -> a
    18:18:void setThisClassOnly(boolean) -> a
be.alexandre01.dnplugin.utils.files.yaml.Ignore -> be.alexandre01.dnplugin.utils.b.e.b:
be.alexandre01.dnplugin.utils.files.yaml.YamlFileUtils -> be.alexandre01.dnplugin.utils.b.e.c:
    java.util.List annotations -> a
    java.lang.Class clazz -> b
    java.io.File file -> e
    boolean skipNull -> f
    be.alexandre01.dnplugin.shaded.snakeyaml.constructor.Constructor constructor -> g
    be.alexandre01.dnplugin.shaded.snakeyaml.representer.Representer representer -> h
    java.util.HashMap tags -> i
    java.util.List settedFields -> j
    17:29:void <init>() -> <init>
    31:32:void addTag(java.lang.Class,be.alexandre01.dnplugin.shaded.snakeyaml.nodes.Tag) -> a
    35:47:boolean config(java.io.File,java.lang.Class,boolean) -> a
    51:51:java.lang.Object read() -> g
    55:56:void saveFile(java.lang.Object) -> a
    58:59:void saveFile() -> h
    76:109:java.lang.Object loadFile(java.io.File,java.lang.Class) -> a
    114:134:void readAndReplace(java.lang.Object) -> b
    138:179:void saveFile(java.io.File,java.lang.Object,java.lang.Class,boolean) -> a
    182:183:void addAnnotation(java.lang.String) -> c
    21:21:java.io.File getFile() -> i
be.alexandre01.dnplugin.utils.files.yaml.tablist.TabListYAML -> be.alexandre01.dnplugin.utils.b.e.a.a:
    boolean activated -> a
    int delay -> b
    java.util.HashMap header_animation -> c
    15:18:void <init>() -> <init>
    21:37:void loading() -> a
    40:41:void save() -> b
    16:16:boolean isActivated() -> c
    17:17:int getDelay() -> d
    18:18:java.util.HashMap getHeader_animation() -> e
    14:14:void setActivated(boolean) -> a
    14:14:void setDelay(int) -> a
    14:14:void setHeader_animation(java.util.HashMap) -> a
be.alexandre01.dnplugin.utils.messages.Message -> be.alexandre01.dnplugin.utils.messages.Message:
    java.lang.reflect.Type HASH_MAP_TYPE -> a
    15:16:void <init>(java.util.Map) -> <init>
    18:19:void <init>() -> <init>
    21:22:be.alexandre01.dnplugin.utils.messages.Message set(java.lang.String,java.lang.Object) -> set
    27:27:java.lang.Object put(java.lang.String,java.lang.Object) -> put
    31:31:java.lang.Object setInRoot(java.lang.String,java.lang.Object) -> setInRoot
    34:34:boolean contains(java.lang.String) -> contains
    38:38:java.util.HashMap getObjectData() -> getObjectData
    41:41:boolean hasRequestID() -> hasRequestID
    44:44:int getMessageID() -> getMessageID
    48:48:java.lang.Object get(java.lang.Object) -> get
    52:52:java.lang.Object getInRoot(java.lang.Object) -> getInRoot
    56:56:java.lang.Object get(java.lang.String,java.lang.Class) -> get
    60:61:be.alexandre01.dnplugin.utils.messages.Message setChannel(java.lang.String) -> setChannel
    65:65:java.lang.String getChannel() -> getChannel
    68:69:be.alexandre01.dnplugin.utils.messages.Message setHeader(java.lang.String) -> setHeader
    72:73:void setProvider(java.lang.String) -> setProvider
    75:76:void setSender(java.lang.String) -> setSender
    78:78:java.lang.String getProvider() -> getProvider
    81:81:java.lang.String getSender() -> getSender
    84:84:boolean hasProvider() -> hasProvider
    87:87:java.lang.String getHeader() -> getHeader
    91:92:be.alexandre01.dnplugin.utils.messages.Message setRequestInfo(be.alexandre01.dnplugin.api.request.RequestInfo) -> setRequestInfo
    96:96:be.alexandre01.dnplugin.api.request.RequestInfo getRequest() -> getRequest
    99:99:int getRequestID() -> getRequestID
    103:103:boolean hasRequest() -> hasRequest
    107:107:be.alexandre01.dnplugin.shaded.gson.JsonObject toJsonObject() -> toJsonObject
    111:111:java.lang.String getString(java.lang.String) -> getString
    115:115:int getInt(java.lang.String) -> getInt
    120:120:float getFloat(java.lang.String) -> getFloat
    125:125:long getLong(java.lang.String) -> getLong
    130:130:java.util.List getList(java.lang.String) -> getList
    134:134:java.util.List getList(java.lang.String,java.lang.Class) -> getList
    144:144:java.util.List getIntegersList(java.lang.String) -> getIntegersList
    155:155:java.util.List getFloatList(java.lang.String) -> getFloatList
    161:161:boolean getBoolean(java.lang.String) -> getBoolean
    166:166:boolean hasChannel() -> hasChannel
    170:174:be.alexandre01.dnplugin.utils.messages.Message createFromJsonString(java.lang.String) -> createFromJsonString
    179:182:boolean isJSONValid(java.lang.String) -> isJSONValid
    188:192:java.lang.String toString() -> toString
    11:11:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    12:13:void <clinit>() -> <clinit>
be.alexandre01.dnplugin.utils.messages.Message$1 -> be.alexandre01.dnplugin.utils.messages.Message$1:
    12:12:void <init>() -> <init>
be.alexandre01.dnplugin.utils.messages.Message$2 -> be.alexandre01.dnplugin.utils.messages.Message$2:
    171:171:void <init>() -> <init>
be.alexandre01.dnplugin.utils.messages.Message$3 -> be.alexandre01.dnplugin.utils.messages.Message$3:
    be.alexandre01.dnplugin.utils.messages.Message this$0 -> a
    189:189:void <init>(be.alexandre01.dnplugin.utils.messages.Message) -> <init>
be.alexandre01.dnplugin.utils.messages.Message$MapDeserializerDoubleAsIntFix -> be.alexandre01.dnplugin.utils.messages.Message$MapDeserializerDoubleAsIntFix:
    195:195:void <init>() -> <init>
    199:199:java.util.Map deserialize(be.alexandre01.dnplugin.shaded.gson.JsonElement,java.lang.reflect.Type,be.alexandre01.dnplugin.shaded.gson.JsonDeserializationContext) -> deserialize
    204:242:java.lang.Object read(be.alexandre01.dnplugin.shaded.gson.JsonElement) -> read
    195:195:java.lang.Object deserialize(be.alexandre01.dnplugin.shaded.gson.JsonElement,java.lang.reflect.Type,be.alexandre01.dnplugin.shaded.gson.JsonDeserializationContext) -> deserialize
lombok.AccessLevel -> lombok.AccessLevel:
    lombok.AccessLevel PUBLIC -> PUBLIC
    lombok.AccessLevel MODULE -> MODULE
    lombok.AccessLevel PROTECTED -> PROTECTED
    lombok.AccessLevel PACKAGE -> PACKAGE
    lombok.AccessLevel PRIVATE -> PRIVATE
    lombok.AccessLevel NONE -> NONE
    lombok.AccessLevel[] ENUM$VALUES -> ENUM$VALUES
    27:30:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    1:1:lombok.AccessLevel[] values() -> values
    1:1:lombok.AccessLevel valueOf(java.lang.String) -> valueOf
lombok.AllArgsConstructor -> lombok.AllArgsConstructor:
    java.lang.String staticName() -> staticName
    lombok.AllArgsConstructor$AnyAnnotation[] onConstructor() -> onConstructor
    lombok.AccessLevel access() -> access
lombok.AllArgsConstructor$AnyAnnotation -> lombok.AllArgsConstructor$AnyAnnotation:
lombok.Builder -> lombok.Builder:
    java.lang.String builderMethodName() -> builderMethodName
    java.lang.String buildMethodName() -> buildMethodName
    java.lang.String builderClassName() -> builderClassName
    boolean toBuilder() -> toBuilder
    lombok.AccessLevel access() -> access
    java.lang.String setterPrefix() -> setterPrefix
lombok.Builder$Default -> lombok.Builder$Default:
lombok.Builder$ObtainVia -> lombok.Builder$ObtainVia:
    java.lang.String field() -> field
    java.lang.String method() -> method
    boolean isStatic() -> isStatic
lombok.Cleanup -> lombok.Cleanup:
    java.lang.String value() -> value
lombok.ConfigurationKeys -> lombok.ConfigurationKeys:
    lombok.core.configuration.ConfigurationKey LOMBOK_DISABLE -> LOMBOK_DISABLE
    lombok.core.configuration.ConfigurationKey ADD_GENERATED_ANNOTATIONS -> ADD_GENERATED_ANNOTATIONS
    lombok.core.configuration.ConfigurationKey ADD_JAVAX_GENERATED_ANNOTATIONS -> ADD_JAVAX_GENERATED_ANNOTATIONS
    lombok.core.configuration.ConfigurationKey ADD_LOMBOK_GENERATED_ANNOTATIONS -> ADD_LOMBOK_GENERATED_ANNOTATIONS
    lombok.core.configuration.ConfigurationKey ADD_FINDBUGS_SUPPRESSWARNINGS_ANNOTATIONS -> ADD_FINDBUGS_SUPPRESSWARNINGS_ANNOTATIONS
    lombok.core.configuration.ConfigurationKey ADD_SUPPRESSWARNINGS_ANNOTATIONS -> ADD_SUPPRESSWARNINGS_ANNOTATIONS
    lombok.core.configuration.ConfigurationKey ADD_NULL_ANNOTATIONS -> ADD_NULL_ANNOTATIONS
    lombok.core.configuration.ConfigurationKey ANY_CONSTRUCTOR_FLAG_USAGE -> ANY_CONSTRUCTOR_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey ANY_CONSTRUCTOR_SUPPRESS_CONSTRUCTOR_PROPERTIES -> ANY_CONSTRUCTOR_SUPPRESS_CONSTRUCTOR_PROPERTIES
    lombok.core.configuration.ConfigurationKey ANY_CONSTRUCTOR_ADD_CONSTRUCTOR_PROPERTIES -> ANY_CONSTRUCTOR_ADD_CONSTRUCTOR_PROPERTIES
    lombok.core.configuration.ConfigurationKey ALL_ARGS_CONSTRUCTOR_FLAG_USAGE -> ALL_ARGS_CONSTRUCTOR_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey NO_ARGS_CONSTRUCTOR_FLAG_USAGE -> NO_ARGS_CONSTRUCTOR_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey NO_ARGS_CONSTRUCTOR_EXTRA_PRIVATE -> NO_ARGS_CONSTRUCTOR_EXTRA_PRIVATE
    lombok.core.configuration.ConfigurationKey REQUIRED_ARGS_CONSTRUCTOR_FLAG_USAGE -> REQUIRED_ARGS_CONSTRUCTOR_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey DATA_FLAG_USAGE -> DATA_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey VALUE_FLAG_USAGE -> VALUE_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey GETTER_FLAG_USAGE -> GETTER_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey GETTER_LAZY_FLAG_USAGE -> GETTER_LAZY_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey GETTER_CONSEQUENT_BOOLEAN -> GETTER_CONSEQUENT_BOOLEAN
    lombok.core.configuration.ConfigurationKey SETTER_FLAG_USAGE -> SETTER_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey EQUALS_AND_HASH_CODE_DO_NOT_USE_GETTERS -> EQUALS_AND_HASH_CODE_DO_NOT_USE_GETTERS
    lombok.core.configuration.ConfigurationKey EQUALS_AND_HASH_CODE_CALL_SUPER -> EQUALS_AND_HASH_CODE_CALL_SUPER
    lombok.core.configuration.ConfigurationKey EQUALS_AND_HASH_CODE_FLAG_USAGE -> EQUALS_AND_HASH_CODE_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey TO_STRING_DO_NOT_USE_GETTERS -> TO_STRING_DO_NOT_USE_GETTERS
    lombok.core.configuration.ConfigurationKey TO_STRING_CALL_SUPER -> TO_STRING_CALL_SUPER
    lombok.core.configuration.ConfigurationKey TO_STRING_FLAG_USAGE -> TO_STRING_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey TO_STRING_INCLUDE_FIELD_NAMES -> TO_STRING_INCLUDE_FIELD_NAMES
    lombok.core.configuration.ConfigurationKey TO_STRING_ONLY_EXPLICITLY_INCLUDED -> TO_STRING_ONLY_EXPLICITLY_INCLUDED
    lombok.core.configuration.ConfigurationKey BUILDER_CLASS_NAME -> BUILDER_CLASS_NAME
    lombok.core.configuration.ConfigurationKey BUILDER_FLAG_USAGE -> BUILDER_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey SINGULAR_USE_GUAVA -> SINGULAR_USE_GUAVA
    lombok.core.configuration.ConfigurationKey SINGULAR_AUTO -> SINGULAR_AUTO
    lombok.core.configuration.ConfigurationKey CLEANUP_FLAG_USAGE -> CLEANUP_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey DELEGATE_FLAG_USAGE -> DELEGATE_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey NON_NULL_EXCEPTION_TYPE -> NON_NULL_EXCEPTION_TYPE
    lombok.core.configuration.ConfigurationKey NON_NULL_FLAG_USAGE -> NON_NULL_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey SNEAKY_THROWS_FLAG_USAGE -> SNEAKY_THROWS_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey SYNCHRONIZED_FLAG_USAGE -> SYNCHRONIZED_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey VAL_FLAG_USAGE -> VAL_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey VAR_FLAG_USAGE -> VAR_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey WITH_FLAG_USAGE -> WITH_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey LOG_ANY_FLAG_USAGE -> LOG_ANY_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey LOG_COMMONS_FLAG_USAGE -> LOG_COMMONS_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey LOG_JUL_FLAG_USAGE -> LOG_JUL_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey LOG_LOG4J_FLAG_USAGE -> LOG_LOG4J_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey LOG_LOG4J2_FLAG_USAGE -> LOG_LOG4J2_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey LOG_SLF4J_FLAG_USAGE -> LOG_SLF4J_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey LOG_XSLF4J_FLAG_USAGE -> LOG_XSLF4J_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey LOG_JBOSSLOG_FLAG_USAGE -> LOG_JBOSSLOG_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey LOG_FLOGGER_FLAG_USAGE -> LOG_FLOGGER_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey LOG_ANY_FIELD_NAME -> LOG_ANY_FIELD_NAME
    lombok.core.configuration.ConfigurationKey LOG_ANY_FIELD_IS_STATIC -> LOG_ANY_FIELD_IS_STATIC
    lombok.core.configuration.ConfigurationKey LOG_CUSTOM_FLAG_USAGE -> LOG_CUSTOM_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey LOG_CUSTOM_DECLARATION -> LOG_CUSTOM_DECLARATION
    lombok.core.configuration.ConfigurationKey EXPERIMENTAL_FLAG_USAGE -> EXPERIMENTAL_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey ACCESSORS_FLAG_USAGE -> ACCESSORS_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey ACCESSORS_PREFIX -> ACCESSORS_PREFIX
    lombok.core.configuration.ConfigurationKey ACCESSORS_CHAIN -> ACCESSORS_CHAIN
    lombok.core.configuration.ConfigurationKey ACCESSORS_FLUENT -> ACCESSORS_FLUENT
    lombok.core.configuration.ConfigurationKey ACCESSORS_MAKE_FINAL -> ACCESSORS_MAKE_FINAL
    lombok.core.configuration.ConfigurationKey ACCESSORS_JAVA_BEANS_SPEC_CAPITALIZATION -> ACCESSORS_JAVA_BEANS_SPEC_CAPITALIZATION
    lombok.core.configuration.ConfigurationKey EXTENSION_METHOD_FLAG_USAGE -> EXTENSION_METHOD_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey FIELD_DEFAULTS_PRIVATE_EVERYWHERE -> FIELD_DEFAULTS_PRIVATE_EVERYWHERE
    lombok.core.configuration.ConfigurationKey FIELD_DEFAULTS_FINAL_EVERYWHERE -> FIELD_DEFAULTS_FINAL_EVERYWHERE
    lombok.core.configuration.ConfigurationKey FIELD_DEFAULTS_FLAG_USAGE -> FIELD_DEFAULTS_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey HELPER_FLAG_USAGE -> HELPER_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey ON_X_FLAG_USAGE -> ON_X_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey UTILITY_CLASS_FLAG_USAGE -> UTILITY_CLASS_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey FIELD_NAME_CONSTANTS_FLAG_USAGE -> FIELD_NAME_CONSTANTS_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey FIELD_NAME_CONSTANTS_INNER_TYPE_NAME -> FIELD_NAME_CONSTANTS_INNER_TYPE_NAME
    lombok.core.configuration.ConfigurationKey FIELD_NAME_CONSTANTS_UPPERCASE -> FIELD_NAME_CONSTANTS_UPPERCASE
    lombok.core.configuration.ConfigurationKey SUPERBUILDER_FLAG_USAGE -> SUPERBUILDER_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey WITHBY_FLAG_USAGE -> WITHBY_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey JACKSONIZED_FLAG_USAGE -> JACKSONIZED_FLAG_USAGE
    lombok.core.configuration.ConfigurationKey STOP_BUBBLING -> STOP_BUBBLING
    lombok.core.configuration.ConfigurationKey COPYABLE_ANNOTATIONS -> COPYABLE_ANNOTATIONS
    lombok.core.configuration.ConfigurationKey CHECKER_FRAMEWORK -> CHECKER_FRAMEWORK
    lombok.core.configuration.ConfigurationKey STANDARD_EXCEPTION_FLAG_USAGE -> STANDARD_EXCEPTION_FLAG_USAGE
    52:728:void <clinit>() -> <clinit>
    41:41:void <init>() -> <init>
lombok.ConfigurationKeys$1 -> lombok.ConfigurationKeys$1:
    52:52:void <init>(java.lang.String,java.lang.String,boolean) -> <init>
lombok.ConfigurationKeys$10 -> lombok.ConfigurationKeys$10:
    159:159:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$11 -> lombok.ConfigurationKeys$11:
    166:166:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$12 -> lombok.ConfigurationKeys$12:
    173:173:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$13 -> lombok.ConfigurationKeys$13:
    180:180:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$14 -> lombok.ConfigurationKeys$14:
    187:187:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$15 -> lombok.ConfigurationKeys$15:
    198:198:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$16 -> lombok.ConfigurationKeys$16:
    207:207:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$17 -> lombok.ConfigurationKeys$17:
    216:216:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$18 -> lombok.ConfigurationKeys$18:
    223:223:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$19 -> lombok.ConfigurationKeys$19:
    231:231:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$2 -> lombok.ConfigurationKeys$2:
    66:66:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$20 -> lombok.ConfigurationKeys$20:
    240:240:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$21 -> lombok.ConfigurationKeys$21:
    249:249:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$22 -> lombok.ConfigurationKeys$22:
    256:256:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$23 -> lombok.ConfigurationKeys$23:
    263:263:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$24 -> lombok.ConfigurationKeys$24:
    272:272:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$25 -> lombok.ConfigurationKeys$25:
    279:279:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$26 -> lombok.ConfigurationKeys$26:
    286:286:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$27 -> lombok.ConfigurationKeys$27:
    293:293:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$28 -> lombok.ConfigurationKeys$28:
    300:300:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$29 -> lombok.ConfigurationKeys$29:
    309:309:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$3 -> lombok.ConfigurationKeys$3:
    75:75:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$30 -> lombok.ConfigurationKeys$30:
    316:316:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$31 -> lombok.ConfigurationKeys$31:
    326:326:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$32 -> lombok.ConfigurationKeys$32:
    333:333:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$33 -> lombok.ConfigurationKeys$33:
    344:344:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$34 -> lombok.ConfigurationKeys$34:
    353:353:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$35 -> lombok.ConfigurationKeys$35:
    368:368:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$36 -> lombok.ConfigurationKeys$36:
    375:375:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$37 -> lombok.ConfigurationKeys$37:
    384:384:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$38 -> lombok.ConfigurationKeys$38:
    393:393:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$39 -> lombok.ConfigurationKeys$39:
    402:402:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$4 -> lombok.ConfigurationKeys$4:
    82:82:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$40 -> lombok.ConfigurationKeys$40:
    403:403:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$41 -> lombok.ConfigurationKeys$41:
    412:412:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$42 -> lombok.ConfigurationKeys$42:
    422:422:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$43 -> lombok.ConfigurationKeys$43:
    429:429:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$44 -> lombok.ConfigurationKeys$44:
    436:436:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$45 -> lombok.ConfigurationKeys$45:
    443:443:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$46 -> lombok.ConfigurationKeys$46:
    450:450:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$47 -> lombok.ConfigurationKeys$47:
    457:457:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$48 -> lombok.ConfigurationKeys$48:
    464:464:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$49 -> lombok.ConfigurationKeys$49:
    471:471:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$5 -> lombok.ConfigurationKeys$5:
    91:91:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$50 -> lombok.ConfigurationKeys$50:
    478:478:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$51 -> lombok.ConfigurationKeys$51:
    485:485:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$52 -> lombok.ConfigurationKeys$52:
    494:494:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$53 -> lombok.ConfigurationKeys$53:
    503:503:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$54 -> lombok.ConfigurationKeys$54:
    528:528:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$55 -> lombok.ConfigurationKeys$55:
    538:538:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$56 -> lombok.ConfigurationKeys$56:
    547:547:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$57 -> lombok.ConfigurationKeys$57:
    554:554:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$58 -> lombok.ConfigurationKeys$58:
    561:561:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$59 -> lombok.ConfigurationKeys$59:
    568:568:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$6 -> lombok.ConfigurationKeys$6:
    98:98:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$60 -> lombok.ConfigurationKeys$60:
    575:575:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$61 -> lombok.ConfigurationKeys$61:
    583:583:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$62 -> lombok.ConfigurationKeys$62:
    593:593:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$63 -> lombok.ConfigurationKeys$63:
    602:602:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$64 -> lombok.ConfigurationKeys$64:
    609:609:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$65 -> lombok.ConfigurationKeys$65:
    616:616:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$66 -> lombok.ConfigurationKeys$66:
    625:625:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$67 -> lombok.ConfigurationKeys$67:
    636:636:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$68 -> lombok.ConfigurationKeys$68:
    645:645:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$69 -> lombok.ConfigurationKeys$69:
    653:653:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$7 -> lombok.ConfigurationKeys$7:
    125:125:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$70 -> lombok.ConfigurationKeys$70:
    660:660:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$71 -> lombok.ConfigurationKeys$71:
    667:667:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$72 -> lombok.ConfigurationKeys$72:
    676:676:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$73 -> lombok.ConfigurationKeys$73:
    685:685:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$74 -> lombok.ConfigurationKeys$74:
    694:694:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$75 -> lombok.ConfigurationKeys$75:
    705:705:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$76 -> lombok.ConfigurationKeys$76:
    712:712:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$77 -> lombok.ConfigurationKeys$77:
    721:721:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$78 -> lombok.ConfigurationKeys$78:
    728:728:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$8 -> lombok.ConfigurationKeys$8:
    134:134:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.ConfigurationKeys$9 -> lombok.ConfigurationKeys$9:
    151:151:void <init>(java.lang.String,java.lang.String) -> <init>
lombok.CustomLog -> lombok.CustomLog:
    java.lang.String topic() -> topic
lombok.Data -> lombok.Data:
    java.lang.String staticConstructor() -> staticConstructor
lombok.Delegate -> lombok.Delegate:
    java.lang.Class[] types() -> types
    java.lang.Class[] excludes() -> excludes
lombok.EqualsAndHashCode -> lombok.EqualsAndHashCode:
    java.lang.String[] exclude() -> exclude
    java.lang.String[] of() -> of
    boolean callSuper() -> callSuper
    boolean doNotUseGetters() -> doNotUseGetters
    lombok.EqualsAndHashCode$CacheStrategy cacheStrategy() -> cacheStrategy
    lombok.EqualsAndHashCode$AnyAnnotation[] onParam() -> onParam
    boolean onlyExplicitlyIncluded() -> onlyExplicitlyIncluded
lombok.EqualsAndHashCode$AnyAnnotation -> lombok.EqualsAndHashCode$AnyAnnotation:
lombok.EqualsAndHashCode$CacheStrategy -> lombok.EqualsAndHashCode$CacheStrategy:
    lombok.EqualsAndHashCode$CacheStrategy NEVER -> NEVER
    lombok.EqualsAndHashCode$CacheStrategy LAZY -> LAZY
    lombok.EqualsAndHashCode$CacheStrategy[] ENUM$VALUES -> ENUM$VALUES
    144:156:void <clinit>() -> <clinit>
    144:144:void <init>(java.lang.String,int) -> <init>
    1:1:lombok.EqualsAndHashCode$CacheStrategy[] values() -> values
    1:1:lombok.EqualsAndHashCode$CacheStrategy valueOf(java.lang.String) -> valueOf
lombok.EqualsAndHashCode$Exclude -> lombok.EqualsAndHashCode$Exclude:
lombok.EqualsAndHashCode$Include -> lombok.EqualsAndHashCode$Include:
    java.lang.String replaces() -> replaces
    int rank() -> rank
lombok.Generated -> lombok.Generated:
lombok.Getter -> lombok.Getter:
    lombok.AccessLevel value() -> value
    lombok.Getter$AnyAnnotation[] onMethod() -> onMethod
    boolean lazy() -> lazy
lombok.Getter$AnyAnnotation -> lombok.Getter$AnyAnnotation:
lombok.Lombok -> lombok.Lombok:
    27:27:void <init>() -> <init>
    50:51:java.lang.RuntimeException sneakyThrow(java.lang.Throwable) -> sneakyThrow
    56:56:java.lang.Throwable sneakyThrow0(java.lang.Throwable) -> sneakyThrow0
    69:69:java.lang.Object preventNullAnalysis(java.lang.Object) -> preventNullAnalysis
    82:83:java.lang.Object checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
lombok.NoArgsConstructor -> lombok.NoArgsConstructor:
    java.lang.String staticName() -> staticName
    lombok.NoArgsConstructor$AnyAnnotation[] onConstructor() -> onConstructor
    lombok.AccessLevel access() -> access
    boolean force() -> force
lombok.NoArgsConstructor$AnyAnnotation -> lombok.NoArgsConstructor$AnyAnnotation:
lombok.NonNull -> lombok.NonNull:
lombok.RequiredArgsConstructor -> lombok.RequiredArgsConstructor:
    java.lang.String staticName() -> staticName
    lombok.RequiredArgsConstructor$AnyAnnotation[] onConstructor() -> onConstructor
    lombok.AccessLevel access() -> access
lombok.RequiredArgsConstructor$AnyAnnotation -> lombok.RequiredArgsConstructor$AnyAnnotation:
lombok.Setter -> lombok.Setter:
    lombok.AccessLevel value() -> value
    lombok.Setter$AnyAnnotation[] onMethod() -> onMethod
    lombok.Setter$AnyAnnotation[] onParam() -> onParam
lombok.Setter$AnyAnnotation -> lombok.Setter$AnyAnnotation:
lombok.Singular -> lombok.Singular:
    java.lang.String value() -> value
    boolean ignoreNullCollections() -> ignoreNullCollections
lombok.SneakyThrows -> lombok.SneakyThrows:
    java.lang.Class[] value() -> value
lombok.Synchronized -> lombok.Synchronized:
    java.lang.String value() -> value
lombok.ToString -> lombok.ToString:
    boolean includeFieldNames() -> includeFieldNames
    java.lang.String[] exclude() -> exclude
    java.lang.String[] of() -> of
    boolean callSuper() -> callSuper
    boolean doNotUseGetters() -> doNotUseGetters
    boolean onlyExplicitlyIncluded() -> onlyExplicitlyIncluded
lombok.ToString$Exclude -> lombok.ToString$Exclude:
lombok.ToString$Include -> lombok.ToString$Include:
    int rank() -> rank
    java.lang.String name() -> name
lombok.Value -> lombok.Value:
    java.lang.String staticConstructor() -> staticConstructor
lombok.With -> lombok.With:
    lombok.AccessLevel value() -> value
    lombok.With$AnyAnnotation[] onMethod() -> onMethod
    lombok.With$AnyAnnotation[] onParam() -> onParam
lombok.With$AnyAnnotation -> lombok.With$AnyAnnotation:
lombok.delombok.ant.Tasks -> lombok.delombok.ant.Tasks:
    40:40:void <init>() -> <init>
lombok.delombok.ant.Tasks$Delombok -> lombok.delombok.ant.Tasks$Delombok:
    java.io.File fromDir -> fromDir
    java.io.File toDir -> toDir
    org.apache.tools.ant.types.Path classpath -> classpath
    org.apache.tools.ant.types.Path sourcepath -> sourcepath
    org.apache.tools.ant.types.Path modulepath -> modulepath
    boolean verbose -> verbose
    java.lang.String encoding -> encoding
    org.apache.tools.ant.types.Path path -> path
    java.util.List formatOptions -> formatOptions
    java.lang.ClassLoader shadowLoader -> shadowLoader
    75:83:void <init>() -> <init>
    86:91:void setClasspath(org.apache.tools.ant.types.Path) -> setClasspath
    94:95:org.apache.tools.ant.types.Path createClasspath() -> createClasspath
    99:100:void setClasspathRef(org.apache.tools.ant.types.Reference) -> setClasspathRef
    103:108:void setSourcepath(org.apache.tools.ant.types.Path) -> setSourcepath
    111:112:org.apache.tools.ant.types.Path createSourcepath() -> createSourcepath
    116:117:void setSourcepathRef(org.apache.tools.ant.types.Reference) -> setSourcepathRef
    120:125:void setModulepath(org.apache.tools.ant.types.Path) -> setModulepath
    128:129:org.apache.tools.ant.types.Path createModulepath() -> createModulepath
    133:134:void setModulepathRef(org.apache.tools.ant.types.Reference) -> setModulepathRef
    137:138:void setFrom(java.io.File) -> setFrom
    141:142:void setTo(java.io.File) -> setTo
    145:146:void setVerbose(boolean) -> setVerbose
    149:150:void setEncoding(java.lang.String) -> setEncoding
    153:155:void addFileset(org.apache.tools.ant.types.FileSet) -> addFileset
    158:159:void addFormat(lombok.delombok.ant.Tasks$Format) -> addFormat
    165:184:java.lang.Class shadowLoadClass(java.lang.String) -> shadowLoadClass
    190:218:void execute() -> execute
lombok.delombok.ant.Tasks$Format -> lombok.delombok.ant.Tasks$Format:
    java.lang.String value -> value
    41:41:void <init>() -> <init>
    46:48:int hashCode() -> hashCode
    52:59:boolean equals(java.lang.Object) -> equals
    63:63:java.lang.String toString() -> toString
    67:67:java.lang.String getValue() -> getValue
    71:72:void setValue(java.lang.String) -> setValue
lombok.experimental.Accessors -> lombok.experimental.Accessors:
    boolean fluent() -> fluent
    boolean chain() -> chain
    boolean makeFinal() -> makeFinal
    java.lang.String[] prefix() -> prefix
lombok.experimental.Delegate -> lombok.experimental.Delegate:
    java.lang.Class[] types() -> types
    java.lang.Class[] excludes() -> excludes
lombok.experimental.ExtensionMethod -> lombok.experimental.ExtensionMethod:
    java.lang.Class[] value() -> value
    boolean suppressBaseMethods() -> suppressBaseMethods
lombok.experimental.FieldDefaults -> lombok.experimental.FieldDefaults:
    lombok.AccessLevel level() -> level
    boolean makeFinal() -> makeFinal
lombok.experimental.FieldNameConstants -> lombok.experimental.FieldNameConstants:
    lombok.AccessLevel level() -> level
    boolean asEnum() -> asEnum
    java.lang.String innerTypeName() -> innerTypeName
    boolean onlyExplicitlyIncluded() -> onlyExplicitlyIncluded
lombok.experimental.FieldNameConstants$Exclude -> lombok.experimental.FieldNameConstants$Exclude:
lombok.experimental.FieldNameConstants$Include -> lombok.experimental.FieldNameConstants$Include:
lombok.experimental.Helper -> lombok.experimental.Helper:
lombok.experimental.NonFinal -> lombok.experimental.NonFinal:
lombok.experimental.PackagePrivate -> lombok.experimental.PackagePrivate:
lombok.experimental.StandardException -> lombok.experimental.StandardException:
    lombok.AccessLevel access() -> access
lombok.experimental.SuperBuilder -> lombok.experimental.SuperBuilder:
    java.lang.String builderMethodName() -> builderMethodName
    java.lang.String buildMethodName() -> buildMethodName
    boolean toBuilder() -> toBuilder
    java.lang.String setterPrefix() -> setterPrefix
lombok.experimental.Tolerate -> lombok.experimental.Tolerate:
lombok.experimental.UtilityClass -> lombok.experimental.UtilityClass:
lombok.experimental.WithBy -> lombok.experimental.WithBy:
    lombok.AccessLevel value() -> value
    lombok.experimental.WithBy$AnyAnnotation[] onMethod() -> onMethod
lombok.experimental.WithBy$AnyAnnotation -> lombok.experimental.WithBy$AnyAnnotation:
lombok.experimental.Wither -> lombok.experimental.Wither:
    lombok.AccessLevel value() -> value
    lombok.experimental.Wither$AnyAnnotation[] onMethod() -> onMethod
    lombok.experimental.Wither$AnyAnnotation[] onParam() -> onParam
lombok.experimental.Wither$AnyAnnotation -> lombok.experimental.Wither$AnyAnnotation:
lombok.experimental.package-info -> lombok.experimental.package-info:
lombok.experimental.var -> lombok.experimental.var:
lombok.extern.apachecommons.CommonsLog -> lombok.extern.apachecommons.CommonsLog:
    java.lang.String topic() -> topic
lombok.extern.flogger.Flogger -> lombok.extern.flogger.Flogger:
lombok.extern.jackson.Jacksonized -> lombok.extern.jackson.Jacksonized:
lombok.extern.java.Log -> lombok.extern.java.Log:
    java.lang.String topic() -> topic
lombok.extern.jbosslog.JBossLog -> lombok.extern.jbosslog.JBossLog:
    java.lang.String topic() -> topic
lombok.extern.log4j.Log4j -> lombok.extern.log4j.Log4j:
    java.lang.String topic() -> topic
lombok.extern.log4j.Log4j2 -> lombok.extern.log4j.Log4j2:
    java.lang.String topic() -> topic
lombok.extern.slf4j.Slf4j -> lombok.extern.slf4j.Slf4j:
    java.lang.String topic() -> topic
lombok.extern.slf4j.XSlf4j -> lombok.extern.slf4j.XSlf4j:
    java.lang.String topic() -> topic
lombok.javac.apt.Processor -> lombok.javac.apt.Processor:
    64:64:void <init>() -> <init>
    68:73:void init(javax.annotation.processing.ProcessingEnvironment) -> init
    76:80:java.lang.String report(javax.annotation.processing.ProcessingEnvironment) -> report
    85:89:java.lang.String writeFile(java.lang.String) -> writeFile
    93:99:java.lang.String collectData(javax.annotation.processing.ProcessingEnvironment) -> collectData
    104:125:void listOptions(java.lang.StringBuilder,javax.annotation.processing.ProcessingEnvironment) -> listOptions
    129:165:void findServices(java.lang.StringBuilder,javax.annotation.processing.Filer) -> findServices
    168:179:void addStacktrace(java.lang.StringBuilder) -> addStacktrace
    182:193:void listProperties(java.lang.StringBuilder) -> listProperties
    196:203:void string(java.lang.StringBuilder,java.lang.String) -> string
    206:217:java.lang.String escape(char) -> escape
    225:225:javax.lang.model.SourceVersion getSupportedSourceVersion() -> getSupportedSourceVersion
    229:229:boolean process(java.util.Set,javax.annotation.processing.RoundEnvironment) -> process
lombok.launch.Agent -> lombok.launch.Agent:
    28:28:void <init>() -> <init>
    30:31:void agentmain(java.lang.String,java.lang.instrument.Instrumentation) -> agentmain
    34:35:void premain(java.lang.String,java.lang.instrument.Instrumentation) -> premain
    38:46:void runLauncher(java.lang.String,java.lang.instrument.Instrumentation,boolean) -> runLauncher
lombok.launch.AnnotationProcessorHider -> lombok.launch.AnnotationProcessorHider:
    40:40:void <init>() -> <init>
lombok.launch.AnnotationProcessorHider$AnnotationProcessor -> lombok.launch.AnnotationProcessorHider$AnnotationProcessor:
    javax.annotation.processing.AbstractProcessor instance -> instance
    46:47:void <init>() -> <init>
    50:50:java.util.Set getSupportedOptions() -> getSupportedOptions
    54:54:java.util.Set getSupportedAnnotationTypes() -> getSupportedAnnotationTypes
    58:58:javax.lang.model.SourceVersion getSupportedSourceVersion() -> getSupportedSourceVersion
    62:66:void init(javax.annotation.processing.ProcessingEnvironment) -> init
    77:87:void disableJava9SillyWarning() -> disableJava9SillyWarning
    90:90:boolean process(java.util.Set,javax.annotation.processing.RoundEnvironment) -> process
    94:94:java.lang.Iterable getCompletions(javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,java.lang.String) -> getCompletions
    98:105:javax.annotation.processing.AbstractProcessor createWrappedInstance() -> createWrappedInstance
lombok.launch.AnnotationProcessorHider$AstModificationNotifierData -> lombok.launch.AnnotationProcessorHider$AstModificationNotifierData:
    boolean lombokInvoked -> lombokInvoked
    43:43:void <clinit>() -> <clinit>
    42:42:void <init>() -> <init>
lombok.launch.AnnotationProcessorHider$ClaimingProcessor -> lombok.launch.AnnotationProcessorHider$ClaimingProcessor:
    111:111:void <init>() -> <init>
    113:113:boolean process(java.util.Set,javax.annotation.processing.RoundEnvironment) -> process
    117:117:javax.lang.model.SourceVersion getSupportedSourceVersion() -> getSupportedSourceVersion
lombok.launch.Main -> lombok.launch.Main:
    lombok.launch.ShadowClassLoader classLoader -> classLoader
    27:27:void <init>() -> <init>
    31:34:java.lang.ClassLoader getShadowClassLoader() -> getShadowClassLoader
    38:40:void prependClassLoader(java.lang.ClassLoader) -> prependClassLoader
    43:50:void main(java.lang.String[]) -> main
lombok.launch.PatchFixesHider -> lombok.launch.PatchFixesHider:
    80:80:void <init>() -> <init>
lombok.launch.PatchFixesHider$Delegate -> lombok.launch.PatchFixesHider$Delegate:
    java.lang.reflect.Method HANDLE_DELEGATE_FOR_TYPE -> HANDLE_DELEGATE_FOR_TYPE
    java.lang.reflect.Method ADD_GENERATED_DELEGATE_METHODS -> ADD_GENERATED_DELEGATE_METHODS
    266:269:void <clinit>() -> <clinit>
    261:261:void <init>() -> <init>
    272:272:boolean handleDelegateForType(java.lang.Object) -> handleDelegateForType
    276:276:java.lang.Object[] addGeneratedDelegateMethods(java.lang.Object,java.lang.Object) -> addGeneratedDelegateMethods
lombok.launch.PatchFixesHider$ExtensionMethod -> lombok.launch.PatchFixesHider$ExtensionMethod:
    java.lang.String MESSAGE_SEND_SIG -> MESSAGE_SEND_SIG
    java.lang.String TYPE_BINDING_SIG -> TYPE_BINDING_SIG
    java.lang.String SCOPE_SIG -> SCOPE_SIG
    java.lang.String BLOCK_SCOPE_SIG -> BLOCK_SCOPE_SIG
    java.lang.String TYPE_BINDINGS_SIG -> TYPE_BINDINGS_SIG
    java.lang.String PROBLEM_REPORTER_SIG -> PROBLEM_REPORTER_SIG
    java.lang.String METHOD_BINDING_SIG -> METHOD_BINDING_SIG
    java.lang.String AST_NODE_SIG -> AST_NODE_SIG
    java.lang.reflect.Method RESOLVE_TYPE -> RESOLVE_TYPE
    java.lang.reflect.Method ERROR_NO_METHOD_FOR -> ERROR_NO_METHOD_FOR
    java.lang.reflect.Method INVALID_METHOD -> INVALID_METHOD
    java.lang.reflect.Method INVALID_METHOD2 -> INVALID_METHOD2
    java.lang.reflect.Method NON_STATIC_ACCESS_TO_STATIC_METHOD -> NON_STATIC_ACCESS_TO_STATIC_METHOD
    java.lang.reflect.Method MODIFY_METHOD_PATTERN -> MODIFY_METHOD_PATTERN
    382:389:void <clinit>() -> <clinit>
    365:365:void <init>() -> <init>
    392:392:java.lang.Object resolveType(java.lang.Object,java.lang.Object,java.lang.Object) -> resolveType
    396:397:void errorNoMethodFor(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> errorNoMethodFor
    400:401:void invalidMethod(java.lang.Object,java.lang.Object,java.lang.Object) -> invalidMethod
    404:405:void invalidMethod(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invalidMethod
    408:409:void nonStaticAccessToStaticMethod(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> nonStaticAccessToStaticMethod
    412:412:java.lang.Object modifyMethodPattern(java.lang.Object) -> modifyMethodPattern
lombok.launch.PatchFixesHider$Javadoc -> lombok.launch.PatchFixesHider$Javadoc:
    java.lang.reflect.Method GET_HTML -> GET_HTML
    java.lang.reflect.Method PRINT_METHOD -> PRINT_METHOD
    422:425:void <clinit>() -> <clinit>
    417:417:void <init>() -> <init>
    428:428:java.lang.String getHTMLContentFromSource(java.lang.String,org.eclipse.jdt.core.IJavaElement) -> getHTMLContentFromSource
    432:432:java.lang.StringBuffer printMethod(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration,int,java.lang.StringBuffer,org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) -> printMethod
lombok.launch.PatchFixesHider$LombokDeps -> lombok.launch.PatchFixesHider$LombokDeps:
    java.lang.reflect.Method ADD_LOMBOK_NOTES -> ADD_LOMBOK_NOTES
    java.lang.reflect.Method POST_COMPILER_BYTES_STRING -> POST_COMPILER_BYTES_STRING
    java.lang.reflect.Method POST_COMPILER_OUTPUTSTREAM -> POST_COMPILER_OUTPUTSTREAM
    java.lang.reflect.Method POST_COMPILER_BUFFEREDOUTPUTSTREAM_STRING_STRING -> POST_COMPILER_BUFFEREDOUTPUTSTREAM_STRING_STRING
    169:174:void <clinit>() -> <clinit>
    162:162:void <init>() -> <init>
    178:180:java.lang.String addLombokNotesToEclipseAboutDialog(java.lang.String,java.lang.String) -> addLombokNotesToEclipseAboutDialog
    185:185:byte[] runPostCompiler(byte[],java.lang.String) -> runPostCompiler
    189:189:java.io.OutputStream runPostCompiler(java.io.OutputStream) -> runPostCompiler
    193:193:java.io.BufferedOutputStream runPostCompiler(java.io.BufferedOutputStream,java.lang.String,java.lang.String) -> runPostCompiler
lombok.launch.PatchFixesHider$PatchFixes -> lombok.launch.PatchFixesHider$PatchFixes:
    int ALREADY_PROCESSED_FLAG -> ALREADY_PROCESSED_FLAG
    442:442:void <init>() -> <init>
    444:453:boolean isGenerated(org.eclipse.jdt.core.dom.ASTNode) -> isGenerated
    457:463:boolean isGenerated(org.eclipse.jdt.internal.compiler.ast.ASTNode) -> isGenerated
    467:473:boolean isGenerated(org.eclipse.jdt.core.IMember) -> isGenerated
    477:483:boolean isBlockedVisitorAndGenerated(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTVisitor) -> isBlockedVisitorAndGenerated
    487:487:boolean isListRewriteOnGeneratedNode(org.eclipse.jdt.core.dom.rewrite.ListRewrite) -> isListRewriteOnGeneratedNode
    491:491:boolean returnFalse(java.lang.Object) -> returnFalse
    495:495:boolean returnTrue(java.lang.Object) -> returnTrue
    500:509:java.util.List removeGeneratedNodes(java.util.List) -> removeGeneratedNodes
    513:546:java.lang.String getRealMethodDeclarationSource(java.lang.String,java.lang.Object,org.eclipse.jdt.core.dom.MethodDeclaration) -> getRealMethodDeclarationSource
    566:589:void addAnnotations(java.util.List,java.lang.StringBuilder) -> addAnnotations
    592:636:org.eclipse.jdt.core.dom.MethodDeclaration getRealMethodDeclarationNode(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit) -> getRealMethodDeclarationNode
    641:648:org.eclipse.jdt.core.dom.AbstractTypeDeclaration findTypeDeclaration(org.eclipse.jdt.core.IType,java.util.List) -> findTypeDeclaration
    652:658:int getSourceEndFixed(int,org.eclipse.jdt.internal.compiler.ast.ASTNode) -> getSourceEndFixed
    662:662:int fixRetrieveStartingCatchPosition(int,int) -> fixRetrieveStartingCatchPosition
    666:668:int fixRetrieveIdentifierEndPosition(int,int,int) -> fixRetrieveIdentifierEndPosition
    672:672:int fixRetrieveEllipsisStartPosition(int,int) -> fixRetrieveEllipsisStartPosition
    676:676:int fixRetrieveStartBlockPosition(int,int) -> fixRetrieveStartBlockPosition
    683:683:int fixRetrieveRightBraceOrSemiColonPosition(int,int) -> fixRetrieveRightBraceOrSemiColonPosition
    687:690:int fixRetrieveRightBraceOrSemiColonPosition(int,org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration) -> fixRetrieveRightBraceOrSemiColonPosition
    694:697:int fixRetrieveRightBraceOrSemiColonPosition(int,org.eclipse.jdt.internal.compiler.ast.FieldDeclaration) -> fixRetrieveRightBraceOrSemiColonPosition
    701:703:int fixRetrieveProperRightBracketPosition(int,org.eclipse.jdt.core.dom.Type) -> fixRetrieveProperRightBracketPosition
    709:710:boolean checkBit24(java.lang.Object) -> checkBit24
    714:714:boolean skipRewritingGeneratedNodes(org.eclipse.jdt.core.dom.ASTNode) -> skipRewritingGeneratedNodes
    720:723:void setIsGeneratedFlag(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.compiler.ast.ASTNode) -> setIsGeneratedFlag
    726:730:void setIsGeneratedFlagForName(org.eclipse.jdt.core.dom.Name,java.lang.Object) -> setIsGeneratedFlagForName
    733:752:org.eclipse.jdt.internal.core.dom.rewrite.RewriteEvent[] listRewriteHandleGeneratedMethods(org.eclipse.jdt.internal.core.dom.rewrite.RewriteEvent) -> listRewriteHandleGeneratedMethods
    756:763:int getTokenEndOffsetFixed(org.eclipse.jdt.internal.core.dom.rewrite.TokenScanner,int,int,java.lang.Object) -> getTokenEndOffsetFixed
    767:771:org.eclipse.jdt.core.IMethod[] removeGeneratedMethods(org.eclipse.jdt.core.IMethod[]) -> removeGeneratedMethods
    775:792:org.eclipse.jdt.core.search.SearchMatch[] removeGenerated(org.eclipse.jdt.core.search.SearchMatch[]) -> removeGenerated
    800:813:org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[] createFakeSearchResult(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],java.lang.Object) -> createFakeSearchResult
    817:829:org.eclipse.jdt.core.dom.SimpleName[] removeGeneratedSimpleNames(org.eclipse.jdt.core.dom.SimpleName[]) -> removeGeneratedSimpleNames
    833:845:org.eclipse.jdt.core.dom.Name[] removeGeneratedNames(org.eclipse.jdt.core.dom.Name[]) -> removeGeneratedNames
    852:886:org.eclipse.jdt.internal.compiler.ast.Annotation[] convertAnnotations(org.eclipse.jdt.internal.compiler.ast.Annotation[],org.eclipse.jdt.core.IAnnotatable) -> convertAnnotations
    890:892:java.lang.String getRealNodeSource(java.lang.String,org.eclipse.jdt.internal.compiler.ast.ASTNode) -> getRealNodeSource
    896:898:java.lang.String getRealNodeSource(java.lang.String,org.eclipse.jdt.core.dom.ASTNode) -> getRealNodeSource
    902:902:boolean skipRewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment) -> skipRewriteVisibility
lombok.launch.PatchFixesHider$Tests -> lombok.launch.PatchFixesHider$Tests:
    906:906:void <init>() -> <init>
    908:926:java.lang.Object getBundle(java.lang.Object,java.lang.Class) -> getBundle
lombok.launch.PatchFixesHider$Transform -> lombok.launch.PatchFixesHider$Transform:
    java.lang.reflect.Method TRANSFORM -> TRANSFORM
    java.lang.reflect.Method TRANSFORM_SWAPPED -> TRANSFORM_SWAPPED
    197:197:void <init>() -> <init>
    202:212:void init(java.lang.ClassLoader) -> init
    215:224:void prependClassLoader(java.lang.ClassLoader) -> prependClassLoader
    228:246:java.lang.ClassLoader findJdtCoreClassLoader(java.lang.ClassLoader) -> findJdtCoreClassLoader
    250:252:void transform(java.lang.Object,java.lang.Object) -> transform
    255:257:void transform_swapped(java.lang.Object,java.lang.Object) -> transform_swapped
lombok.launch.PatchFixesHider$Util -> lombok.launch.PatchFixesHider$Util:
    java.lang.ClassLoader shadowLoader -> shadowLoader
    83:83:void <init>() -> <init>
    87:98:java.lang.ClassLoader getShadowLoader() -> getShadowLoader
    103:105:java.lang.Class shadowLoadClass(java.lang.String) -> shadowLoadClass
    111:113:java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> findMethod
    118:123:java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.String[]) -> findMethod
    127:128:java.lang.reflect.Method findMethodAnyArgs(java.lang.Class,java.lang.String) -> findMethodAnyArgs
    133:137:java.lang.Object invokeMethod(java.lang.reflect.Method,java.lang.Object[]) -> invokeMethod
    142:144:java.lang.RuntimeException sneakyThrow(java.lang.Throwable) -> sneakyThrow
    149:149:void sneakyThrow0(java.lang.Throwable) -> sneakyThrow0
    153:157:boolean sameTypes(java.lang.Class[],java.lang.String[]) -> sameTypes
lombok.launch.PatchFixesHider$Val -> lombok.launch.PatchFixesHider$Val:
    java.lang.String BLOCK_SCOPE_SIG -> BLOCK_SCOPE_SIG
    java.lang.String LOCAL_DECLARATION_SIG -> LOCAL_DECLARATION_SIG
    java.lang.String FOREACH_STATEMENT_SIG -> FOREACH_STATEMENT_SIG
    java.lang.reflect.Method HANDLE_VAL_FOR_LOCAL_DECLARATION -> HANDLE_VAL_FOR_LOCAL_DECLARATION
    java.lang.reflect.Method HANDLE_VAL_FOR_FOR_EACH -> HANDLE_VAL_FOR_FOR_EACH
    322:325:void <clinit>() -> <clinit>
    313:313:void <init>() -> <init>
    328:328:boolean handleValForLocalDeclaration(java.lang.Object,java.lang.Object) -> handleValForLocalDeclaration
    332:332:boolean handleValForForEach(java.lang.Object,java.lang.Object) -> handleValForForEach
    340:347:org.eclipse.jdt.internal.compiler.lookup.TypeBinding skipResolveInitializerIfAlreadyCalled(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.BlockScope) -> skipResolveInitializerIfAlreadyCalled
    352:359:org.eclipse.jdt.internal.compiler.lookup.TypeBinding skipResolveInitializerIfAlreadyCalled2(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.ast.LocalDeclaration) -> skipResolveInitializerIfAlreadyCalled2
lombok.launch.PatchFixesHider$ValPortal -> lombok.launch.PatchFixesHider$ValPortal:
    java.lang.reflect.Method COPY_INITIALIZATION_OF_FOR_EACH_ITERABLE -> COPY_INITIALIZATION_OF_FOR_EACH_ITERABLE
    java.lang.reflect.Method COPY_INITIALIZATION_OF_LOCAL_DECLARATION -> COPY_INITIALIZATION_OF_LOCAL_DECLARATION
    java.lang.reflect.Method ADD_FINAL_AND_VAL_ANNOTATION_TO_VARIABLE_DECLARATION_STATEMENT -> ADD_FINAL_AND_VAL_ANNOTATION_TO_VARIABLE_DECLARATION_STATEMENT
    java.lang.reflect.Method ADD_FINAL_AND_VAL_ANNOTATION_TO_SINGLE_VARIABLE_DECLARATION -> ADD_FINAL_AND_VAL_ANNOTATION_TO_SINGLE_VARIABLE_DECLARATION
    288:293:void <clinit>() -> <clinit>
    281:281:void <init>() -> <init>
    296:297:void copyInitializationOfForEachIterable(java.lang.Object) -> copyInitializationOfForEachIterable
    300:301:void copyInitializationOfLocalDeclaration(java.lang.Object) -> copyInitializationOfLocalDeclaration
    304:305:void addFinalAndValAnnotationToVariableDeclarationStatement(java.lang.Object,java.lang.Object,java.lang.Object) -> addFinalAndValAnnotationToVariableDeclarationStatement
    308:309:void addFinalAndValAnnotationToSingleVariableDeclaration(java.lang.Object,java.lang.Object,java.lang.Object) -> addFinalAndValAnnotationToSingleVariableDeclaration
lombok.launch.ShadowClassLoader -> lombok.launch.ShadowClassLoader:
    java.lang.String SELF_NAME -> SELF_NAME
    java.util.concurrent.ConcurrentMap highlanderMap -> highlanderMap
    java.lang.String SELF_BASE -> SELF_BASE
    java.io.File SELF_BASE_FILE -> SELF_BASE_FILE
    int SELF_BASE_LENGTH -> SELF_BASE_LENGTH
    java.util.List override -> override
    java.lang.String sclSuffix -> sclSuffix
    java.util.List parentExclusion -> parentExclusion
    java.util.List highlanders -> highlanders
    java.util.Set prependedParentLoaders -> prependedParentLoaders
    java.util.Map mapJarPathToTracker -> mapJarPathToTracker
    java.util.Map mapTrackerToJarPath -> mapTrackerToJarPath
    java.util.Map mapTrackerToJarContents -> mapTrackerToJarContents
    java.util.Map fileRootCache -> fileRootCache
    java.util.Map jarLocCache -> jarLocCache
    95:163:void <clinit>() -> <clinit>
    109:112:void prependParent(java.lang.ClassLoader) -> prependParent
    101:366:void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.util.List,java.util.List) -> <init>
    171:207:java.util.Set getOrMakeJarListing(java.lang.String) -> getOrMakeJarListing
    227:253:java.util.Set getJarMemberSet(java.lang.String) -> getJarMemberSet
    261:305:java.net.URL getResourceFromLocation(java.lang.String,java.lang.String,java.io.File) -> getResourceFromLocation
    309:311:boolean partOfShadow(java.lang.String,java.lang.String) -> partOfShadow
    318:319:boolean inOwnBase(java.lang.String,java.lang.String) -> inOwnBase
    323:329:boolean sclFileContainsSuffix(java.io.InputStream,java.lang.String) -> sclFileContainsSuffix
    333:337:java.lang.String urlDecode(java.lang.String) -> urlDecode
    343:362:boolean isPartOfShadowSuffixFileBased(java.lang.String,java.lang.String) -> isPartOfShadowSuffixFileBased
    368:400:boolean isPartOfShadowSuffixJarBased(java.lang.String,java.lang.String) -> isPartOfShadowSuffixJarBased
    408:426:boolean isPartOfShadowSuffix(java.lang.String,java.lang.String,java.lang.String) -> isPartOfShadowSuffix
    430:464:java.util.Enumeration getResources(java.lang.String) -> getResources
    468:468:java.net.URL getResource(java.lang.String) -> getResource
    472:505:java.net.URL getResource_(java.lang.String,boolean) -> getResource_
    509:512:boolean exclusionListMatch(java.lang.String) -> exclusionListMatch
    516:526:java.net.URL getResourceSkippingSelf(java.lang.String) -> getResourceSkippingSelf
    531:564:java.lang.Class loadClass(java.lang.String,boolean) -> loadClass
    569:614:java.lang.Class urlToDefineClass(java.lang.String,java.net.URL,boolean) -> urlToDefineClass
    618:622:void addOverrideJarDir(java.lang.String) -> addOverrideJarDir
    625:626:void addOverrideClasspathEntry(java.lang.String) -> addOverrideClasspathEntry
lombok.package-info -> lombok.package-info:
lombok.val -> lombok.val:
lombok.var -> lombok.var:
org.apache.commons.io.ByteOrderMark -> org.apache.commons.io.ByteOrderMark:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.io.ByteOrderMark UTF_8 -> UTF_8
    org.apache.commons.io.ByteOrderMark UTF_16BE -> UTF_16BE
    org.apache.commons.io.ByteOrderMark UTF_16LE -> UTF_16LE
    org.apache.commons.io.ByteOrderMark UTF_32BE -> UTF_32BE
    org.apache.commons.io.ByteOrderMark UTF_32LE -> UTF_32LE
    char UTF_BOM -> UTF_BOM
    java.lang.String charsetName -> charsetName
    int[] bytes -> bytes
    76:86:void <init>(java.lang.String,int[]) -> <init>
    94:94:java.lang.String getCharsetName() -> getCharsetName
    103:103:int length() -> length
    113:113:int get(int) -> get
    122:126:byte[] getBytes() -> getBytes
    138:150:boolean equals(java.lang.Object) -> equals
    161:165:int hashCode() -> hashCode
    175:188:java.lang.String toString() -> toString
    36:54:void <clinit>() -> <clinit>
org.apache.commons.io.ByteOrderParser -> org.apache.commons.io.ByteOrderParser:
    32:33:void <init>() -> <init>
    56:62:java.nio.ByteOrder parseByteOrder(java.lang.String) -> parseByteOrder
org.apache.commons.io.Charsets -> org.apache.commons.io.Charsets:
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset UTF_16 -> UTF_16
    java.nio.charset.Charset UTF_16BE -> UTF_16BE
    java.nio.charset.Charset UTF_16LE -> UTF_16LE
    java.nio.charset.Charset UTF_8 -> UTF_8
    56:56:void <init>() -> <init>
    76:83:java.util.SortedMap requiredCharsets() -> requiredCharsets
    94:94:java.nio.charset.Charset toCharset(java.nio.charset.Charset) -> toCharset
    107:107:java.nio.charset.Charset toCharset(java.lang.String) -> toCharset
    120:191:void <clinit>() -> <clinit>
org.apache.commons.io.CopyUtils -> org.apache.commons.io.CopyUtils:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    122:122:void <init>() -> <init>
    136:137:void copy(byte[],java.io.OutputStream) -> copy
    155:157:void copy(byte[],java.io.Writer) -> copy
    175:177:void copy(byte[],java.io.Writer,java.lang.String) -> copy
    196:203:int copy(java.io.InputStream,java.io.OutputStream) -> copy
    221:228:int copy(java.io.Reader,java.io.Writer) -> copy
    250:252:void copy(java.io.InputStream,java.io.Writer) -> copy
    269:271:void copy(java.io.InputStream,java.io.Writer,java.lang.String) -> copy
    293:298:void copy(java.io.Reader,java.io.OutputStream) -> copy
    316:321:void copy(java.io.Reader,java.io.OutputStream,java.lang.String) -> copy
    342:349:void copy(java.lang.String,java.io.OutputStream) -> copy
    368:374:void copy(java.lang.String,java.io.OutputStream,java.lang.String) -> copy
    388:389:void copy(java.lang.String,java.io.Writer) -> copy
org.apache.commons.io.DirectoryWalker -> org.apache.commons.io.DirectoryWalker:
    java.io.FileFilter filter -> filter
    int depthLimit -> depthLimit
    266:267:void <init>() -> <init>
    281:284:void <init>(java.io.FileFilter,int) -> <init>
    300:311:void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int) -> <init>
    330:340:void walk(java.io.File,java.util.Collection) -> walk
    351:376:void walk(java.io.File,int,java.util.Collection) -> walk
    395:398:void checkIfCancelled(java.io.File,int,java.util.Collection) -> checkIfCancelled
    438:438:boolean handleIsCancelled(java.io.File,int,java.util.Collection) -> handleIsCancelled
    457:457:void handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException) -> handleCancelled
    472:472:void handleStart(java.io.File,java.util.Collection) -> handleStart
    492:492:boolean handleDirectory(java.io.File,int,java.util.Collection) -> handleDirectory
    508:508:void handleDirectoryStart(java.io.File,int,java.util.Collection) -> handleDirectoryStart
    524:524:java.io.File[] filterDirectoryContents(java.io.File,int,java.io.File[]) -> filterDirectoryContents
    539:539:void handleFile(java.io.File,int,java.util.Collection) -> handleFile
    554:554:void handleRestricted(java.io.File,int,java.util.Collection) -> handleRestricted
    569:569:void handleDirectoryEnd(java.io.File,int,java.util.Collection) -> handleDirectoryEnd
    581:581:void handleEnd(java.util.Collection) -> handleEnd
org.apache.commons.io.DirectoryWalker$CancelException -> org.apache.commons.io.DirectoryWalker$CancelException:
    long serialVersionUID -> serialVersionUID
    java.io.File file -> file
    int depth -> depth
    606:607:void <init>(java.io.File,int) -> <init>
    619:622:void <init>(java.lang.String,java.io.File,int) -> <init>
    630:630:java.io.File getFile() -> getFile
    639:639:int getDepth() -> getDepth
org.apache.commons.io.EndianUtils -> org.apache.commons.io.EndianUtils:
    46:47:void <init>() -> <init>
    57:57:short swapShort(short) -> swapShort
    67:67:int swapInteger(int) -> swapInteger
    80:80:long swapLong(long) -> swapLong
    97:97:float swapFloat(float) -> swapFloat
    106:106:double swapDouble(double) -> swapDouble
    119:121:void writeSwappedShort(byte[],int,short) -> writeSwappedShort
    131:131:short readSwappedShort(byte[],int) -> readSwappedShort
    144:144:int readSwappedUnsignedShort(byte[],int) -> readSwappedUnsignedShort
    156:160:void writeSwappedInteger(byte[],int,int) -> writeSwappedInteger
    170:170:int readSwappedInteger(byte[],int) -> readSwappedInteger
    185:191:long readSwappedUnsignedInteger(byte[],int) -> readSwappedUnsignedInteger
    202:210:void writeSwappedLong(byte[],int,long) -> writeSwappedLong
    220:222:long readSwappedLong(byte[],int) -> readSwappedLong
    233:234:void writeSwappedFloat(byte[],int,float) -> writeSwappedFloat
    244:244:float readSwappedFloat(byte[],int) -> readSwappedFloat
    255:256:void writeSwappedDouble(byte[],int,double) -> writeSwappedDouble
    266:266:double readSwappedDouble(byte[],int) -> readSwappedDouble
    279:281:void writeSwappedShort(java.io.OutputStream,short) -> writeSwappedShort
    293:294:short readSwappedShort(java.io.InputStream) -> readSwappedShort
    307:310:int readSwappedUnsignedShort(java.io.InputStream) -> readSwappedUnsignedShort
    324:328:void writeSwappedInteger(java.io.OutputStream,int) -> writeSwappedInteger
    340:345:int readSwappedInteger(java.io.InputStream) -> readSwappedInteger
    361:372:long readSwappedUnsignedInteger(java.io.InputStream) -> readSwappedUnsignedInteger
    385:393:void writeSwappedLong(java.io.OutputStream,long) -> writeSwappedLong
    405:409:long readSwappedLong(java.io.InputStream) -> readSwappedLong
    422:423:void writeSwappedFloat(java.io.OutputStream,float) -> writeSwappedFloat
    435:435:float readSwappedFloat(java.io.InputStream) -> readSwappedFloat
    448:449:void writeSwappedDouble(java.io.OutputStream,double) -> writeSwappedDouble
    461:461:double readSwappedDouble(java.io.InputStream) -> readSwappedDouble
    473:479:int read(java.io.InputStream) -> read
org.apache.commons.io.FileCleaner -> org.apache.commons.io.FileCleaner:
    org.apache.commons.io.FileCleaningTracker theInstance -> theInstance
    38:38:void <init>() -> <init>
    57:58:void track(java.io.File,java.lang.Object) -> track
    73:74:void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy) -> track
    88:89:void track(java.lang.String,java.lang.Object) -> track
    104:105:void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy) -> track
    117:117:int getTrackCount() -> getTrackCount
    145:146:void exitWhenFinished() -> exitWhenFinished
    157:157:org.apache.commons.io.FileCleaningTracker getInstance() -> getInstance
    42:42:void <clinit>() -> <clinit>
org.apache.commons.io.FileCleaningTracker -> org.apache.commons.io.FileCleaningTracker:
    java.lang.ref.ReferenceQueue q -> q
    java.util.Collection trackers -> trackers
    java.util.List deleteFailures -> deleteFailures
    boolean exitWhenFinished -> exitWhenFinished
    java.lang.Thread reaper -> reaper
    43:62:void <init>() -> <init>
    79:80:void track(java.io.File,java.lang.Object) -> track
    93:97:void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy) -> track
    109:110:void track(java.lang.String,java.lang.Object) -> track
    123:127:void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy) -> track
    139:147:void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy) -> addTracker
    157:157:int getTrackCount() -> getTrackCount
    167:167:java.util.List getDeleteFailures() -> getDeleteFailures
    194:200:void exitWhenFinished() -> exitWhenFinished
org.apache.commons.io.FileCleaningTracker$Reaper -> org.apache.commons.io.FileCleaningTracker$Reaper:
    org.apache.commons.io.FileCleaningTracker this$0 -> this$0
    208:212:void <init>(org.apache.commons.io.FileCleaningTracker) -> <init>
    221:234:void run() -> run
org.apache.commons.io.FileCleaningTracker$Tracker -> org.apache.commons.io.FileCleaningTracker$Tracker:
    java.lang.String path -> path
    org.apache.commons.io.FileDeleteStrategy deleteStrategy -> deleteStrategy
    262:265:void <init>(java.lang.String,org.apache.commons.io.FileDeleteStrategy,java.lang.Object,java.lang.ref.ReferenceQueue) -> <init>
    273:273:java.lang.String getPath() -> getPath
    283:283:boolean delete() -> delete
org.apache.commons.io.FileDeleteStrategy -> org.apache.commons.io.FileDeleteStrategy:
    org.apache.commons.io.FileDeleteStrategy NORMAL -> NORMAL
    org.apache.commons.io.FileDeleteStrategy FORCE -> FORCE
    java.lang.String name -> name
    55:57:void <init>(java.lang.String) -> <init>
    71:77:boolean deleteQuietly(java.io.File) -> deleteQuietly
    92:95:void delete(java.io.File) -> delete
    114:114:boolean doDelete(java.io.File) -> doDelete
    125:125:java.lang.String toString() -> toString
    39:44:void <clinit>() -> <clinit>
org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy -> org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy:
    135:136:void <init>() -> <init>
    151:152:boolean doDelete(java.io.File) -> doDelete
org.apache.commons.io.FileExistsException -> org.apache.commons.io.FileExistsException:
    long serialVersionUID -> serialVersionUID
    38:39:void <init>() -> <init>
    47:48:void <init>(java.lang.String) -> <init>
    56:57:void <init>(java.io.File) -> <init>
org.apache.commons.io.FileSystemUtils -> org.apache.commons.io.FileSystemUtils:
    org.apache.commons.io.FileSystemUtils INSTANCE -> INSTANCE
    int INIT_PROBLEM -> INIT_PROBLEM
    int OTHER -> OTHER
    int WINDOWS -> WINDOWS
    int UNIX -> UNIX
    int POSIX_UNIX -> POSIX_UNIX
    int OS -> OS
    java.lang.String DF -> DF
    116:117:void <init>() -> <init>
    148:148:long freeSpace(java.lang.String) -> freeSpace
    179:179:long freeSpaceKb(java.lang.String) -> freeSpaceKb
    210:210:long freeSpaceKb(java.lang.String,long) -> freeSpaceKb
    229:229:long freeSpaceKb() -> freeSpaceKb
    250:250:long freeSpaceKb(long) -> freeSpaceKb
    275:288:long freeSpaceOS(java.lang.String,int,boolean,long) -> freeSpaceOS
    304:329:long freeSpaceWindows(java.lang.String,long) -> freeSpaceWindows
    347:383:long parseDir(java.lang.String,java.lang.String) -> parseDir
    400:443:long freeSpaceUnix(java.lang.String,boolean,boolean,long) -> freeSpaceUnix
    457:466:long parseBytes(java.lang.String,java.lang.String) -> parseBytes
    492:560:java.util.List performCommand(java.lang.String[],int,long) -> performCommand
    573:573:java.lang.Process openProcess(java.lang.String[]) -> openProcess
    53:110:void <clinit>() -> <clinit>
org.apache.commons.io.FileUtils -> org.apache.commons.io.FileUtils:
    long ONE_KB -> ONE_KB
    java.math.BigInteger ONE_KB_BI -> ONE_KB_BI
    long ONE_MB -> ONE_MB
    java.math.BigInteger ONE_MB_BI -> ONE_MB_BI
    long FILE_COPY_BUFFER_SIZE -> FILE_COPY_BUFFER_SIZE
    long ONE_GB -> ONE_GB
    java.math.BigInteger ONE_GB_BI -> ONE_GB_BI
    long ONE_TB -> ONE_TB
    java.math.BigInteger ONE_TB_BI -> ONE_TB_BI
    long ONE_PB -> ONE_PB
    java.math.BigInteger ONE_PB_BI -> ONE_PB_BI
    long ONE_EB -> ONE_EB
    java.math.BigInteger ONE_EB_BI -> ONE_EB_BI
    java.math.BigInteger ONE_ZB -> ONE_ZB
    java.math.BigInteger ONE_YB -> ONE_YB
    java.io.File[] EMPTY_FILE_ARRAY -> EMPTY_FILE_ARRAY
    85:86:void <init>() -> <init>
    190:200:java.io.File getFile(java.io.File,java.lang.String[]) -> getFile
    211:222:java.io.File getFile(java.lang.String[]) -> getFile
    233:233:java.lang.String getTempDirectoryPath() -> getTempDirectoryPath
    244:244:java.io.File getTempDirectory() -> getTempDirectory
    255:255:java.lang.String getUserDirectoryPath() -> getUserDirectoryPath
    266:266:java.io.File getUserDirectory() -> getUserDirectory
    289:299:java.io.FileInputStream openInputStream(java.io.File) -> openInputStream
    324:324:java.io.FileOutputStream openOutputStream(java.io.File) -> openOutputStream
    350:365:java.io.FileOutputStream openOutputStream(java.io.File,boolean) -> openOutputStream
    388:403:java.lang.String byteCountToDisplaySize(java.math.BigInteger) -> byteCountToDisplaySize
    422:422:java.lang.String byteCountToDisplaySize(long) -> byteCountToDisplaySize
    439:446:void touch(java.io.File) -> touch
    458:458:java.io.File[] convertFileCollectionToFileArray(java.util.Collection) -> convertFileCollectionToFileArray
    473:487:void innerListFiles(java.util.Collection,java.io.File,org.apache.commons.io.filefilter.IOFileFilter,boolean) -> innerListFiles
    517:526:java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> listFiles
    540:546:void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter) -> validateListFilesParameters
    555:555:org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> setUpEffectiveFileFilter
    565:565:org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter) -> setUpEffectiveDirFilter
    590:602:java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> listFilesAndDirs
    625:625:java.util.Iterator iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> iterateFiles
    650:650:java.util.Iterator iterateFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> iterateFilesAndDirs
    662:666:java.lang.String[] toSuffixes(java.lang.String[]) -> toSuffixes
    683:689:java.util.Collection listFiles(java.io.File,java.lang.String[],boolean) -> listFiles
    708:708:java.util.Iterator iterateFiles(java.io.File,java.lang.String[],boolean) -> iterateFiles
    728:756:boolean contentEquals(java.io.File,java.io.File) -> contentEquals
    779:806:boolean contentEqualsIgnoreEOL(java.io.File,java.io.File,java.lang.String) -> contentEqualsIgnoreEOL
    825:830:java.io.File toFile(java.net.URL) -> toFile
    849:878:java.lang.String decodeUrl(java.lang.String) -> decodeUrl
    901:915:java.io.File[] toFiles(java.net.URL[]) -> toFiles
    929:935:java.net.URL[] toURLs(java.io.File[]) -> toURLs
    961:962:void copyFileToDirectory(java.io.File,java.io.File) -> copyFileToDirectory
    993:1001:void copyFileToDirectory(java.io.File,java.io.File,boolean) -> copyFileToDirectory
    1028:1029:void copyFile(java.io.File,java.io.File) -> copyFile
    1060:1077:void copyFile(java.io.File,java.io.File,boolean) -> copyFile
    1093:1095:long copyFile(java.io.File,java.io.OutputStream) -> copyFile
    1117:1148:void doCopyFile(java.io.File,java.io.File,boolean) -> doCopyFile
    1175:1188:void copyDirectoryToDirectory(java.io.File,java.io.File) -> copyDirectoryToDirectory
    1215:1216:void copyDirectory(java.io.File,java.io.File) -> copyDirectory
    1246:1247:void copyDirectory(java.io.File,java.io.File,boolean) -> copyDirectory
    1295:1296:void copyDirectory(java.io.File,java.io.File,java.io.FileFilter) -> copyDirectory
    1346:1367:void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean) -> copyDirectory
    1376:1385:void checkFileRequirements(java.io.File,java.io.File) -> checkFileRequirements
    1402:1433:void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List) -> doCopyDirectory
    1456:1457:void copyURLToFile(java.net.URL,java.io.File) -> copyURLToFile
    1481:1485:void copyURLToFile(java.net.URL,java.io.File,int,int) -> copyURLToFile
    1505:1508:void copyInputStreamToFile(java.io.InputStream,java.io.File) -> copyInputStreamToFile
    1528:1532:void copyToFile(java.io.InputStream,java.io.File) -> copyToFile
    1560:1570:void copyToDirectory(java.io.File,java.io.File) -> copyToDirectory
    1595:1601:void copyToDirectory(java.lang.Iterable,java.io.File) -> copyToDirectory
    1612:1625:void deleteDirectory(java.io.File) -> deleteDirectory
    1643:1656:boolean deleteQuietly(java.io.File) -> deleteQuietly
    1685:1705:boolean directoryContains(java.io.File,java.io.File) -> directoryContains
    1716:1730:void cleanDirectory(java.io.File) -> cleanDirectory
    1739:1753:java.io.File[] verifiedListFiles(java.io.File) -> verifiedListFiles
    1769:1790:boolean waitFor(java.io.File,int) -> waitFor
    1805:1807:java.lang.String readFileToString(java.io.File,java.nio.charset.Charset) -> readFileToString
    1822:1822:java.lang.String readFileToString(java.io.File,java.lang.String) -> readFileToString
    1838:1838:java.lang.String readFileToString(java.io.File) -> readFileToString
    1851:1855:byte[] readFileToByteArray(java.io.File) -> readFileToByteArray
    1869:1871:java.util.List readLines(java.io.File,java.nio.charset.Charset) -> readLines
    1886:1886:java.util.List readLines(java.io.File,java.lang.String) -> readLines
    1901:1901:java.util.List readLines(java.io.File) -> readLines
    1936:1949:org.apache.commons.io.LineIterator lineIterator(java.io.File,java.lang.String) -> lineIterator
    1963:1963:org.apache.commons.io.LineIterator lineIterator(java.io.File) -> lineIterator
    1983:1984:void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset) -> writeStringToFile
    1999:2000:void writeStringToFile(java.io.File,java.lang.String,java.lang.String) -> writeStringToFile
    2015:2018:void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean) -> writeStringToFile
    2035:2036:void writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean) -> writeStringToFile
    2048:2049:void writeStringToFile(java.io.File,java.lang.String) -> writeStringToFile
    2064:2065:void writeStringToFile(java.io.File,java.lang.String,boolean) -> writeStringToFile
    2078:2079:void write(java.io.File,java.lang.CharSequence) -> write
    2094:2095:void write(java.io.File,java.lang.CharSequence,boolean) -> write
    2107:2108:void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset) -> write
    2121:2122:void write(java.io.File,java.lang.CharSequence,java.lang.String) -> write
    2137:2139:void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean) -> write
    2156:2157:void write(java.io.File,java.lang.CharSequence,java.lang.String,boolean) -> write
    2171:2172:void writeByteArrayToFile(java.io.File,byte[]) -> writeByteArrayToFile
    2186:2187:void writeByteArrayToFile(java.io.File,byte[],boolean) -> writeByteArrayToFile
    2203:2204:void writeByteArrayToFile(java.io.File,byte[],int,int) -> writeByteArrayToFile
    2222:2225:void writeByteArrayToFile(java.io.File,byte[],int,int,boolean) -> writeByteArrayToFile
    2244:2245:void writeLines(java.io.File,java.lang.String,java.util.Collection) -> writeLines
    2263:2264:void writeLines(java.io.File,java.lang.String,java.util.Collection,boolean) -> writeLines
    2277:2278:void writeLines(java.io.File,java.util.Collection) -> writeLines
    2293:2294:void writeLines(java.io.File,java.util.Collection,boolean) -> writeLines
    2314:2315:void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String) -> writeLines
    2334:2337:void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean) -> writeLines
    2352:2353:void writeLines(java.io.File,java.util.Collection,java.lang.String) -> writeLines
    2370:2371:void writeLines(java.io.File,java.util.Collection,java.lang.String,boolean) -> writeLines
    2390:2403:void forceDelete(java.io.File) -> forceDelete
    2414:2419:void forceDeleteOnExit(java.io.File) -> forceDeleteOnExit
    2429:2437:void deleteDirectoryOnExit(java.io.File) -> deleteDirectoryOnExit
    2447:2461:void cleanDirectoryOnExit(java.io.File) -> cleanDirectoryOnExit
    2475:2495:void forceMkdir(java.io.File) -> forceMkdir
    2507:2512:void forceMkdirParent(java.io.File) -> forceMkdirParent
    2539:2547:long sizeOf(java.io.File) -> sizeOf
    2572:2580:java.math.BigInteger sizeOfAsBigInteger(java.io.File) -> sizeOfAsBigInteger
    2598:2599:long sizeOfDirectory(java.io.File) -> sizeOfDirectory
    2610:2629:long sizeOfDirectory0(java.io.File) -> sizeOfDirectory0
    2640:2643:long sizeOf0(java.io.File) -> sizeOf0
    2656:2657:java.math.BigInteger sizeOfDirectoryAsBigInteger(java.io.File) -> sizeOfDirectoryAsBigInteger
    2669:2685:java.math.BigInteger sizeOfDirectoryBig0(java.io.File) -> sizeOfDirectoryBig0
    2696:2699:java.math.BigInteger sizeOfBig0(java.io.File) -> sizeOfBig0
    2710:2716:void checkDirectory(java.io.File) -> checkDirectory
    2733:2740:boolean isFileNewer(java.io.File,java.io.File) -> isFileNewer
    2756:2759:boolean isFileNewer(java.io.File,java.util.Date) -> isFileNewer
    2775:2781:boolean isFileNewer(java.io.File,long) -> isFileNewer
    2800:2807:boolean isFileOlder(java.io.File,java.io.File) -> isFileOlder
    2823:2826:boolean isFileOlder(java.io.File,java.util.Date) -> isFileOlder
    2842:2848:boolean isFileOlder(java.io.File,long) -> isFileOlder
    2864:2866:long checksumCRC32(java.io.File) -> checksumCRC32
    2887:2893:java.util.zip.Checksum checksum(java.io.File,java.util.zip.Checksum) -> checksum
    2910:2937:void moveDirectory(java.io.File,java.io.File) -> moveDirectory
    2954:2972:void moveDirectoryToDirectory(java.io.File,java.io.File,boolean) -> moveDirectoryToDirectory
    2988:3015:void moveFile(java.io.File,java.io.File) -> moveFile
    3032:3049:void moveFileToDirectory(java.io.File,java.io.File,boolean) -> moveFileToDirectory
    3068:3082:void moveToDirectory(java.io.File,java.io.File,boolean) -> moveToDirectory
    3104:3107:boolean isSymlink(java.io.File) -> isSymlink
    98:178:void <clinit>() -> <clinit>
org.apache.commons.io.FilenameUtils -> org.apache.commons.io.FilenameUtils:
    int NOT_FOUND -> NOT_FOUND
    char EXTENSION_SEPARATOR -> EXTENSION_SEPARATOR
    java.lang.String EXTENSION_SEPARATOR_STR -> EXTENSION_SEPARATOR_STR
    char UNIX_SEPARATOR -> UNIX_SEPARATOR
    char WINDOWS_SEPARATOR -> WINDOWS_SEPARATOR
    char SYSTEM_SEPARATOR -> SYSTEM_SEPARATOR
    char OTHER_SEPARATOR -> OTHER_SEPARATOR
    129:130:void <init>() -> <init>
    139:139:boolean isSystemWindows() -> isSystemWindows
    150:150:boolean isSeparator(char) -> isSeparator
    195:195:java.lang.String normalize(java.lang.String) -> normalize
    242:243:java.lang.String normalize(java.lang.String,boolean) -> normalize
    289:289:java.lang.String normalizeNoEndSeparator(java.lang.String) -> normalizeNoEndSeparator
    336:337:java.lang.String normalizeNoEndSeparator(java.lang.String,boolean) -> normalizeNoEndSeparator
    349:441:java.lang.String doNormalize(java.lang.String,char,boolean) -> doNormalize
    486:504:java.lang.String concat(java.lang.String,java.lang.String) -> concat
    535:547:boolean directoryContains(java.lang.String,java.lang.String) -> directoryContains
    558:561:java.lang.String separatorsToUnix(java.lang.String) -> separatorsToUnix
    571:574:java.lang.String separatorsToWindows(java.lang.String) -> separatorsToWindows
    584:590:java.lang.String separatorsToSystem(java.lang.String) -> separatorsToSystem
    634:684:int getPrefixLength(java.lang.String) -> getPrefixLength
    702:707:int indexOfLastSeparator(java.lang.String) -> indexOfLastSeparator
    725:730:int indexOfExtension(java.lang.String) -> indexOfExtension
    764:777:java.lang.String getPrefix(java.lang.String) -> getPrefix
    804:804:java.lang.String getPath(java.lang.String) -> getPath
    832:832:java.lang.String getPathNoEndSeparator(java.lang.String) -> getPathNoEndSeparator
    843:857:java.lang.String doGetPath(java.lang.String,int) -> doGetPath
    886:886:java.lang.String getFullPath(java.lang.String) -> getFullPath
    916:916:java.lang.String getFullPathNoEndSeparator(java.lang.String) -> getFullPathNoEndSeparator
    927:949:java.lang.String doGetFullPath(java.lang.String,boolean) -> doGetFullPath
    971:976:java.lang.String getName(java.lang.String) -> getName
    986:993:void failIfNullBytePresent(java.lang.String) -> failIfNullBytePresent
    1014:1014:java.lang.String getBaseName(java.lang.String) -> getBaseName
    1036:1043:java.lang.String getExtension(java.lang.String) -> getExtension
    1066:1075:java.lang.String removeExtension(java.lang.String) -> removeExtension
    1092:1092:boolean equals(java.lang.String,java.lang.String) -> equals
    1107:1107:boolean equalsOnSystem(java.lang.String,java.lang.String) -> equalsOnSystem
    1123:1123:boolean equalsNormalized(java.lang.String,java.lang.String) -> equalsNormalized
    1140:1140:boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String) -> equalsNormalizedOnSystem
    1158:1172:boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase) -> equals
    1189:1198:boolean isExtension(java.lang.String,java.lang.String) -> isExtension
    1214:1228:boolean isExtension(java.lang.String,java.lang.String[]) -> isExtension
    1244:1258:boolean isExtension(java.lang.String,java.util.Collection) -> isExtension
    1285:1285:boolean wildcardMatch(java.lang.String,java.lang.String) -> wildcardMatch
    1311:1311:boolean wildcardMatchOnSystem(java.lang.String,java.lang.String) -> wildcardMatchOnSystem
    1329:1407:boolean wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase) -> wildcardMatch
    1422:1450:java.lang.String[] splitOnTokens(java.lang.String) -> splitOnTokens
    96:123:void <clinit>() -> <clinit>
org.apache.commons.io.HexDump -> org.apache.commons.io.HexDump:
    java.lang.String EOL -> EOL
    char[] _hexcodes -> _hexcodes
    int[] _shifts -> _shifts
    38:39:void <init>() -> <init>
    76:116:void dump(byte[],long,java.io.OutputStream,int) -> dump
    141:145:java.lang.StringBuilder dump(java.lang.StringBuilder,long) -> dump
    156:159:java.lang.StringBuilder dump(java.lang.StringBuilder,byte) -> dump
    121:128:void <clinit>() -> <clinit>
org.apache.commons.io.IOCase -> org.apache.commons.io.IOCase:
    org.apache.commons.io.IOCase SENSITIVE -> SENSITIVE
    org.apache.commons.io.IOCase INSENSITIVE -> INSENSITIVE
    org.apache.commons.io.IOCase SYSTEM -> SYSTEM
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    boolean sensitive -> sensitive
    org.apache.commons.io.IOCase[] $VALUES -> $VALUES
    36:36:org.apache.commons.io.IOCase[] values() -> values
    36:36:org.apache.commons.io.IOCase valueOf(java.lang.String) -> valueOf
    80:87:org.apache.commons.io.IOCase forName(java.lang.String) -> forName
    97:100:void <init>(java.lang.String,int,java.lang.String,boolean) -> <init>
    109:109:java.lang.Object readResolve() -> readResolve
    119:119:java.lang.String getName() -> getName
    128:128:boolean isCaseSensitive() -> isCaseSensitive
    144:147:int checkCompareTo(java.lang.String,java.lang.String) -> checkCompareTo
    162:165:boolean checkEquals(java.lang.String,java.lang.String) -> checkEquals
    180:180:boolean checkStartsWith(java.lang.String,java.lang.String) -> checkStartsWith
    195:196:boolean checkEndsWith(java.lang.String,java.lang.String) -> checkEndsWith
    215:223:int checkIndexOf(java.lang.String,int,java.lang.String) -> checkIndexOf
    239:239:boolean checkRegionMatches(java.lang.String,int,java.lang.String) -> checkRegionMatches
    250:250:java.lang.String toString() -> toString
    36:60:void <clinit>() -> <clinit>
org.apache.commons.io.IOExceptionWithCause -> org.apache.commons.io.IOExceptionWithCause:
    long serialVersionUID -> serialVersionUID
    49:50:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    63:64:void <init>(java.lang.Throwable) -> <init>
org.apache.commons.io.IOUtils -> org.apache.commons.io.IOUtils:
    int EOF -> EOF
    char DIR_SEPARATOR_UNIX -> DIR_SEPARATOR_UNIX
    char DIR_SEPARATOR_WINDOWS -> DIR_SEPARATOR_WINDOWS
    char DIR_SEPARATOR -> DIR_SEPARATOR
    java.lang.String LINE_SEPARATOR_UNIX -> LINE_SEPARATOR_UNIX
    java.lang.String LINE_SEPARATOR_WINDOWS -> LINE_SEPARATOR_WINDOWS
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int SKIP_BUFFER_SIZE -> SKIP_BUFFER_SIZE
    char[] SKIP_CHAR_BUFFER -> SKIP_CHAR_BUFFER
    byte[] SKIP_BYTE_BUFFER -> SKIP_BYTE_BUFFER
    175:176:void <init>() -> <init>
    187:190:void close(java.net.URLConnection) -> close
    221:222:void closeQuietly(java.io.Reader) -> closeQuietly
    252:253:void closeQuietly(java.io.Writer) -> closeQuietly
    284:285:void closeQuietly(java.io.InputStream) -> closeQuietly
    317:318:void closeQuietly(java.io.OutputStream) -> closeQuietly
    362:368:void closeQuietly(java.io.Closeable) -> closeQuietly
    419:425:void closeQuietly(java.io.Closeable[]) -> closeQuietly
    456:463:void closeQuietly(java.net.Socket) -> closeQuietly
    494:501:void closeQuietly(java.nio.channels.Selector) -> closeQuietly
    532:539:void closeQuietly(java.net.ServerSocket) -> closeQuietly
    563:563:java.io.InputStream toBufferedInputStream(java.io.InputStream) -> toBufferedInputStream
    589:589:java.io.InputStream toBufferedInputStream(java.io.InputStream,int) -> toBufferedInputStream
    603:603:java.io.BufferedReader toBufferedReader(java.io.Reader) -> toBufferedReader
    618:618:java.io.BufferedReader toBufferedReader(java.io.Reader,int) -> toBufferedReader
    631:631:java.io.BufferedReader buffer(java.io.Reader) -> buffer
    645:645:java.io.BufferedReader buffer(java.io.Reader,int) -> buffer
    658:658:java.io.BufferedWriter buffer(java.io.Writer) -> buffer
    672:672:java.io.BufferedWriter buffer(java.io.Writer,int) -> buffer
    686:689:java.io.BufferedOutputStream buffer(java.io.OutputStream) -> buffer
    705:708:java.io.BufferedOutputStream buffer(java.io.OutputStream,int) -> buffer
    723:726:java.io.BufferedInputStream buffer(java.io.InputStream) -> buffer
    742:745:java.io.BufferedInputStream buffer(java.io.InputStream,int) -> buffer
    764:767:byte[] toByteArray(java.io.InputStream) -> toByteArray
    789:793:byte[] toByteArray(java.io.InputStream,long) -> toByteArray
    811:831:byte[] toByteArray(java.io.InputStream,int) -> toByteArray
    849:849:byte[] toByteArray(java.io.Reader) -> toByteArray
    867:870:byte[] toByteArray(java.io.Reader,java.nio.charset.Charset) -> toByteArray
    894:894:byte[] toByteArray(java.io.Reader,java.lang.String) -> toByteArray
    912:912:byte[] toByteArray(java.lang.String) -> toByteArray
    925:925:byte[] toByteArray(java.net.URI) -> toByteArray
    938:942:byte[] toByteArray(java.net.URL) -> toByteArray
    956:958:byte[] toByteArray(java.net.URLConnection) -> toByteArray
    980:980:char[] toCharArray(java.io.InputStream) -> toCharArray
    999:1001:char[] toCharArray(java.io.InputStream,java.nio.charset.Charset) -> toCharArray
    1025:1025:char[] toCharArray(java.io.InputStream,java.lang.String) -> toCharArray
    1041:1043:char[] toCharArray(java.io.Reader) -> toCharArray
    1064:1064:java.lang.String toString(java.io.InputStream) -> toString
    1083:1086:java.lang.String toString(java.io.InputStream,java.nio.charset.Charset) -> toString
    1110:1110:java.lang.String toString(java.io.InputStream,java.lang.String) -> toString
    1125:1128:java.lang.String toString(java.io.Reader) -> toString
    1142:1142:java.lang.String toString(java.net.URI) -> toString
    1155:1155:java.lang.String toString(java.net.URI,java.nio.charset.Charset) -> toString
    1171:1171:java.lang.String toString(java.net.URI,java.lang.String) -> toString
    1185:1185:java.lang.String toString(java.net.URL) -> toString
    1198:1200:java.lang.String toString(java.net.URL,java.nio.charset.Charset) -> toString
    1216:1216:java.lang.String toString(java.net.URL,java.lang.String) -> toString
    1232:1232:java.lang.String toString(byte[]) -> toString
    1249:1249:java.lang.String toString(byte[],java.lang.String) -> toString
    1272:1272:java.lang.String resourceToString(java.lang.String,java.nio.charset.Charset) -> resourceToString
    1293:1293:java.lang.String resourceToString(java.lang.String,java.nio.charset.Charset,java.lang.ClassLoader) -> resourceToString
    1311:1311:byte[] resourceToByteArray(java.lang.String) -> resourceToByteArray
    1330:1330:byte[] resourceToByteArray(java.lang.String,java.lang.ClassLoader) -> resourceToByteArray
    1348:1348:java.net.URL resourceToURL(java.lang.String) -> resourceToURL
    1369:1375:java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader) -> resourceToURL
    1397:1397:java.util.List readLines(java.io.InputStream) -> readLines
    1415:1416:java.util.List readLines(java.io.InputStream,java.nio.charset.Charset) -> readLines
    1440:1440:java.util.List readLines(java.io.InputStream,java.lang.String) -> readLines
    1457:1464:java.util.List readLines(java.io.Reader) -> readLines
    1498:1498:org.apache.commons.io.LineIterator lineIterator(java.io.Reader) -> lineIterator
    1532:1532:org.apache.commons.io.LineIterator lineIterator(java.io.InputStream,java.nio.charset.Charset) -> lineIterator
    1569:1569:org.apache.commons.io.LineIterator lineIterator(java.io.InputStream,java.lang.String) -> lineIterator
    1585:1585:java.io.InputStream toInputStream(java.lang.CharSequence) -> toInputStream
    1598:1598:java.io.InputStream toInputStream(java.lang.CharSequence,java.nio.charset.Charset) -> toInputStream
    1618:1618:java.io.InputStream toInputStream(java.lang.CharSequence,java.lang.String) -> toInputStream
    1634:1634:java.io.InputStream toInputStream(java.lang.String) -> toInputStream
    1647:1647:java.io.InputStream toInputStream(java.lang.String,java.nio.charset.Charset) -> toInputStream
    1667:1668:java.io.InputStream toInputStream(java.lang.String,java.lang.String) -> toInputStream
    1686:1689:void write(byte[],java.io.OutputStream) -> write
    1705:1715:void writeChunked(byte[],java.io.OutputStream) -> writeChunked
    1733:1734:void write(byte[],java.io.Writer) -> write
    1751:1754:void write(byte[],java.io.Writer,java.nio.charset.Charset) -> write
    1777:1778:void write(byte[],java.io.Writer,java.lang.String) -> write
    1794:1797:void write(char[],java.io.Writer) -> write
    1812:1822:void writeChunked(char[],java.io.Writer) -> writeChunked
    1842:1843:void write(char[],java.io.OutputStream) -> write
    1861:1864:void write(char[],java.io.OutputStream,java.nio.charset.Charset) -> write
    1888:1889:void write(char[],java.io.OutputStream,java.lang.String) -> write
    1904:1907:void write(java.lang.CharSequence,java.io.Writer) -> write
    1926:1927:void write(java.lang.CharSequence,java.io.OutputStream) -> write
    1944:1947:void write(java.lang.CharSequence,java.io.OutputStream,java.nio.charset.Charset) -> write
    1969:1970:void write(java.lang.CharSequence,java.io.OutputStream,java.lang.String) -> write
    1985:1988:void write(java.lang.String,java.io.Writer) -> write
    2007:2008:void write(java.lang.String,java.io.OutputStream) -> write
    2024:2027:void write(java.lang.String,java.io.OutputStream,java.nio.charset.Charset) -> write
    2049:2050:void write(java.lang.String,java.io.OutputStream,java.lang.String) -> write
    2068:2071:void write(java.lang.StringBuffer,java.io.Writer) -> write
    2090:2091:void write(java.lang.StringBuffer,java.io.OutputStream) -> write
    2115:2118:void write(java.lang.StringBuffer,java.io.OutputStream,java.lang.String) -> write
    2139:2140:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream) -> writeLines
    2157:2170:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.nio.charset.Charset) -> writeLines
    2193:2194:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String) -> writeLines
    2209:2221:void writeLines(java.util.Collection,java.lang.String,java.io.Writer) -> writeLines
    2246:2250:int copy(java.io.InputStream,java.io.OutputStream) -> copy
    2270:2270:long copy(java.io.InputStream,java.io.OutputStream,int) -> copy
    2291:2291:long copyLarge(java.io.InputStream,java.io.OutputStream) -> copyLarge
    2312:2318:long copyLarge(java.io.InputStream,java.io.OutputStream,byte[]) -> copyLarge
    2347:2347:long copyLarge(java.io.InputStream,java.io.OutputStream,long,long) -> copyLarge
    2376:2397:long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[]) -> copyLarge
    2419:2420:void copy(java.io.InputStream,java.io.Writer) -> copy
    2440:2442:void copy(java.io.InputStream,java.io.Writer,java.nio.charset.Charset) -> copy
    2468:2469:void copy(java.io.InputStream,java.io.Writer,java.lang.String) -> copy
    2493:2497:int copy(java.io.Reader,java.io.Writer) -> copy
    2516:2516:long copyLarge(java.io.Reader,java.io.Writer) -> copyLarge
    2535:2541:long copyLarge(java.io.Reader,java.io.Writer,char[]) -> copyLarge
    2565:2565:long copyLarge(java.io.Reader,java.io.Writer,long,long) -> copyLarge
    2590:2610:long copyLarge(java.io.Reader,java.io.Writer,long,long,char[]) -> copyLarge
    2636:2637:void copy(java.io.Reader,java.io.OutputStream) -> copy
    2664:2669:void copy(java.io.Reader,java.io.OutputStream,java.nio.charset.Charset) -> copy
    2699:2700:void copy(java.io.Reader,java.io.OutputStream,java.lang.String) -> copy
    2721:2741:boolean contentEquals(java.io.InputStream,java.io.InputStream) -> contentEquals
    2761:2778:boolean contentEquals(java.io.Reader,java.io.Reader) -> contentEquals
    2797:2809:boolean contentEqualsIgnoreEOL(java.io.Reader,java.io.Reader) -> contentEqualsIgnoreEOL
    2834:2854:long skip(java.io.InputStream,long) -> skip
    2870:2884:long skip(java.nio.channels.ReadableByteChannel,long) -> skip
    2909:2929:long skip(java.io.Reader,long) -> skip
    2952:2959:void skipFully(java.io.InputStream,long) -> skipFully
    2972:2979:void skipFully(java.nio.channels.ReadableByteChannel,long) -> skipFully
    3001:3005:void skipFully(java.io.Reader,long) -> skipFully
    3024:3036:int read(java.io.Reader,char[],int,int) -> read
    3052:3052:int read(java.io.Reader,char[]) -> read
    3071:3083:int read(java.io.InputStream,byte[],int,int) -> read
    3099:3099:int read(java.io.InputStream,byte[]) -> read
    3116:3123:int read(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer) -> read
    3143:3147:void readFully(java.io.Reader,char[],int,int) -> readFully
    3163:3164:void readFully(java.io.Reader,char[]) -> readFully
    3183:3187:void readFully(java.io.InputStream,byte[],int,int) -> readFully
    3203:3204:void readFully(java.io.InputStream,byte[]) -> readFully
    3221:3223:byte[] readFully(java.io.InputStream,int) -> readFully
    3239:3244:void readFully(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer) -> readFully
    121:142:void <clinit>() -> <clinit>
org.apache.commons.io.LineIterator -> org.apache.commons.io.LineIterator:
    java.io.BufferedReader bufferedReader -> bufferedReader
    java.lang.String cachedLine -> cachedLine
    boolean finished -> finished
    59:76:void <init>(java.io.Reader) -> <init>
    89:111:boolean hasNext() -> hasNext
    123:123:boolean isValidLine(java.lang.String) -> isValidLine
    134:134:java.lang.String next() -> next
    144:149:java.lang.String nextLine() -> nextLine
    163:168:void close() -> close
    177:177:void remove() -> remove
    192:198:void closeQuietly(org.apache.commons.io.LineIterator) -> closeQuietly
    50:50:java.lang.Object next() -> next
org.apache.commons.io.TaggedIOException -> org.apache.commons.io.TaggedIOException:
    long serialVersionUID -> serialVersionUID
    java.io.Serializable tag -> tag
    66:68:boolean isTaggedWith(java.lang.Throwable,java.lang.Object) -> isTaggedWith
    95:98:void throwCauseIfTaggedWith(java.lang.Throwable,java.lang.Object) -> throwCauseIfTaggedWith
    112:114:void <init>(java.io.IOException,java.io.Serializable) -> <init>
    122:122:java.io.Serializable getTag() -> getTag
    133:133:java.io.IOException getCause() -> getCause
    29:29:java.lang.Throwable getCause() -> getCause
org.apache.commons.io.ThreadMonitor -> org.apache.commons.io.ThreadMonitor:
    java.lang.Thread thread -> thread
    long timeout -> timeout
    54:54:java.lang.Thread start(long) -> start
    67:74:java.lang.Thread start(java.lang.Thread,long) -> start
    83:86:void stop(java.lang.Thread) -> stop
    94:97:void <init>(java.lang.Thread,long) -> <init>
    108:113:void run() -> run
    125:131:void sleep(long) -> sleep
org.apache.commons.io.comparator.AbstractFileComparator -> org.apache.commons.io.comparator.AbstractFileComparator:
    30:30:void <init>() -> <init>
    43:46:java.io.File[] sort(java.io.File[]) -> sort
    60:63:java.util.List sort(java.util.List) -> sort
    73:73:java.lang.String toString() -> toString
org.apache.commons.io.comparator.CompositeFileComparator -> org.apache.commons.io.comparator.CompositeFileComparator:
    long serialVersionUID -> serialVersionUID
    java.util.Comparator[] NO_COMPARATORS -> NO_COMPARATORS
    java.util.Comparator[] delegates -> delegates
    56:63:void <init>(java.util.Comparator[]) -> <init>
    71:81:void <init>(java.lang.Iterable) -> <init>
    93:100:int compare(java.io.File,java.io.File) -> compare
    110:120:java.lang.String toString() -> toString
    44:44:java.util.List sort(java.util.List) -> sort
    44:44:java.io.File[] sort(java.io.File[]) -> sort
    44:44:int compare(java.lang.Object,java.lang.Object) -> compare
    47:47:void <clinit>() -> <clinit>
org.apache.commons.io.comparator.DefaultFileComparator -> org.apache.commons.io.comparator.DefaultFileComparator:
    long serialVersionUID -> serialVersionUID
    java.util.Comparator DEFAULT_COMPARATOR -> DEFAULT_COMPARATOR
    java.util.Comparator DEFAULT_REVERSE -> DEFAULT_REVERSE
    46:46:void <init>() -> <init>
    66:66:int compare(java.io.File,java.io.File) -> compare
    46:46:java.lang.String toString() -> toString
    46:46:java.util.List sort(java.util.List) -> sort
    46:46:java.io.File[] sort(java.io.File[]) -> sort
    46:46:int compare(java.lang.Object,java.lang.Object) -> compare
    51:54:void <clinit>() -> <clinit>
org.apache.commons.io.comparator.DirectoryFileComparator -> org.apache.commons.io.comparator.DirectoryFileComparator:
    long serialVersionUID -> serialVersionUID
    java.util.Comparator DIRECTORY_COMPARATOR -> DIRECTORY_COMPARATOR
    java.util.Comparator DIRECTORY_REVERSE -> DIRECTORY_REVERSE
    45:45:void <init>() -> <init>
    65:65:int compare(java.io.File,java.io.File) -> compare
    75:78:int getType(java.io.File) -> getType
    45:45:java.lang.String toString() -> toString
    45:45:java.util.List sort(java.util.List) -> sort
    45:45:java.io.File[] sort(java.io.File[]) -> sort
    45:45:int compare(java.lang.Object,java.lang.Object) -> compare
    50:53:void <clinit>() -> <clinit>
org.apache.commons.io.comparator.ExtensionFileComparator -> org.apache.commons.io.comparator.ExtensionFileComparator:
    long serialVersionUID -> serialVersionUID
    java.util.Comparator EXTENSION_COMPARATOR -> EXTENSION_COMPARATOR
    java.util.Comparator EXTENSION_REVERSE -> EXTENSION_REVERSE
    java.util.Comparator EXTENSION_INSENSITIVE_COMPARATOR -> EXTENSION_INSENSITIVE_COMPARATOR
    java.util.Comparator EXTENSION_INSENSITIVE_REVERSE -> EXTENSION_INSENSITIVE_REVERSE
    java.util.Comparator EXTENSION_SYSTEM_COMPARATOR -> EXTENSION_SYSTEM_COMPARATOR
    java.util.Comparator EXTENSION_SYSTEM_REVERSE -> EXTENSION_SYSTEM_REVERSE
    org.apache.commons.io.IOCase caseSensitivity -> caseSensitivity
    83:85:void <init>() -> <init>
    92:94:void <init>(org.apache.commons.io.IOCase) -> <init>
    109:111:int compare(java.io.File,java.io.File) -> compare
    121:121:java.lang.String toString() -> toString
    53:53:java.util.List sort(java.util.List) -> sort
    53:53:java.io.File[] sort(java.io.File[]) -> sort
    53:53:int compare(java.lang.Object,java.lang.Object) -> compare
    58:75:void <clinit>() -> <clinit>
org.apache.commons.io.comparator.LastModifiedFileComparator -> org.apache.commons.io.comparator.LastModifiedFileComparator:
    long serialVersionUID -> serialVersionUID
    java.util.Comparator LASTMODIFIED_COMPARATOR -> LASTMODIFIED_COMPARATOR
    java.util.Comparator LASTMODIFIED_REVERSE -> LASTMODIFIED_REVERSE
    47:47:void <init>() -> <init>
    70:76:int compare(java.io.File,java.io.File) -> compare
    47:47:java.lang.String toString() -> toString
    47:47:java.util.List sort(java.util.List) -> sort
    47:47:java.io.File[] sort(java.io.File[]) -> sort
    47:47:int compare(java.lang.Object,java.lang.Object) -> compare
    52:55:void <clinit>() -> <clinit>
org.apache.commons.io.comparator.NameFileComparator -> org.apache.commons.io.comparator.NameFileComparator:
    long serialVersionUID -> serialVersionUID
    java.util.Comparator NAME_COMPARATOR -> NAME_COMPARATOR
    java.util.Comparator NAME_REVERSE -> NAME_REVERSE
    java.util.Comparator NAME_INSENSITIVE_COMPARATOR -> NAME_INSENSITIVE_COMPARATOR
    java.util.Comparator NAME_INSENSITIVE_REVERSE -> NAME_INSENSITIVE_REVERSE
    java.util.Comparator NAME_SYSTEM_COMPARATOR -> NAME_SYSTEM_COMPARATOR
    java.util.Comparator NAME_SYSTEM_REVERSE -> NAME_SYSTEM_REVERSE
    org.apache.commons.io.IOCase caseSensitivity -> caseSensitivity
    79:81:void <init>() -> <init>
    88:90:void <init>(org.apache.commons.io.IOCase) -> <init>
    104:104:int compare(java.io.File,java.io.File) -> compare
    114:114:java.lang.String toString() -> toString
    51:51:java.util.List sort(java.util.List) -> sort
    51:51:java.io.File[] sort(java.io.File[]) -> sort
    51:51:int compare(java.lang.Object,java.lang.Object) -> compare
    56:71:void <clinit>() -> <clinit>
org.apache.commons.io.comparator.PathFileComparator -> org.apache.commons.io.comparator.PathFileComparator:
    long serialVersionUID -> serialVersionUID
    java.util.Comparator PATH_COMPARATOR -> PATH_COMPARATOR
    java.util.Comparator PATH_REVERSE -> PATH_REVERSE
    java.util.Comparator PATH_INSENSITIVE_COMPARATOR -> PATH_INSENSITIVE_COMPARATOR
    java.util.Comparator PATH_INSENSITIVE_REVERSE -> PATH_INSENSITIVE_REVERSE
    java.util.Comparator PATH_SYSTEM_COMPARATOR -> PATH_SYSTEM_COMPARATOR
    java.util.Comparator PATH_SYSTEM_REVERSE -> PATH_SYSTEM_REVERSE
    org.apache.commons.io.IOCase caseSensitivity -> caseSensitivity
    79:81:void <init>() -> <init>
    88:90:void <init>(org.apache.commons.io.IOCase) -> <init>
    105:105:int compare(java.io.File,java.io.File) -> compare
    115:115:java.lang.String toString() -> toString
    51:51:java.util.List sort(java.util.List) -> sort
    51:51:java.io.File[] sort(java.io.File[]) -> sort
    51:51:int compare(java.lang.Object,java.lang.Object) -> compare
    56:71:void <clinit>() -> <clinit>
org.apache.commons.io.comparator.ReverseComparator -> org.apache.commons.io.comparator.ReverseComparator:
    long serialVersionUID -> serialVersionUID
    java.util.Comparator delegate -> delegate
    39:44:void <init>(java.util.Comparator) -> <init>
    56:56:int compare(java.io.File,java.io.File) -> compare
    66:66:java.lang.String toString() -> toString
    29:29:int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.io.comparator.SizeFileComparator -> org.apache.commons.io.comparator.SizeFileComparator:
    long serialVersionUID -> serialVersionUID
    java.util.Comparator SIZE_COMPARATOR -> SIZE_COMPARATOR
    java.util.Comparator SIZE_REVERSE -> SIZE_REVERSE
    java.util.Comparator SIZE_SUMDIR_COMPARATOR -> SIZE_SUMDIR_COMPARATOR
    java.util.Comparator SIZE_SUMDIR_REVERSE -> SIZE_SUMDIR_REVERSE
    boolean sumDirectoryContents -> sumDirectoryContents
    79:81:void <init>() -> <init>
    94:96:void <init>(boolean) -> <init>
    111:129:int compare(java.io.File,java.io.File) -> compare
    140:140:java.lang.String toString() -> toString
    51:51:java.util.List sort(java.util.List) -> sort
    51:51:java.io.File[] sort(java.io.File[]) -> sort
    51:51:int compare(java.lang.Object,java.lang.Object) -> compare
    56:71:void <clinit>() -> <clinit>
org.apache.commons.io.filefilter.AbstractFileFilter -> org.apache.commons.io.filefilter.AbstractFileFilter:
    31:31:void <init>() -> <init>
    41:41:boolean accept(java.io.File) -> accept
    53:53:boolean accept(java.io.File,java.lang.String) -> accept
    63:63:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.AgeFileFilter -> org.apache.commons.io.filefilter.AgeFileFilter:
    long serialVersionUID -> serialVersionUID
    long cutoff -> cutoff
    boolean acceptOlder -> acceptOlder
    66:67:void <init>(long) -> <init>
    77:80:void <init>(long,boolean) -> <init>
    89:90:void <init>(java.util.Date) -> <init>
    101:102:void <init>(java.util.Date,boolean) -> <init>
    112:113:void <init>(java.io.File) -> <init>
    126:127:void <init>(java.io.File,boolean) -> <init>
    144:145:boolean accept(java.io.File) -> accept
    155:156:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.AndFileFilter -> org.apache.commons.io.filefilter.AndFileFilter:
    long serialVersionUID -> serialVersionUID
    java.util.List fileFilters -> fileFilters
    51:53:void <init>() -> <init>
    62:68:void <init>(java.util.List) -> <init>
    77:84:void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> <init>
    91:92:void addFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> addFileFilter
    99:99:java.util.List getFileFilters() -> getFileFilters
    107:107:boolean removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> removeFileFilter
    115:117:void setFileFilters(java.util.List) -> setFileFilters
    124:132:boolean accept(java.io.File) -> accept
    140:148:boolean accept(java.io.File,java.lang.String) -> accept
    158:171:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.CanReadFileFilter -> org.apache.commons.io.filefilter.CanReadFileFilter:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.io.filefilter.IOFileFilter CAN_READ -> CAN_READ
    org.apache.commons.io.filefilter.IOFileFilter CANNOT_READ -> CANNOT_READ
    org.apache.commons.io.filefilter.IOFileFilter READ_ONLY -> READ_ONLY
    80:81:void <init>() -> <init>
    92:92:boolean accept(java.io.File) -> accept
    68:74:void <clinit>() -> <clinit>
org.apache.commons.io.filefilter.CanWriteFileFilter -> org.apache.commons.io.filefilter.CanWriteFileFilter:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.io.filefilter.IOFileFilter CAN_WRITE -> CAN_WRITE
    org.apache.commons.io.filefilter.IOFileFilter CANNOT_WRITE -> CANNOT_WRITE
    68:69:void <init>() -> <init>
    80:80:boolean accept(java.io.File) -> accept
    60:63:void <clinit>() -> <clinit>
org.apache.commons.io.filefilter.ConditionalFileFilter -> org.apache.commons.io.filefilter.ConditionalFileFilter:
    void addFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> addFileFilter
    java.util.List getFileFilters() -> getFileFilters
    boolean removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> removeFileFilter
    void setFileFilters(java.util.List) -> setFileFilters
org.apache.commons.io.filefilter.DelegateFileFilter -> org.apache.commons.io.filefilter.DelegateFileFilter:
    long serialVersionUID -> serialVersionUID
    java.io.FilenameFilter filenameFilter -> filenameFilter
    java.io.FileFilter fileFilter -> fileFilter
    46:52:void <init>(java.io.FilenameFilter) -> <init>
    59:65:void <init>(java.io.FileFilter) -> <init>
    75:78:boolean accept(java.io.File) -> accept
    91:94:boolean accept(java.io.File,java.lang.String) -> accept
    105:106:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.DirectoryFileFilter -> org.apache.commons.io.filefilter.DirectoryFileFilter:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.io.filefilter.IOFileFilter DIRECTORY -> DIRECTORY
    org.apache.commons.io.filefilter.IOFileFilter INSTANCE -> INSTANCE
    60:61:void <init>() -> <init>
    71:71:boolean accept(java.io.File) -> accept
    48:55:void <clinit>() -> <clinit>
org.apache.commons.io.filefilter.EmptyFileFilter -> org.apache.commons.io.filefilter.EmptyFileFilter:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.io.filefilter.IOFileFilter EMPTY -> EMPTY
    org.apache.commons.io.filefilter.IOFileFilter NOT_EMPTY -> NOT_EMPTY
    67:68:void <init>() -> <init>
    79:83:boolean accept(java.io.File) -> accept
    59:62:void <clinit>() -> <clinit>
org.apache.commons.io.filefilter.FalseFileFilter -> org.apache.commons.io.filefilter.FalseFileFilter:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.io.filefilter.IOFileFilter FALSE -> FALSE
    org.apache.commons.io.filefilter.IOFileFilter INSTANCE -> INSTANCE
    49:50:void <init>() -> <init>
    60:60:boolean accept(java.io.File) -> accept
    72:72:boolean accept(java.io.File,java.lang.String) -> accept
    37:44:void <clinit>() -> <clinit>
org.apache.commons.io.filefilter.FileFileFilter -> org.apache.commons.io.filefilter.FileFileFilter:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.io.filefilter.IOFileFilter FILE -> FILE
    49:50:void <init>() -> <init>
    60:60:boolean accept(java.io.File) -> accept
    44:44:void <clinit>() -> <clinit>
org.apache.commons.io.filefilter.FileFilterUtils -> org.apache.commons.io.filefilter.FileFilterUtils:
    org.apache.commons.io.filefilter.IOFileFilter cvsFilter -> cvsFilter
    org.apache.commons.io.filefilter.IOFileFilter svnFilter -> svnFilter
    45:46:void <init>() -> <init>
    77:92:java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[]) -> filter
    122:123:java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable) -> filter
    152:152:java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable) -> filterList
    181:182:java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[]) -> filterList
    212:213:java.util.Set filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[]) -> filterSet
    243:243:java.util.Set filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable) -> filterSet
    270:283:java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection) -> filter
    294:294:org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String) -> prefixFileFilter
    307:307:org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String,org.apache.commons.io.IOCase) -> prefixFileFilter
    318:318:org.apache.commons.io.filefilter.IOFileFilter suffixFileFilter(java.lang.String) -> suffixFileFilter
    331:331:org.apache.commons.io.filefilter.IOFileFilter suffixFileFilter(java.lang.String,org.apache.commons.io.IOCase) -> suffixFileFilter
    342:342:org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String) -> nameFileFilter
    355:355:org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String,org.apache.commons.io.IOCase) -> nameFileFilter
    365:365:org.apache.commons.io.filefilter.IOFileFilter directoryFileFilter() -> directoryFileFilter
    375:375:org.apache.commons.io.filefilter.IOFileFilter fileFileFilter() -> fileFileFilter
    391:391:org.apache.commons.io.filefilter.IOFileFilter andFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> andFileFilter
    406:406:org.apache.commons.io.filefilter.IOFileFilter orFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> orFileFilter
    421:421:org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[]) -> and
    436:436:org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[]) -> or
    449:459:java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[]) -> toList
    470:470:org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> notFileFilter
    481:481:org.apache.commons.io.filefilter.IOFileFilter trueFileFilter() -> trueFileFilter
    491:491:org.apache.commons.io.filefilter.IOFileFilter falseFileFilter() -> falseFileFilter
    504:504:org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FileFilter) -> asFileFilter
    516:516:org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FilenameFilter) -> asFileFilter
    530:530:org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(long) -> ageFileFilter
    543:543:org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(long,boolean) -> ageFileFilter
    556:556:org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.util.Date) -> ageFileFilter
    569:569:org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.util.Date,boolean) -> ageFileFilter
    583:583:org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.io.File) -> ageFileFilter
    597:597:org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.io.File,boolean) -> ageFileFilter
    610:610:org.apache.commons.io.filefilter.IOFileFilter sizeFileFilter(long) -> sizeFileFilter
    623:623:org.apache.commons.io.filefilter.IOFileFilter sizeFileFilter(long,boolean) -> sizeFileFilter
    637:639:org.apache.commons.io.filefilter.IOFileFilter sizeRangeFileFilter(long,long) -> sizeRangeFileFilter
    658:658:org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String) -> magicNumberFileFilter
    679:679:org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String,long) -> magicNumberFileFilter
    698:698:org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[]) -> magicNumberFileFilter
    719:719:org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[],long) -> magicNumberFileFilter
    741:744:org.apache.commons.io.filefilter.IOFileFilter makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter) -> makeCVSAware
    758:761:org.apache.commons.io.filefilter.IOFileFilter makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter) -> makeSVNAware
    775:778:org.apache.commons.io.filefilter.IOFileFilter makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter) -> makeDirectoryOnly
    790:793:org.apache.commons.io.filefilter.IOFileFilter makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter) -> makeFileOnly
    724:729:void <clinit>() -> <clinit>
org.apache.commons.io.filefilter.HiddenFileFilter -> org.apache.commons.io.filefilter.HiddenFileFilter:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.io.filefilter.IOFileFilter HIDDEN -> HIDDEN
    org.apache.commons.io.filefilter.IOFileFilter VISIBLE -> VISIBLE
    64:65:void <init>() -> <init>
    76:76:boolean accept(java.io.File) -> accept
    56:59:void <clinit>() -> <clinit>
org.apache.commons.io.filefilter.IOFileFilter -> org.apache.commons.io.filefilter.IOFileFilter:
    boolean accept(java.io.File) -> accept
    boolean accept(java.io.File,java.lang.String) -> accept
org.apache.commons.io.filefilter.MagicNumberFileFilter -> org.apache.commons.io.filefilter.MagicNumberFileFilter:
    long serialVersionUID -> serialVersionUID
    byte[] magicNumbers -> magicNumbers
    long byteOffset -> byteOffset
    112:113:void <init>(byte[]) -> <init>
    137:138:void <init>(java.lang.String) -> <init>
    160:174:void <init>(java.lang.String,long) -> <init>
    200:214:void <init>(byte[],long) -> <init>
    234:251:boolean accept(java.io.File) -> accept
    262:269:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.NameFileFilter -> org.apache.commons.io.filefilter.NameFileFilter:
    long serialVersionUID -> serialVersionUID
    java.lang.String[] names -> names
    org.apache.commons.io.IOCase caseSensitivity -> caseSensitivity
    59:60:void <init>(java.lang.String) -> <init>
    69:75:void <init>(java.lang.String,org.apache.commons.io.IOCase) -> <init>
    87:88:void <init>(java.lang.String[]) -> <init>
    97:104:void <init>(java.lang.String[],org.apache.commons.io.IOCase) -> <init>
    114:115:void <init>(java.util.List) -> <init>
    125:131:void <init>(java.util.List,org.apache.commons.io.IOCase) -> <init>
    142:148:boolean accept(java.io.File) -> accept
    160:165:boolean accept(java.io.File,java.lang.String) -> accept
    175:187:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.NotFileFilter -> org.apache.commons.io.filefilter.NotFileFilter:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.io.filefilter.IOFileFilter filter -> filter
    41:46:void <init>(org.apache.commons.io.filefilter.IOFileFilter) -> <init>
    56:56:boolean accept(java.io.File) -> accept
    68:68:boolean accept(java.io.File,java.lang.String) -> accept
    78:78:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.OrFileFilter -> org.apache.commons.io.filefilter.OrFileFilter:
    long serialVersionUID -> serialVersionUID
    java.util.List fileFilters -> fileFilters
    49:51:void <init>() -> <init>
    60:66:void <init>(java.util.List) -> <init>
    75:82:void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> <init>
    89:90:void addFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> addFileFilter
    97:97:java.util.List getFileFilters() -> getFileFilters
    105:105:boolean removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> removeFileFilter
    113:115:void setFileFilters(java.util.List) -> setFileFilters
    122:127:boolean accept(java.io.File) -> accept
    135:140:boolean accept(java.io.File,java.lang.String) -> accept
    150:163:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.PrefixFileFilter -> org.apache.commons.io.filefilter.PrefixFileFilter:
    long serialVersionUID -> serialVersionUID
    java.lang.String[] prefixes -> prefixes
    org.apache.commons.io.IOCase caseSensitivity -> caseSensitivity
    61:62:void <init>(java.lang.String) -> <init>
    73:79:void <init>(java.lang.String,org.apache.commons.io.IOCase) -> <init>
    91:92:void <init>(java.lang.String[]) -> <init>
    103:110:void <init>(java.lang.String[],org.apache.commons.io.IOCase) -> <init>
    120:121:void <init>(java.util.List) -> <init>
    133:139:void <init>(java.util.List,org.apache.commons.io.IOCase) -> <init>
    149:155:boolean accept(java.io.File) -> accept
    167:172:boolean accept(java.io.File,java.lang.String) -> accept
    182:194:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.RegexFileFilter -> org.apache.commons.io.filefilter.RegexFileFilter:
    long serialVersionUID -> serialVersionUID
    java.util.regex.Pattern pattern -> pattern
    56:62:void <init>(java.lang.String) -> <init>
    71:80:void <init>(java.lang.String,org.apache.commons.io.IOCase) -> <init>
    89:94:void <init>(java.lang.String,int) -> <init>
    102:108:void <init>(java.util.regex.Pattern) -> <init>
    119:119:boolean accept(java.io.File,java.lang.String) -> accept
org.apache.commons.io.filefilter.SizeFileFilter -> org.apache.commons.io.filefilter.SizeFileFilter:
    long serialVersionUID -> serialVersionUID
    long size -> size
    boolean acceptLarger -> acceptLarger
    58:59:void <init>(long) -> <init>
    70:76:void <init>(long,boolean) -> <init>
    92:93:boolean accept(java.io.File) -> accept
    103:104:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.SuffixFileFilter -> org.apache.commons.io.filefilter.SuffixFileFilter:
    long serialVersionUID -> serialVersionUID
    java.lang.String[] suffixes -> suffixes
    org.apache.commons.io.IOCase caseSensitivity -> caseSensitivity
    62:63:void <init>(java.lang.String) -> <init>
    74:80:void <init>(java.lang.String,org.apache.commons.io.IOCase) -> <init>
    92:93:void <init>(java.lang.String[]) -> <init>
    104:111:void <init>(java.lang.String[],org.apache.commons.io.IOCase) -> <init>
    121:122:void <init>(java.util.List) -> <init>
    134:140:void <init>(java.util.List,org.apache.commons.io.IOCase) -> <init>
    150:156:boolean accept(java.io.File) -> accept
    168:173:boolean accept(java.io.File,java.lang.String) -> accept
    183:195:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.TrueFileFilter -> org.apache.commons.io.filefilter.TrueFileFilter:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.io.filefilter.IOFileFilter TRUE -> TRUE
    org.apache.commons.io.filefilter.IOFileFilter INSTANCE -> INSTANCE
    48:49:void <init>() -> <init>
    59:59:boolean accept(java.io.File) -> accept
    71:71:boolean accept(java.io.File,java.lang.String) -> accept
    36:43:void <clinit>() -> <clinit>
org.apache.commons.io.filefilter.WildcardFileFilter -> org.apache.commons.io.filefilter.WildcardFileFilter:
    long serialVersionUID -> serialVersionUID
    java.lang.String[] wildcards -> wildcards
    org.apache.commons.io.IOCase caseSensitivity -> caseSensitivity
    65:66:void <init>(java.lang.String) -> <init>
    75:81:void <init>(java.lang.String,org.apache.commons.io.IOCase) -> <init>
    91:92:void <init>(java.lang.String[]) -> <init>
    102:109:void <init>(java.lang.String[],org.apache.commons.io.IOCase) -> <init>
    119:120:void <init>(java.util.List) -> <init>
    130:136:void <init>(java.util.List,org.apache.commons.io.IOCase) -> <init>
    148:153:boolean accept(java.io.File,java.lang.String) -> accept
    164:170:boolean accept(java.io.File) -> accept
    180:192:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.WildcardFilter -> org.apache.commons.io.filefilter.WildcardFilter:
    long serialVersionUID -> serialVersionUID
    java.lang.String[] wildcards -> wildcards
    64:69:void <init>(java.lang.String) -> <init>
    77:83:void <init>(java.lang.String[]) -> <init>
    92:97:void <init>(java.util.List) -> <init>
    109:119:boolean accept(java.io.File,java.lang.String) -> accept
    130:140:boolean accept(java.io.File) -> accept
org.apache.commons.io.input.AutoCloseInputStream -> org.apache.commons.io.input.AutoCloseInputStream:
    46:47:void <init>(java.io.InputStream) -> <init>
    64:66:void close() -> close
    77:80:void afterRead(int) -> afterRead
    90:92:void finalize() -> finalize
org.apache.commons.io.input.BOMInputStream -> org.apache.commons.io.input.BOMInputStream:
    boolean include -> include
    java.util.List boms -> boms
    org.apache.commons.io.ByteOrderMark byteOrderMark -> byteOrderMark
    int[] firstBytes -> firstBytes
    int fbLength -> fbLength
    int fbIndex -> fbIndex
    int markFbIndex -> markFbIndex
    boolean markedAtStart -> markedAtStart
    java.util.Comparator ByteOrderMarkLengthComparator -> ByteOrderMarkLengthComparator
    110:111:void <init>(java.io.InputStream) -> <init>
    122:123:void <init>(java.io.InputStream,boolean) -> <init>
    134:135:void <init>(java.io.InputStream,org.apache.commons.io.ByteOrderMark[]) -> <init>
    167:177:void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[]) -> <init>
    187:187:boolean hasBOM() -> hasBOM
    202:206:boolean hasBOM(org.apache.commons.io.ByteOrderMark) -> hasBOM
    217:242:org.apache.commons.io.ByteOrderMark getBOM() -> getBOM
    254:255:java.lang.String getBOMCharsetName() -> getBOMCharsetName
    268:269:int readFirstBytes() -> readFirstBytes
    278:283:org.apache.commons.io.ByteOrderMark find() -> find
    298:303:boolean matches(org.apache.commons.io.ByteOrderMark) -> matches
    319:320:int read() -> read
    338:349:int read(byte[],int,int) -> read
    363:363:int read(byte[]) -> read
    374:377:void mark(int) -> mark
    387:393:void reset() -> reset
    406:410:long skip(long) -> skip
    140:140:void <clinit>() -> <clinit>
org.apache.commons.io.input.BOMInputStream$1 -> org.apache.commons.io.input.BOMInputStream$1:
    140:140:void <init>() -> <init>
    144:152:int compare(org.apache.commons.io.ByteOrderMark,org.apache.commons.io.ByteOrderMark) -> compare
    140:140:int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.io.input.BoundedInputStream -> org.apache.commons.io.input.BoundedInputStream:
    java.io.InputStream in -> in
    long max -> max
    long pos -> pos
    long mark -> mark
    boolean propagateClose -> propagateClose
    46:66:void <init>(java.io.InputStream,long) -> <init>
    75:76:void <init>(java.io.InputStream) -> <init>
    87:92:int read() -> read
    104:104:int read(byte[]) -> read
    118:129:int read(byte[],int,int) -> read
    140:143:long skip(long) -> skip
    151:154:int available() -> available
    163:163:java.lang.String toString() -> toString
    173:176:void close() -> close
    184:186:void reset() -> reset
    194:196:void mark(int) -> mark
    204:204:boolean markSupported() -> markSupported
    216:216:boolean isPropagateClose() -> isPropagateClose
    229:230:void setPropagateClose(boolean) -> setPropagateClose
org.apache.commons.io.input.BoundedReader -> org.apache.commons.io.input.BoundedReader:
    int INVALID -> INVALID
    java.io.Reader target -> target
    int charsRead -> charsRead
    int markedAt -> markedAt
    int readAheadLimit -> readAheadLimit
    int maxCharsFromTargetReader -> maxCharsFromTargetReader
    45:63:void <init>(java.io.Reader,int) -> <init>
    72:73:void close() -> close
    83:85:void reset() -> reset
    102:107:void mark(int) -> mark
    119:127:int read() -> read
    143:150:int read(char[],int,int) -> read
org.apache.commons.io.input.BrokenInputStream -> org.apache.commons.io.input.BrokenInputStream:
    java.io.IOException exception -> exception
    43:45:void <init>(java.io.IOException) -> <init>
    51:52:void <init>() -> <init>
    62:62:int read() -> read
    73:73:int available() -> available
    85:85:long skip(long) -> skip
    95:95:void reset() -> reset
    105:105:void close() -> close
org.apache.commons.io.input.CharSequenceInputStream -> org.apache.commons.io.input.CharSequenceInputStream:
    int BUFFER_SIZE -> BUFFER_SIZE
    int NO_MARK -> NO_MARK
    java.nio.charset.CharsetEncoder encoder -> encoder
    java.nio.CharBuffer cbuf -> cbuf
    java.nio.ByteBuffer bbuf -> bbuf
    int mark_cbuf -> mark_cbuf
    int mark_bbuf -> mark_bbuf
    62:77:void <init>(java.lang.CharSequence,java.nio.charset.Charset,int) -> <init>
    88:89:void <init>(java.lang.CharSequence,java.lang.String,int) -> <init>
    100:101:void <init>(java.lang.CharSequence,java.nio.charset.Charset) -> <init>
    112:113:void <init>(java.lang.CharSequence,java.lang.String) -> <init>
    122:128:void fillBuffer() -> fillBuffer
    132:160:int read(byte[],int,int) -> read
    166:171:int read() -> read
    178:178:int read(byte[]) -> read
    186:192:long skip(long) -> skip
    207:207:int available() -> available
    212:212:void close() -> close
    220:226:void mark(int) -> mark
    241:262:void reset() -> reset
    266:266:boolean markSupported() -> markSupported
org.apache.commons.io.input.CharSequenceReader -> org.apache.commons.io.input.CharSequenceReader:
    long serialVersionUID -> serialVersionUID
    java.lang.CharSequence charSequence -> charSequence
    int idx -> idx
    int mark -> mark
    44:46:void <init>(java.lang.CharSequence) -> <init>
    53:55:void close() -> close
    64:65:void mark(int) -> mark
    74:74:boolean markSupported() -> markSupported
    85:88:int read() -> read
    103:122:int read(char[],int,int) -> read
    131:132:void reset() -> reset
    142:152:long skip(long) -> skip
    163:163:java.lang.String toString() -> toString
org.apache.commons.io.input.ClassLoaderObjectInputStream -> org.apache.commons.io.input.ClassLoaderObjectInputStream:
    java.lang.ClassLoader classLoader -> classLoader
    50:52:void <init>(java.lang.ClassLoader,java.io.InputStream) -> <init>
    68:71:java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
    89:96:java.lang.Class resolveProxyClass(java.lang.String[]) -> resolveProxyClass
org.apache.commons.io.input.CloseShieldInputStream -> org.apache.commons.io.input.CloseShieldInputStream:
    39:40:void <init>(java.io.InputStream) -> <init>
    49:50:void close() -> close
org.apache.commons.io.input.ClosedInputStream -> org.apache.commons.io.input.ClosedInputStream:
    org.apache.commons.io.input.ClosedInputStream CLOSED_INPUT_STREAM -> CLOSED_INPUT_STREAM
    33:33:void <init>() -> <init>
    47:47:int read() -> read
    38:38:void <clinit>() -> <clinit>
org.apache.commons.io.input.CountingInputStream -> org.apache.commons.io.input.CountingInputStream:
    long count -> count
    43:44:void <init>(java.io.InputStream) -> <init>
    59:61:long skip(long) -> skip
    72:75:void afterRead(int) -> afterRead
    89:93:int getCount() -> getCount
    107:111:int resetCount() -> resetCount
    125:125:long getByteCount() -> getByteCount
    139:141:long resetByteCount() -> resetByteCount
org.apache.commons.io.input.DemuxInputStream -> org.apache.commons.io.input.DemuxInputStream:
    java.lang.InheritableThreadLocal m_streams -> m_streams
    29:32:void <init>() -> <init>
    42:44:java.io.InputStream bindStream(java.io.InputStream) -> bindStream
    56:61:void close() -> close
    73:80:int read() -> read
org.apache.commons.io.input.InfiniteCircularInputStream -> org.apache.commons.io.input.InfiniteCircularInputStream:
    byte[] repeatedContent -> repeatedContent
    int position -> position
    33:43:void <init>(byte[]) -> <init>
    47:48:int read() -> read
org.apache.commons.io.input.MessageDigestCalculatingInputStream -> org.apache.commons.io.input.MessageDigestCalculatingInputStream:
    java.security.MessageDigest messageDigest -> messageDigest
    67:70:void <init>(java.io.InputStream,java.security.MessageDigest) -> <init>
    79:80:void <init>(java.io.InputStream,java.lang.String) -> <init>
    88:89:void <init>(java.io.InputStream) -> <init>
    100:100:java.security.MessageDigest getMessageDigest() -> getMessageDigest
org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver -> org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver:
    java.security.MessageDigest md -> md
    44:46:void <init>(java.security.MessageDigest) -> <init>
    50:51:void data(int) -> data
    55:56:void data(byte[],int,int) -> data
org.apache.commons.io.input.NullInputStream -> org.apache.commons.io.input.NullInputStream:
    long size -> size
    long position -> position
    long mark -> mark
    long readlimit -> readlimit
    boolean eof -> eof
    boolean throwEofException -> throwEofException
    boolean markSupported -> markSupported
    82:83:void <init>(long) -> <init>
    69:100:void <init>(long,boolean,boolean) -> <init>
    108:108:long getPosition() -> getPosition
    117:117:long getSize() -> getSize
    127:133:int available() -> available
    145:148:void close() -> close
    159:164:void mark(int) -> mark
    173:173:boolean markSupported() -> markSupported
    188:195:int read() -> read
    211:211:int read(byte[]) -> read
    229:242:int read(byte[],int,int) -> read
    255:268:void reset() -> reset
    283:295:long skip(long) -> skip
    307:307:int processByte() -> processByte
    322:322:void processBytes(byte[],int,int) -> processBytes
    333:337:int doEndOfFile() -> doEndOfFile
org.apache.commons.io.input.NullReader -> org.apache.commons.io.input.NullReader:
    long size -> size
    long position -> position
    long mark -> mark
    long readlimit -> readlimit
    boolean eof -> eof
    boolean throwEofException -> throwEofException
    boolean markSupported -> markSupported
    82:83:void <init>(long) -> <init>
    69:100:void <init>(long,boolean,boolean) -> <init>
    108:108:long getPosition() -> getPosition
    117:117:long getSize() -> getSize
    128:131:void close() -> close
    142:147:void mark(int) -> mark
    156:156:boolean markSupported() -> markSupported
    171:178:int read() -> read
    194:194:int read(char[]) -> read
    212:225:int read(char[],int,int) -> read
    238:251:void reset() -> reset
    266:278:long skip(long) -> skip
    290:290:int processChar() -> processChar
    305:305:void processChars(char[],int,int) -> processChars
    316:320:int doEndOfFile() -> doEndOfFile
org.apache.commons.io.input.ObservableInputStream -> org.apache.commons.io.input.ObservableInputStream:
    java.util.List observers -> observers
    80:88:void <init>(java.io.InputStream) -> <init>
    95:96:void add(org.apache.commons.io.input.ObservableInputStream$Observer) -> add
    103:104:void remove(org.apache.commons.io.input.ObservableInputStream$Observer) -> remove
    110:111:void removeAllObservers() -> removeAllObservers
    115:129:int read() -> read
    134:148:int read(byte[]) -> read
    153:167:int read(byte[],int,int) -> read
    179:182:void noteDataBytes(byte[],int,int) -> noteDataBytes
    189:192:void noteFinished() -> noteFinished
    201:204:void noteDataByte(int) -> noteDataByte
    214:217:void noteError(java.io.IOException) -> noteError
    224:227:void noteClosed() -> noteClosed
    233:233:java.util.List getObservers() -> getObservers
    238:249:void close() -> close
    257:263:void consume() -> consume
org.apache.commons.io.input.ObservableInputStream$Observer -> org.apache.commons.io.input.ObservableInputStream$Observer:
    39:39:void <init>() -> <init>
    47:47:void data(int) -> data
    58:58:void data(byte[],int,int) -> data
    66:66:void finished() -> finished
    71:71:void closed() -> closed
    77:77:void error(java.io.IOException) -> error
org.apache.commons.io.input.ProxyInputStream -> org.apache.commons.io.input.ProxyInputStream:
    46:48:void <init>(java.io.InputStream) -> <init>
    58:64:int read() -> read
    77:83:int read(byte[]) -> read
    98:104:int read(byte[],int,int) -> read
    117:120:long skip(long) -> skip
    132:135:int available() -> available
    146:150:void close() -> close
    158:159:void mark(int) -> mark
    168:172:void reset() -> reset
    180:180:boolean markSupported() -> markSupported
    203:203:void beforeRead(int) -> beforeRead
    224:224:void afterRead(int) -> afterRead
    236:236:void handleIOException(java.io.IOException) -> handleIOException
org.apache.commons.io.input.ProxyReader -> org.apache.commons.io.input.ProxyReader:
    44:46:void <init>(java.io.Reader) -> <init>
    56:62:int read() -> read
    75:81:int read(char[]) -> read
    96:102:int read(char[],int,int) -> read
    116:122:int read(java.nio.CharBuffer) -> read
    135:138:long skip(long) -> skip
    150:153:boolean ready() -> ready
    164:168:void close() -> close
    178:182:void mark(int) -> mark
    191:195:void reset() -> reset
    203:203:boolean markSupported() -> markSupported
    225:225:void beforeRead(int) -> beforeRead
    245:245:void afterRead(int) -> afterRead
    257:257:void handleIOException(java.io.IOException) -> handleIOException
org.apache.commons.io.input.ReaderInputStream -> org.apache.commons.io.input.ReaderInputStream:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    java.io.Reader reader -> reader
    java.nio.charset.CharsetEncoder encoder -> encoder
    java.nio.CharBuffer encoderIn -> encoderIn
    java.nio.ByteBuffer encoderOut -> encoderOut
    java.nio.charset.CoderResult lastCoderResult -> lastCoderResult
    boolean endOfInput -> endOfInput
    109:110:void <init>(java.io.Reader,java.nio.charset.CharsetEncoder) -> <init>
    120:127:void <init>(java.io.Reader,java.nio.charset.CharsetEncoder,int) -> <init>
    137:142:void <init>(java.io.Reader,java.nio.charset.Charset,int) -> <init>
    152:153:void <init>(java.io.Reader,java.nio.charset.Charset) -> <init>
    163:164:void <init>(java.io.Reader,java.lang.String,int) -> <init>
    174:175:void <init>(java.io.Reader,java.lang.String) -> <init>
    186:187:void <init>(java.io.Reader) -> <init>
    196:213:void fillBuffer() -> fillBuffer
    227:252:int read(byte[],int,int) -> read
    265:265:int read(byte[]) -> read
    278:283:int read() -> read
    295:296:void close() -> close
org.apache.commons.io.input.ReversedLinesFileReader -> org.apache.commons.io.input.ReversedLinesFileReader:
    int blockSize -> blockSize
    java.nio.charset.Charset encoding -> encoding
    java.io.RandomAccessFile randomAccessFile -> randomAccessFile
    long totalByteLength -> totalByteLength
    long totalBlockCount -> totalBlockCount
    byte[][] newLineSequences -> newLineSequences
    int avoidNewlineSplitBufferSize -> avoidNewlineSplitBufferSize
    int byteDecrement -> byteDecrement
    org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart -> currentFilePart
    boolean trailingNewlineOfFileSkipped -> trailingNewlineOfFileSkipped
    65:66:void <init>(java.io.File) -> <init>
    79:80:void <init>(java.io.File,java.nio.charset.Charset) -> <init>
    52:148:void <init>(java.io.File,int,java.nio.charset.Charset) -> <init>
    165:166:void <init>(java.io.File,int,java.lang.String) -> <init>
    176:193:java.lang.String readLine() -> readLine
    203:204:void close() -> close
    36:36:int access$300(org.apache.commons.io.input.ReversedLinesFileReader) -> access$300
    36:36:java.io.RandomAccessFile access$400(org.apache.commons.io.input.ReversedLinesFileReader) -> access$400
    36:36:java.nio.charset.Charset access$500(org.apache.commons.io.input.ReversedLinesFileReader) -> access$500
    36:36:int access$600(org.apache.commons.io.input.ReversedLinesFileReader) -> access$600
    36:36:int access$700(org.apache.commons.io.input.ReversedLinesFileReader) -> access$700
    36:36:byte[][] access$800(org.apache.commons.io.input.ReversedLinesFileReader) -> access$800
org.apache.commons.io.input.ReversedLinesFileReader$1 -> org.apache.commons.io.input.ReversedLinesFileReader$1:
org.apache.commons.io.input.ReversedLinesFileReader$FilePart -> org.apache.commons.io.input.ReversedLinesFileReader$FilePart:
    long no -> no
    byte[] data -> data
    byte[] leftOver -> leftOver
    int currentLastBytePos -> currentLastBytePos
    org.apache.commons.io.input.ReversedLinesFileReader this$0 -> this$0
    222:242:void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[]) -> <init>
    252:265:org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver() -> rollOver
    277:326:java.lang.String readLine() -> readLine
    333:342:void createLeftOver() -> createLeftOver
    352:362:int getNewLineMatchByteCount(byte[],int) -> getNewLineMatchByteCount
    206:206:void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[],org.apache.commons.io.input.ReversedLinesFileReader$1) -> <init>
    206:206:java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart) -> access$100
    206:206:org.apache.commons.io.input.ReversedLinesFileReader$FilePart access$200(org.apache.commons.io.input.ReversedLinesFileReader$FilePart) -> access$200
org.apache.commons.io.input.SwappedDataInputStream -> org.apache.commons.io.input.SwappedDataInputStream:
    47:48:void <init>(java.io.InputStream) -> <init>
    60:60:boolean readBoolean() -> readBoolean
    73:73:byte readByte() -> readByte
    86:86:char readChar() -> readChar
    99:99:double readDouble() -> readDouble
    112:112:float readFloat() -> readFloat
    126:127:void readFully(byte[]) -> readFully
    143:157:void readFully(byte[],int,int) -> readFully
    169:169:int readInt() -> readInt
    182:182:java.lang.String readLine() -> readLine
    196:196:long readLong() -> readLong
    209:209:short readShort() -> readShort
    222:222:int readUnsignedByte() -> readUnsignedByte
    235:235:int readUnsignedShort() -> readUnsignedShort
    248:248:java.lang.String readUTF() -> readUTF
    263:263:int skipBytes(int) -> skipBytes
org.apache.commons.io.input.TaggedInputStream -> org.apache.commons.io.input.TaggedInputStream:
    java.io.Serializable tag -> tag
    69:78:void <init>(java.io.InputStream) -> <init>
    88:88:boolean isCauseOf(java.lang.Throwable) -> isCauseOf
    102:103:void throwIfCauseOf(java.lang.Throwable) -> throwIfCauseOf
    113:113:void handleIOException(java.io.IOException) -> handleIOException
org.apache.commons.io.input.Tailer -> org.apache.commons.io.input.Tailer:
    int DEFAULT_DELAY_MILLIS -> DEFAULT_DELAY_MILLIS
    java.lang.String RAF_MODE -> RAF_MODE
    int DEFAULT_BUFSIZE -> DEFAULT_BUFSIZE
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
    byte[] inbuf -> inbuf
    java.io.File file -> file
    java.nio.charset.Charset cset -> cset
    long delayMillis -> delayMillis
    boolean end -> end
    org.apache.commons.io.input.TailerListener listener -> listener
    boolean reOpen -> reOpen
    boolean run -> run
    177:178:void <init>(java.io.File,org.apache.commons.io.input.TailerListener) -> <init>
    187:188:void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long) -> <init>
    198:199:void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean) -> <init>
    211:212:void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean) -> <init>
    224:225:void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,int) -> <init>
    238:239:void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int) -> <init>
    169:265:void <init>(java.io.File,java.nio.charset.Charset,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int) -> <init>
    279:279:org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,int) -> create
    296:296:org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int) -> create
    314:318:org.apache.commons.io.input.Tailer create(java.io.File,java.nio.charset.Charset,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int) -> create
    332:332:org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean) -> create
    347:347:org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean) -> create
    359:359:org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long) -> create
    371:371:org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener) -> create
    380:380:java.io.File getFile() -> getFile
    390:390:boolean getRun() -> getRun
    399:399:long getDelay() -> getDelay
    407:497:void run() -> run
    503:504:void stop() -> stop
    514:555:long readLines(java.io.RandomAccessFile) -> readLines
    129:129:void <clinit>() -> <clinit>
org.apache.commons.io.input.TailerListener -> org.apache.commons.io.input.TailerListener:
    void init(org.apache.commons.io.input.Tailer) -> init
    void fileNotFound() -> fileNotFound
    void fileRotated() -> fileRotated
    void handle(java.lang.String) -> handle
    void handle(java.lang.Exception) -> handle
org.apache.commons.io.input.TailerListenerAdapter -> org.apache.commons.io.input.TailerListenerAdapter:
    24:24:void <init>() -> <init>
    33:33:void init(org.apache.commons.io.input.Tailer) -> init
    40:40:void fileNotFound() -> fileNotFound
    50:50:void fileRotated() -> fileRotated
    58:58:void handle(java.lang.String) -> handle
    66:66:void handle(java.lang.Exception) -> handle
    79:79:void endOfFileReached() -> endOfFileReached
org.apache.commons.io.input.TeeInputStream -> org.apache.commons.io.input.TeeInputStream:
    java.io.OutputStream branch -> branch
    boolean closeBranch -> closeBranch
    62:63:void <init>(java.io.InputStream,java.io.OutputStream) -> <init>
    78:81:void <init>(java.io.InputStream,java.io.OutputStream,boolean) -> <init>
    93:99:void close() -> close
    110:114:int read() -> read
    129:133:int read(byte[],int,int) -> read
    146:150:int read(byte[]) -> read
org.apache.commons.io.input.UnixLineEndingInputStream -> org.apache.commons.io.input.UnixLineEndingInputStream:
    boolean slashNSeen -> slashNSeen
    boolean slashRSeen -> slashRSeen
    boolean eofSeen -> eofSeen
    java.io.InputStream target -> target
    boolean ensureLineFeedAtEndOfFile -> ensureLineFeedAtEndOfFile
    30:49:void <init>(java.io.InputStream,boolean) -> <init>
    57:64:int readWithUpdate() -> readWithUpdate
    72:90:int read() -> read
    100:107:int eofGame(boolean) -> eofGame
    117:119:void close() -> close
    126:126:void mark(int) -> mark
org.apache.commons.io.input.WindowsLineEndingInputStream -> org.apache.commons.io.input.WindowsLineEndingInputStream:
    boolean slashRSeen -> slashRSeen
    boolean slashNSeen -> slashNSeen
    boolean injectSlashN -> injectSlashN
    boolean eofSeen -> eofSeen
    java.io.InputStream target -> target
    boolean ensureLineFeedAtEndOfFile -> ensureLineFeedAtEndOfFile
    29:50:void <init>(java.io.InputStream,boolean) -> <init>
    58:65:int readWithUpdate() -> readWithUpdate
    73:91:int read() -> read
    101:113:int eofGame() -> eofGame
    123:125:void close() -> close
    132:132:void mark(int) -> mark
org.apache.commons.io.input.XmlStreamReader -> org.apache.commons.io.input.XmlStreamReader:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String UTF_8 -> UTF_8
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String UTF_16BE -> UTF_16BE
    java.lang.String UTF_16LE -> UTF_16LE
    java.lang.String UTF_32BE -> UTF_32BE
    java.lang.String UTF_32LE -> UTF_32LE
    java.lang.String UTF_16 -> UTF_16
    java.lang.String UTF_32 -> UTF_32
    java.lang.String EBCDIC -> EBCDIC
    org.apache.commons.io.ByteOrderMark[] BOMS -> BOMS
    org.apache.commons.io.ByteOrderMark[] XML_GUESS_BYTES -> XML_GUESS_BYTES
    java.io.Reader reader -> reader
    java.lang.String encoding -> encoding
    java.lang.String defaultEncoding -> defaultEncoding
    java.util.regex.Pattern CHARSET_PATTERN -> CHARSET_PATTERN
    java.util.regex.Pattern ENCODING_PATTERN -> ENCODING_PATTERN
    java.lang.String RAW_EX_1 -> RAW_EX_1
    java.lang.String RAW_EX_2 -> RAW_EX_2
    java.lang.String HTTP_EX_1 -> HTTP_EX_1
    java.lang.String HTTP_EX_2 -> HTTP_EX_2
    java.lang.String HTTP_EX_3 -> HTTP_EX_3
    121:121:java.lang.String getDefaultEncoding() -> getDefaultEncoding
    137:138:void <init>(java.io.File) -> <init>
    152:153:void <init>(java.io.InputStream) -> <init>
    183:184:void <init>(java.io.InputStream,boolean) -> <init>
    215:221:void <init>(java.io.InputStream,boolean,java.lang.String) -> <init>
    241:242:void <init>(java.net.URL) -> <init>
    263:276:void <init>(java.net.URLConnection,java.lang.String) -> <init>
    297:298:void <init>(java.io.InputStream,java.lang.String) -> <init>
    335:341:void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String) -> <init>
    378:379:void <init>(java.io.InputStream,java.lang.String,boolean) -> <init>
    387:387:java.lang.String getEncoding() -> getEncoding
    400:400:int read(char[],int,int) -> read
    410:411:void close() -> close
    425:434:java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean) -> doRawStream
    452:462:java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean) -> doHttpStream
    478:495:java.lang.String doLenientDetection(java.lang.String,org.apache.commons.io.input.XmlStreamReaderException) -> doLenientDetection
    511:563:java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String) -> calculateRawEncoding
    584:645:java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> calculateHttpEncoding
    655:665:java.lang.String getContentTypeMime(java.lang.String) -> getContentTypeMime
    679:689:java.lang.String getContentTypeEncoding(java.lang.String) -> getContentTypeEncoding
    706:749:java.lang.String getXmlProlog(java.io.InputStream,java.lang.String) -> getXmlProlog
    760:764:boolean isAppXml(java.lang.String) -> isAppXml
    775:778:boolean isTextXml(java.lang.String) -> isTextXml
    86:692:void <clinit>() -> <clinit>
org.apache.commons.io.input.XmlStreamReaderException -> org.apache.commons.io.input.XmlStreamReaderException:
    long serialVersionUID -> serialVersionUID
    java.lang.String bomEncoding -> bomEncoding
    java.lang.String xmlGuessEncoding -> xmlGuessEncoding
    java.lang.String xmlEncoding -> xmlEncoding
    java.lang.String contentTypeMime -> contentTypeMime
    java.lang.String contentTypeEncoding -> contentTypeEncoding
    60:61:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    78:84:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    92:92:java.lang.String getBomEncoding() -> getBomEncoding
    101:101:java.lang.String getXmlGuessEncoding() -> getXmlGuessEncoding
    110:110:java.lang.String getXmlEncoding() -> getXmlEncoding
    121:121:java.lang.String getContentTypeMime() -> getContentTypeMime
    133:133:java.lang.String getContentTypeEncoding() -> getContentTypeEncoding
org.apache.commons.io.monitor.FileAlterationListener -> org.apache.commons.io.monitor.FileAlterationListener:
    void onStart(org.apache.commons.io.monitor.FileAlterationObserver) -> onStart
    void onDirectoryCreate(java.io.File) -> onDirectoryCreate
    void onDirectoryChange(java.io.File) -> onDirectoryChange
    void onDirectoryDelete(java.io.File) -> onDirectoryDelete
    void onFileCreate(java.io.File) -> onFileCreate
    void onFileChange(java.io.File) -> onFileChange
    void onFileDelete(java.io.File) -> onFileDelete
    void onStop(org.apache.commons.io.monitor.FileAlterationObserver) -> onStop
org.apache.commons.io.monitor.FileAlterationListenerAdaptor -> org.apache.commons.io.monitor.FileAlterationListenerAdaptor:
    28:28:void <init>() -> <init>
    37:37:void onStart(org.apache.commons.io.monitor.FileAlterationObserver) -> onStart
    46:46:void onDirectoryCreate(java.io.File) -> onDirectoryCreate
    55:55:void onDirectoryChange(java.io.File) -> onDirectoryChange
    64:64:void onDirectoryDelete(java.io.File) -> onDirectoryDelete
    73:73:void onFileCreate(java.io.File) -> onFileCreate
    82:82:void onFileChange(java.io.File) -> onFileChange
    91:91:void onFileDelete(java.io.File) -> onFileDelete
    100:100:void onStop(org.apache.commons.io.monitor.FileAlterationObserver) -> onStop
org.apache.commons.io.monitor.FileAlterationMonitor -> org.apache.commons.io.monitor.FileAlterationMonitor:
    long interval -> interval
    java.util.List observers -> observers
    java.lang.Thread thread -> thread
    java.util.concurrent.ThreadFactory threadFactory -> threadFactory
    boolean running -> running
    43:44:void <init>() -> <init>
    34:54:void <init>(long) -> <init>
    64:70:void <init>(long,org.apache.commons.io.monitor.FileAlterationObserver[]) -> <init>
    78:78:long getInterval() -> getInterval
    87:88:void setThreadFactory(java.util.concurrent.ThreadFactory) -> setThreadFactory
    96:99:void addObserver(org.apache.commons.io.monitor.FileAlterationObserver) -> addObserver
    107:111:void removeObserver(org.apache.commons.io.monitor.FileAlterationObserver) -> removeObserver
    120:120:java.lang.Iterable getObservers() -> getObservers
    129:142:void start() -> start
    150:151:void stop() -> stop
    162:174:void stop(long) -> stop
    181:193:void run() -> run
org.apache.commons.io.monitor.FileAlterationObserver -> org.apache.commons.io.monitor.FileAlterationObserver:
    long serialVersionUID -> serialVersionUID
    java.util.List listeners -> listeners
    org.apache.commons.io.monitor.FileEntry rootEntry -> rootEntry
    java.io.FileFilter fileFilter -> fileFilter
    java.util.Comparator comparator -> comparator
    136:137:void <init>(java.lang.String) -> <init>
    146:147:void <init>(java.lang.String,java.io.FileFilter) -> <init>
    159:160:void <init>(java.lang.String,java.io.FileFilter,org.apache.commons.io.IOCase) -> <init>
    168:169:void <init>(java.io.File) -> <init>
    178:179:void <init>(java.io.File,java.io.FileFilter) -> <init>
    190:191:void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase) -> <init>
    125:218:void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase) -> <init>
    226:226:java.io.File getDirectory() -> getDirectory
    236:236:java.io.FileFilter getFileFilter() -> getFileFilter
    245:248:void addListener(org.apache.commons.io.monitor.FileAlterationListener) -> addListener
    256:260:void removeListener(org.apache.commons.io.monitor.FileAlterationListener) -> removeListener
    268:268:java.lang.Iterable getListeners() -> getListeners
    277:280:void initialize() -> initialize
    288:288:void destroy() -> destroy
    296:314:void checkAndNotify() -> checkAndNotify
    324:347:void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[]) -> checkAndNotify
    357:361:org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File) -> createFileEntry
    371:376:org.apache.commons.io.monitor.FileEntry[] doListFiles(java.io.File,org.apache.commons.io.monitor.FileEntry) -> doListFiles
    385:396:void doCreate(org.apache.commons.io.monitor.FileEntry) -> doCreate
    405:414:void doMatch(org.apache.commons.io.monitor.FileEntry,java.io.File) -> doMatch
    422:429:void doDelete(org.apache.commons.io.monitor.FileEntry) -> doDelete
    439:449:java.io.File[] listFiles(java.io.File) -> listFiles
    459:471:java.lang.String toString() -> toString
org.apache.commons.io.monitor.FileEntry -> org.apache.commons.io.monitor.FileEntry:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.io.monitor.FileEntry[] EMPTY_ENTRIES -> EMPTY_ENTRIES
    org.apache.commons.io.monitor.FileEntry parent -> parent
    org.apache.commons.io.monitor.FileEntry[] children -> children
    java.io.File file -> file
    java.lang.String name -> name
    boolean exists -> exists
    boolean directory -> directory
    long lastModified -> lastModified
    long length -> length
    64:65:void <init>(java.io.File) -> <init>
    73:80:void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File) -> <init>
    99:112:boolean refresh(java.io.File) -> refresh
    128:128:org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File) -> newChildInstance
    137:137:org.apache.commons.io.monitor.FileEntry getParent() -> getParent
    146:146:int getLevel() -> getLevel
    157:157:org.apache.commons.io.monitor.FileEntry[] getChildren() -> getChildren
    166:167:void setChildren(org.apache.commons.io.monitor.FileEntry[]) -> setChildren
    175:175:java.io.File getFile() -> getFile
    184:184:java.lang.String getName() -> getName
    193:194:void setName(java.lang.String) -> setName
    203:203:long getLastModified() -> getLastModified
    213:214:void setLastModified(long) -> setLastModified
    222:222:long getLength() -> getLength
    231:232:void setLength(long) -> setLength
    241:241:boolean isExists() -> isExists
    251:252:void setExists(boolean) -> setExists
    260:260:boolean isDirectory() -> isDirectory
    269:270:void setDirectory(boolean) -> setDirectory
    47:47:void <clinit>() -> <clinit>
org.apache.commons.io.output.AppendableOutputStream -> org.apache.commons.io.output.AppendableOutputStream:
    java.lang.Appendable appendable -> appendable
    42:44:void <init>(java.lang.Appendable) -> <init>
    54:55:void write(int) -> write
    63:63:java.lang.Appendable getAppendable() -> getAppendable
org.apache.commons.io.output.BrokenOutputStream -> org.apache.commons.io.output.BrokenOutputStream:
    java.io.IOException exception -> exception
    43:45:void <init>(java.io.IOException) -> <init>
    51:52:void <init>() -> <init>
    62:62:void write(int) -> write
    72:72:void flush() -> flush
    82:82:void close() -> close
org.apache.commons.io.output.ByteArrayOutputStream -> org.apache.commons.io.output.ByteArrayOutputStream:
    int DEFAULT_SIZE -> DEFAULT_SIZE
    byte[] EMPTY_BYTE_ARRAY -> EMPTY_BYTE_ARRAY
    java.util.List buffers -> buffers
    int currentBufferIndex -> currentBufferIndex
    int filledBufferSum -> filledBufferSum
    byte[] currentBuffer -> currentBuffer
    int count -> count
    boolean reuseBuffers -> reuseBuffers
    81:82:void <init>() -> <init>
    64:99:void <init>(int) -> <init>
    108:131:void needNewBuffer(int) -> needNewBuffer
    141:165:void write(byte[],int,int) -> write
    173:180:void write(int) -> write
    194:207:int write(java.io.InputStream) -> write
    215:215:int size() -> size
    229:229:void close() -> close
    235:248:void reset() -> reset
    259:268:void writeTo(java.io.OutputStream) -> writeTo
    293:293:java.io.InputStream toBufferedInputStream(java.io.InputStream) -> toBufferedInputStream
    322:324:java.io.InputStream toBufferedInputStream(java.io.InputStream,int) -> toBufferedInputStream
    338:352:java.io.InputStream toInputStream() -> toInputStream
    363:378:byte[] toByteArray() -> toByteArray
    392:392:java.lang.String toString() -> toString
    405:405:java.lang.String toString(java.lang.String) -> toString
    418:418:java.lang.String toString(java.nio.charset.Charset) -> toString
    61:61:void <clinit>() -> <clinit>
org.apache.commons.io.output.ChunkedOutputStream -> org.apache.commons.io.output.ChunkedOutputStream:
    int DEFAULT_CHUNK_SIZE -> DEFAULT_CHUNK_SIZE
    int chunkSize -> chunkSize
    50:55:void <init>(java.io.OutputStream,int) -> <init>
    63:64:void <init>(java.io.OutputStream) -> <init>
    77:85:void write(byte[],int,int) -> write
org.apache.commons.io.output.ChunkedWriter -> org.apache.commons.io.output.ChunkedWriter:
    int DEFAULT_CHUNK_SIZE -> DEFAULT_CHUNK_SIZE
    int chunkSize -> chunkSize
    50:55:void <init>(java.io.Writer,int) -> <init>
    62:63:void <init>(java.io.Writer) -> <init>
    75:83:void write(char[],int,int) -> write
org.apache.commons.io.output.CloseShieldOutputStream -> org.apache.commons.io.output.CloseShieldOutputStream:
    40:41:void <init>(java.io.OutputStream) -> <init>
    50:51:void close() -> close
org.apache.commons.io.output.ClosedOutputStream -> org.apache.commons.io.output.ClosedOutputStream:
    org.apache.commons.io.output.ClosedOutputStream CLOSED_OUTPUT_STREAM -> CLOSED_OUTPUT_STREAM
    32:32:void <init>() -> <init>
    47:47:void write(int) -> write
    57:57:void flush() -> flush
    37:37:void <clinit>() -> <clinit>
org.apache.commons.io.output.CountingOutputStream -> org.apache.commons.io.output.CountingOutputStream:
    long count -> count
    32:41:void <init>(java.io.OutputStream) -> <init>
    53:54:void beforeWrite(int) -> beforeWrite
    68:72:int getCount() -> getCount
    86:90:int resetCount() -> resetCount
    104:104:long getByteCount() -> getByteCount
    118:120:long resetByteCount() -> resetByteCount
org.apache.commons.io.output.DeferredFileOutputStream -> org.apache.commons.io.output.DeferredFileOutputStream:
    org.apache.commons.io.output.ByteArrayOutputStream memoryOutputStream -> memoryOutputStream
    java.io.OutputStream currentOutputStream -> currentOutputStream
    java.io.File outputFile -> outputFile
    java.lang.String prefix -> prefix
    java.lang.String suffix -> suffix
    java.io.File directory -> directory
    boolean closed -> closed
    101:102:void <init>(int,java.io.File) -> <init>
    116:120:void <init>(int,int,java.io.File) -> <init>
    136:140:void <init>(int,java.lang.String,java.lang.String,java.io.File) -> <init>
    157:164:void <init>(int,int,java.lang.String,java.lang.String,java.io.File) -> <init>
    86:187:void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int) -> <init>
    204:204:java.io.OutputStream getStream() -> getStream
    219:232:void thresholdReached() -> thresholdReached
    247:247:boolean isInMemory() -> isInMemory
    261:265:byte[] getData() -> getData
    285:285:java.io.File getFile() -> getFile
    297:299:void close() -> close
    314:325:void writeTo(java.io.OutputStream) -> writeTo
org.apache.commons.io.output.DemuxOutputStream -> org.apache.commons.io.output.DemuxOutputStream:
    java.lang.InheritableThreadLocal outputStreamThreadLocal -> outputStreamThreadLocal
    26:27:void <init>() -> <init>
    37:39:java.io.OutputStream bindStream(java.io.OutputStream) -> bindStream
    50:54:void close() -> close
    65:69:void flush() -> flush
    82:86:void write(int) -> write
org.apache.commons.io.output.FileWriterWithEncoding -> org.apache.commons.io.output.FileWriterWithEncoding:
    java.io.Writer out -> out
    65:66:void <init>(java.lang.String,java.lang.String) -> <init>
    79:80:void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    91:92:void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    105:106:void <init>(java.lang.String,java.nio.charset.Charset,boolean) -> <init>
    117:118:void <init>(java.lang.String,java.nio.charset.CharsetEncoder) -> <init>
    131:132:void <init>(java.lang.String,java.nio.charset.CharsetEncoder,boolean) -> <init>
    143:144:void <init>(java.io.File,java.lang.String) -> <init>
    156:158:void <init>(java.io.File,java.lang.String,boolean) -> <init>
    169:170:void <init>(java.io.File,java.nio.charset.Charset) -> <init>
    182:184:void <init>(java.io.File,java.nio.charset.Charset,boolean) -> <init>
    195:196:void <init>(java.io.File,java.nio.charset.CharsetEncoder) -> <init>
    209:211:void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean) -> <init>
    226:254:java.io.Writer initWriter(java.io.File,java.lang.Object,boolean) -> initWriter
    266:267:void write(int) -> write
    276:277:void write(char[]) -> write
    288:289:void write(char[],int,int) -> write
    298:299:void write(java.lang.String) -> write
    310:311:void write(java.lang.String,int,int) -> write
    319:320:void flush() -> flush
    328:329:void close() -> close
org.apache.commons.io.output.LockableFileWriter -> org.apache.commons.io.output.LockableFileWriter:
    java.lang.String LCK -> LCK
    java.io.Writer out -> out
    java.io.File lockFile -> lockFile
    69:70:void <init>(java.lang.String) -> <init>
    81:82:void <init>(java.lang.String,boolean) -> <init>
    94:95:void <init>(java.lang.String,boolean,java.lang.String) -> <init>
    106:107:void <init>(java.io.File) -> <init>
    118:119:void <init>(java.io.File,boolean) -> <init>
    133:134:void <init>(java.io.File,boolean,java.lang.String) -> <init>
    146:147:void <init>(java.io.File,java.nio.charset.Charset) -> <init>
    161:162:void <init>(java.io.File,java.lang.String) -> <init>
    177:201:void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String) -> <init>
    218:219:void <init>(java.io.File,java.lang.String,boolean,java.lang.String) -> <init>
    230:238:void testLockDir(java.io.File) -> testLockDir
    246:253:void createLock() -> createLock
    266:276:java.io.Writer initWriter(java.io.File,java.nio.charset.Charset,boolean) -> initWriter
    289:293:void close() -> close
    303:304:void write(int) -> write
    313:314:void write(char[]) -> write
    325:326:void write(char[],int,int) -> write
    335:336:void write(java.lang.String) -> write
    347:348:void write(java.lang.String,int,int) -> write
    356:357:void flush() -> flush
org.apache.commons.io.output.NullOutputStream -> org.apache.commons.io.output.NullOutputStream:
    org.apache.commons.io.output.NullOutputStream NULL_OUTPUT_STREAM -> NULL_OUTPUT_STREAM
    30:30:void <init>() -> <init>
    46:46:void write(byte[],int,int) -> write
    55:55:void write(int) -> write
    65:65:void write(byte[]) -> write
    35:35:void <clinit>() -> <clinit>
org.apache.commons.io.output.NullWriter -> org.apache.commons.io.output.NullWriter:
    org.apache.commons.io.output.NullWriter NULL_WRITER -> NULL_WRITER
    38:39:void <init>() -> <init>
    50:50:java.io.Writer append(char) -> append
    64:64:java.io.Writer append(java.lang.CharSequence,int,int) -> append
    76:76:java.io.Writer append(java.lang.CharSequence) -> append
    86:86:void write(int) -> write
    95:95:void write(char[]) -> write
    106:106:void write(char[],int,int) -> write
    115:115:void write(java.lang.String) -> write
    126:126:void write(java.lang.String,int,int) -> write
    132:132:void flush() -> flush
    138:138:void close() -> close
    28:28:java.lang.Appendable append(char) -> append
    28:28:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    28:28:java.lang.Appendable append(java.lang.CharSequence) -> append
    33:33:void <clinit>() -> <clinit>
org.apache.commons.io.output.ProxyOutputStream -> org.apache.commons.io.output.ProxyOutputStream:
    41:43:void <init>(java.io.OutputStream) -> <init>
    53:59:void write(int) -> write
    69:76:void write(byte[]) -> write
    88:94:void write(byte[],int,int) -> write
    103:107:void flush() -> flush
    116:120:void close() -> close
    136:136:void beforeWrite(int) -> beforeWrite
    153:153:void afterWrite(int) -> afterWrite
    165:165:void handleIOException(java.io.IOException) -> handleIOException
org.apache.commons.io.output.ProxyWriter -> org.apache.commons.io.output.ProxyWriter:
    40:42:void <init>(java.io.Writer) -> <init>
    54:60:java.io.Writer append(char) -> append
    75:81:java.io.Writer append(java.lang.CharSequence,int,int) -> append
    94:105:java.io.Writer append(java.lang.CharSequence) -> append
    116:122:void write(int) -> write
    132:143:void write(char[]) -> write
    155:161:void write(char[],int,int) -> write
    171:182:void write(java.lang.String) -> write
    194:200:void write(java.lang.String,int,int) -> write
    209:213:void flush() -> flush
    222:226:void close() -> close
    242:242:void beforeWrite(int) -> beforeWrite
    259:259:void afterWrite(int) -> afterWrite
    271:271:void handleIOException(java.io.IOException) -> handleIOException
    32:32:java.lang.Appendable append(char) -> append
    32:32:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    32:32:java.lang.Appendable append(java.lang.CharSequence) -> append
org.apache.commons.io.output.StringBuilderWriter -> org.apache.commons.io.output.StringBuilderWriter:
    long serialVersionUID -> serialVersionUID
    java.lang.StringBuilder builder -> builder
    41:43:void <init>() -> <init>
    50:52:void <init>(int) -> <init>
    61:63:void <init>(java.lang.StringBuilder) -> <init>
    73:74:java.io.Writer append(char) -> append
    85:86:java.io.Writer append(java.lang.CharSequence) -> append
    99:100:java.io.Writer append(java.lang.CharSequence,int,int) -> append
    109:109:void close() -> close
    117:117:void flush() -> flush
    127:130:void write(java.lang.String) -> write
    141:144:void write(char[],int,int) -> write
    152:152:java.lang.StringBuilder getBuilder() -> getBuilder
    162:162:java.lang.String toString() -> toString
    33:33:java.lang.Appendable append(char) -> append
    33:33:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    33:33:java.lang.Appendable append(java.lang.CharSequence) -> append
org.apache.commons.io.output.TaggedOutputStream -> org.apache.commons.io.output.TaggedOutputStream:
    java.io.Serializable tag -> tag
    69:78:void <init>(java.io.OutputStream) -> <init>
    88:88:boolean isCauseOf(java.lang.Exception) -> isCauseOf
    102:103:void throwIfCauseOf(java.lang.Exception) -> throwIfCauseOf
    113:113:void handleIOException(java.io.IOException) -> handleIOException
org.apache.commons.io.output.TeeOutputStream -> org.apache.commons.io.output.TeeOutputStream:
    java.io.OutputStream branch -> branch
    39:41:void <init>(java.io.OutputStream,java.io.OutputStream) -> <init>
    50:52:void write(byte[]) -> write
    63:65:void write(byte[],int,int) -> write
    74:76:void write(int) -> write
    84:86:void flush() -> flush
    102:106:void close() -> close
org.apache.commons.io.output.ThresholdingOutputStream -> org.apache.commons.io.output.ThresholdingOutputStream:
    int threshold -> threshold
    long written -> written
    boolean thresholdExceeded -> thresholdExceeded
    73:75:void <init>(int) -> <init>
    91:94:void write(int) -> write
    108:111:void write(byte[]) -> write
    127:130:void write(byte[],int,int) -> write
    142:143:void flush() -> flush
    157:164:void close() -> close
    177:177:int getThreshold() -> getThreshold
    188:188:long getByteCount() -> getByteCount
    201:201:boolean isThresholdExceeded() -> isThresholdExceeded
    220:225:void checkThreshold(int) -> checkThreshold
    233:235:void resetByteCount() -> resetByteCount
    247:248:void setByteCount(long) -> setByteCount
    java.io.OutputStream getStream() -> getStream
    void thresholdReached() -> thresholdReached
org.apache.commons.io.output.WriterOutputStream -> org.apache.commons.io.output.WriterOutputStream:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    java.io.Writer writer -> writer
    java.nio.charset.CharsetDecoder decoder -> decoder
    boolean writeImmediately -> writeImmediately
    java.nio.ByteBuffer decoderIn -> decoderIn
    java.nio.CharBuffer decoderOut -> decoderOut
    104:105:void <init>(java.io.Writer,java.nio.charset.CharsetDecoder) -> <init>
    85:127:void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean) -> <init>
    143:150:void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean) -> <init>
    161:162:void <init>(java.io.Writer,java.nio.charset.Charset) -> <init>
    178:179:void <init>(java.io.Writer,java.lang.String,int,boolean) -> <init>
    190:191:void <init>(java.io.Writer,java.lang.String) -> <init>
    203:204:void <init>(java.io.Writer) -> <init>
    216:226:void write(byte[],int,int) -> write
    236:237:void write(byte[]) -> write
    247:248:void write(int) -> write
    258:260:void flush() -> flush
    270:273:void close() -> close
    283:299:void processInput(boolean) -> processInput
    307:311:void flushOutput() -> flushOutput
    319:346:void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset) -> checkIbmJdkWithBrokenUTF16
org.apache.commons.io.output.XmlStreamWriter -> org.apache.commons.io.output.XmlStreamWriter:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.io.OutputStream out -> out
    java.lang.String defaultEncoding -> defaultEncoding
    java.io.StringWriter xmlPrologWriter -> xmlPrologWriter
    java.io.Writer writer -> writer
    java.lang.String encoding -> encoding
    java.util.regex.Pattern ENCODING_PATTERN -> ENCODING_PATTERN
    59:60:void <init>(java.io.OutputStream) -> <init>
    46:72:void <init>(java.io.OutputStream,java.lang.String) -> <init>
    83:84:void <init>(java.io.File) -> <init>
    96:97:void <init>(java.io.File,java.lang.String) -> <init>
    105:105:java.lang.String getEncoding() -> getEncoding
    114:114:java.lang.String getDefaultEncoding() -> getDefaultEncoding
    124:130:void close() -> close
    139:142:void flush() -> flush
    154:199:void detectEncoding(char[],int,int) -> detectEncoding
    211:216:void write(char[],int,int) -> write
    218:218:void <clinit>() -> <clinit>
org.apache.commons.io.serialization.ClassNameMatcher -> org.apache.commons.io.serialization.ClassNameMatcher:
    boolean matches(java.lang.String) -> matches
org.apache.commons.io.serialization.FullClassNameMatcher -> org.apache.commons.io.serialization.FullClassNameMatcher:
    java.util.Set classesSet -> classesSet
    41:43:void <init>(java.lang.String[]) -> <init>
    47:47:boolean matches(java.lang.String) -> matches
org.apache.commons.io.serialization.RegexpClassNameMatcher -> org.apache.commons.io.serialization.RegexpClassNameMatcher:
    java.util.regex.Pattern pattern -> pattern
    39:40:void <init>(java.lang.String) -> <init>
    48:53:void <init>(java.util.regex.Pattern) -> <init>
    57:57:boolean matches(java.lang.String) -> matches
org.apache.commons.io.serialization.ValidatingObjectInputStream -> org.apache.commons.io.serialization.ValidatingObjectInputStream:
    java.util.List acceptMatchers -> acceptMatchers
    java.util.List rejectMatchers -> rejectMatchers
    46:60:void <init>(java.io.InputStream) -> <init>
    68:84:void validateClassName(java.lang.String) -> validateClassName
    95:95:void invalidClassNameFound(java.lang.String) -> invalidClassNameFound
    100:101:java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
    112:115:org.apache.commons.io.serialization.ValidatingObjectInputStream accept(java.lang.Class[]) -> accept
    126:129:org.apache.commons.io.serialization.ValidatingObjectInputStream reject(java.lang.Class[]) -> reject
    141:144:org.apache.commons.io.serialization.ValidatingObjectInputStream accept(java.lang.String[]) -> accept
    156:159:org.apache.commons.io.serialization.ValidatingObjectInputStream reject(java.lang.String[]) -> reject
    170:171:org.apache.commons.io.serialization.ValidatingObjectInputStream accept(java.util.regex.Pattern) -> accept
    182:183:org.apache.commons.io.serialization.ValidatingObjectInputStream reject(java.util.regex.Pattern) -> reject
    194:195:org.apache.commons.io.serialization.ValidatingObjectInputStream accept(org.apache.commons.io.serialization.ClassNameMatcher) -> accept
    206:207:org.apache.commons.io.serialization.ValidatingObjectInputStream reject(org.apache.commons.io.serialization.ClassNameMatcher) -> reject
org.apache.commons.io.serialization.WildcardClassNameMatcher -> org.apache.commons.io.serialization.WildcardClassNameMatcher:
    java.lang.String pattern -> pattern
    39:41:void <init>(java.lang.String) -> <init>
    45:45:boolean matches(java.lang.String) -> matches
